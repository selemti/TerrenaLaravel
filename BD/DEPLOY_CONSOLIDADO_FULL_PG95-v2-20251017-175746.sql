-- CONSOLIDATED OUTPUT
-- Generated: 2025-10-17T17:57:46+02:00
SET client_min_messages TO warning;
SET search_path TO selemti, public;
DO $$ BEGIN IF NOT EXISTS (SELECT 1 FROM pg_namespace WHERE nspname = 'selemti') THEN EXECUTE 'CREATE SCHEMA selemti'; END IF; END $$;


-- BEGIN 000.  SISTEMA SELEMTI - ESQUEMA COMPLETO DE BASE DE DATOS- OK.sql
-- =====================================================================
-- SISTEMA SELEMTI - ESQUEMA COMPLETO DE BASE DE DATOS
-- PostgreSQL 9.5 compatible - VERSIÓN CORREGIDA (v4.0)
-- Fecha: September 26, 2025
-- Idempotente: Sí (ejecutable múltiples veces)
-- =====================================================================

-- **CORRECCIÓN DE ERRORES PREVIOS: 
-- 1. Se eliminaron metacomandos de psql.
-- 2. Se agregó IF NOT EXISTS a todas las tablas y tipos.
-- 3. Se reemplazó ALTER TABLE ADD COLUMN IF NOT EXISTS (PG 9.6+) con bloques DO.
-- 4. Se reemplazó UNIQUE(COALESCE(...)) con CREATE UNIQUE INDEX separado.
-- 5. Se agregó DROP/CREATE para tabla USERS para corregir el error de columna 'username'.
-- 6. **CORREGIDO:** Se ajustó la longitud del hash de la contraseña a 60 caracteres para pasar la restricción CHECK.

SET client_min_messages = WARNING;
SET TIME ZONE 'America/Mexico_City';
-- 1. CREACIÓN DE ESQUEMA Y PERMISOS
------------------------------------------------------

-- 1.1 CREAR ESQUEMA SI NO EXISTE
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.schemata WHERE schema_name = 'selemti') THEN
        CREATE SCHEMA selemti;
        RAISE NOTICE 'Esquema selemti creado exitosamente';
    ELSE
        RAISE NOTICE 'Esquema selemti ya existe';
    END IF;
END
$$;
-- 1.2 CREAR USUARIO DEDICADO
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'selemti_user') THEN
        -- Nota: En sistemas de producción, use una contraseña más segura
        CREATE USER selemti_user WITH PASSWORD 'selemti_password_2024';
        RAISE NOTICE 'Usuario selemti_user creado exitosamente';
    ELSE
        RAISE NOTICE 'Usuario selemti_user ya existe';
    END IF;
END
$$;
-- 1.3 OTORGAR PERMISOS
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT CREATE ON SCHEMA selemti TO selemti_user;
GRANT USAGE ON SCHEMA public TO selemti_user;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO selemti_user;
-- 1.4 CONFIGURAR SEARCH PATH
ALTER USER selemti_user SET search_path = 'selemti, public';
SET search_path TO selemti, public;
-- 2. TABLAS MAESTRAS BASE
------------------------------------------------------

-- **CORRECCIÓN 5: FORZAR RECREACIÓN DE TABLA USERS PARA CORREGIR EL ERROR DE COLUMNA.**
DROP TABLE IF EXISTS selemti.users CASCADE;
DROP SEQUENCE IF EXISTS selemti.users_id_seq CASCADE;
-- 2.1 TABLA DE USUARIOS
CREATE TABLE IF NOT EXISTS selemti.users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL CHECK (LENGTH(username) >= 3),
    password_hash VARCHAR(255) NOT NULL CHECK (LENGTH(password_hash) = 60), -- Requiere 60 caracteres
    email VARCHAR(255) CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'),
    nombre_completo VARCHAR(100) NOT NULL,
    sucursal_id VARCHAR(10) DEFAULT 'SUR' CHECK (sucursal_id IN ('SUR', 'NORTE', 'CENTRO')),
    activo BOOLEAN DEFAULT TRUE,
    fecha_ultimo_login TIMESTAMP,
    intentos_login INTEGER DEFAULT 0 CHECK (intentos_login >= 0),
    bloqueado_hasta TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);
COMMENT ON TABLE selemti.users IS 'Usuarios del sistema con sus credenciales y estado';
-- 2.2 TABLA DE ROLES DE USUARIO
CREATE TABLE IF NOT EXISTS selemti.user_roles (
    user_id INTEGER REFERENCES selemti.users(id) ON DELETE CASCADE,
    role_id VARCHAR(20) CHECK (role_id IN ('GERENTE', 'CHEF', 'ALMACEN', 'CAJERO', 'AUDITOR', 'SISTEMA')),
    assigned_at TIMESTAMP DEFAULT NOW(),
    assigned_by INTEGER REFERENCES selemti.users(id),
    PRIMARY KEY (user_id, role_id)
);
COMMENT ON TABLE selemti.user_roles IS 'Asignación de roles a usuarios (RBAC)';
-- 2.3 TABLA MAESTRA DE ÍTEMS
CREATE TABLE IF NOT EXISTS selemti.items (
    id VARCHAR(20) PRIMARY KEY CHECK (id ~ '^[A-Z0-9\-]{1,20}$'),
    nombre VARCHAR(100) NOT NULL CHECK (LENGTH(nombre) >= 2),
    descripcion TEXT,
    categoria_id VARCHAR(10) NOT NULL CHECK (categoria_id LIKE 'CAT-%'),
    unidad_medida VARCHAR(10) NOT NULL CHECK (unidad_medida IN ('KG','LT','PZ','BULTO','CAJA')),
    perishable BOOLEAN DEFAULT FALSE,
    temperatura_min INTEGER,
    temperatura_max INTEGER,
    costo_promedio NUMERIC(10,2) DEFAULT 0.00 CHECK (costo_promedio >= 0),
    activo BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    CHECK (temperatura_max IS NULL OR temperatura_min IS NULL OR temperatura_max >= temperatura_min)
);
COMMENT ON TABLE selemti.items IS 'Maestro de todos los ítems del sistema';
-- 2.4 TABLA DE LOTES DE INVENTARIO
CREATE TABLE IF NOT EXISTS selemti.inventory_batch (
    id SERIAL PRIMARY KEY,
    item_id VARCHAR(20) NOT NULL REFERENCES selemti.items(id),
    lote_proveedor VARCHAR(50) NOT NULL CHECK (LENGTH(lote_proveedor) BETWEEN 1 AND 50),
    fecha_recepcion DATE NOT NULL,
    fecha_caducidad DATE NOT NULL CHECK (fecha_caducidad >= CURRENT_DATE),
    temperatura_recepcion NUMERIC(5,2) CHECK (temperatura_recepcion BETWEEN -30 AND 60),
    documento_url VARCHAR(255),
    cantidad_original NUMERIC(10,3) NOT NULL CHECK (cantidad_original > 0),
    cantidad_actual NUMERIC(10,3) NOT NULL CHECK (cantidad_actual >= 0),
    estado VARCHAR(20) DEFAULT 'ACTIVO' CHECK (estado IN ('ACTIVO', 'BLOQUEADO', 'RECALL')),
    ubicacion_id VARCHAR(10) NOT NULL CHECK (ubicacion_id LIKE 'UBIC-%'),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    CHECK (cantidad_actual <= cantidad_original)
);
COMMENT ON TABLE selemti.inventory_batch IS 'Lotes de inventario con trazabilidad completa';
-- 2.5 TABLA DE MOVIMIENTOS DE INVENTARIO (KARDEX)
CREATE TABLE IF NOT EXISTS selemti.mov_inv (
    id BIGSERIAL PRIMARY KEY,
    ts TIMESTAMP NOT NULL DEFAULT NOW(),
    item_id VARCHAR(20) NOT NULL REFERENCES selemti.items(id),
    lote_id INTEGER REFERENCES selemti.inventory_batch(id),
    cantidad NUMERIC(14,6) NOT NULL,
    qty_original NUMERIC(14,6),
    uom_original_id INTEGER,
    costo_unit NUMERIC(14,6) DEFAULT 0,
    tipo VARCHAR(20) NOT NULL CHECK (tipo IN ('ENTRADA','SALIDA','AJUSTE','MERMA','TRASPASO')),
    ref_tipo VARCHAR(50),
    ref_id BIGINT,
    sucursal_id VARCHAR(30),
    usuario_id INTEGER REFERENCES selemti.users(id),
    created_at TIMESTAMP DEFAULT NOW()
);
COMMENT ON TABLE selemti.mov_inv IS 'Kardex completo de movimientos de inventario';
-- 2.6 TABLA DE RECETAS CABECERA
CREATE TABLE IF NOT EXISTS selemti.receta_cab (
    id VARCHAR(20) PRIMARY KEY CHECK (id ~ '^REC-[A-Z0-9\-]+$'),
    nombre_plato VARCHAR(100) NOT NULL,
    codigo_plato_pos VARCHAR(20) UNIQUE,
    categoria_plato VARCHAR(50),
    porciones_standard INTEGER DEFAULT 1 CHECK (porciones_standard > 0),
    instrucciones_preparacion TEXT,
    tiempo_preparacion_min INTEGER,
    costo_standard_porcion NUMERIC(10,2) DEFAULT 0,
    precio_venta_sugerido NUMERIC(10,2) DEFAULT 0,
    activo BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);
COMMENT ON TABLE selemti.receta_cab IS 'Cabecera de recetas y platos del menú';
-- 2.7 TABLA DE VERSIONES DE RECETAS
CREATE TABLE IF NOT EXISTS selemti.receta_version (
    id SERIAL PRIMARY KEY,
    receta_id VARCHAR(20) NOT NULL REFERENCES selemti.receta_cab(id),
    version INTEGER NOT NULL DEFAULT 1,
    descripcion_cambios TEXT,
    fecha_efectiva DATE NOT NULL,
    version_publicada BOOLEAN DEFAULT FALSE,
    usuario_publicador INTEGER REFERENCES selemti.users(id),
    fecha_publicacion TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    UNIQUE (receta_id, version)
);
COMMENT ON TABLE selemti.receta_version IS 'Control de versiones de recetas';
-- 2.8 TABLA DE DETALLE DE RECETAS
CREATE TABLE IF NOT EXISTS selemti.receta_det (
    id SERIAL PRIMARY KEY,
    receta_version_id INTEGER NOT NULL REFERENCES selemti.receta_version(id),
    item_id VARCHAR(20) NOT NULL REFERENCES selemti.items(id),
    cantidad NUMERIC(10,4) NOT NULL CHECK (cantidad > 0),
    unidad_medida VARCHAR(10) NOT NULL,
    merma_porcentaje NUMERIC(5,2) DEFAULT 0 CHECK (merma_porcentaje BETWEEN 0 AND 100),
    instrucciones_especificas TEXT,
    orden INTEGER DEFAULT 1,
    created_at TIMESTAMP DEFAULT NOW()
);
COMMENT ON TABLE selemti.receta_det IS 'Detalle de ingredientes por versión de receta';
-- 2.9 TABLA DE ÓRDENES DE PRODUCCIÓN
CREATE TABLE IF NOT EXISTS selemti.op_produccion_cab (
    id SERIAL PRIMARY KEY,
    receta_version_id INTEGER NOT NULL REFERENCES selemti.receta_version(id),
    cantidad_planeada NUMERIC(10,3) NOT NULL CHECK (cantidad_planeada > 0),
    cantidad_real NUMERIC(10,3),
    fecha_produccion DATE NOT NULL,
    estado VARCHAR(20) DEFAULT 'PENDIENTE' CHECK (estado IN ('PENDIENTE', 'EN_PROCESO', 'COMPLETADA', 'CANCELADA')),
    lote_resultado VARCHAR(50),
    usuario_responsable INTEGER REFERENCES selemti.users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);
COMMENT ON TABLE selemti.op_produccion_cab IS 'Órdenes de producción para elaborados';
-- 2.10 TABLAS DE VENTAS/TICKETS
CREATE TABLE IF NOT EXISTS selemti.ticket_venta_cab (
    id BIGSERIAL PRIMARY KEY,
    numero_ticket VARCHAR(50) UNIQUE NOT NULL,
    fecha_venta TIMESTAMP NOT NULL DEFAULT NOW(),
    sucursal_id VARCHAR(10) NOT NULL,
    terminal_id INTEGER,
    total_venta NUMERIC(12,2) DEFAULT 0,
    estado VARCHAR(20) DEFAULT 'ABIERTO' CHECK (estado IN ('ABIERTO', 'CERRADO', 'ANULADO')),
    created_at TIMESTAMP DEFAULT NOW()
);
CREATE TABLE IF NOT EXISTS selemti.ticket_venta_det (
    id BIGSERIAL PRIMARY KEY,
    ticket_id BIGINT NOT NULL,
    item_id VARCHAR(20) NOT NULL,
    cantidad NUMERIC(10,3) NOT NULL CHECK (cantidad > 0),
    precio_unitario NUMERIC(10,2) NOT NULL,
    subtotal NUMERIC(12,2) NOT NULL,
    receta_version_id INTEGER REFERENCES selemti.receta_version(id),
    created_at TIMESTAMP DEFAULT NOW()
);
---## 3. UNIDADES DE MEDIDA Y CONVERSIONES

-- 3.1 TABLA DE UNIDADES DE MEDIDA NORMALIZADAS
CREATE TABLE IF NOT EXISTS selemti.unidades_medida (
    id SERIAL PRIMARY KEY,
    codigo VARCHAR(10) UNIQUE NOT NULL CHECK (codigo ~ '^[A-Z]{2,5}$'),
    nombre VARCHAR(50) NOT NULL,
    tipo VARCHAR(10) NOT NULL CHECK (tipo IN ('PESO', 'VOLUMEN', 'UNIDAD', 'TIEMPO')),
    categoria VARCHAR(20) CHECK (categoria IN ('METRICO', 'IMPERIAL', 'CULINARIO')),
    es_base BOOLEAN DEFAULT FALSE,
    factor_conversion_base NUMERIC(12,6) DEFAULT 1.0,
    decimales INTEGER DEFAULT 2 CHECK (decimales BETWEEN 0 AND 6),
    created_at TIMESTAMP DEFAULT NOW()
);
-- 3.2 INSERTAR UNIDADES BASE
INSERT INTO selemti.unidades_medida (codigo, nombre, tipo, categoria, es_base, factor_conversion_base, decimales) VALUES 
('GR', 'Gramo', 'PESO', 'METRICO', true, 1.0, 2),
('KG', 'Kilogramo', 'PESO', 'METRICO', false, 1000.0, 2),
('ML', 'Mililitro', 'VOLUMEN', 'METRICO', true, 1.0, 2),
('LT', 'Litro', 'VOLUMEN', 'METRICO', false, 1000.0, 2),
('PZ', 'Pieza', 'UNIDAD', 'CULINARIO', true, 1.0, 0),
('OZ', 'Onza', 'PESO', 'IMPERIAL', false, 28.3495, 2),
('LB', 'Libra', 'PESO', 'IMPERIAL', false, 453.592, 2)
ON CONFLICT (codigo) DO NOTHING;
-- 3.3 TABLA DE CONVERSIONES
CREATE TABLE IF NOT EXISTS selemti.conversiones_unidad (
    id SERIAL PRIMARY KEY,
    unidad_origen_id INTEGER NOT NULL REFERENCES selemti.unidades_medida(id),
    unidad_destino_id INTEGER NOT NULL REFERENCES selemti.unidades_medida(id),
    factor_conversion NUMERIC(12,6) NOT NULL CHECK (factor_conversion > 0),
    formula_directa TEXT,
    precision_estimada NUMERIC(5,4) DEFAULT 1.0,
    activo BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    CHECK (unidad_origen_id != unidad_destino_id),
    UNIQUE (unidad_origen_id, unidad_destino_id)
);
-- 3.4 ACTUALIZAR TABLA ITEMS CON NUEVAS UOM
-- **CORRECCIÓN 3: Reemplazo de ALTER TABLE ADD COLUMN IF NOT EXISTS por bloque DO $$ BEGIN ... END $$**
DO $$
BEGIN
    -- unidad_medida_id
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='unidad_medida_id') THEN
        ALTER TABLE selemti.items ADD COLUMN unidad_medida_id INTEGER REFERENCES selemti.unidades_medida(id);
    END IF;

    -- factor_conversion
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='factor_conversion') THEN
        ALTER TABLE selemti.items ADD COLUMN factor_conversion NUMERIC(12,6) DEFAULT 1.0;
    END IF;

    -- unidad_compra_id
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='unidad_compra_id') THEN
        ALTER TABLE selemti.items ADD COLUMN unidad_compra_id INTEGER REFERENCES selemti.unidades_medida(id);
    END IF;

    -- factor_compra
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='factor_compra') THEN
        ALTER TABLE selemti.items ADD COLUMN factor_compra NUMERIC(12,6) DEFAULT 1.0;
    END IF;
END $$;
---## 4. GESTIÓN AVANZADA DE COSTOS Y REPROCESAMIENTO

-- 4.1 HISTORIAL DE COSTOS POR ÍTEM
CREATE TABLE IF NOT EXISTS selemti.historial_costos_item (
    id SERIAL PRIMARY KEY,
    item_id VARCHAR(20) NOT NULL REFERENCES selemti.items(id),
    fecha_efectiva DATE NOT NULL,
    fecha_registro TIMESTAMP DEFAULT NOW(),
    costo_anterior NUMERIC(10,2),
    costo_nuevo NUMERIC(10,2),
    tipo_cambio VARCHAR(20) CHECK (tipo_cambio IN ('COMPRA', 'AJUSTE', 'REPROCESO')),
    referencia_id INTEGER,
    referencia_tipo VARCHAR(20),
    usuario_id INTEGER REFERENCES selemti.users(id),
    valid_from DATE NOT NULL,
    valid_to DATE,
    sys_from TIMESTAMP NOT NULL DEFAULT NOW(),
    sys_to TIMESTAMP,
    costo_wac NUMERIC(12,4),
    costo_peps NUMERIC(12,4),
    costo_ueps NUMERIC(12,4),
    costo_estandar NUMERIC(12,4),
    algoritmo_principal VARCHAR(10) DEFAULT 'WAC' CHECK (algoritmo_principal IN ('WAC', 'PEPS', 'UEPS', 'ESTANDAR')),
    version_datos INTEGER DEFAULT 1,
    recalculado BOOLEAN DEFAULT FALSE,
    fuente_datos VARCHAR(20) CHECK (fuente_datos IN ('COMPRA', 'AJUSTE', 'REPROCESO', 'IMPORTACION')),
    metadata_calculo JSON,
    created_at TIMESTAMP DEFAULT NOW(),
    UNIQUE (item_id, fecha_efectiva, version_datos)
);
-- 4.2 HISTORIAL DE COSTOS POR RECETA
CREATE TABLE IF NOT EXISTS selemti.historial_costos_receta (
    id SERIAL PRIMARY KEY,
    receta_version_id INTEGER NOT NULL REFERENCES selemti.receta_version(id),
    fecha_calculo DATE NOT NULL,
    costo_total NUMERIC(10,2),
    costo_porcion NUMERIC(10,2),
    algoritmo_utilizado VARCHAR(20),
    version_datos INTEGER DEFAULT 1,
    metadata_calculo JSON,
    created_at TIMESTAMP DEFAULT NOW(),
    valid_from DATE NOT NULL,
    valid_to DATE,
    sys_from TIMESTAMP NOT NULL DEFAULT NOW(),
    sys_to TIMESTAMP
);
-- 4.3 RECETAS SHADOW PARA ANÁLISIS HISTÓRICO
CREATE TABLE IF NOT EXISTS selemti.receta_shadow (
    id SERIAL PRIMARY KEY,
    codigo_plato_pos VARCHAR(20) NOT NULL,
    nombre_plato VARCHAR(100) NOT NULL,
    estado VARCHAR(15) DEFAULT 'INFERIDA' CHECK (estado IN ('INFERIDA', 'VALIDADA', 'DESCARTADA')),
    confianza NUMERIC(5,4) DEFAULT 0.0 CHECK (confianza BETWEEN 0 AND 1),
    total_ventas_analizadas INTEGER DEFAULT 0,
    fecha_primer_venta DATE,
    fecha_ultima_venta DATE,
    frecuencia_dias NUMERIC(10,2),
    ingredientes_inferidos JSON,
    usuario_validador INTEGER REFERENCES selemti.users(id),
    fecha_validacion TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);
-- 4.4 CAPAS DE COSTO PARA VALUACIÓN
CREATE TABLE IF NOT EXISTS selemti.cost_layer (
    id BIGSERIAL PRIMARY KEY,
    item_id VARCHAR(20) NOT NULL REFERENCES selemti.items(id),
    batch_id BIGINT REFERENCES selemti.inventory_batch(id),
    ts_in TIMESTAMP NOT NULL,
    qty_in NUMERIC(14,6) NOT NULL,
    qty_left NUMERIC(14,6) NOT NULL,
    unit_cost NUMERIC(14,6) NOT NULL,
    sucursal_id VARCHAR(30),
    source_ref TEXT,
    source_id BIGINT
);
---## 5. INTEGRACIÓN POS Y MODIFICADORES

-- 5.1 MAPEO POS HISTÓRICO
CREATE TABLE IF NOT EXISTS selemti.pos_map (
    pos_system TEXT NOT NULL,
    plu TEXT NOT NULL,
    tipo TEXT NOT NULL CHECK (tipo IN ('PLATO','MODIFICADOR','COMBO')),
    receta_id TEXT,
    receta_version_id INT,
    valid_from DATE NOT NULL,
    valid_to DATE,
    sys_from TIMESTAMP NOT NULL DEFAULT NOW(),
    sys_to TIMESTAMP,
    meta JSON,
    PRIMARY KEY (pos_system, plu, valid_from, sys_from)
);
-- 5.2 MODIFICADORES POS
CREATE TABLE IF NOT EXISTS selemti.modificadores_pos (
    id SERIAL PRIMARY KEY,
    codigo_pos VARCHAR(20) UNIQUE NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    tipo VARCHAR(20) CHECK (tipo IN ('AGREGADO', 'SUSTITUCION', 'ELIMINACION')),
    precio_extra NUMERIC(10,2) DEFAULT 0,
    receta_modificador_id VARCHAR(20) REFERENCES selemti.receta_cab(id),
    activo BOOLEAN DEFAULT TRUE
);
-- 5.3 ACTUALIZAR TICKETS CON MODIFICADORES
-- **CORRECCIÓN 4: Reemplazo de ALTER TABLE ADD COLUMN IF NOT EXISTS por bloque DO $$ BEGIN ... END $$**
DO $$
BEGIN
    -- receta_shadow_id
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='ticket_venta_det' AND column_name='receta_shadow_id') THEN
        ALTER TABLE selemti.ticket_venta_det ADD COLUMN receta_shadow_id INTEGER REFERENCES selemti.receta_shadow(id);
    END IF;

    -- reprocesado
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='ticket_venta_det' AND column_name='reprocesado') THEN
        ALTER TABLE selemti.ticket_venta_det ADD COLUMN reprocesado BOOLEAN DEFAULT FALSE;
    END IF;
    
    -- version_reproceso
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='ticket_venta_det' AND column_name='version_reproceso') THEN
        ALTER TABLE selemti.ticket_venta_det ADD COLUMN version_reproceso INTEGER DEFAULT 1;
    END IF;

    -- modificadores_aplicados
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='ticket_venta_det' AND column_name='modificadores_aplicados') THEN
        ALTER TABLE selemti.ticket_venta_det ADD COLUMN modificadores_aplicados JSON;
    END IF;
END $$;
---## 6. REPROCESAMIENTO Y COLA DE TRABAJOS

-- 6.1 COLA DE REPROCESAMIENTO
CREATE TABLE IF NOT EXISTS selemti.job_recalc_queue (
    id BIGSERIAL PRIMARY KEY,
    scope_type TEXT NOT NULL CHECK (scope_type IN ('PERIODO','ITEM','RECETA','SUCURSAL')),
    scope_from DATE,
    scope_to DATE,
    item_id VARCHAR(20),
    receta_id VARCHAR(20),
    sucursal_id VARCHAR(30),
    reason TEXT,
    created_ts TIMESTAMP NOT NULL DEFAULT NOW(),
    status TEXT NOT NULL DEFAULT 'PENDING' CHECK (status IN ('PENDING','RUNNING','DONE','FAILED')),
    result JSON
);
-- 6.2 LOGS DE REPROCESAMIENTO
CREATE TABLE IF NOT EXISTS selemti.recalc_log (
    id BIGSERIAL PRIMARY KEY,
    job_id BIGINT REFERENCES selemti.job_recalc_queue(id),
    step TEXT,
    started_ts TIMESTAMP,
    ended_ts TIMESTAMP,
    ok BOOLEAN,
    details JSON
);
---## 7. PRESENTACIONES POR PROVEEDOR Y POLÍTICAS

-- 7.1 PRESENTACIONES POR PROVEEDOR
CREATE TABLE IF NOT EXISTS selemti.item_vendor (
    item_id TEXT NOT NULL REFERENCES selemti.items(id),
    vendor_id TEXT NOT NULL,
    presentacion TEXT NOT NULL,
    unidad_presentacion_id INT NOT NULL REFERENCES selemti.unidades_medida(id),
    factor_a_canonica NUMERIC(14,6) NOT NULL CHECK (factor_a_canonica > 0),
    costo_ultimo NUMERIC(14,6) NOT NULL DEFAULT 0,
    moneda TEXT NOT NULL DEFAULT 'MXN',
    lead_time_dias INT,
    codigo_proveedor TEXT,
    activo BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    PRIMARY KEY (item_id, vendor_id, presentacion)
);
-- 7.2 TIPO DE PRODUCTO Y UOM DE SALIDA
-- **CORRECCIÓN 5: Se agregó IF NOT EXISTS a CREATE TYPE dentro del bloque DO $$**
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname='producto_tipo') THEN
        CREATE TYPE selemti.producto_tipo AS ENUM ('MATERIA_PRIMA','ELABORADO','ENVASADO');
    END IF;
END$$;
-- **CORRECCIÓN 6: Reemplazo de ALTER TABLE ADD COLUMN IF NOT EXISTS por bloque DO $$ BEGIN ... END $$**
DO $$
BEGIN
    -- tipo
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='tipo') THEN
        ALTER TABLE selemti.items ADD COLUMN tipo selemti.producto_tipo;
    END IF;

    -- unidad_salida_id
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='unidad_salida_id') THEN
        ALTER TABLE selemti.items ADD COLUMN unidad_salida_id INT REFERENCES selemti.unidades_medida(id);
    END IF;
END$$;
-- 7.4 PARÁMETROS POR SUCURSAL
CREATE TABLE IF NOT EXISTS selemti.param_sucursal (
    id SERIAL PRIMARY KEY,
    sucursal_id TEXT UNIQUE NOT NULL,
    consumo selemti.consumo_policy NOT NULL DEFAULT 'FEFO',
    tolerancia_precorte_pct NUMERIC(8,4) DEFAULT 0.02,
    tolerancia_corte_abs NUMERIC(12,4) DEFAULT 50.0,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP NOT NULL DEFAULT NOW()
);
-- 7.5 POLÍTICAS DE STOCK
CREATE TABLE IF NOT EXISTS selemti.stock_policy (
    id BIGSERIAL PRIMARY KEY,
    item_id TEXT NOT NULL REFERENCES selemti.items(id),
    sucursal_id TEXT NOT NULL,
    almacen_id TEXT,
    min_qty NUMERIC(14,6) NOT NULL DEFAULT 0,
    max_qty NUMERIC(14,6) NOT NULL DEFAULT 0,
    reorder_lote NUMERIC(14,6),
    activo BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
    -- **CORRECCIÓN 8.1: Se eliminó la restricción UNIQUE con COALESCE de la definición de la tabla.**
);
-- **CORRECCIÓN 8.2: Se creó un índice UNIQUE separado para la restricción de expresión.**
CREATE UNIQUE INDEX IF NOT EXISTS idx_stock_policy_unique ON selemti.stock_policy (item_id, sucursal_id, COALESCE(almacen_id,'_'));
-- 7.6 RELACIÓN SUCURSAL-ALMACÉN-TERMINAL
CREATE TABLE IF NOT EXISTS selemti.sucursal_almacen_terminal (
    id SERIAL PRIMARY KEY,
    sucursal_id TEXT NOT NULL,
    almacen_id TEXT NOT NULL,
    terminal_id INT NULL,
    location TEXT,
    descripcion TEXT,
    activo BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
    -- **CORRECCIÓN 9.1: Se eliminó la restricción UNIQUE con COALESCE de la definición de la tabla.**
);
-- **CORRECCIÓN 9.2: Se creó un índice UNIQUE separado para la restricción de expresión.**
CREATE UNIQUE INDEX IF NOT EXISTS idx_suc_alm_term_unique ON selemti.sucursal_almacen_terminal (sucursal_id, almacen_id, COALESCE(terminal_id,0));
-- 8.2 REGISTRO DE PÉRDIDAS
CREATE TABLE IF NOT EXISTS selemti.perdida_log (
    id BIGSERIAL PRIMARY KEY,
    ts TIMESTAMP NOT NULL DEFAULT NOW(),
    item_id TEXT NOT NULL REFERENCES selemti.items(id),
    lote_id BIGINT REFERENCES selemti.inventory_batch(id),
    sucursal_id TEXT,
    clase selemti.merma_clase NOT NULL,
    motivo TEXT,
    qty_canonica NUMERIC(14,6) NOT NULL CHECK (qty_canonica > 0),
    qty_original NUMERIC(14,6),
    uom_original_id INT REFERENCES selemti.unidades_medida(id),
    evidencia_url TEXT,
    usuario_id INT REFERENCES selemti.users(id),
    ref_tipo TEXT,
    ref_id BIGINT,
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
);
-- 8.3 PORCIONAMIENTO DE PREPARACIONES
CREATE TABLE IF NOT EXISTS selemti.ticket_det_consumo (
    id BIGSERIAL PRIMARY KEY,
    ticket_id BIGINT NOT NULL,
    ticket_det_id BIGINT NOT NULL,
    item_id TEXT NOT NULL REFERENCES selemti.items(id),
    lote_id BIGINT REFERENCES selemti.inventory_batch(id),
    qty_canonica NUMERIC(14,6) NOT NULL CHECK (qty_canonica > 0),
    qty_original NUMERIC(14,6),
    uom_original_id INT REFERENCES selemti.unidades_medida(id),
    sucursal_id TEXT,
    ref_tipo TEXT,
    ref_id BIGINT,
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
    -- **CORRECCIÓN 11.1: Se eliminó la restricción UNIQUE con COALESCE de la definición de la tabla.**
);
-- **CORRECCIÓN 11.2: Se creó un índice UNIQUE separado para la restricción de expresión.**
CREATE UNIQUE INDEX IF NOT EXISTS idx_tick_cons_unique ON selemti.ticket_det_consumo (ticket_det_id, item_id, lote_id, qty_canonica, COALESCE(uom_original_id,0));
---## 9. ÍNDICES PARA OPTIMIZACIÓN

-- 9.1 ÍNDICES PRINCIPALES
-- Nota: La sintaxis CREATE INDEX IF NOT EXISTS es compatible con PG 9.5
CREATE INDEX IF NOT EXISTS idx_mov_inv_tipo_fecha ON selemti.mov_inv(tipo, ts);
CREATE INDEX IF NOT EXISTS idx_mov_inv_item_ts ON selemti.mov_inv(item_id, ts);
CREATE INDEX IF NOT EXISTS idx_inventory_batch_item ON selemti.inventory_batch(item_id);
CREATE INDEX IF NOT EXISTS idx_inventory_batch_caducidad ON selemti.inventory_batch(fecha_caducidad);
CREATE INDEX IF NOT EXISTS idx_receta_version_publicada ON selemti.receta_version(version_publicada);
CREATE INDEX IF NOT EXISTS idx_ticket_venta_fecha ON selemti.ticket_venta_cab(fecha_venta);
CREATE INDEX IF NOT EXISTS idx_historial_costos_item_fecha ON selemti.historial_costos_item(item_id, fecha_efectiva DESC);
CREATE INDEX IF NOT EXISTS idx_stock_policy_item_suc ON selemti.stock_policy(item_id, sucursal_id);
CREATE INDEX IF NOT EXISTS idx_perdida_item_ts ON selemti.perdida_log(item_id, ts DESC);
CREATE INDEX IF NOT EXISTS idx_tickcons_ticket ON selemti.ticket_det_consumo(ticket_id, ticket_det_id);
CREATE INDEX IF NOT EXISTS idx_tickcons_lote ON selemti.ticket_det_consumo(item_id, lote_id);
CREATE INDEX IF NOT EXISTS ix_layer_item_suc ON selemti.cost_layer(item_id, sucursal_id);
---## 10. FUNCIONES Y VISTAS

-- 10.1 FUNCIÓN DE REPROCESAMIENTO DE COSTOS
CREATE OR REPLACE FUNCTION selemti.reprocesar_costos_historicos(
    p_fecha_desde DATE,
    p_fecha_hasta DATE DEFAULT NULL,
    p_algoritmo VARCHAR(10) DEFAULT 'WAC',
    p_usuario_id INTEGER DEFAULT 1
) RETURNS INTEGER AS $$
DECLARE
    v_lote_id INTEGER;
v_total_actualizados INTEGER := 0;
v_item_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
INSERT INTO selemti.job_recalc_queue (scope_type, scope_from, scope_to, reason, status)
    VALUES ('PERIODO', p_fecha_desde, p_fecha_hasta, 'Reproceso costos ' || p_algoritmo, 'RUNNING')
    RETURNING id INTO v_lote_id;
FOR v_item_record IN 
        SELECT DISTINCT item_id 
        FROM selemti.mov_inv 
        WHERE ts BETWEEN p_fecha_desde AND p_fecha_hasta
    LOOP
        UPDATE selemti.historial_costos_item
        SET costo_wac = (
            SELECT AVG(costo_unit * cantidad) / NULLIF(SUM(cantidad), 0)
            FROM selemti.mov_inv 
            WHERE item_id = v_item_record.item_id 
            AND ts BETWEEN p_fecha_desde AND p_fecha_hasta 
            AND tipo IN ('COMPRA', 'RECEPCION')
        )
        WHERE item_id = v_item_record.item_id AND fecha_efectiva BETWEEN p_fecha_desde AND p_fecha_hasta;
v_total_actualizados := v_total_actualizados + 1;
END LOOP;
UPDATE selemti.job_recalc_queue 
    SET status = 'DONE', 
        result = ('{"actualizados": ' || v_total_actualizados || '}')::json
    WHERE id = v_lote_id;
RETURN v_total_actualizados;
EXCEPTION
    WHEN OTHERS THEN
        UPDATE selemti.job_recalc_queue 
        SET status = 'FAILED', 
            result = ('{"error": "' || REPLACE(SQLERRM, '"', '\"') || '"}')::json
        WHERE id = v_lote_id;
RAISE;
END;
$$ LANGUAGE plpgsql;
-- 10.2 FUNCIÓN DE INFERENCIA DE RECETAS
CREATE OR REPLACE FUNCTION selemti.inferir_recetas_de_ventas(
    p_fecha_desde DATE,
    p_fecha_hasta DATE DEFAULT NULL
) RETURNS INTEGER AS $$
DECLARE
    v_recetas_inferidas INTEGER := 0;
v_plato_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
FOR v_plato_record IN 
        SELECT DISTINCT td.item_id, COUNT(*) as total_ventas
        FROM selemti.ticket_venta_det td
        JOIN selemti.ticket_venta_cab tc ON td.ticket_id = tc.id
        WHERE tc.fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta
          AND td.receta_shadow_id IS NULL
        GROUP BY td.item_id
        HAVING COUNT(*) >= 5
    LOOP
        INSERT INTO selemti.receta_shadow (codigo_plato_pos, nombre_plato, total_ventas_analizadas, fecha_primer_venta, fecha_ultima_venta)
        VALUES (v_plato_record.item_id, 'Inferida_' || v_plato_record.item_id, v_plato_record.total_ventas, p_fecha_desde, p_fecha_hasta);
UPDATE selemti.ticket_venta_det
        SET receta_shadow_id = currval('selemti.receta_shadow_id_seq'), reprocesado = TRUE, version_reproceso = 1
        WHERE item_id = v_plato_record.item_id
          AND ticket_id IN (SELECT id FROM selemti.ticket_venta_cab WHERE fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta);
v_recetas_inferidas := v_recetas_inferidas + 1;
END LOOP;
RETURN v_recetas_inferidas;
END;
$$ LANGUAGE plpgsql;
-- 10.3 FUNCIÓN DE CIERRE DE LOTE PREPARADO
CREATE OR REPLACE FUNCTION selemti.cerrar_lote_preparado(
    p_lote_id BIGINT,
    p_clase selemti.merma_clase,
    p_motivo TEXT,
    p_usuario_id INT DEFAULT NULL,
    p_uom_id INT DEFAULT NULL
) RETURNS BIGINT AS $$
DECLARE
    v_item_id TEXT;
v_qty_disponible NUMERIC(14,6);
v_mov_id BIGINT;
BEGIN
    SELECT b.item_id, b.cantidad_actual
    INTO v_item_id, v_qty_disponible
    FROM selemti.inventory_batch b
    WHERE b.id = p_lote_id;
IF v_item_id IS NULL THEN
        RAISE EXCEPTION 'Lote % no existe', p_lote_id;
END IF;
IF v_qty_disponible IS NULL OR v_qty_disponible <= 0 THEN
        RETURN 0;
END IF;
INSERT INTO selemti.mov_inv (ts, item_id, lote_id, cantidad, tipo, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, 0 - v_qty_disponible, 'MERMA', 'CIERRE_PREP', p_lote_id)
    RETURNING id INTO v_mov_id;
INSERT INTO selemti.perdida_log (ts, item_id, lote_id, clase, motivo, qty_canonica, usuario_id, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, p_clase, p_motivo, v_qty_disponible, p_usuario_id, 'CIERRE_PREP', v_mov_id);
RETURN v_mov_id;
END;
$$ LANGUAGE plpgsql;
-- 10.4 VISTAS PRINCIPALES
-- Se usó CREATE OR REPLACE VIEW para idempotencia
CREATE OR REPLACE VIEW selemti.v_stock_actual AS
SELECT 
    i.id as item_id,
    i.nombre,
    COALESCE(SUM(
        CASE WHEN m.tipo = 'ENTRADA' THEN m.cantidad 
             WHEN m.tipo = 'SALIDA' THEN -m.cantidad 
             ELSE 0 END
    ), 0) as stock_actual
FROM selemti.items i
LEFT JOIN selemti.mov_inv m ON i.id = m.item_id
GROUP BY i.id, i.nombre;
CREATE OR REPLACE VIEW selemti.v_ingenieria_menu_completa AS
SELECT 
    rc.id as receta_id,
    rc.nombre_plato,
    rc.codigo_plato_pos,
    rc.precio_venta_sugerido,
    rc.costo_standard_porcion as costo_actual,
    (rc.precio_venta_sugerido - rc.costo_standard_porcion) as margen_actual,
    CASE WHEN rc.precio_venta_sugerido > 0 THEN 
        (rc.precio_venta_sugerido - rc.costo_standard_porcion) / rc.precio_venta_sugerido * 100 
        ELSE 0 END as porcentaje_margen,
    rc.costo_standard_porcion > (rc.precio_venta_sugerido * 0.4) as alerta_costo_alto,
    (SELECT COUNT(*) FROM selemti.ticket_venta_det td WHERE td.item_id = rc.id) = 0 as alerta_sin_ventas
FROM selemti.receta_cab rc
WHERE rc.activo = true;
CREATE OR REPLACE VIEW selemti.v_merma_por_item AS
SELECT
    m.item_id,
    date_trunc('week', m.ts)::date AS semana,
    SUM(CASE WHEN m.tipo = 'MERMA' THEN m.cantidad ELSE 0 END) as qty_mermada,
    SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) as qty_recibida,
    CASE 
        WHEN SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) > 0
        THEN ROUND(100.0 * SUM(CASE WHEN m.tipo='MERMA' THEN m.cantidad ELSE 0 END) / 
            NULLIF(SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END),0), 2)
        ELSE 0
    END AS merma_pct
FROM selemti.mov_inv m
GROUP BY m.item_id, date_trunc('week', m.ts)::date;
---## 11. DATOS INICIALES Y CONFIGURACIÓN

-- 11.1 INSERTAR USUARIO ADMIN POR DEFECTO
-- **CORRECCIÓN 6:** Dummy hash de 60 caracteres para cumplir con la restricción CHECK.
INSERT INTO selemti.users ("username", "password_hash", "nombre_completo", "email", "activo") 
VALUES ('admin', 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', 'Administrador del Sistema', 'admin@selemti.com', true)
ON CONFLICT ("username") DO NOTHING;
-- 11.2 ASIGNAR ROL DE GERENTE
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by)
SELECT id, 'GERENTE', 1 FROM selemti.users WHERE username = 'admin'
ON CONFLICT (user_id, role_id) DO NOTHING;
-- 11.3 CONFIGURAR SUCURSAL PRINCIPAL
INSERT INTO selemti.param_sucursal (sucursal_id, consumo, tolerancia_precorte_pct, tolerancia_corte_abs)
VALUES ('SUR', 'FEFO', 0.02, 50.0)
ON CONFLICT (sucursal_id) DO NOTHING;
--- ## 12. VERIFICACIÓN FINAL

DO $$
DECLARE
    v_table_count INTEGER;
BEGIN
    -- Contar tablas creadas
    SELECT COUNT(*) INTO v_table_count
    FROM information_schema.tables 
    WHERE table_schema = 'selemti';
    
    RAISE NOTICE '✅ ESQUEMA SELEMTI CREADO EXITOSAMENTE';
    RAISE NOTICE '✅ TABLAS CREADAS: %', v_table_count;
    RAISE NOTICE '✅ POSTGRESQL 9.5 COMPATIBLE';
    RAISE NOTICE '✅ EJECUCIÓN FINALIZADA - SISTEMA LISTO PARA DESARROLLO';
END $$;
-- Marca el VARCHAR como deprecado (opcional: quitarlo más adelante)
ALTER TABLE selemti.items
  ALTER COLUMN unidad_medida SET DEFAULT 'PZ';
-- (Opcional a futuro) mover toda lectura/escritura a unidad_medida_id y
-- agregar una vista que exponga ambos para UI:
CREATE OR REPLACE VIEW selemti.v_items_con_uom AS
SELECT i.*,
       um.codigo  AS uom_codigo,
       um.nombre  AS uom_nombre,
       um.tipo    AS uom_tipo
FROM selemti.items i
LEFT JOIN selemti.unidades_medida um
       ON um.id = i.unidad_medida_id;
ALTER TABLE selemti.inventory_batch
  DROP CONSTRAINT IF EXISTS inventory_batch_fecha_caducidad_check;
-- Validación se hace en UI/negocio o en un trigger solo para flujos “en línea”.
ALTER TABLE selemti.ticket_venta_det
  ADD CONSTRAINT fk_ticket_det_cab
  FOREIGN KEY (ticket_id) REFERENCES selemti.ticket_venta_cab(id)
  ON DELETE CASCADE;
CREATE TABLE IF NOT EXISTS selemti.sucursal (
  id TEXT PRIMARY KEY,
  nombre TEXT NOT NULL,
  activo BOOLEAN NOT NULL DEFAULT TRUE
);
CREATE TABLE IF NOT EXISTS selemti.almacen (
  id TEXT PRIMARY KEY,
  sucursal_id TEXT NOT NULL REFERENCES selemti.sucursal(id),
  nombre TEXT NOT NULL,
  activo BOOLEAN NOT NULL DEFAULT TRUE
);
CREATE TABLE IF NOT EXISTS selemti.proveedor (
  id TEXT PRIMARY KEY,
  nombre TEXT NOT NULL,
  rfc TEXT,
  activo BOOLEAN NOT NULL DEFAULT TRUE
);
CREATE OR REPLACE VIEW selemti.v_stock_brechas AS
SELECT sp.sucursal_id, sp.almacen_id, sp.item_id,
       sp.min_qty, sp.max_qty,
       COALESCE(sa.stock_actual,0) AS stock_actual,
       GREATEST(sp.min_qty - COALESCE(sa.stock_actual,0), 0) AS qty_a_comprar
FROM selemti.stock_policy sp
LEFT JOIN (
  SELECT item_id, SUM(
    CASE WHEN tipo IN ('ENTRADA') THEN cantidad
         WHEN tipo IN ('SALIDA','MERMA','AJUSTE','TRASPASO') THEN -cantidad
         ELSE 0 END
  ) AS stock_actual
  FROM selemti.mov_inv
  GROUP BY item_id
) sa ON sa.item_id = sp.item_id;
CREATE OR REPLACE VIEW selemti.v_merma_por_item AS
SELECT
  m.item_id,
  date_trunc('week', m.ts)::date AS semana,
  SUM(CASE WHEN m.tipo = 'MERMA' THEN m.cantidad ELSE 0 END)                      AS qty_mermada,
  SUM(CASE WHEN m.tipo IN ('ENTRADA') THEN m.cantidad ELSE 0 END)                 AS qty_recibida,
  ROUND(100.0 * NULLIF(
    SUM(CASE WHEN m.tipo='MERMA' THEN m.cantidad ELSE 0 END),0
  ) / NULLIF(SUM(CASE WHEN m.tipo IN ('ENTRADA') THEN m.cantidad ELSE 0 END),0), 2) AS merma_pct
FROM selemti.mov_inv m
GROUP BY m.item_id, date_trunc('week', m.ts)::date;
CREATE OR REPLACE FUNCTION selemti.registrar_consumo_porcionado(
  p_ticket_id BIGINT,
  p_ticket_det_id BIGINT,
  p_item_id TEXT,
  p_qty_total NUMERIC,      -- p.ej. 1000 ml de salsa
  p_distribucion JSON       -- [{receta_version_id: X, qty_ml: 300}, ...]
) RETURNS INT AS $$
DECLARE
  r JSON;
v_count INT := 0;
BEGIN
  FOR r IN SELECT * FROM json_array_elements(p_distribucion)
  LOOP
    INSERT INTO selemti.ticket_det_consumo(
      ticket_id, ticket_det_id, item_id, lote_id, qty_canonica, ref_tipo, ref_id
    )
    VALUES (
      p_ticket_id, p_ticket_det_id, p_item_id, NULL,
      (r->>'qty_ml')::NUMERIC,
      'PORCION', p_ticket_det_id
    );
v_count := v_count + 1;
END LOOP;
RETURN v_count;
END;
$$ LANGUAGE plpgsql;
-- END 000.  SISTEMA SELEMTI - ESQUEMA COMPLETO DE BASE DE DATOS- OK.sql

-- BEGIN 0. Query_Corte_OK.sql
-- 1) TABLAS que faltaron / fallaron
-- 1.1 Detalle de efectivo por denominación
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.tables
    WHERE table_schema='selemti' AND table_name='precorte_efectivo'
  ) THEN
    CREATE TABLE selemti.precorte_efectivo (
      id            BIGSERIAL PRIMARY KEY,
      precorte_id   BIGINT NOT NULL REFERENCES selemti.precorte(id) ON DELETE CASCADE,
      denominacion  NUMERIC(12,2) NOT NULL,
      cantidad      INTEGER NOT NULL,
      subtotal      NUMERIC(12,2) NOT NULL DEFAULT 0
    );
  END IF;
END$$;
-- Trigger BI para subtotal
CREATE OR REPLACE FUNCTION selemti.fn_precorte_efectivo_bi()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  NEW.subtotal := COALESCE(NEW.denominacion,0) * COALESCE(NEW.cantidad,0);
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_precorte_efectivo_bi ON selemti.precorte_efectivo;
CREATE TRIGGER trg_precorte_efectivo_bi
BEFORE INSERT OR UPDATE ON selemti.precorte_efectivo
FOR EACH ROW EXECUTE PROCEDURE selemti.fn_precorte_efectivo_bi();
-- 1.2 Catálogo de Formas de Pago (sin COALESCE en constraint)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.tables
    WHERE table_schema='selemti' AND table_name='formas_pago'
  ) THEN
    CREATE TABLE selemti.formas_pago (
      id               BIGSERIAL PRIMARY KEY,
      codigo           TEXT NOT NULL,    -- 'CASH','CREDIT','DEBIT','TRANSFER','CUSTOM:<slug>'
      payment_type     TEXT NOT NULL,
      transaction_type TEXT,
      payment_sub_type TEXT,
      custom_name      TEXT,
      custom_ref       TEXT,
      activo           BOOLEAN NOT NULL DEFAULT TRUE,
      prioridad        INTEGER NOT NULL DEFAULT 100,
      creado_en        TIMESTAMPTZ NOT NULL DEFAULT now(),
      CONSTRAINT uq_fp_codigo UNIQUE (codigo)
    );
  END IF;
END$$;
-- UNIQUE INDEX por expresión para la “huella”
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes
    WHERE schemaname='selemti' AND indexname='uq_fp_huella_expr'
  ) THEN
    CREATE UNIQUE INDEX uq_fp_huella_expr ON selemti.formas_pago (
      payment_type,
      (coalesce(transaction_type,'')),
      (coalesce(payment_sub_type,'')),
      (coalesce(custom_name,'')),
      (coalesce(custom_ref,''))
    );
  END IF;
END$$;
CREATE INDEX IF NOT EXISTS ix_fp_codigo ON selemti.formas_pago(codigo);
-- 2) Funciones (ASCII-safe) y triggers

-- 2.1 Slug ASCII (evita problemas de codificación)
CREATE OR REPLACE FUNCTION selemti.fn_slug(txt text)
RETURNS text LANGUAGE plpgsql AS $$
DECLARE s TEXT := lower(coalesce(txt,''));
BEGIN
  -- sólo minúsculas y guiones (sin acentos para evitar encoding issues)
  s := regexp_replace(s, '[^a-z0-9]+', '-', 'g');
s := regexp_replace(s, '(^-|-$)', '', 'g');
IF s = '' THEN RETURN NULL;
END IF;
RETURN s;
END $$;
CREATE OR REPLACE FUNCTION selemti.fn_normalizar_forma_pago(
  p_payment_type TEXT,
  p_transaction_type TEXT,
  p_payment_sub_type TEXT,
  p_custom_name TEXT
) RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE pt TEXT := upper(coalesce(p_payment_type,''));
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN ('CASH','CREDIT','DEBIT','TRANSFER') THEN
    RETURN pt;
ELSIF pt = 'CUSTOM_PAYMENT' THEN
    IF cn IS NOT NULL THEN
      RETURN 'CUSTOM:' || cn;
ELSE
      RETURN 'CUSTOM';
END IF;
ELSE
    RETURN pt;
-- fallback
  END IF;
END $$;
-- Trigger en transactions para auto-poblar catálogo (usa ON CONFLICT DO NOTHING genérico)
CREATE OR REPLACE FUNCTION selemti.fn_tx_after_insert_forma_pago()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_codigo TEXT;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
                NEW.payment_type,
                NEW.transaction_type,
                NEW.payment_sub_type,
                NEW.custom_payment_name
              );
INSERT INTO selemti.formas_pago
    (codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref)
  VALUES
    (v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref)
  ON CONFLICT DO NOTHING;
-- aplica por uq_fp_codigo o por uq_fp_huella_expr

  RETURN NEW;
END $$;
-- (re)crear trigger
DROP TRIGGER IF EXISTS trg_selemti_tx_ai_forma_pago ON public.transactions;
CREATE TRIGGER trg_selemti_tx_ai_forma_pago
AFTER INSERT ON public.transactions
FOR EACH ROW EXECUTE PROCEDURE selemti.fn_tx_after_insert_forma_pago();
-- Semillas mínimas
INSERT INTO selemti.formas_pago(codigo, payment_type)
VALUES ('CASH','CASH'),('CREDIT','CREDIT'),('DEBIT','DEBIT'),('TRANSFER','TRANSFER')
ON CONFLICT DO NOTHING;
-- 2.2 Apertura/cierre por historial (corrige UPDATE sin ORDER BY LIMIT)
CREATE OR REPLACE FUNCTION selemti.fn_dah_after_insert()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE
  v_terminal_id   INTEGER;
v_apertura_ts   TIMESTAMPTZ := NEW."time";
v_fondo         NUMERIC(12,2) := 0;
v_op            TEXT := COALESCE(NEW.operation,'');
v_obj_id        BIGINT;
BEGIN
  v_terminal_id := selemti.fn_resolver_terminal_para_usuario(NEW.a_user, NEW."time");
IF v_terminal_id IS NULL THEN
    INSERT INTO selemti.auditoria(quien, que, payload)
    VALUES (NEW.a_user, 'NO_SE_PUDO_RESOLVER_TERMINAL', jsonb_build_object('dah_id',NEW.id,'operation',NEW.operation,'time',NEW."time"));
RETURN NEW;
END IF;
-- Apertura/asignación
  IF v_op ~* '(assign|asign|open|apert)' THEN
    v_fondo := selemti.fn_fondo_actual(v_terminal_id);
IF NOT EXISTS (
      SELECT 1 FROM selemti.sesion_cajon s
      WHERE s.terminal_id = v_terminal_id
        AND s.cajero_usuario_id = NEW.a_user
        AND s.apertura_ts = v_apertura_ts
    ) THEN
      INSERT INTO selemti.sesion_cajon(terminal_id, cajero_usuario_id, dah_evento_id,
                                       apertura_ts, estatus, opening_float, creado_por)
      VALUES (v_terminal_id, NEW.a_user, NEW.id,
              v_apertura_ts, 'ACTIVA', v_fondo, NEW.a_user);
INSERT INTO selemti.auditoria(quien, que, payload)
      VALUES (NEW.a_user, 'APERTURA_SESION_CAJON', jsonb_build_object('fondo',v_fondo));
END IF;
END IF;
-- Cierre/liberación base (elige la última sesión abierta via subselect)
  IF v_op ~* '(release|liber|close|cerrar|unassign|fin|end)' THEN
    SELECT s.id INTO v_obj_id
    FROM selemti.sesion_cajon s
    WHERE s.terminal_id = v_terminal_id
      AND s.cajero_usuario_id = NEW.a_user
      AND s.cierre_ts IS NULL
    ORDER BY s.apertura_ts DESC
    LIMIT 1;
IF v_obj_id IS NOT NULL THEN
      UPDATE selemti.sesion_cajon
         SET cierre_ts = COALESCE(cierre_ts, NEW."time"),
             estatus   = CASE WHEN estatus='ACTIVA' THEN 'LISTO_PARA_CORTE' ELSE estatus END
       WHERE id = v_obj_id;
END IF;
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_dah_ai ON public.drawer_assigned_history;
CREATE TRIGGER trg_selemti_dah_ai
AFTER INSERT ON public.drawer_assigned_history
FOR EACH ROW EXECUTE PROCEDURE selemti.fn_dah_after_insert();
-- 2.3 Snapshot de cierre (terminal BEFORE UPDATE) — corrige sintaxis
CREATE OR REPLACE FUNCTION selemti.fn_terminal_bu_snapshot_cierre()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_obj_id BIGINT;
BEGIN
  IF OLD.assigned_user IS NOT NULL AND NEW.assigned_user IS NULL THEN
    SELECT s.id INTO v_obj_id
    FROM selemti.sesion_cajon s
    WHERE s.terminal_id = OLD.id
      AND s.cajero_usuario_id = OLD.assigned_user
      AND s.cierre_ts IS NULL
    ORDER BY s.apertura_ts DESC
    LIMIT 1;
IF v_obj_id IS NOT NULL THEN
      UPDATE selemti.sesion_cajon
         SET closing_float = COALESCE(closing_float, OLD.current_balance::numeric),
             cierre_ts     = COALESCE(cierre_ts, now()),
             estatus       = CASE WHEN estatus='ACTIVA' THEN 'LISTO_PARA_CORTE' ELSE estatus END
       WHERE id = v_obj_id;
INSERT INTO selemti.auditoria(quien, que, payload)
      VALUES (OLD.assigned_user, 'SNAPSHOT_CIERRE_TERMINAL',
              jsonb_build_object('terminal_id',OLD.id,'closing_float',OLD.current_balance));
END IF;
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_terminal_bu_snapshot ON public.terminal;
CREATE TRIGGER trg_selemti_terminal_bu_snapshot
BEFORE UPDATE ON public.terminal
FOR EACH ROW EXECUTE PROCEDURE selemti.fn_terminal_bu_snapshot_cierre();
-- 2.4 Refuerzo de cierre en drawer_assigned_history (corrige UPDATE)
CREATE OR REPLACE FUNCTION selemti.fn_dah_after_insert_refuerzo()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE
  v_terminal_id   INTEGER;
v_now_balance   NUMERIC(12,2);
v_op            TEXT := COALESCE(NEW.operation,'');
v_obj_id        BIGINT;
BEGIN
  IF v_op !~* '(release|liber|close|cerrar|unassign|fin|end)' THEN
    RETURN NEW;
END IF;
v_terminal_id := selemti.fn_resolver_terminal_para_usuario(NEW.a_user, NEW."time");
IF v_terminal_id IS NULL THEN
    RETURN NEW;
END IF;
SELECT current_balance::numeric INTO v_now_balance
  FROM public.terminal WHERE id = v_terminal_id;
SELECT s.id INTO v_obj_id
  FROM selemti.sesion_cajon s
  WHERE s.terminal_id = v_terminal_id
    AND s.cajero_usuario_id = NEW.a_user
    AND s.cierre_ts IS NULL
  ORDER BY s.apertura_ts DESC
  LIMIT 1;
IF v_obj_id IS NOT NULL THEN
    UPDATE selemti.sesion_cajon
       SET closing_float = COALESCE(closing_float, NULLIF(v_now_balance,0)),
           cierre_ts     = COALESCE(cierre_ts, NEW."time"),
           estatus       = CASE WHEN estatus='ACTIVA' THEN 'LISTO_PARA_CORTE' ELSE estatus END
     WHERE id = v_obj_id;
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_dah_ai_refuerzo ON public.drawer_assigned_history;
CREATE TRIGGER trg_selemti_dah_ai_refuerzo
AFTER INSERT ON public.drawer_assigned_history
FOR EACH ROW
EXECUTE PROCEDURE selemti.fn_dah_after_insert_refuerzo();
-- 3) VISTAS (crear/rehacer en orden;
ya existe formas_pago)
-- 3.1 Ventas por forma de pago
CREATE OR REPLACE VIEW selemti.vw_sesion_ventas AS
WITH base AS (
  SELECT
    s.id AS sesion_id,
    t.amount::numeric AS monto,
    COALESCE(
      fp.codigo,
      selemti.fn_normalizar_forma_pago(t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name)
    ) AS codigo_fp
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   AND t.user_id           = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type             = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
)
SELECT sesion_id, codigo_fp, SUM(monto) AS monto
FROM base
GROUP BY sesion_id, codigo_fp;
-- 3.2 Descuentos (placeholder)
CREATE OR REPLACE VIEW selemti.vw_sesion_descuentos AS
SELECT s.id AS sesion_id, 0::numeric AS descuentos
FROM selemti.sesion_cajon s;
-- 3.3 Anulaciones
CREATE OR REPLACE VIEW selemti.vw_sesion_anulaciones AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE WHEN tk.status IN ('VOID','REFUND') THEN tk.total_price ELSE 0 END),0)::numeric AS total_anulado
FROM selemti.sesion_cajon s
LEFT JOIN public.ticket tk
  ON tk.closing_date >= s.apertura_ts
 AND tk.closing_date <  COALESCE(s.cierre_ts, now())
 AND tk.terminal_id   = s.terminal_id
 AND tk.owner_id      = s.cajero_usuario_id
GROUP BY s.id;
-- 3.4 Retiros
CREATE OR REPLACE VIEW selemti.vw_sesion_retiros AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE WHEN t.transaction_type IN ('PAYOUT','EXPENSE') THEN t.amount::numeric ELSE 0 END),0) AS retiros
FROM selemti.sesion_cajon s
JOIN public.transactions t
  ON t.transaction_time >= s.apertura_ts
 AND t.transaction_time <  COALESCE(s.cierre_ts, now())
 AND t.terminal_id       = s.terminal_id
 AND t.user_id           = s.cajero_usuario_id
GROUP BY s.id;
-- 3.5 Reembolsos efectivo
CREATE OR REPLACE VIEW selemti.vw_sesion_reembolsos_efectivo AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE
         WHEN (t.transaction_type IN ('REFUND','RETURN') OR COALESCE(t.voided,false)=true)
          AND (t.payment_type = 'CASH' OR t.transaction_type = 'CASH')
         THEN t.amount::numeric ELSE 0 END),0) AS reembolsos_efectivo
FROM selemti.sesion_cajon s
JOIN public.transactions t
  ON t.transaction_time >= s.apertura_ts
 AND t.transaction_time <  COALESCE(s.cierre_ts, now())
 AND t.terminal_id       = s.terminal_id
 AND t.user_id           = s.cajero_usuario_id
GROUP BY s.id;
-- 3.6 Conciliación final
CREATE OR REPLACE VIEW selemti.vw_conciliacion_sesion AS
WITH ventas AS (
  SELECT
    sesion_id,
    SUM(CASE WHEN codigo_fp = 'CASH' THEN monto ELSE 0 END) AS ventas_efectivo,
    SUM(CASE WHEN codigo_fp IN ('CREDIT','DEBIT','TRANSFER') OR codigo_fp LIKE 'CUSTOM:%'
             THEN monto ELSE 0 END) AS ventas_no_efectivo
  FROM selemti.vw_sesion_veNTAS
  GROUP BY sesion_id
),
decl AS (
  SELECT
    s.id AS sesion_id,
    COALESCE(MAX(p.declarado_efectivo),0)::numeric      AS precorte_efectivo,
    COALESCE(MAX(pc.declarado_efectivo_fin),0)::numeric AS post_efectivo,
    COALESCE(MAX(pc.declarado_tarjetas_fin),0)::numeric AS post_tarjetas
  FROM selemti.sesion_cajon s
  LEFT JOIN selemti.precorte  p  ON p.sesion_id  = s.id
  LEFT JOIN selemti.postcorte pc ON pc.sesion_id = s.id
  GROUP BY s.id
)
SELECT
  s.id                AS sesion_id,
  s.terminal_id,
  s.cajero_usuario_id,
  s.apertura_ts,
  s.cierre_ts,
  s.estatus,

  s.opening_float,
  COALESCE(v.ventas_efectivo,0)      AS sistema_efectivo,
  COALESCE(v.ventas_no_efectivo,0)   AS sistema_no_efectivo,
  COALESCE(dsc.descuentos,0)         AS sistema_descuentos,
  COALESCE(an.total_anulado,0)       AS sistema_anulaciones,
  COALESCE(re.retiros,0)             AS sistema_retiros,
  COALESCE(rc.reembolsos_efectivo,0) AS sistema_reembolsos_efectivo,

  ( s.opening_float
    + COALESCE(v.ventas_efectivo,0)
    - COALESCE(re.retiros,0)
    - COALESCE(rc.reembolsos_efectivo,0)
  ) AS sistema_efectivo_esperado,

  COALESCE(dl.precorte_efectivo,0) AS declarado_precorte_efectivo,
  COALESCE(dl.post_efectivo,0)     AS declarado_post_efectivo,
  COALESCE(dl.post_tarjetas,0)     AS declarado_post_tarjetas,

  (COALESCE(dl.post_efectivo,0)  - ( s.opening_float
                                   + COALESCE(v.ventas_efectivo,0)
                                   - COALESCE(re.retiros,0)
                                   - COALESCE(rc.reembolsos_efectivo,0))) AS diferencia_efectivo,
  (COALESCE(dl.post_tarjetas,0) - COALESCE(v.ventas_no_efectivo,0))        AS diferencia_no_efectivo,

  s.closing_float AS cierre_pos_snapshot,
  COALESCE(s.closing_float,
           ( s.opening_float
             + COALESCE(v.ventas_efectivo,0)
             - COALESCE(re.retiros,0)
             - COALESCE(rc.reembolsos_efectivo,0)
           )) AS cierre_pos_efectivo_final

FROM selemti.sesion_cajon s
LEFT JOIN ventas                           v   ON v.sesion_id   = s.id
LEFT JOIN selemti.vw_sesion_descuentos     dsc ON dsc.sesion_id = s.id
LEFT JOIN selemti.vw_sesion_anulaciones    an  ON an.sesion_id  = s.id
LEFT JOIN selemti.vw_sesion_retiros        re  ON re.sesion_id  = s.id
LEFT JOIN selemti.vw_sesion_reembolsos_efectivo rc ON rc.sesion_id = s.id
LEFT JOIN decl                             dl  ON dl.sesion_id  = s.id;
-- END 0. Query_Corte_OK.sql

-- BEGIN 00_esquema_selemti.sql
-- 2. CREAR USUARIO DEDICADO
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'selemti_user') THEN
        CREATE USER selemti_user WITH PASSWORD 'selemti_password_2024';
        RAISE NOTICE 'Usuario selemti_user creado exitosamente';
    ELSE
        RAISE NOTICE 'Usuario selemti_user ya existe';
    END IF;
END
$$;
-- 3. OTORGAR PERMISOS
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT CREATE ON SCHEMA selemti TO selemti_user;
-- 4. PERMISOS DE LECTURA ENTRE ESQUEMAS
GRANT USAGE ON SCHEMA public TO selemti_user;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO selemti_user;
-- 5. CONFIGURAR SEARCH PATH
ALTER USER selemti_user SET search_path = 'selemti, public';
RAISE NOTICE 'Script 00 ejecutado exitosamente';
-- END 00_esquema_selemti.sql

-- BEGIN 000. deploy_selemti_full.sql
-- =====================================================================
-- Selemti: Deploy Unificado (esquema, tipos, tablas, vistas, funciones)
-- Idempotente / Migration-Safe
-- Owner: postgres  |  TZ operativa: America/Mexico_City
-- Política consumo: FEFO (default) / PEPS por sucursal (parametrizable)
-- UOM base: GR (peso), ML (volumen), PZ (unidad)
-- =====================================================================

-- 0) Preámbulo
SET client_min_messages = WARNING;
-- Search path sugerido para aplicaciones:
--   ALTER ROLE selemti_user SET search_path = 'selemti, public';
-- Helper para crear ENUM si no existe (compatible 9.5+)
DO $$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace
                 WHERE t.typname='consumo_policy' AND n.nspname='selemti') THEN
    EXECUTE 'CREATE TYPE selemti.consumo_policy AS ENUM (''FEFO'',''PEPS'')';
  END IF;

  IF NOT EXISTS (SELECT 1 FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace
                 WHERE t.typname='lote_estado' AND n.nspname='selemti') THEN
    EXECUTE 'CREATE TYPE selemti.lote_estado AS ENUM (''ACTIVO'',''BLOQUEADO'',''RECALL'')';
  END IF;

  IF NOT EXISTS (SELECT 1 FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace
                 WHERE t.typname='mov_tipo' AND n.nspname='selemti') THEN
    EXECUTE 'CREATE TYPE selemti.mov_tipo AS ENUM (''RECEPCION'',''COMPRA'',''VENTA'',''CONSUMO_OP'',''AJUSTE'',''TRASPASO_IN'',''TRASPASO_OUT'',''ANULACION'')';
  END IF;

  IF NOT EXISTS (SELECT 1 FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace
                 WHERE t.typname='merma_tipo' AND n.nspname='selemti') THEN
    EXECUTE 'CREATE TYPE selemti.merma_tipo AS ENUM (''PROCESO'',''OPERATIVA'')';
  END IF;

  IF NOT EXISTS (SELECT 1 FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace
                 WHERE t.typname='op_estado' AND n.nspname='selemti') THEN
    EXECUTE 'CREATE TYPE selemti.op_estado AS ENUM (''ABIERTA'',''EN_PROCESO'',''CERRADA'',''ANULADA'')';
  END IF;
END$$;
-- 1) Catálogos de Unidades de Medida (UOM) y conversiones
CREATE TABLE IF NOT EXISTS selemti.unidad_medida (
  id SERIAL PRIMARY KEY,
  codigo TEXT UNIQUE NOT NULL,           -- 'GR','ML','PZ', etc.
  nombre TEXT NOT NULL,                  -- Gramo, Mililitro, Pieza...
  tipo TEXT NOT NULL CHECK (tipo IN ('PESO','VOLUMEN','UNIDAD','TIEMPO')),
  es_base BOOLEAN NOT NULL DEFAULT FALSE,
  factor_a_base NUMERIC(14,6) NOT NULL DEFAULT 1.0,
  decimales INT NOT NULL DEFAULT 2
);
INSERT INTO selemti.unidad_medida (codigo,nombre,tipo,es_base,factor_a_base,decimales)
VALUES
 ('GR','Gramo','PESO',TRUE,1,2),
 ('KG','Kilogramo','PESO',FALSE,1000,2),
 ('ML','Mililitro','VOLUMEN',TRUE,1,2),
 ('LT','Litro','VOLUMEN',FALSE,1000,2),
 ('PZ','Pieza','UNIDAD',TRUE,1,0),
 ('OZ','Onza','PESO',FALSE,28.3495,2),
 ('LB','Libra','PESO',FALSE,453.592,2)
ON CONFLICT (codigo) DO NOTHING;
CREATE TABLE IF NOT EXISTS selemti.uom_conversion (
  id SERIAL PRIMARY KEY,
  origen_id INT NOT NULL REFERENCES selemti.unidad_medida(id),
  destino_id INT NOT NULL REFERENCES selemti.unidad_medida(id),
  factor NUMERIC(14,6) NOT NULL CHECK (factor > 0),
  UNIQUE (origen_id, destino_id),
  CHECK (origen_id <> destino_id)
);
-- 2) Seguridad / Usuarios (propios) y mapeo a Floreant
CREATE TABLE IF NOT EXISTS selemti.rol (
  id SERIAL PRIMARY KEY,
  codigo TEXT UNIQUE NOT NULL, -- GERENTE, CHEF, ALMACEN, CAJERO, AUDITOR, SISTEMA
  nombre TEXT NOT NULL
);
INSERT INTO selemti.rol (codigo, nombre) VALUES
 ('GERENTE','Gerente'),('CHEF','Chef/Jefe Barra'),('ALMACEN','Almacén'),
 ('CAJERO','Cajero'),('AUDITOR','Auditor/APPCC'),('SISTEMA','Integración')
ON CONFLICT (codigo) DO NOTHING;
CREATE TABLE IF NOT EXISTS selemti.usuario (
  id BIGSERIAL PRIMARY KEY,
  username TEXT UNIQUE NOT NULL,
  nombre TEXT NOT NULL,
  email TEXT,
  rol_id INT NOT NULL REFERENCES selemti.rol(id),
  activo BOOLEAN NOT NULL DEFAULT TRUE,
  password_hash TEXT,                     -- si aplica login nativo
  floreant_user_id INT,                   -- mapeo opcional a usuario POS
  meta JSONB,
  created_at TIMESTAMP NOT NULL DEFAULT now()
);
-- 4) Maestro de ítems (insumos y artículos vendibles)
-- Nota: si tus ítems maestros viven en 'public' (Floreant), aquí definimos uno propio
-- para insumos/estandarización. Puedes mapear artículos de venta con pos_map (abajo).
CREATE TABLE IF NOT EXISTS selemti.insumo (
  id BIGSERIAL PRIMARY KEY,
  sku TEXT UNIQUE,                         -- opcional
  nombre TEXT NOT NULL,
  um_id INT NOT NULL REFERENCES selemti.unidad_medida(id),
  perecible BOOLEAN NOT NULL DEFAULT FALSE,
  merma_pct NUMERIC(6,3) NOT NULL DEFAULT 0.000,  -- AP->EP
  activo BOOLEAN NOT NULL DEFAULT TRUE,
  meta JSONB
);
-- Presentaciones de compra por proveedor
CREATE TABLE IF NOT EXISTS selemti.insumo_presentacion (
  id BIGSERIAL PRIMARY KEY,
  insumo_id BIGINT NOT NULL REFERENCES selemti.insumo(id),
  proveedor_id INT,                        -- si mapeas a proveedor POS, usar FK NOT VALID
  um_compra_id INT NOT NULL REFERENCES selemti.unidad_medida(id),
  factor_a_um NUMERIC(14,6) NOT NULL DEFAULT 1.0, -- (UM compra -> UM uso)
  costo_ultimo NUMERIC(14,6) NOT NULL DEFAULT 0.0,
  activo BOOLEAN NOT NULL DEFAULT TRUE
);
-- 5) Recetas (con versionado y congelamiento de costo)
CREATE TABLE IF NOT EXISTS selemti.receta (
  id BIGSERIAL PRIMARY KEY,
  codigo TEXT UNIQUE,
  nombre TEXT NOT NULL,
  porciones NUMERIC(12,4) NOT NULL DEFAULT 1.0,
  pvp_objetivo NUMERIC(12,4),
  activo BOOLEAN NOT NULL DEFAULT TRUE,
  meta JSONB
);
CREATE TABLE IF NOT EXISTS selemti.receta_insumo (
  id BIGSERIAL PRIMARY KEY,
  receta_version_id BIGINT NOT NULL REFERENCES selemti.receta_version(id),
  insumo_id BIGINT NOT NULL REFERENCES selemti.insumo(id),
  cantidad NUMERIC(14,6) NOT NULL,
  UNIQUE (receta_version_id, insumo_id)
);
CREATE INDEX IF NOT EXISTS ix_pos_map_plu ON selemti.pos_map (pos_system,plu,vigente_desde);
-- 7) Inventarios por Lote + Kardex unificado (mov_inv)
CREATE TABLE IF NOT EXISTS selemti.bodega (
  id SERIAL PRIMARY KEY,
  sucursal_id INT NOT NULL REFERENCES selemti.sucursal(id),
  codigo TEXT NOT NULL,
  nombre TEXT NOT NULL,
  UNIQUE (sucursal_id, codigo)
);
CREATE TABLE IF NOT EXISTS selemti.lote (
  id BIGSERIAL PRIMARY KEY,
  insumo_id BIGINT NOT NULL REFERENCES selemti.insumo(id),
  proveedor_id INT,
  codigo TEXT,
  caducidad DATE,
  estado selemti.lote_estado NOT NULL DEFAULT 'ACTIVO',
  creado_ts TIMESTAMP NOT NULL DEFAULT now()
);
CREATE INDEX IF NOT EXISTS ix_lote_insumo ON selemti.lote (insumo_id);
CREATE INDEX IF NOT EXISTS ix_lote_cad ON selemti.lote (caducidad);
CREATE INDEX IF NOT EXISTS ix_mov_ts ON selemti.mov_inv (ts);
CREATE INDEX IF NOT EXISTS ix_mov_insumo_ts ON selemti.mov_inv (insumo_id, ts DESC);
CREATE INDEX IF NOT EXISTS ix_mov_ref ON selemti.mov_inv (ref_tipo, ref_id);
-- Recepciones (perecibles con temperatura/evidencia)
CREATE TABLE IF NOT EXISTS selemti.recepcion_cab (
  id BIGSERIAL PRIMARY KEY,
  sucursal_id INT NOT NULL REFERENCES selemti.sucursal(id),
  proveedor_id INT,
  oc_ref TEXT,
  ts TIMESTAMP NOT NULL DEFAULT now(),
  usuario_id BIGINT REFERENCES selemti.usuario(id),
  meta JSONB
);
CREATE TABLE IF NOT EXISTS selemti.recepcion_det (
  id BIGSERIAL PRIMARY KEY,
  recepcion_id BIGINT NOT NULL REFERENCES selemti.recepcion_cab(id) ON DELETE CASCADE,
  insumo_id BIGINT NOT NULL REFERENCES selemti.insumo(id),
  bodega_id INT NOT NULL REFERENCES selemti.bodega(id),
  qty NUMERIC(14,6) NOT NULL,
  um_id INT NOT NULL REFERENCES selemti.unidad_medida(id),
  costo_unit NUMERIC(14,6) NOT NULL,
  lote_id BIGINT REFERENCES selemti.lote(id),
  temperatura NUMERIC(6,2),
  doc_url TEXT,         -- evidencia
  meta JSONB
);
-- Traspasos
CREATE TABLE IF NOT EXISTS selemti.traspaso_cab (
  id BIGSERIAL PRIMARY KEY,
  from_bodega_id INT NOT NULL REFERENCES selemti.bodega(id),
  to_bodega_id INT NOT NULL REFERENCES selemti.bodega(id),
  ts TIMESTAMP NOT NULL DEFAULT now(),
  usuario_id BIGINT REFERENCES selemti.usuario(id),
  meta JSONB
);
CREATE TABLE IF NOT EXISTS selemti.traspaso_det (
  id BIGSERIAL PRIMARY KEY,
  traspaso_id BIGINT NOT NULL REFERENCES selemti.traspaso_cab(id) ON DELETE CASCADE,
  insumo_id BIGINT NOT NULL REFERENCES selemti.insumo(id),
  lote_id BIGINT REFERENCES selemti.lote(id),
  qty NUMERIC(14,6) NOT NULL,
  um_id INT NOT NULL REFERENCES selemti.unidad_medida(id)
);
-- Mermas
CREATE TABLE IF NOT EXISTS selemti.merma (
  id BIGSERIAL PRIMARY KEY,
  ts TIMESTAMP NOT NULL DEFAULT now(),
  tipo selemti.merma_tipo NOT NULL,
  insumo_id BIGINT NOT NULL REFERENCES selemti.insumo(id),
  lote_id BIGINT REFERENCES selemti.lote(id),
  op_id BIGINT,  -- si es PROCESO
  qty NUMERIC(14,6) NOT NULL,
  um_id INT NOT NULL REFERENCES selemti.unidad_medida(id),
  usuario_id BIGINT REFERENCES selemti.usuario(id),
  motivo TEXT,
  meta JSONB
);
-- 8) Producción (OP) y yields
CREATE TABLE IF NOT EXISTS selemti.op_cab (
  id BIGSERIAL PRIMARY KEY,
  sucursal_id INT NOT NULL REFERENCES selemti.sucursal(id),
  receta_version_id BIGINT NOT NULL REFERENCES selemti.receta_version(id),
  cantidad_objetivo NUMERIC(14,6) NOT NULL,
  um_salida_id INT NOT NULL REFERENCES selemti.unidad_medida(id),
  estado selemti.op_estado NOT NULL DEFAULT 'ABIERTA',
  ts_apertura TIMESTAMP NOT NULL DEFAULT now(),
  ts_cierre TIMESTAMP,
  usuario_abre BIGINT REFERENCES selemti.usuario(id),
  usuario_cierra BIGINT REFERENCES selemti.usuario(id),
  lote_salida_id BIGINT, -- lote interno generado al cierre
  meta JSONB
);
CREATE TABLE IF NOT EXISTS selemti.op_insumo (
  id BIGSERIAL PRIMARY KEY,
  op_id BIGINT NOT NULL REFERENCES selemti.op_cab(id) ON DELETE CASCADE,
  insumo_id BIGINT NOT NULL REFERENCES selemti.insumo(id),
  qty_teorica NUMERIC(14,6) NOT NULL,
  qty_real NUMERIC(14,6),
  um_id INT NOT NULL REFERENCES selemti.unidad_medida(id),
  lote_id BIGINT,              -- lote consumido
  meta JSONB
);
CREATE TABLE IF NOT EXISTS selemti.op_yield (
  op_id BIGINT PRIMARY KEY REFERENCES selemti.op_cab(id) ON DELETE CASCADE,
  cantidad_real NUMERIC(14,6) NOT NULL,
  merma_real NUMERIC(14,6) NOT NULL DEFAULT 0,
  evidencia_url TEXT,
  meta JSONB
);
CREATE INDEX IF NOT EXISTS ix_layer_insumo ON selemti.cost_layer (insumo_id, ts_in);
CREATE TABLE IF NOT EXISTS selemti.hist_cost_insumo (
  id BIGSERIAL PRIMARY KEY,
  insumo_id BIGINT NOT NULL REFERENCES selemti.insumo(id),
  fecha_efectiva DATE NOT NULL,
  costo_wac NUMERIC(14,6),
  costo_peps NUMERIC(14,6),
  costo_ueps NUMERIC(14,6),
  costo_std NUMERIC(14,6),
  algoritmo_principal TEXT DEFAULT 'WAC',
  valid_from DATE NOT NULL DEFAULT CURRENT_DATE,
  valid_to DATE,
  sys_from TIMESTAMP NOT NULL DEFAULT now(),
  sys_to TIMESTAMP
);
CREATE UNIQUE INDEX IF NOT EXISTS ux_hist_cost_insumo ON selemti.hist_cost_insumo (insumo_id, fecha_efectiva, COALESCE(valid_to,'9999-12-31'));
CREATE TABLE IF NOT EXISTS selemti.hist_cost_receta (
  id BIGSERIAL PRIMARY KEY,
  receta_version_id BIGINT NOT NULL REFERENCES selemti.receta_version(id),
  fecha_calculo DATE NOT NULL,
  costo_total NUMERIC(14,6),
  costo_porcion NUMERIC(14,6),
  algoritmo_utilizado TEXT DEFAULT 'WAC',
  valid_from DATE NOT NULL DEFAULT CURRENT_DATE,
  valid_to DATE,
  sys_from TIMESTAMP NOT NULL DEFAULT now(),
  sys_to TIMESTAMP
);
CREATE INDEX IF NOT EXISTS ix_hist_cost_receta ON selemti.hist_cost_receta (receta_version_id, fecha_calculo);
-- 10) Funciones clave (stubs seguros) -----------------------------

-- Política de selección de lote (FEFO/PEPS)
CREATE OR REPLACE FUNCTION selemti.pick_lotes(
  p_insumo_id BIGINT,
  p_sucursal_id INT,
  p_bodega_id INT,
  p_qty NUMERIC,
  p_policy selemti.consumo_policy DEFAULT 'FEFO'
) RETURNS TABLE(lote_id BIGINT, qty NUMERIC) AS $$
BEGIN
  -- FEFO: ordenar por caducidad asc;
PEPS: por ts_in asc vía cost_layer o primer lote
  IF p_policy = 'FEFO' THEN
    RETURN QUERY
      SELECT l.id, LEAST(p_qty - COALESCE(SUM(m.qty) FILTER (WHERE 1=1),0), 0)::NUMERIC
      FROM selemti.lote l
      JOIN LATERAL (
        SELECT COALESCE(SUM(CASE WHEN mi.tipo IN ('RECEPCION','COMPRA','TRASPASO_IN') THEN mi.qty
                                 WHEN mi.tipo IN ('VENTA','CONSUMO_OP','AJUSTE','TRASPASO_OUT','ANULACION') THEN -mi.qty
                            END),0) qty_disp
        FROM selemti.mov_inv mi
        WHERE mi.lote_id = l.id
      ) s ON true
      WHERE l.insumo_id = p_insumo_id
        AND l.estado='ACTIVO'
      ORDER BY l.caducidad NULLS LAST, l.id
      LIMIT 0;
-- (stub para demo;
implementar cálculo por partes)
  ELSE
    RETURN QUERY SELECT NULL::BIGINT, 0::NUMERIC LIMIT 0;
END IF;
END;
$$ LANGUAGE plpgsql;
-- Ingesta de ticket POS → Descargo inventario (con PLU y modificadores)
CREATE OR REPLACE FUNCTION selemti.ingesta_ticket(
  p_ticket_id BIGINT,
  p_sucursal_id INT,
  p_bodega_id INT,
  p_usuario_id BIGINT
) RETURNS VOID AS $$
DECLARE
  r RECORD;
v_policy selemti.consumo_policy;
BEGIN
  SELECT consumo_policy INTO v_policy
  FROM selemti.param_sucursal WHERE sucursal_id = p_sucursal_id;
FOR r IN
    SELECT ti.id as ticket_item_id, ti.plu, ti.qty, ti.precio,
           pm.tipo, pm.receta_version_id, pm.insumo_id, pm.factor_insumo
    FROM public.ticket_item ti
    LEFT JOIN LATERAL (
      SELECT * FROM selemti.pos_map
      WHERE pos_system='FLOREANT' AND plu = ti.plu
        AND (vigente_hasta IS NULL OR vigente_hasta >= ti.created) -- ajustar campo fecha POS
      ORDER BY vigente_desde DESC
      LIMIT 1
    ) pm ON true
    WHERE ti.ticket_id = p_ticket_id
  LOOP
    IF r.receta_version_id IS NOT NULL THEN
      -- Descargo por receta
      INSERT INTO selemti.mov_inv(ts,sucursal_id,bodega_id,insumo_id,lote_id,tipo,qty,um_id,costo_unit,ref_tipo,ref_id,usuario_id)
      SELECT now(), p_sucursal_id, p_bodega_id, ri.insumo_id, NULL, 'VENTA',
             (ri.cantidad * r.qty) * -1, u.id, NULL, 'TICKET', r.ticket_item_id, p_usuario_id
      FROM selemti.receta_insumo ri
      JOIN selemti.insumo i ON i.id=ri.insumo_id
      JOIN selemti.unidad_medida u ON u.id=i.um_id
      WHERE ri.receta_version_id = r.receta_version_id;
ELSIF r.insumo_id IS NOT NULL THEN
      -- Descargo directo de insumo (ej. botella PZ, sabor como insumo)
      INSERT INTO selemti.mov_inv(ts,sucursal_id,bodega_id,insumo_id,lote_id,tipo,qty,um_id,costo_unit,ref_tipo,ref_id,usuario_id)
      SELECT now(), p_sucursal_id, p_bodega_id, r.insumo_id, NULL, 'VENTA',
             (COALESCE(r.factor_insumo,1) * r.qty) * -1, i.um_id, NULL, 'TICKET', r.ticket_item_id, p_usuario_id
      FROM selemti.insumo i WHERE i.id=r.insumo_id;
ELSE
      -- Sin impacto inventario (ej. servicio)
      CONTINUE;
END IF;
END LOOP;
END;
$$ LANGUAGE plpgsql;
-- Reproceso de costos históricos (WAC baseline;
ampliable a PEPS)
CREATE OR REPLACE FUNCTION selemti.recalcular_costos_periodo(
  p_desde DATE,
  p_hasta DATE DEFAULT CURRENT_DATE
) RETURNS INTEGER AS $$
DECLARE
  v_cnt INT := 0;
BEGIN
  -- Ejemplo simple: recalcular costo WAC por insumo en rango (extensible)
  INSERT INTO selemti.hist_cost_insumo (insumo_id,fecha_efectiva,costo_wac,algoritmo_principal)
  SELECT mi.insumo_id, p_desde,
         CASE WHEN SUM(CASE WHEN mi.tipo IN ('RECEPCION','COMPRA','TRASPASO_IN') THEN (mi.costo_unit * mi.qty) ELSE 0 END) <> 0
              THEN SUM(CASE WHEN mi.tipo IN ('RECEPCION','COMPRA','TRASPASO_IN') THEN (mi.costo_unit * mi.qty) ELSE 0 END)
                   / NULLIF(SUM(CASE WHEN mi.tipo IN ('RECEPCION','COMPRA','TRASPASO_IN') THEN mi.qty ELSE 0 END),0)
              ELSE NULL END,
         'WAC'
  FROM selemti.mov_inv mi
  WHERE mi.ts::date BETWEEN p_desde AND p_hasta
  GROUP BY mi.insumo_id
  ON CONFLICT DO NOTHING;
GET DIAGNOSTICS v_cnt = ROW_COUNT;
RETURN v_cnt;
END;
$$ LANGUAGE plpgsql;
-- 11) Vistas útiles (ingeniería de menú, existencias por lote, trazabilidad)
CREATE OR REPLACE VIEW selemti.v_existencias_lote AS
SELECT
  l.id AS lote_id, l.insumo_id, i.nombre AS insumo,
  SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA','TRASPASO_IN') THEN m.qty
           WHEN m.tipo IN ('VENTA','CONSUMO_OP','AJUSTE','TRASPASO_OUT','ANULACION') THEN -m.qty
      END) AS qty_disponible,
  l.caducidad, l.estado
FROM selemti.lote l
LEFT JOIN selemti.mov_inv m ON m.lote_id = l.id
JOIN selemti.insumo i ON i.id = l.insumo_id
GROUP BY l.id,i.nombre;
CREATE OR REPLACE VIEW selemti.v_trazabilidad_ticket AS
SELECT
  m.ref_id AS ticket_item_id, m.insumo_id, i.nombre AS insumo, m.qty, m.ts, m.lote_id
FROM selemti.mov_inv m
JOIN selemti.insumo i ON i.id=m.insumo_id
WHERE m.ref_tipo='TICKET';
-- 12) Roles y permisos sugeridos
DO $$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname='selemti_user') THEN
    CREATE ROLE selemti_user LOGIN;
  END IF;
END$$;
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA selemti TO selemti_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA selemti GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO selemti_user;
-- =====================================================================
-- Fin deploy_selemti_full.sql
-- Notas:
--  * La función pick_lotes es un stub: puedes implementar el reparto por FEFO/PEPS.
--  * ingesta_ticket asume public.ticket_item con campos (plu, qty, created, ticket_id).
--  * Completa FKs a 'public' con NOT VALID si quieres validación suave.
--  * Agrega índices a demanda según volumen.
-- =====================================================================
-- END 000. deploy_selemti_full.sql

-- BEGIN 000. Query Despliegue cortes 05-09-2025.sql
-- 0) Auditoría mínima ---------------------------------------------------------
CREATE TABLE IF NOT EXISTS selemti.auditoria(
  id         BIGSERIAL PRIMARY KEY,
  quien      INTEGER,
  que        TEXT NOT NULL,
  payload    JSONB,
  creado_en  TIMESTAMPTZ NOT NULL DEFAULT now()
);
-- 1) Sesiones de cajón --------------------------------------------------------
CREATE TABLE IF NOT EXISTS selemti.sesion_cajon(
  id                 BIGSERIAL PRIMARY KEY,
  sucursal           TEXT,
  terminal_id        INTEGER NOT NULL,
  terminal_nombre    TEXT,
  cajero_usuario_id  INTEGER NOT NULL,
  apertura_ts        TIMESTAMPTZ NOT NULL DEFAULT now(),
  cierre_ts          TIMESTAMPTZ,
  estatus            TEXT NOT NULL DEFAULT 'ACTIVA' CHECK(estatus IN ('ACTIVA','LISTO_PARA_CORTE','CERRADA')),
  opening_float      NUMERIC(12,2) NOT NULL DEFAULT 0,
  closing_float      NUMERIC(12,2),
  dah_evento_id      INTEGER,
  UNIQUE(terminal_id, cajero_usuario_id, apertura_ts)
);
CREATE INDEX IF NOT EXISTS ix_sesion_cajon_terminal ON selemti.sesion_cajon(terminal_id, apertura_ts);
CREATE INDEX IF NOT EXISTS ix_sesion_cajon_cajero   ON selemti.sesion_cajon(cajero_usuario_id, apertura_ts);
-- 2) Precorte -----------------------------------------------------------------
CREATE TABLE IF NOT EXISTS selemti.precorte(
  id                 BIGSERIAL PRIMARY KEY,
  sesion_id          BIGINT NOT NULL REFERENCES selemti.sesion_cajon(id) ON DELETE CASCADE,
  declarado_efectivo NUMERIC(12,2) NOT NULL DEFAULT 0,
  declarado_otros    NUMERIC(12,2) NOT NULL DEFAULT 0,
  estatus            TEXT NOT NULL DEFAULT 'PENDIENTE' CHECK(estatus IN ('PENDIENTE','ENVIADO','APROBADO','RECHAZADO')),
  creado_en          TIMESTAMPTZ NOT NULL DEFAULT now(),
  creado_por         INTEGER,
  ip_cliente         INET
);
CREATE OR REPLACE FUNCTION selemti.fn_precorte_efectivo_bi()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  NEW.subtotal := COALESCE(NEW.denominacion,0) * COALESCE(NEW.cantidad,0);
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_precorte_efectivo_bi ON selemti.precorte_efectivo;
CREATE TABLE IF NOT EXISTS selemti.precorte_otros(
  id            BIGSERIAL PRIMARY KEY,
  precorte_id   BIGINT NOT NULL REFERENCES selemti.precorte(id) ON DELETE CASCADE,
  tipo          TEXT NOT NULL, -- 'CREDITO'|'DEBITO'|'TRANSFER'|'GIFT_CERT'|'CUSTOM:xxx'
  monto         NUMERIC(12,2) NOT NULL DEFAULT 0,
  referencia    TEXT,
  evidencia_url TEXT,
  notas         TEXT,
  creado_en     TIMESTAMPTZ NOT NULL DEFAULT now()
);
CREATE INDEX IF NOT EXISTS ix_precorte_otros_precorte ON selemti.precorte_otros(precorte_id);
-- 3) Postcorte ----------------------------------------------------------------
CREATE TABLE IF NOT EXISTS selemti.postcorte(
  id                         BIGSERIAL PRIMARY KEY,
  sesion_id                  BIGINT NOT NULL REFERENCES selemti.sesion_cajon(id) ON DELETE CASCADE,
  sistema_efectivo_esperado  NUMERIC(12,2) NOT NULL DEFAULT 0,
  declarado_efectivo         NUMERIC(12,2) NOT NULL DEFAULT 0,
  diferencia_efectivo        NUMERIC(12,2) NOT NULL DEFAULT 0,
  veredicto_efectivo         TEXT NOT NULL DEFAULT 'CUADRA' CHECK(veredicto_efectivo IN ('CUADRA','A_FAVOR','EN_CONTRA')),
  sistema_tarjetas           NUMERIC(12,2) NOT NULL DEFAULT 0,
  declarado_tarjetas         NUMERIC(12,2) NOT NULL DEFAULT 0,
  diferencia_tarjetas        NUMERIC(12,2) NOT NULL DEFAULT 0,
  veredicto_tarjetas         TEXT NOT NULL DEFAULT 'CUADRA' CHECK(veredicto_tarjetas IN ('CUADRA','A_FAVOR','EN_CONTRA')),
  creado_en                  TIMESTAMPTZ NOT NULL DEFAULT now(),
  creado_por                 INTEGER,
  notas                      TEXT
);
CREATE OR REPLACE FUNCTION selemti.fn_slug(in_text TEXT)
RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE s TEXT := lower(coalesce(in_text,''));
BEGIN
  s := translate(s, 'ÁÉÍÓÚÜÑáéíóúüñ', 'AEIOUUNaeiouun');
s := regexp_replace(s, '[^a-z0-9]+', '-', 'g');
s := regexp_replace(s, '(^-|-$)', '', 'g');
IF s = '' THEN RETURN NULL;
END IF;
RETURN s;
END $$;
CREATE OR REPLACE FUNCTION selemti.fn_normalizar_forma_pago(
  p_payment_type TEXT,
  p_transaction_type TEXT,
  p_payment_sub_type TEXT,
  p_custom_name TEXT
) RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE pt TEXT := upper(coalesce(p_payment_type,''));
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN ('CASH','CREDIT','DEBIT','TRANSFER') THEN
    RETURN pt;
ELSIF pt = 'CUSTOM_PAYMENT' THEN
    IF cn IS NOT NULL THEN RETURN 'CUSTOM:'||cn;
ELSE RETURN 'CUSTOM';
END IF;
ELSIF pt IN ('REFUND','PAY_OUT','CASH_DROP') THEN
    RETURN pt;
-- egresos/ajustes estandarizados
  ELSE
    RETURN pt;
END IF;
END $$;
CREATE OR REPLACE FUNCTION selemti.fn_tx_after_insert_forma_pago()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_codigo TEXT;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
    NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name
  );
INSERT INTO selemti.formas_pago(
    codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref
  )
  VALUES (
    v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref
  )
  ON CONFLICT DO NOTHING;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_tx_ai_forma_pago ON public.transactions;
INSERT INTO selemti.formas_pago(codigo, payment_type) VALUES
  ('CASH','CASH'),('CREDIT','CREDIT'),('DEBIT','DEBIT'),('TRANSFER','TRANSFER'),
  ('REFUND','REFUND'),('PAY_OUT','PAY_OUT'),('CASH_DROP','CASH_DROP')
ON CONFLICT DO NOTHING;
-- 5) Hooks con Floreant (terminal + asignaciones) -----------------------------
-- 1) Crear columna solo si no existe (compatible con versiones viejas)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1
    FROM information_schema.columns
    WHERE table_schema = 'selemti'
      AND table_name   = 'sesion_cajon'
      AND column_name  = 'skipped_precorte'
  ) THEN
    ALTER TABLE selemti.sesion_cajon
      ADD COLUMN skipped_precorte boolean DEFAULT false NOT NULL;
    COMMENT ON COLUMN selemti.sesion_cajon.skipped_precorte
      IS 'TRUE si se cerró la sesión/corte sin tener un precorte (conteo) previo.';
  END IF;
END$$;
CREATE INDEX IF NOT EXISTS idx_precorte_sesion_id
  ON selemti.precorte (sesion_id);
ALTER TABLE selemti.postcorte
ADD COLUMN validado boolean DEFAULT FALSE;
ALTER TABLE selemti.postcorte
ADD COLUMN validado_en timestamp without time zone;
ALTER TABLE selemti.postcorte
ADD COLUMN validado_por integer;
ALTER TABLE selemti.postcorte
ADD CONSTRAINT uq_postcorte_sesion_id UNIQUE (sesion_id);
DO $$
BEGIN
  ALTER TABLE selemti.precorte ADD COLUMN notas text;
EXCEPTION WHEN duplicate_column THEN
  -- ya existía, no hacer nada
  NULL;
END$$;
CREATE OR REPLACE FUNCTION selemti.fn_terminal_bu_snapshot_cierre()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_has_old boolean := (OLD.assigned_user IS NOT NULL);
DECLARE v_has_new boolean := (NEW.assigned_user IS NOT NULL);
BEGIN
  IF (v_has_old AND NOT v_has_new) THEN
    UPDATE selemti.sesion_cajon
      SET cierre_ts = now(),
          estatus   = 'LISTO_PARA_CORTE',
          closing_float = COALESCE(OLD.current_balance,0)
    WHERE terminal_id = OLD.id
      AND cajero_usuario_id = OLD.assigned_user
      AND cierre_ts IS NULL;
END IF;
IF (NOT v_has_old AND v_has_new) THEN
    INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id
    )
    VALUES(
      NEW.id, COALESCE(NEW.name, 'Terminal '||NEW.id), COALESCE(NEW.location,''),
      NEW.assigned_user, now(), 'ACTIVA', COALESCE(NEW.current_balance,0), NULL
    );
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_terminal_bu_snapshot ON public.terminal;
-- Asegurar índice útil para la historia de asignaciones (columnas reales)
CREATE INDEX IF NOT EXISTS idx_drawer_assigned_history_user_time
  ON public.drawer_assigned_history (a_user, "time");
CREATE OR REPLACE FUNCTION selemti.fn_dah_after_insert()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_term RECORD;
BEGIN
  IF NEW.operation = 'ASIGNAR' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
IF v_term IS NULL THEN
      INSERT INTO selemti.auditoria(quien,que,payload)
      VALUES(NEW.a_user,'NO_SE_PUDO_RESOLVER_TERMINAL',
             jsonb_build_object('dah_id',NEW.id,'operation',NEW.operation,'time',NEW."time"));
RETURN NEW;
END IF;
INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id
    ) VALUES (
      v_term.id, COALESCE(v_term.name,'Terminal '||v_term.id), COALESCE(v_term.location,''),
      NEW.a_user, COALESCE(NEW."time", now()), 'ACTIVA', COALESCE(v_term.current_balance,0), NEW.id
    );
ELSIF NEW.operation = 'CERRAR' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
UPDATE selemti.sesion_cajon
       SET cierre_ts     = COALESCE(NEW."time", now()),
           estatus       = 'LISTO_PARA_CORTE',
           closing_float = COALESCE(v_term.current_balance,0),
           dah_evento_id = COALESCE(dah_evento_id, NEW.id)
     WHERE terminal_id = COALESCE(v_term.id, terminal_id)
       AND cajero_usuario_id = NEW.a_user
       AND cierre_ts IS NULL;
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_dah_ai ON public.drawer_assigned_history;
CREATE OR REPLACE FUNCTION selemti.fn_reparar_sesion_apertura(p_terminal_id INT, p_usuario INT)
RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE v_term RECORD;
BEGIN
  IF EXISTS (
    SELECT 1 FROM selemti.sesion_cajon
    WHERE terminal_id=p_terminal_id AND cajero_usuario_id=p_usuario AND cierre_ts IS NULL
  ) THEN
    RETURN 'YA_EXISTE_SESION_ABIERTA';
END IF;
SELECT * INTO v_term FROM public.terminal WHERE id=p_terminal_id;
IF v_term IS NULL THEN RETURN 'TERMINAL_NO_ENCONTRADA';
END IF;
INSERT INTO selemti.sesion_cajon(
    terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
    apertura_ts, estatus, opening_float
  ) VALUES (
    p_terminal_id, COALESCE(v_term.name,'Terminal '||p_terminal_id), COALESCE(v_term.location,''),
    p_usuario, now(), 'ACTIVA', COALESCE(v_term.current_balance,0)
  );
RETURN 'CREADA';
END $$;
-- 6) Vistas operativas por sesión --------------------------------------------

-- 6.1 Ventas válidas por forma de pago (solo cobros: transaction_type='CREDIT', no void)
CREATE OR REPLACE VIEW selemti.vw_sesion_ventas AS
WITH base AS (
  SELECT
    s.id AS sesion_id,
    t.amount::numeric AS monto,
    COALESCE( fp.codigo,
      selemti.fn_normalizar_forma_pago(t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name)
    ) AS codigo_fp
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   AND t.user_id           = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
  WHERE COALESCE(t.voided,false)=false
    AND t.transaction_type = 'CREDIT'
)
SELECT sesion_id, codigo_fp, SUM(monto)::numeric(12,2) AS monto
FROM base
GROUP BY sesion_id, codigo_fp;
-- 6.2 Descuentos reales (ticket + ítem) en la ventana de la sesión
CREATE OR REPLACE VIEW selemti.vw_sesion_descuentos AS
WITH tk_win AS (
  SELECT s.id AS sesion_id, tk.id AS ticket_id
  FROM selemti.sesion_cajon s
  JOIN public.ticket tk
    ON tk.terminal_id = s.terminal_id
   AND tk.owner_id    = s.cajero_usuario_id
   AND tk.create_date >= s.apertura_ts
   AND tk.create_date <  COALESCE(s.cierre_ts, now())
),
td_agg AS ( -- descuentos al ticket (columna 'value')
  SELECT td.ticket_id, SUM(COALESCE(td.value,0))::numeric AS sum_td
  FROM public.ticket_discount td
  GROUP BY td.ticket_id
),
tid_agg AS ( -- descuentos por ítem (columna 'amount')
  SELECT ti.ticket_id, SUM(COALESCE(tid.amount,0))::numeric AS sum_tid
  FROM public.ticket_item_discount tid
  JOIN public.ticket_item ti ON ti.id = tid.ticket_itemid
  GROUP BY ti.ticket_id
)
SELECT tw.sesion_id,
       COALESCE(SUM(td_agg.sum_td),0)::numeric + COALESCE(SUM(tid_agg.sum_tid),0)::numeric AS descuentos
FROM tk_win tw
LEFT JOIN td_agg  ON td_agg.ticket_id  = tw.ticket_id
LEFT JOIN tid_agg ON tid_agg.ticket_id = tw.ticket_id
GROUP BY tw.sesion_id;
-- 6.3 Retiros / Bleed (egresos de caja): PAY_OUT + CASH_DROP
CREATE OR REPLACE VIEW selemti.vw_sesion_retiros AS
WITH tx AS (
  SELECT
    s.id AS sesion_id,
    COALESCE( fp.codigo,
      selemti.fn_normalizar_forma_pago(t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name)
    ) AS codigo_fp,
    t.amount::numeric AS monto
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   AND t.user_id           = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
)
SELECT sesion_id,
       SUM(CASE WHEN codigo_fp IN ('PAY_OUT','CASH_DROP') THEN monto ELSE 0 END)::numeric(12,2) AS retiros
FROM tx
GROUP BY sesion_id;
-- 6.4 Reembolsos en EFECTIVO (REFUND cuyo sub-tipo sea CASH)
CREATE OR REPLACE VIEW selemti.vw_sesion_reembolsos_efectivo AS
WITH tx AS (
  SELECT
    s.id AS sesion_id,
    t.payment_sub_type,
    COALESCE( fp.codigo,
      selemti.fn_normalizar_forma_pago(t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name)
    ) AS codigo_fp,
    t.amount::numeric AS monto
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   AND t.user_id           = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
)
SELECT sesion_id,
       SUM(CASE WHEN codigo_fp='REFUND' AND UPPER(COALESCE(payment_sub_type,''))='CASH'
                THEN monto ELSE 0 END)::numeric(12,2) AS reembolsos_efectivo
FROM tx
GROUP BY sesion_id;
-- 6.5 DPR por sesión (oficial Floreant, si cae en la ventana)
CREATE OR REPLACE VIEW selemti.vw_sesion_dpr AS
WITH s AS (
  SELECT id, terminal_id, cajero_usuario_id, apertura_ts, COALESCE(cierre_ts, now()) AS fin_ts
  FROM selemti.sesion_cajon
)
SELECT
  s.id AS sesion_id,
  dpr.*
FROM s
JOIN public.drawer_pull_report dpr
  ON dpr.terminal_id = s.terminal_id
 AND dpr.user_id     = s.cajero_usuario_id
 AND dpr.report_time >= s.apertura_ts
 AND dpr.report_time <  s.fin_ts;
-- 7) Vista final: Conciliación por sesión -------------------------------------
CREATE OR REPLACE VIEW selemti.vw_conciliacion_sesion AS
WITH sys AS (
  SELECT
    s.id AS sesion_id,
    s.opening_float,
    SUM(CASE WHEN v.codigo_fp='CASH'                 THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_cash,
    SUM(CASE WHEN v.codigo_fp IN ('CREDIT','CREDIT_CARD') THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_credito,
    SUM(CASE WHEN v.codigo_fp IN ('DEBIT','DEBIT_CARD')   THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_debito,
    SUM(CASE WHEN v.codigo_fp LIKE 'CUSTOM:%'        THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_custom,
    SUM(CASE WHEN v.codigo_fp='TRANSFER'             THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_transfer,
    SUM(CASE WHEN v.codigo_fp='GIFT_CERT'            THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_gift
  FROM selemti.sesion_cajon s
  LEFT JOIN selemti.vw_sesion_ventas v ON v.sesion_id = s.id
  GROUP BY s.id, s.opening_float
),
re AS (
  SELECT sesion_id, retiros FROM selemti.vw_sesion_retiros
),
cr AS (
  SELECT sesion_id, reembolsos_efectivo FROM selemti.vw_sesion_reembolsos_efectivo
),
ds AS (
  SELECT sesion_id, descuentos FROM selemti.vw_sesion_descuentos
),
decl_cash AS ( -- último precorte por sesión (efectivo contado)
  SELECT p.sesion_id, SUM(pe.subtotal)::numeric(12,2) AS declarado_efectivo
  FROM selemti.precorte p
  LEFT JOIN selemti.precorte_efectivo pe ON pe.precorte_id = p.id
  GROUP BY p.sesion_id
),
decl_otros AS ( -- declarados no-efectivo por tipo
  SELECT
    p.sesion_id,
    SUM(CASE WHEN po.tipo='CREDITO'            THEN po.monto ELSE 0 END)::numeric(12,2) AS decl_credito,
    SUM(CASE WHEN po.tipo='DEBITO'             THEN po.monto ELSE 0 END)::numeric(12,2) AS decl_debito,
    SUM(CASE WHEN po.tipo IN ('TRANSFER')      THEN po.monto ELSE 0 END)::numeric(12,2) AS decl_transfer,
    SUM(CASE WHEN po.tipo LIKE 'CUSTOM:%'      THEN po.monto ELSE 0 END)::numeric(12,2) AS decl_custom,
    SUM(CASE WHEN po.tipo='GIFT_CERT'          THEN po.monto ELSE 0 END)::numeric(12,2) AS decl_gift
  FROM selemti.precorte p
  LEFT JOIN selemti.precorte_otros po ON po.precorte_id = p.id
  GROUP BY p.sesion_id
),
eff AS (
  SELECT
    sys.sesion_id,
    sys.opening_float,
    COALESCE(sys.sys_cash,0)           AS cash_in,
    COALESCE(re.retiros,0)             AS cash_out,
    COALESCE(cr.reembolsos_efectivo,0) AS cash_refund,
    (sys.opening_float + COALESCE(sys.sys_cash,0) - COALESCE(re.retiros,0) - COALESCE(cr.reembolsos_efectivo,0))::numeric(12,2)
      AS sistema_efectivo_esperado
  FROM sys
  LEFT JOIN re ON re.sesion_id = sys.sesion_id
  LEFT JOIN cr ON cr.sesion_id = sys.sesion_id
),
tc AS (
  SELECT
    sys.sesion_id,
    (COALESCE(sys.sys_credito,0)+COALESCE(sys.sys_debito,0)+COALESCE(sys.sys_transfer,0)+COALESCE(sys.sys_custom,0)+COALESCE(sys.sys_gift,0))::numeric(12,2)
      AS sistema_no_efectivo
  FROM sys
)
SELECT
  sys.sesion_id,

  -- EFECTIVO
  eff.sistema_efectivo_esperado,
  COALESCE(dc.declarado_efectivo,0)::numeric(12,2) AS declarado_efectivo,
  (COALESCE(dc.declarado_efectivo,0) - eff.sistema_efectivo_esperado)::numeric(12,2) AS diferencia_efectivo,
  CASE
    WHEN COALESCE(dc.declarado_efectivo,0) = eff.sistema_efectivo_esperado THEN 'CUADRA'
    WHEN COALESCE(dc.declarado_efectivo,0) > eff.sistema_efectivo_esperado THEN 'A_FAVOR'
    ELSE 'EN_CONTRA'
  END AS veredicto_efectivo,

  -- SISTEMA – NO EFECTIVO (desglose) y DECLARADOS
  sys.sys_credito, sys.sys_debito, sys.sys_transfer, sys.sys_custom, sys.sys_gift,
  dotros.decl_credito, dotros.decl_debito, dotros.decl_transfer, dotros.decl_custom, dotros.decl_gift,
  tc.sistema_no_efectivo,

  -- Descuentos calculados (BD) y DPR oficial (si existe en ventana)
  ds.descuentos AS total_descuentos,
  dpr.begin_cash, dpr.cash_receipt_amount, dpr.credit_card_receipt_amount, dpr.debit_card_receipt_amount,
  dpr.pay_out_amount, dpr.drawer_bleed_amount, dpr.refund_amount, dpr.totaldiscountamount, dpr.totalvoid,
  dpr.drawer_accountable, dpr.cash_to_deposit, dpr.variance, dpr.report_time

FROM sys
LEFT JOIN eff        ON eff.sesion_id = sys.sesion_id
LEFT JOIN decl_cash  dc  ON dc.sesion_id  = sys.sesion_id
LEFT JOIN decl_otros dotros ON dotros.sesion_id = sys.sesion_id
LEFT JOIN tc         ON tc.sesion_id     = sys.sesion_id
LEFT JOIN ds         ON ds.sesion_id     = sys.sesion_id
LEFT JOIN selemti.vw_sesion_dpr dpr ON dpr.sesion_id = sys.sesion_id
ORDER BY sys.sesion_id DESC;
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1
    FROM information_schema.columns
    WHERE table_schema = 'selemti'
      AND table_name   = 'sesion_cajon'
      AND column_name  = 'skipped_precorte'
  ) THEN
    ALTER TABLE selemti.sesion_cajon
      ADD COLUMN skipped_precorte boolean NOT NULL DEFAULT FALSE;
  END IF;
END $$;
CREATE INDEX IF NOT EXISTS precorte_sesion_id_idx
-- END 000. Query Despliegue cortes 05-09-2025.sql

-- BEGIN 000. Query_corte_04_09_2025_V2.sql
-- ============================================================================
-- SELEMTI v2.0  (PostgreSQL 9.5)
-- Auxiliar de Caja, Precorte, Conciliación con integración a Floreant POS
-- ============================================================================
-- Supone esquema base de Floreant en "public" con:
--   - public.drawer_assigned_history(id, time, operation, a_user)
--   - public.terminal(id, assigned_user, current_balance, name, location, has_cash_drawer, in_use, active, floor_id)
--   - public.transactions(id, terminal_id, user_id, transaction_time, payment_type, transaction_type, payment_sub_type,
--                         custom_payment_name, custom_payment_ref, amount, voided)
--   - public.ticket(id, terminal_id, owner_id, create_date, closing_date, status, total_price)
--   - public.drawer_pull_report(...)  -- resumen de corte POS (opcional)
-- ============================================================================
ALTER TABLE public.drawer_pull_report_voidtickets
ADD COLUMN id SERIAL PRIMARY KEY;
INSERT INTO public.payout_reasons(id, reason_text) VALUES
(100,'Compra de insumos menor'),(200,'Gastos operativos'),(300,'Reposición de caja')
ON CONFLICT DO NOTHING;
INSERT INTO public.void_reasons(id, reason_text) VALUES
(10,'Error de captura'),(20,'Pago mal tipificado'),(30,'Cliente cancela')
ON CONFLICT DO NOTHING;
CREATE OR REPLACE FUNCTION selemti.fn_precorte_efectivo_bi()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  NEW.subtotal := COALESCE(NEW.denominacion,0) * COALESCE(NEW.cantidad,0);
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_precorte_efectivo_bi ON selemti.precorte_efectivo;
CREATE OR REPLACE FUNCTION selemti.fn_slug(in_text TEXT)
RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE s TEXT := lower(coalesce(in_text,''));
BEGIN
  s := translate(s, 'ÁÉÍÓÚÜÑáéíóúüñ', 'AEIOUUNaeiouun');
s := regexp_replace(s, '[^a-z0-9]+', '-', 'g');
s := regexp_replace(s, '(^-|-$)', '', 'g');
IF s = '' THEN RETURN NULL;
END IF;
RETURN s;
END $$;
CREATE OR REPLACE FUNCTION selemti.fn_normalizar_forma_pago(
  p_payment_type TEXT, p_transaction_type TEXT, p_payment_sub_type TEXT, p_custom_name TEXT
) RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE pt TEXT := upper(coalesce(p_payment_type,''));
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN ('CASH','CREDIT','DEBIT','TRANSFER') THEN
    RETURN pt;
ELSIF pt = 'CUSTOM_PAYMENT' THEN
    IF cn IS NOT NULL THEN RETURN 'CUSTOM:'||cn;
ELSE RETURN 'CUSTOM';
END IF;
ELSE
    RETURN pt;
END IF;
END $$;
-- Alimentar catálogo con cada transacción nueva
CREATE OR REPLACE FUNCTION selemti.fn_tx_after_insert_forma_pago()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_codigo TEXT;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
                NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name);
INSERT INTO selemti.formas_pago(codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref)
  VALUES (v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref)
  ON CONFLICT DO NOTHING;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_tx_ai_forma_pago ON public.transactions;
-- Semilla básica
INSERT INTO selemti.formas_pago(codigo, payment_type)
VALUES ('CASH','CASH'),('CREDIT','CREDIT'),('DEBIT','DEBIT'),('TRANSFER','TRANSFER')
ON CONFLICT DO NOTHING;
-- =======================================
-- 5) Apertura/cierre automáticos desde Floreant
-- =======================================

-- 5.1 BEFORE UPDATE en public.terminal para snapshot de cierre/apertura
CREATE OR REPLACE FUNCTION selemti.fn_terminal_bu_snapshot_cierre()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_sesion_id BIGINT;
BEGIN
  -- CIERRE: si assigned_user pasa de NOT NULL -> NULL, cerramos sesión previa
  IF (OLD.assigned_user IS NOT NULL AND NEW.assigned_user IS NULL) THEN
    UPDATE selemti.sesion_cajon
      SET cierre_ts = now(),
          estatus = 'LISTO_PARA_CORTE',
          closing_float = COALESCE(OLD.current_balance,0)
    WHERE terminal_id = OLD.id
      AND cajero_usuario_id = OLD.assigned_user
      AND cierre_ts IS NULL;
PERFORM selemti.auditoria.id FROM selemti.auditoria
    WHERE false;
-- no-op para compilar
  END IF;
-- APERTURA: si assigned_user pasa de NULL -> NOT NULL, abrimos nueva sesión
  IF (OLD.assigned_user IS NULL AND NEW.assigned_user IS NOT NULL) THEN
    INSERT INTO selemti.sesion_cajon(terminal_id, terminal_nombre, sucursal,
                                     cajero_usuario_id, apertura_ts, estatus, opening_float, dah_evento_id)
    VALUES(NEW.id, COALESCE(NEW.name, 'Terminal '||NEW.id), COALESCE(NEW.location,''),
           NEW.assigned_user, now(), 'ACTIVA', COALESCE(NEW.current_balance,0), NULL);
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_terminal_bu_snapshot ON public.terminal;
-- 5.2 AFTER INSERT en drawer_assigned_history para registrar apertura/cierre con rastreabilidad
-- operation = 'ASIGNAR' abre sesión;
'CERRAR' marca cierre con closing_float (de terminal)
CREATE OR REPLACE FUNCTION selemti.fn_dah_after_insert()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_term RECORD;
BEGIN
  IF NEW.operation = 'ASIGNAR' THEN
    SELECT * INTO v_term FROM public.terminal WHERE assigned_user = NEW.a_user ORDER BY id LIMIT 1;
IF v_term IS NULL THEN
      INSERT INTO selemti.auditoria(quien,que,payload)
      VALUES(NEW.a_user,'NO_SE_PUDO_RESOLVER_TERMINAL', jsonb_build_object('dah_id',NEW.id,'operation',NEW.operation,'time',NEW.time));
RETURN NEW;
END IF;
INSERT INTO selemti.sesion_cajon(terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
                                     apertura_ts, estatus, opening_float, dah_evento_id)
    VALUES (v_term.id, COALESCE(v_term.name,'Terminal '||v_term.id), COALESCE(v_term.location,''),
            NEW.a_user, COALESCE(NEW.time, now()), 'ACTIVA', COALESCE(v_term.current_balance,0), NEW.id);
ELSIF NEW.operation = 'CERRAR' THEN
    SELECT * INTO v_term FROM public.terminal WHERE assigned_user = NEW.a_user ORDER BY id LIMIT 1;
UPDATE selemti.sesion_cajon
      SET cierre_ts     = COALESCE(NEW.time, now()),
          estatus       = 'LISTO_PARA_CORTE',
          closing_float = COALESCE(v_term.current_balance,0),
          dah_evento_id = COALESCE(dah_evento_id, NEW.id)
    WHERE terminal_id = COALESCE(v_term.id, terminal_id)
      AND cajero_usuario_id = NEW.a_user
      AND cierre_ts IS NULL;
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_dah_ai ON public.drawer_assigned_history;
-- Reparador manual de apertura (por si no se generó)
CREATE OR REPLACE FUNCTION selemti.fn_reparar_sesion_apertura(p_terminal_id INT, p_usuario INT)
RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE v_term RECORD;
BEGIN
  IF EXISTS (SELECT 1 FROM selemti.sesion_cajon
             WHERE terminal_id=p_terminal_id AND cajero_usuario_id=p_usuario AND cierre_ts IS NULL) THEN
    RETURN 'YA_EXISTE_SESION_ABIERTA';
END IF;
SELECT * INTO v_term FROM public.terminal WHERE id=p_terminal_id;
IF v_term IS NULL THEN RETURN 'TERMINAL_NO_ENCONTRADA';
END IF;
INSERT INTO selemti.sesion_cajon(terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
                                   apertura_ts, estatus, opening_float)
  VALUES (p_terminal_id, COALESCE(v_term.name,'Terminal '||p_terminal_id), COALESCE(v_term.location,''),
          p_usuario, now(), 'ACTIVA', COALESCE(v_term.current_balance,0));
RETURN 'CREADA';
END $$;
-- =======================================
-- 6) Vistas operativas por sesión
-- =======================================

-- 6.1 Ventas normalizadas por forma de pago
CREATE OR REPLACE VIEW selemti.vw_sesion_ventas AS
WITH base AS (
  SELECT
    s.id AS sesion_id,
    t.amount::numeric AS monto,
    COALESCE(
      fp.codigo,
      selemti.fn_normalizar_forma_pago(t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name)
    ) AS codigo_fp
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   AND t.user_id           = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
)
SELECT sesion_id, codigo_fp, SUM(monto) AS monto
FROM base
GROUP BY sesion_id, codigo_fp;
-- 6.2 Descuentos (si no existen a nivel item, dejamos 0)
CREATE OR REPLACE VIEW selemti.vw_sesion_descuentos AS
SELECT s.id AS sesion_id, 0::numeric AS descuentos
FROM selemti.sesion_cajon s;
-- 6.3 Anulaciones / Refund (ticket.status)
CREATE OR REPLACE VIEW selemti.vw_sesion_anulaciones AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE WHEN tk.status IN ('VOID','REFUND') THEN tk.total_price ELSE 0 END),0)::numeric AS total_anulado
FROM selemti.sesion_cajon s
LEFT JOIN public.ticket tk
  ON tk.closing_date >= s.apertura_ts
 AND tk.closing_date <  COALESCE(s.cierre_ts, now())
 AND tk.terminal_id   = s.terminal_id
 AND tk.owner_id      = s.cajero_usuario_id
GROUP BY s.id;
-- 6.4 Retiros / Egresos (transactions.transaction_type)
CREATE OR REPLACE VIEW selemti.vw_sesion_retiros AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE WHEN t.transaction_type IN ('PAYOUT','EXPENSE') THEN t.amount::numeric ELSE 0 END),0) AS retiros
FROM selemti.sesion_cajon s
JOIN public.transactions t
  ON t.transaction_time >= s.apertura_ts
 AND t.transaction_time <  COALESCE(s.cierre_ts, now())
 AND t.terminal_id       = s.terminal_id
 AND t.user_id           = s.cajero_usuario_id
GROUP BY s.id;
-- 6.5 Reembolsos en EFECTIVO (heurística)
CREATE OR REPLACE VIEW selemti.vw_sesion_reembolsos_efectivo AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE
         WHEN (t.transaction_type IN ('REFUND','RETURN') OR COALESCE(t.voided,false)=true)
          AND (t.payment_type = 'CASH' OR t.transaction_type = 'CASH')
         THEN t.amount::numeric ELSE 0 END),0) AS reembolsos_efectivo
FROM selemti.sesion_cajon s
JOIN public.transactions t
  ON t.transaction_time >= s.apertura_ts
 AND t.transaction_time <  COALESCE(s.cierre_ts, now())
 AND t.terminal_id       = s.terminal_id
 AND t.user_id           = s.cajero_usuario_id
GROUP BY s.id;
-- 6.6 (OPCIONAL) Resumen “tira” de Floreant: tomar el ÚLTIMO drawer_pull_report de la ventana
--     Si no hay datos en drawer_pull_report, estos campos quedarán NULL.
--     Columnas confirmadas en el dump de Floreant. :contentReference[oaicite:2]{index=2}
CREATE OR REPLACE VIEW selemti.vw_sesion_dpr AS
WITH ult AS (
  SELECT s.id AS sesion_id, dpr.*
  FROM selemti.sesion_cajon s
  JOIN LATERAL (
    SELECT *
    FROM public.drawer_pull_report r
    WHERE r.terminal_id = s.terminal_id
      AND r.user_id     = s.cajero_usuario_id
      AND r.report_time >= s.apertura_ts
      AND r.report_time <  COALESCE(s.cierre_ts, now())
    ORDER BY r.report_time DESC
    LIMIT 1
  ) dpr ON true
)
SELECT
  sesion_id,
  begin_cash::numeric(12,2)     AS dpr_begin_cash,
  cash_receipt_amount::numeric  AS dpr_cash_receipts,
  credit_card_receipt_amount::numeric AS dpr_credit_amount,
  debit_card_receipt_amount::numeric  AS dpr_debit_amount,
  pay_out_amount::numeric       AS dpr_payout,
  drawer_bleed_amount::numeric  AS dpr_bleed,
  refund_amount::numeric        AS dpr_refunds,
  variance::numeric             AS dpr_variance,
  totalvoid::numeric            AS dpr_total_void,
  totaldiscountamount::numeric  AS dpr_total_discount
FROM ult;
-- 6.7 Vista final de conciliación
CREATE OR REPLACE VIEW selemti.vw_conciliacion_sesion AS
WITH ventas AS (
  SELECT
    sesion_id,
    SUM(CASE WHEN codigo_fp = 'CASH' THEN monto ELSE 0 END) AS ventas_efectivo,
    SUM(CASE WHEN codigo_fp IN ('CREDIT','DEBIT','TRANSFER') OR codigo_fp LIKE 'CUSTOM:%'
             THEN monto ELSE 0 END) AS ventas_no_efectivo
  FROM selemti.vw_sesion_ventas
  GROUP BY sesion_id
),
decl AS (
  SELECT
    p.sesion_id,
    COALESCE(MAX(p.declarado_efectivo),0)::numeric AS precorte_efectivo,
    COALESCE(SUM(CASE WHEN o.tipo='CREDITO'  THEN o.monto ELSE 0 END),0)::numeric AS decl_tc,
    COALESCE(SUM(CASE WHEN o.tipo='DEBITO'   THEN o.monto ELSE 0 END),0)::numeric AS decl_td,
    COALESCE(SUM(CASE WHEN o.tipo='TRANSFER' THEN o.monto ELSE 0 END),0)::numeric AS decl_transfer
  FROM selemti.precorte p
  LEFT JOIN selemti.precorte_otros o ON o.precorte_id = p.id
  GROUP BY p.sesion_id
)
SELECT
  s.id AS sesion_id,
  s.terminal_id, s.terminal_nombre, s.sucursal,
  s.cajero_usuario_id, s.apertura_ts, s.cierre_ts, s.estatus,
  -- Sistema
  COALESCE(s.opening_float,0) AS opening_float,
  COALESCE(v.ventas_efectivo,0)      AS sistema_efectivo,
  COALESCE(v.ventas_no_efectivo,0)   AS sistema_no_efectivo,
  COALESCE(dsc.descuentos,0)         AS sistema_descuentos,
  COALESCE(an.total_anulado,0)       AS sistema_anulaciones,
  COALESCE(reti.retiros,0)           AS sistema_retiros,
  COALESCE(reem.reembolsos_efectivo,0) AS sistema_reembolsos_efectivo,
  ( COALESCE(s.opening_float,0) + COALESCE(v.ventas_efectivo,0)
    - COALESCE(reti.retiros,0) - COALESCE(reem.reembolsos_efectivo,0)
  )::numeric(12,2) AS sistema_efectivo_esperado,
  -- Declarados (precorte)
  COALESCE(d.precorte_efectivo,0) AS declarado_precorte_efectivo,
  (COALESCE(d.decl_tc,0)+COALESCE(d.decl_td,0)+COALESCE(d.decl_transfer,0))::numeric(12,2) AS declarado_precorte_tarjetas,
  -- Snapshot POS (si existe) y cierre final preferente
  s.closing_float AS cierre_pos_snapshot,
  COALESCE(s.closing_float,
           ( COALESCE(s.opening_float,0) + COALESCE(v.ventas_efectivo,0)
             - COALESCE(reti.retiros,0) - COALESCE(reem.reembolsos_efectivo,0)
           ))::numeric(12,2) AS cierre_pos_efectivo_final,
  -- DPR (tira POS) opcional
  dpr.dpr_begin_cash, dpr.dpr_cash_receipts, dpr.dpr_credit_amount, dpr.dpr_debit_amount,
  dpr.dpr_payout, dpr.dpr_bleed, dpr.dpr_refunds, dpr.dpr_variance, dpr.dpr_total_void, dpr.dpr_total_discount,
  -- Dif y veredictos
  (COALESCE(d.precorte_efectivo,0) - (COALESCE(s.opening_float,0) + COALESCE(v.ventas_efectivo,0)
   - COALESCE(reti.retiros,0) - COALESCE(reem.reembolsos_efectivo,0)))::numeric(12,2) AS diferencia_efectivo,
  CASE
    WHEN COALESCE(d.precorte_efectivo,0) = (COALESCE(s.opening_float,0) + COALESCE(v.ventas_efectivo,0)
      - COALESCE(reti.retiros,0) - COALESCE(reem.reembolsos_efectivo,0)) THEN 'CUADRA'
    WHEN COALESCE(d.precorte_efectivo,0) > (COALESCE(s.opening_float,0) + COALESCE(v.ventas_efectivo,0)
      - COALESCE(reti.retiros,0) - COALESCE(reem.reembolsos_efectivo,0)) THEN 'A_FAVOR'
    ELSE 'EN_CONTRA'
  END AS veredicto_efectivo,
  ((COALESCE(d.decl_tc,0)+COALESCE(d.decl_td,0)+COALESCE(d.decl_transfer,0)) - COALESCE(v.ventas_no_efectivo,0))::numeric(12,2) AS diferencia_tarjetas,
  CASE
    WHEN (COALESCE(d.decl_tc,0)+COALESCE(d.decl_td,0)+COALESCE(d.decl_transfer,0)) = COALESCE(v.ventas_no_efectivo,0) THEN 'CUADRA'
    WHEN (COALESCE(d.decl_tc,0)+COALESCE(d.decl_td,0)+COALESCE(d.decl_transfer,0)) > COALESCE(v.ventas_no_efectivo,0) THEN 'A_FAVOR'
    ELSE 'EN_CONTRA'
  END AS veredicto_tarjetas
FROM selemti.sesion_cajon s
LEFT JOIN ventas                          v   ON v.sesion_id   = s.id
LEFT JOIN selemti.vw_sesion_descuentos    dsc ON dsc.sesion_id = s.id
LEFT JOIN selemti.vw_sesion_anulaciones   an  ON an.sesion_id  = s.id
LEFT JOIN selemti.vw_sesion_retiros       reti ON reti.sesion_id= s.id
LEFT JOIN selemti.vw_sesion_reembolsos_efectivo reem ON reem.sesion_id = s.id
LEFT JOIN decl                            d   ON d.sesion_id   = s.id
LEFT JOIN selemti.vw_sesion_dpr           dpr ON dpr.sesion_id = s.id;
-- =======================================
-- 7) Índices recomendados en POS
-- =======================================
DO $ix$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE schemaname='public' AND indexname='ix_transactions_ts_term_user') THEN
    EXECUTE 'CREATE INDEX ix_transactions_ts_term_user ON public.transactions (transaction_time, terminal_id, user_id)';
END IF;
IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE schemaname='public' AND indexname='ix_ticket_closing_term_owner') THEN
    EXECUTE 'CREATE INDEX ix_ticket_closing_term_owner ON public.ticket (closing_date, terminal_id, owner_id)';
END IF;
END
$ix$;
-- ============================================================================
-- FIN DEL DESPLIEGUE
-- ============================================================================
-- ================================================
-- SELEMTI v2.1 – Parche de compatibilidad (PG 9.5)
-- Alineado al dump_21_08_2025_Con_Query.sql
-- ================================================

-- 1) Índices prácticos (aceleran precorte/conciliación)
--    - transactions por ventana de turno y filtros típicos
--    - drawer_assigned_history por usuario/operación/tiempo
--    - ticket por cierre/terminal/cajero

CREATE INDEX IF NOT EXISTS idx_tx_term_user_time
  ON public.transactions (terminal_id, user_id, transaction_time);
CREATE INDEX IF NOT EXISTS idx_dah_user_op_time
  ON public.drawer_assigned_history (a_user, operation, "time" DESC);
CREATE INDEX IF NOT EXISTS idx_ticket_close_term_owner
  ON public.ticket (closing_date, terminal_id, owner_id);
-- 2) Ventana de asignación: compatible con tu drawer_assigned_history real
--    (en tu BD "drawer_assigned_history" no trae terminal_id;
anclamos por usuario)
CREATE OR REPLACE FUNCTION public._last_assign_window(
    _terminal_id integer,  -- firma estable
    _user_id     integer,
    _ref_time    timestamptz
) RETURNS TABLE (from_ts timestamptz, to_ts timestamptz)
LANGUAGE sql STABLE AS $$
WITH ev AS (
    SELECT
        dah."time" AS event_time,
        dah.operation AS action,
        LAG(dah."time") OVER (PARTITION BY dah.a_user ORDER BY dah."time") AS prev_event
    FROM public.drawer_assigned_history dah
    WHERE dah.a_user = _user_id
      AND dah."time" <= _ref_time
)
SELECT
    COALESCE(prev_event, _ref_time - INTERVAL '24 hours')::timestamptz AS from_ts,
    event_time::timestamptz AS to_ts
FROM ev
WHERE action IN ('ASIGNAR','ASSIGN','OPEN','CERRAR','CLOSE','LIBERAR','UNASSIGN')
ORDER BY event_time DESC
LIMIT 1;
$$;
-- 4) Smoke views (opcionales) para validar sin tocar lógica
CREATE OR REPLACE VIEW selemti.vw_fast_tx AS
SELECT t.terminal_id, t.user_id, t.transaction_time, t.payment_type, t.transaction_type,
       t.payment_sub_type, t.custom_payment_name, t.custom_payment_ref, t.amount, t.voided
FROM public.transactions t;
CREATE OR REPLACE VIEW selemti.vw_fast_tickets AS
SELECT tk.id, tk.terminal_id, tk.owner_id, tk.create_date, tk.closing_date,
       tk.status, tk.total_discount, tk.total_price
FROM public.ticket tk;
--- Query para vistas 
CREATE OR REPLACE VIEW selemti.vw_sesion_ventas AS
WITH tx AS (
  SELECT
    s.id AS sesion_id,
    t.amount::numeric AS monto,
    COALESCE(
      fp.codigo,
      selemti.fn_normalizar_forma_pago(
        t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name
      )
    ) AS codigo_fp
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   -- 🔎 SIN filtro por usuario (t.user_id)
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
  WHERE COALESCE(t.voided,false) = false
    AND UPPER(COALESCE(t.transaction_type,'')) NOT IN ('VOID','REFUND','RETURN')
)
SELECT sesion_id, codigo_fp, SUM(monto)::numeric(12,2) AS monto
FROM tx
GROUP BY sesion_id, codigo_fp;
ALTER TABLE selemti.vw_sesion_ventas OWNER TO postgres;
-------------------------------
--------------------------
-- =========================================================
-- 1) Columnas para TRANSFERENCIAS (compatibles con PG 9.5)
-- =========================================================
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='sistema_transferencias'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN sistema_transferencias numeric(12,2) NOT NULL DEFAULT 0;
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='declarado_transferencias'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN declarado_transferencias numeric(12,2) NOT NULL DEFAULT 0;
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='diferencia_transferencias'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN diferencia_transferencias numeric(12,2) NOT NULL DEFAULT 0;
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='veredicto_transferencias'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN veredicto_transferencias text NOT NULL DEFAULT 'CUADRA';
  END IF;
END
$$;
-- constraint del veredicto de transferencias (solo si falta)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1
    FROM pg_constraint c
    JOIN pg_class t   ON c.conrelid = t.oid
    JOIN pg_namespace n ON n.oid = t.relnamespace
    WHERE n.nspname='selemti' AND t.relname='postcorte'
      AND c.conname='postcorte_veredicto_transfer_check'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD CONSTRAINT postcorte_veredicto_transfer_check
      CHECK (veredicto_transferencias IN ('CUADRA','A_FAVOR','EN_CONTRA'));
  END IF;
END
$$;
-- =========================================================
-- 2) Campos de VALIDACIÓN por supervisor (PG 9.5)
-- =========================================================
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='validado'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN validado boolean NOT NULL DEFAULT FALSE;
    COMMENT ON COLUMN selemti.postcorte.validado
      IS 'TRUE cuando el supervisor valida/cierra el postcorte';
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='validado_por'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN validado_por integer;
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='validado_en'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN validado_en timestamptz;
  END IF;
END
$$;
-----

CREATE OR REPLACE VIEW selemti.vw_sesion_dpr AS 
WITH s AS (
  SELECT
    sesion_cajon.id,
    sesion_cajon.terminal_id,
    sesion_cajon.cajero_usuario_id,
    sesion_cajon.apertura_ts,
    COALESCE(sesion_cajon.cierre_ts, now()) AS fin_ts
  FROM selemti.sesion_cajon
)
SELECT
  s.id AS sesion_id,
  dpr.id,
  dpr.report_time,
  dpr.reg,
  dpr.ticket_count,
  dpr.begin_cash,
  dpr.net_sales,
  dpr.sales_tax,
  dpr.cash_tax,
  dpr.total_revenue,
  dpr.gross_receipts,
  dpr.giftcertreturncount,
  dpr.giftcertreturnamount,
  dpr.giftcertchangeamount,
  dpr.cash_receipt_no,
  dpr.cash_receipt_amount,
  dpr.credit_card_receipt_no,
  dpr.credit_card_receipt_amount,
  dpr.debit_card_receipt_no,
  dpr.debit_card_receipt_amount,
  dpr.refund_receipt_count,
  dpr.refund_amount,
  dpr.receipt_differential,
  dpr.cash_back,
  dpr.cash_tips,
  dpr.charged_tips,
  dpr.tips_paid,
  dpr.tips_differential,
  dpr.pay_out_no,
  dpr.pay_out_amount,
  dpr.drawer_bleed_no,
  dpr.drawer_bleed_amount,
  dpr.drawer_accountable,
  dpr.cash_to_deposit,
  dpr.variance,
  dpr.delivery_charge,
  dpr.totalvoidwst,
  dpr.totalvoid,
  dpr.totaldiscountcount,
  dpr.totaldiscountamount,
  dpr.totaldiscountsales,
  dpr.totaldiscountguest,
  dpr.totaldiscountpartysize,
  dpr.totaldiscountchecksize,
  dpr.totaldiscountpercentage,
  dpr.totaldiscountratio,
  dpr.user_id,
  dpr.terminal_id
FROM s
JOIN public.drawer_pull_report dpr
  ON dpr.terminal_id = s.terminal_id
 -- 🔴 quitamos el filtro por usuario:
 -- AND dpr.user_id = s.cajero_usuario_id
 AND dpr.report_time >= s.apertura_ts
 AND dpr.report_time <  s.fin_ts;
ALTER TABLE selemti.vw_sesion_dpr OWNER TO postgres;
-------------
CREATE OR REPLACE VIEW selemti.vw_sesion_ventas AS 
WITH base AS (
  SELECT
    s.id AS sesion_id,
    t.amount::numeric AS monto,
    COALESCE(
      fp.codigo,
      selemti.fn_normalizar_forma_pago(
        t.payment_type::text,
        t.transaction_type::text,
        t.payment_sub_type::text,
        t.custom_payment_name::text
      )
    ) AS codigo_fp
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   -- 🔴 quitamos el filtro por usuario:
   -- AND t.user_id = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type::text
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')::text
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')::text
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')::text
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')::text
  WHERE COALESCE(t.voided,false) = false
    AND t.transaction_type::text = 'CREDIT'::text
)
SELECT
  base.sesion_id,
  base.codigo_fp,
  SUM(base.monto)::numeric(12,2) AS monto
FROM base
GROUP BY base.sesion_id, base.codigo_fp;
ALTER TABLE selemti.vw_sesion_ventas OWNER TO postgres;
-- 1) Nota general del precorte
DO $$
BEGIN
  -- selemti.precorte.notas
  IF EXISTS (
    SELECT 1
    FROM information_schema.tables
    WHERE table_schema = 'selemti' AND table_name = 'precorte'
  ) THEN
    IF NOT EXISTS (
      SELECT 1
      FROM information_schema.columns
      WHERE table_schema = 'selemti' AND table_name = 'precorte' AND column_name = 'notas'
    ) THEN
      ALTER TABLE selemti.precorte ADD COLUMN notas text;
    END IF;
  END IF;

  -- selemti.precorte_otros.notas (solo si la tabla existe)
  IF EXISTS (
    SELECT 1
    FROM information_schema.tables
    WHERE table_schema = 'selemti' AND table_name = 'precorte_otros'
  ) THEN
    IF NOT EXISTS (
      SELECT 1
      FROM information_schema.columns
      WHERE table_schema = 'selemti' AND table_name = 'precorte_otros' AND column_name = 'notas'
    ) THEN
      ALTER TABLE selemti.precorte_otros ADD COLUMN notas text;
    END IF;
  END IF;
END
$$ LANGUAGE plpgsql;
-- END 000. Query_corte_04_09_2025_V2.sql

-- BEGIN 01_tablas_maestras.sql
-- =====================================================
-- SCRIPT 01: TABLAS MAESTRAS BASE
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
COMMENT ON TABLE selemti.users IS 'Usuarios del sistema con sus credenciales y estado';
COMMENT ON TABLE selemti.user_roles IS 'Asignación de roles a usuarios (RBAC)';
COMMENT ON TABLE selemti.items IS 'Maestro de todos los ítems del sistema (insumos, productos terminados, categorías, ubicaciones)';
COMMENT ON TABLE selemti.inventory_batch IS 'Control de lotes para trazabilidad APPCC';
COMMENT ON TABLE selemti.mov_inv IS 'Kardex - Libro mayor de inventario. Cada movimiento genera un registro aquí';
-- 6. TABLA DE AUDITORÍA
CREATE TABLE selemti.audit_log (
    id BIGSERIAL PRIMARY KEY,
    timestamp TIMESTAMP DEFAULT NOW(),
    user_id INTEGER REFERENCES selemti.users(id),
    action_type VARCHAR(20) NOT NULL CHECK (action_type IN ('CREATE', 'UPDATE', 'DELETE', 'LOGIN', 'APPROVE', 'REJECT')),
    table_name VARCHAR(50) NOT NULL,
    record_id VARCHAR(100),
    old_values JSONB,
    new_values JSONB,
    ip_address INET,
    user_agent TEXT,
    success BOOLEAN NOT NULL,
    error_message TEXT
);
COMMENT ON TABLE selemti.audit_log IS 'Registro completo de auditoría para cumplimiento APPCC y seguridad';
-- 7. TABLA DE CÓDIGOS DE ERROR
CREATE TABLE selemti.error_codes (
    code VARCHAR(10) PRIMARY KEY CHECK (code ~ '^[A-Z]{3}-[0-9]{3}$'),
    category VARCHAR(20) NOT NULL CHECK (category IN ('VALIDATION', 'BUSINESS', 'SECURITY', 'SYSTEM', 'INTEGRATION')),
    severity VARCHAR(10) NOT NULL CHECK (severity IN ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')),
    message_template TEXT NOT NULL,
    description TEXT,
    recovery_instructions TEXT
);
-- INSERTAR CÓDIGOS DE ERROR ESTÁNDAR
INSERT INTO selemti.error_codes VALUES 
('INV-001', 'BUSINESS', 'HIGH', 'Stock insuficiente para el ítem %s. Stock actual: %s, requerido: %s', 'Intento de movimiento que causaría stock negativo', 'Verificar inventario físico o recibir mercancía'),
('INV-002', 'BUSINESS', 'CRITICAL', 'Lote %s está bloqueado por motivo: %s', 'Intento de usar lote con estado BLOQUEADO o RECALL', 'Contactar al auditor APPCC para liberar el lote'),
('SEC-001', 'SECURITY', 'HIGH', 'Intento de acceso no autorizado al recurso %s por usuario %s', 'Violación de control de acceso RBAC', 'Verificar asignación de roles y permisos');
RAISE NOTICE 'Script 01 (Tablas maestras) ejecutado exitosamente';
-- END 01_tablas_maestras.sql

-- BEGIN 010.delta_full_plus.sql
/* ======================================================================
   010.delta_full_plus.sql
   Selemti - Deltas finales de modelo para operación multi-UOM, elaborados,
   traspasos, stock policies y mermas. PG ≥ 9.5
   ====================================================================== */

SET client_min_messages = WARNING;
SET TIME ZONE 'America/Mexico_City';
SET search_path TO selemti, public;
/* --------------------------------------------------------------
   A) UOM original en movimientos (fidelidad operativa)
   -------------------------------------------------------------- */
-- Se asume que selemti.unidades_medida ya existe (GR, ML, PZ, etc.)

-- Kardex: cantidad en canónica ya existe (cantidad/qty). Agregamos
-- qty_original + uom_original_id para preservar la UOM de la transacción.
ALTER TABLE IF EXISTS selemti.mov_inv
  ADD COLUMN IF NOT EXISTS qty_original NUMERIC(14,6),
  ADD COLUMN IF NOT EXISTS uom_original_id INT REFERENCES selemti.unidades_medida(id);
-- Índices útiles (si no existen)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
    WHERE c.relname='ix_movinv_item_ts' AND n.nspname='selemti'
  ) THEN
    CREATE INDEX ix_movinv_item_ts ON selemti.mov_inv (item_id, ts);
  END IF;
END$$;
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
    WHERE c.relname='ix_item_vendor_item' AND n.nspname='selemti'
  ) THEN
    CREATE INDEX ix_item_vendor_item ON selemti.item_vendor(item_id);
  END IF;
END$$;
/* --------------------------------------------------------------
   C) Tipo de producto y UOM de salida (elaborados)
   -------------------------------------------------------------- */
DO $$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname='producto_tipo') THEN
    CREATE TYPE selemti.producto_tipo AS ENUM ('MATERIA_PRIMA','ELABORADO','ENVASADO');
  END IF;
END$$;
-- items: tipología + UOM de salida (para recetas/OP)
ALTER TABLE IF EXISTS selemti.items
  ADD COLUMN IF NOT EXISTS tipo selemti.producto_tipo,
  ADD COLUMN IF NOT EXISTS unidad_salida_id INT REFERENCES selemti.unidades_medida(id);
-- ticket_venta_det: capturar los modificadores aplicados por línea
ALTER TABLE IF EXISTS selemti.ticket_venta_det
  ADD COLUMN IF NOT EXISTS modificadores_aplicados JSONB;
/* --------------------------------------------------------------
   H) Vista de mermas por ítem (operativa semanal)
   -------------------------------------------------------------- */
CREATE OR REPLACE VIEW selemti.v_merma_por_item AS
SELECT
  m.item_id,
  date_trunc('week', m.ts)::date AS semana,
  SUM(CASE WHEN m.tipo = 'MERMA' THEN m.cantidad ELSE 0 END)                AS qty_mermada,  -- en canónica
  SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) AS qty_recibida,
  CASE 
    WHEN SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) > 0
    THEN ROUND(
      100.0 * SUM(CASE WHEN m.tipo='MERMA' THEN m.cantidad ELSE 0 END) /
      NULLIF(SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END),0)
    , 2)
    ELSE 0
  END AS merma_pct
FROM selemti.mov_inv m
GROUP BY 1,2;
/* --------------------------------------------------------------
   I) Reglas sugeridas para traspasos de elaborados
   (documental: se registran dos mov_inv correlacionados por ref)
   -------------------------------------------------------------- */
-- No requiere nuevas tablas si ya se usa mov_inv + inventory_batch.
-- Recomendación: en tus servicios, registrar:
--  - salida en origen: ref_tipo='TRASPASO', ref_id=<id_traspaso>, batch_id=<lote_elaborado>
--  - entrada en destino: ref_tipo='TRASPASO', ref_id=<mismo id>, batch_id=<mismo lote>
--  - qty en canónica y qty_original/uom_original según UI (p.ej., PZ)

/* --------------------------------------------------------------
   J) Guardas e índices complementarios (seguridad y performance)
   -------------------------------------------------------------- */
-- Índice para políticas de stock lookup
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
    WHERE c.relname='ix_stock_policy_item_suc' AND n.nspname='selemti'
  ) THEN
    CREATE INDEX ix_stock_policy_item_suc ON selemti.stock_policy(item_id, sucursal_id);
  END IF;
END$$;
-- Índice para modificadores en tickets (consulta por llave)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
    WHERE c.relname='ix_ticketdet_mods_gin' AND n.nspname='selemti'
  ) THEN
    CREATE INDEX ix_ticketdet_mods_gin ON selemti.ticket_venta_det 
    USING GIN (modificadores_aplicados);
  END IF;
END$$;
/* --------------------------------------------------------------
   K) Defaults razonables / semillas mínimas (opcional)
   -------------------------------------------------------------- */
-- FEFO como default para sucursal "PRINCIPAL" si no existe
INSERT INTO selemti.param_sucursal (sucursal_id, consumo)
SELECT 'PRINCIPAL', 'FEFO'
WHERE NOT EXISTS (SELECT 1 FROM selemti.param_sucursal WHERE sucursal_id='PRINCIPAL');
/* ======================================================================
   FIN 010.delta_full_plus.sql
   - Compatibilidad PG 9.5
   - No usa particiones ni funciones avanzadas de versión posterior.
   - Ejecutable múltiples veces sin romper consistencia.
   ====================================================================== */
-- END 010.delta_full_plus.sql

-- BEGIN 011.delta_merma_desperdicio_porciones.sql
/* ======================================================================
   011.delta_merma_desperdicio_porciones.sql
   Complemento: Merma vs Desperdicio + Porcionamiento de preparaciones
   Compatibilidad: PostgreSQL 9.5, idempotente
   Supone: esquema selemti, OP/lotes internos, mov_inv y ticket_venta_* existentes
   ====================================================================== */

SET client_min_messages = WARNING;
SET TIME ZONE 'America/Mexico_City';
SET search_path TO selemti, public;
/* --------------------------------------------------------------
   1) Clasificación de pérdida: MERMA vs DESPERDICIO
   -------------------------------------------------------------- */
DO $$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname='merma_clase') THEN
    CREATE TYPE selemti.merma_clase AS ENUM ('MERMA','DESPERDICIO');
  END IF;
END$$;
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
    WHERE c.relname='ix_perdida_item_ts' AND n.nspname='selemti'
  ) THEN
    CREATE INDEX ix_perdida_item_ts ON selemti.perdida_log(item_id, ts DESC);
  END IF;
END$$;
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
    WHERE c.relname='ix_tickcons_ticket' AND n.nspname='selemti'
  ) THEN
    CREATE INDEX ix_tickcons_ticket ON selemti.ticket_det_consumo (ticket_id, ticket_det_id);
  END IF;
  IF NOT EXISTS (
    SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
    WHERE c.relname='ix_tickcons_lote' AND n.nspname='selemti'
  ) THEN
    CREATE INDEX ix_tickcons_lote ON selemti.ticket_det_consumo (item_id, lote_id);
  END IF;
END$$;
/* --------------------------------------------------------------
   3) Cierre de lote preparado (remanente → merma o desperdicio)
   -------------------------------------------------------------- */
-- Al finalizar el turno/día o al vencimiento, registra el remanente de una
-- preparación (lote interno) como salida + log de pérdida con clase.
-- Esta función no hace cálculos de FEFO/PEPS, asume lote explícito.
CREATE OR REPLACE FUNCTION selemti.cerrar_lote_preparado(
  p_lote_id       BIGINT,
  p_clase         selemti.merma_clase,      -- 'MERMA' o 'DESPERDICIO'
  p_motivo        TEXT,
  p_usuario_id    INT DEFAULT NULL,
  p_uom_id        INT DEFAULT NULL          -- si envías qty_original/uom
) RETURNS BIGINT AS $$
DECLARE
  v_item_id        TEXT;
v_qty_disponible NUMERIC(14,6);
v_mov_id         BIGINT;
BEGIN
  -- Disponibilidad del lote (en canónica)
  SELECT b.item_id,
         COALESCE(SUM(CASE WHEN m.signo IS NULL THEN 0 ELSE m.signo * m.cantidad END),0)
  INTO   v_item_id, v_qty_disponible
  FROM   selemti.inventory_batch b
  LEFT JOIN selemti.v_kardex_por_lote m ON m.lote_id = b.id        -- o suma de mov_inv por lote
  WHERE  b.id = p_lote_id
  GROUP  BY b.item_id;
IF v_item_id IS NULL THEN
    RAISE EXCEPTION 'Lote % no existe', p_lote_id;
END IF;
IF v_qty_disponible IS NULL OR v_qty_disponible <= 0 THEN
    RETURN 0;
-- nada que cerrar
  END IF;
-- 3.1) Registrar salida en kardex (MERMA operativa)
  INSERT INTO selemti.mov_inv (
    ts, item_id, lote_id, cantidad, qty_original, uom_original_id,
    tipo, ref_tipo, ref_id, sucursal_id
  )
  VALUES (
    now(), v_item_id, p_lote_id, 0 - v_qty_disponible, NULL, p_uom_id,
    'MERMA', 'CIERRE_PREP', p_lote_id, NULL
  )
  RETURNING id INTO v_mov_id;
-- 3.2) Log de pérdida con clase (MERMA/DESPERDICIO)
  INSERT INTO selemti.perdida_log (
    ts, item_id, lote_id, clase, motivo, qty_canonica, uom_original_id,
    usuario_id, ref_tipo, ref_id
  ) VALUES (
    now(), v_item_id, p_lote_id, p_clase, p_motivo, v_qty_disponible, p_uom_id,
    p_usuario_id, 'CIERRE_PREP', v_mov_id
  );
RETURN v_mov_id;
END;
$$ LANGUAGE plpgsql;
/* --------------------------------------------------------------
   4) Vistas KPI: Merma vs Desperdicio y Rendimiento de preparación
   -------------------------------------------------------------- */
-- 4.1) KPI por semana y clase (MERMA/DESPERDICIO)
CREATE OR REPLACE VIEW selemti.v_perdida_clase_semana AS
SELECT
  item_id,
  date_trunc('week', ts)::date AS semana,
  clase,
  SUM(qty_canonica) AS qty_canonica
FROM selemti.perdida_log
GROUP BY 1,2,3;
-- 4.2) Rendimiento de preparación: usa OP (teórico) vs entregado (real) y consumo registrado
-- Nota: ajusta nombres de tablas de OP/lotes internos según tu esquema.
-- Este es un esqueleto que asume:
--   - selemti.op_produccion (id, receta_id, qty_planeada, qty_real, lote_resultado_id, ts_cierre)
--   - v_kardex_por_lote suma mov_inv por lote.
CREATE OR REPLACE VIEW selemti.v_rendimiento_preparacion AS
SELECT
  op.id                       AS op_id,
  op.receta_id,
  op.lote_resultado_id        AS lote_id,
  op.qty_planeada,
  op.qty_real,
  (CASE WHEN op.qty_planeada IS NULL OR op.qty_planeada=0 THEN NULL
        ELSE ROUND(100.0 * op.qty_real / op.qty_planeada, 2) END) AS rendimiento_pct,
  kardex.saldo_final_canonica AS saldo_lote_canonica,
  (CASE WHEN op.qty_real IS NULL OR op.qty_real=0 THEN NULL
        ELSE ROUND(100.0 * kardex.saldo_final_canonica / op.qty_real, 2) END) AS sobrante_pct
FROM selemti.op_produccion op
LEFT JOIN (
  SELECT
    lote_id,
    SUM(CASE WHEN signo IS NULL THEN 0 ELSE signo * cantidad END) AS saldo_final_canonica
  FROM selemti.v_kardex_por_lote   -- o arma una suma de mov_inv por lote
  GROUP BY lote_id
) kardex ON kardex.lote_id = op.lote_resultado_id;
/* --------------------------------------------------------------
   5) Vista de porciones por ticket (para preparaciones compartidas)
   -------------------------------------------------------------- */
CREATE OR REPLACE VIEW selemti.v_porciones_por_ticket AS
SELECT
  tdc.ticket_id,
  tdc.ticket_det_id,
  tdc.item_id       AS insumo_preparado,
  tdc.lote_id,
  SUM(tdc.qty_canonica) AS qty_total_canonica,
  COUNT(*)              AS usos
FROM selemti.ticket_det_consumo tdc
GROUP BY 1,2,3,4;
/* ======================================================================
   FIN 011.delta_merma_desperdicio_porciones.sql
   ====================================================================== */
-- END 011.delta_merma_desperdicio_porciones.sql

-- BEGIN 02_modulo_inventario.sql
-- =====================================================
-- SCRIPT 02: MÓDULO DE INVENTARIO (8 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA INVENTARIO
CREATE SEQUENCE selemti.recepcion_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.traspaso_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.ajuste_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.conteo_daily_seq START WITH 1 INCREMENT BY 1;
-- 5. AJUSTE_INV_CAB
CREATE TABLE selemti.ajuste_inv_cab (
    id SERIAL PRIMARY KEY,
    numero_ajuste VARCHAR(20) UNIQUE NOT NULL DEFAULT 'AJUS-' || TO_CHAR(CURRENT_DATE, 'YYYYMMDD-') || LPAD(NEXTVAL('selemti.ajuste_daily_seq')::TEXT, 4, '0'),
    tipo_ajuste VARCHAR(15) NOT NULL CHECK (tipo_ajuste IN ('FISICO', 'MERMA', 'ROBO', 'DONACION', 'CADUCIDAD', 'OTRO')),
    fecha_ajuste TIMESTAMP NOT NULL DEFAULT NOW(),
    sucursal_id VARCHAR(10) NOT NULL CHECK (sucursal_id IN ('SUR', 'NORTE', 'CENTRO')),
    motivo TEXT NOT NULL CHECK (LENGTH(motivo) >= 10),
    total_items INTEGER NOT NULL CHECK (total_items > 0),
    valor_total_ajuste NUMERIC(12,2) CHECK (valor_total_ajuste >= 0),
    estado VARCHAR(15) DEFAULT 'BORRADOR' CHECK (estado IN ('BORRADOR', 'APLICADO', 'APROBADO', 'RECHAZADO')),
    usuario_solicitante INTEGER REFERENCES selemti.users(id),
    usuario_aprobador INTEGER REFERENCES selemti.users(id),
    fecha_aprobacion TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (CASE WHEN estado = 'APROBADO' THEN usuario_aprobador IS NOT NULL ELSE TRUE END)
);
-- 6. AJUSTE_INV_DET
CREATE TABLE selemti.ajuste_inv_det (
    id SERIAL PRIMARY KEY,
    ajuste_id INTEGER NOT NULL REFERENCES selemti.ajuste_inv_cab(id) ON DELETE CASCADE,
    item_id VARCHAR(20) NOT NULL REFERENCES selemti.items(id),
    inventory_batch_id INTEGER REFERENCES selemti.inventory_batch(id),
    tipo_movimiento CHAR(1) NOT NULL CHECK (tipo_movimiento IN ('E', 'S')),
    cantidad NUMERIC(10,3) NOT NULL CHECK (cantidad > 0),
    costo_unitario NUMERIC(10,2) NOT NULL CHECK (costo_unitario >= 0),
    valor_ajuste NUMERIC(12,2),
    ubicacion_id VARCHAR(10) NOT NULL CHECK (ubicacion_id LIKE 'UBIC-%'),
    observaciones TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (CASE 
        WHEN (SELECT perishable FROM selemti.items WHERE id = item_id) = true 
        THEN inventory_batch_id IS NOT NULL 
        ELSE TRUE 
    END)
);
-- 7. CONTEO_FISICO_CAB
CREATE TABLE selemti.conteo_fisico_cab (
    id SERIAL PRIMARY KEY,
    numero_conteo VARCHAR(20) UNIQUE NOT NULL DEFAULT 'CONT-' || TO_CHAR(CURRENT_DATE, 'YYYYMMDD-') || LPAD(NEXTVAL('selemti.conteo_daily_seq')::TEXT, 4, '0'),
    tipo_conteo VARCHAR(15) NOT NULL CHECK (tipo_conteo IN ('CICLICO', 'FISICO', 'SORPRESA')),
    fecha_conteo DATE NOT NULL DEFAULT CURRENT_DATE,
    sucursal_id VARCHAR(10) NOT NULL CHECK (sucursal_id IN ('SUR', 'NORTE', 'CENTRO')),
    ubicacion_id VARCHAR(10) NOT NULL CHECK (ubicacion_id LIKE 'UBIC-%'),
    estado VARCHAR(15) DEFAULT 'EN_PROGRESO' CHECK (estado IN ('EN_PROGRESO', 'COMPLETADO', 'AJUSTADO', 'CERRADO')),
    total_items INTEGER NOT NULL CHECK (total_items > 0),
    items_contados INTEGER DEFAULT 0 CHECK (items_contados >= 0),
    precision_global NUMERIC(5,2) CHECK (precision_global BETWEEN 0 AND 100),
    usuario_responsable INTEGER REFERENCES selemti.users(id),
    fecha_cierre TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (items_contados <= total_items),
    CHECK (fecha_cierre IS NULL OR fecha_cierre >= fecha_conteo)
);
-- 8. CONTEO_FISICO_DET
CREATE TABLE selemti.conteo_fisico_det (
    id SERIAL PRIMARY KEY,
    conteo_id INTEGER NOT NULL REFERENCES selemti.conteo_fisico_cab(id) ON DELETE CASCADE,
    item_id VARCHAR(20) NOT NULL REFERENCES selemti.items(id),
    inventory_batch_id INTEGER REFERENCES selemti.inventory_batch(id),
    stock_sistema NUMERIC(10,3) NOT NULL CHECK (stock_sistema >= 0),
    stock_fisico NUMERIC(10,3) NOT NULL CHECK (stock_fisico >= 0),
    diferencia NUMERIC(10,3),
    porcentaje_diferencia NUMERIC(5,2),
    motivo_diferencia VARCHAR(100),
    contador_1 NUMERIC(10,3),
    contador_2 NUMERIC(10,3),
    usuario_contador INTEGER REFERENCES selemti.users(id),
    fecha_conteo TIMESTAMP DEFAULT NOW(),
    created_at TIMESTAMP DEFAULT NOW()
);
RAISE NOTICE 'Script 02 (Módulo Inventario - 8 tablas) ejecutado exitosamente';
-- END 02_modulo_inventario.sql

-- BEGIN 03_modulo_recetas.sql
-- =====================================================
-- SCRIPT 03: MÓDULO DE RECETAS/PRODUCCIÓN (6 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA RECETAS/PRODUCCIÓN
CREATE SEQUENCE selemti.op_daily_seq START WITH 1 INCREMENT BY 1;
COMMENT ON TABLE selemti.receta_cab IS 'Maestro de recetas/platos del menú del restaurante';
COMMENT ON TABLE selemti.receta_det IS 'Detalle de ingredientes y sub-recetas que componen una receta';
-- 12. OP_PRODUCCION_DET
CREATE TABLE selemti.op_produccion_det (
    id SERIAL PRIMARY KEY,
    op_id INTEGER NOT NULL REFERENCES selemti.op_produccion_cab(id) ON DELETE CASCADE,
    item_id VARCHAR(20) NOT NULL REFERENCES selemti.items(id),
    inventory_batch_id INTEGER REFERENCES selemti.inventory_batch(id),
    cantidad_teorica NUMERIC(10,3) NOT NULL CHECK (cantidad_teorica > 0),
    cantidad_real NUMERIC(10,3) CHECK (cantidad_real >= 0),
    diferencia NUMERIC(10,3),
    porcentaje_merma_real NUMERIC(5,2),
    costo_teorico NUMERIC(10,2) CHECK (costo_teorico >= 0),
    costo_real NUMERIC(10,2) CHECK (costo_real >= 0),
    motivo_diferencia VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (CASE 
        WHEN (SELECT perishable FROM selemti.items WHERE id = item_id) = true 
        THEN inventory_batch_id IS NOT NULL 
        ELSE TRUE 
    END)
);
-- 13. MERMA_PROCESO
CREATE TABLE selemti.merma_proceso (
    id SERIAL PRIMARY KEY,
    fecha_merma DATE NOT NULL DEFAULT CURRENT_DATE,
    item_id VARCHAR(20) NOT NULL REFERENCES selemti.items(id),
    inventory_batch_id INTEGER REFERENCES selemti.inventory_batch(id),
    op_id INTEGER REFERENCES selemti.op_produccion_cab(id),
    tipo_merma VARCHAR(20) NOT NULL CHECK (tipo_merma IN ('PREPARACION', 'COCCION', 'PORTIONING', 'ALMACENAMIENTO', 'DURANTE_SERVICIO')),
    cantidad_merma NUMERIC(10,3) NOT NULL CHECK (cantidad_merma > 0),
    costo_merma NUMERIC(10,2) CHECK (costo_merma >= 0),
    motivo VARCHAR(100) NOT NULL CHECK (LENGTH(motivo) >= 5),
    accion_correctiva TEXT,
    usuario_registro INTEGER REFERENCES selemti.users(id),
    aprobado_por INTEGER REFERENCES selemti.users(id),
    estado VARCHAR(15) DEFAULT 'PENDIENTE' CHECK (estado IN ('PENDIENTE', 'APROBADO', 'RECHAZADO')),
    created_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (CASE WHEN estado = 'APROBADO' THEN aprobado_por IS NOT NULL ELSE TRUE END),
    CHECK (CASE 
        WHEN (SELECT perishable FROM selemti.items WHERE id = item_id) = true 
        THEN inventory_batch_id IS NOT NULL 
        ELSE TRUE 
    END)
);
-- 14. RENDIMIENTO_RECETA
CREATE TABLE selemti.rendimiento_receta (
    id SERIAL PRIMARY KEY,
    receta_id VARCHAR(20) NOT NULL REFERENCES selemti.receta_cab(id),
    fecha_produccion DATE NOT NULL,
    op_id INTEGER REFERENCES selemti.op_produccion_cab(id),
    cantidad_planeada INTEGER NOT NULL CHECK (cantidad_planeada > 0),
    cantidad_real INTEGER NOT NULL CHECK (cantidad_real > 0),
    rendimiento_porcentaje NUMERIC(5,2) NOT NULL CHECK (rendimiento_porcentaje BETWEEN 0 AND 200),
    costo_teorico_total NUMERIC(10,2) CHECK (costo_teorico_total >= 0),
    costo_real_total NUMERIC(10,2) CHECK (costo_real_total >= 0),
    variacion_costo NUMERIC(10,2),
    motivo_variacion VARCHAR(100),
    usuario_responsable INTEGER REFERENCES selemti.users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    
    UNIQUE (receta_id, fecha_produccion, op_id)
);
RAISE NOTICE 'Script 03 (Módulo Recetas - 6 tablas) ejecutado exitosamente';
-- END 03_modulo_recetas.sql

-- BEGIN 04_modulo_ventas.sql
-- =====================================================
-- SCRIPT 04: MÓDULO DE VENTAS/KDS (5 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- 17. KDS_ORDENES
CREATE TABLE selemti.kds_ordenes (
    id SERIAL PRIMARY KEY,
    ticket_det_id INTEGER NOT NULL REFERENCES selemti.ticket_venta_det(id) ON DELETE CASCADE,
    estacion_trabajo VARCHAR(20) NOT NULL CHECK (estacion_trabajo IN ('COCINA_CALIENTE', 'COCINA_FRIA', 'BARRA', 'POSTRES', 'PANADERIA')),
    prioridad VARCHAR(10) DEFAULT 'NORMAL' CHECK (prioridad IN ('BAJA', 'NORMAL', 'ALTA', 'URGENTE')),
    estado_orden VARCHAR(15) DEFAULT 'PENDIENTE' CHECK (estado_orden IN ('PENDIENTE', 'ASIGNADA', 'EN_PREPARACION', 'LISTO', 'ENTREGADO', 'CANCELADO')),
    tiempo_estimado_min INTEGER CHECK (tiempo_estimado_min > 0),
    tiempo_real_min INTEGER CHECK (tiempo_real_min >= 0),
    orden_en_cola INTEGER CHECK (orden_en_cola > 0),
    usuario_asignado INTEGER REFERENCES selemti.users(id),
    fecha_asignacion TIMESTAMP,
    fecha_inicio_preparacion TIMESTAMP,
    fecha_listo TIMESTAMP,
    fecha_entrega TIMESTAMP,
    alerta_tiempo BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (fecha_inicio_preparacion IS NULL OR fecha_inicio_preparacion >= fecha_asignacion),
    CHECK (fecha_listo IS NULL OR fecha_listo >= fecha_inicio_preparacion),
    CHECK (fecha_entrega IS NULL OR fecha_entrega >= fecha_listo)
);
-- 18. KDS_ESTACIONES
CREATE TABLE selemti.kds_estaciones (
    codigo_estacion VARCHAR(20) PRIMARY KEY CHECK (codigo_estacion IN ('COCINA_CALIENTE', 'COCINA_FRIA', 'BARRA', 'POSTRES', 'PANADERIA')),
    nombre_estacion VARCHAR(50) NOT NULL,
    descripcion TEXT,
    ubicacion_fisica VARCHAR(100),
    usuario_responsable INTEGER REFERENCES selemti.users(id),
    capacidad_maxima_ordenes INTEGER NOT NULL CHECK (capacidad_maxima_ordenes > 0),
    tiempo_promedio_preparacion_min INTEGER CHECK (tiempo_promedio_preparacion_min > 0),
    activa BOOLEAN DEFAULT TRUE,
    ip_display VARCHAR(15),
    ultima_actividad TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);
-- INSERTAR ESTACIONES POR DEFECTO
INSERT INTO selemti.kds_estaciones VALUES 
('COCINA_CALIENTE', 'Cocina Caliente', 'Preparación de platos que requieren cocción', 'Área principal cocina', NULL, 10, 15, true, NULL, NOW(), NOW()),
('COCINA_FRIA', 'Cocina Fría', 'Preparación de ensaladas y entradas frías', 'Área refrigerada cocina', NULL, 8, 10, true, NULL, NOW(), NOW()),
('BARRA', 'Barra', 'Preparación de bebidas y cocteles', 'Barra principal', NULL, 12, 8, true, NULL, NOW(), NOW()),
('POSTRES', 'Postres', 'Preparación de postres y dulces', 'Área postres', NULL, 6, 12, true, NULL, NOW(), NOW()),
('PANADERIA', 'Panadería', 'Preparación de pan y repostería', 'Área hornos', NULL, 5, 20, true, NULL, NOW(), NOW());
-- 19. KDS_TIEMPOS
CREATE TABLE selemti.kds_tiempos (
    id SERIAL PRIMARY KEY,
    fecha_metricas DATE NOT NULL DEFAULT CURRENT_DATE,
    estacion_trabajo VARCHAR(20) NOT NULL REFERENCES selemti.kds_estaciones(codigo_estacion),
    total_ordenes INTEGER NOT NULL CHECK (total_ordenes >= 0),
    ordenes_completadas INTEGER NOT NULL CHECK (ordenes_completadas >= 0 AND ordenes_completadas <= total_ordenes),
    tiempo_promedio_preparacion_min NUMERIC(6,2) CHECK (tiempo_promedio_preparacion_min >= 0),
    tiempo_maximo_preparacion_min INTEGER CHECK (tiempo_maximo_preparacion_min >= 0),
    ordenes_con_retraso INTEGER CHECK (ordenes_con_retraso >= 0 AND ordenes_con_retraso <= total_ordenes),
    porcentaje_cumplimiento_tiempo NUMERIC(5,2) CHECK (porcentaje_cumplimiento_tiempo BETWEEN 0 AND 100),
    created_at TIMESTAMP DEFAULT NOW(),
    
    UNIQUE (fecha_metricas, estacion_trabajo),
    CHECK (ordenes_completadas <= total_ordenes),
    CHECK (ordenes_con_retraso <= ordenes_completadas)
);
RAISE NOTICE 'Script 04 (Módulo Ventas/KDS - 5 tablas) ejecutado exitosamente';
-- END 04_modulo_ventas.sql

-- BEGIN 05_modulo_caja.sql
-- =====================================================
-- SCRIPT 05: MÓDULO DE CAJA (3 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- 20. CAJA_MOVIMIENTOS
CREATE TABLE selemti.caja_movimientos (
    id SERIAL PRIMARY KEY,
    caja_id VARCHAR(10) NOT NULL CHECK (caja_id IN ('CAJA1', 'CAJA2', 'CAJA3')),
    fecha_movimiento TIMESTAMP NOT NULL DEFAULT NOW(),
    tipo_movimiento VARCHAR(15) NOT NULL CHECK (tipo_movimiento IN ('APERTURA', 'VENTA', 'GASTO', 'RETIRO', 'DEPOSITO', 'CIERRE')),
    descripcion VARCHAR(200) NOT NULL CHECK (LENGTH(descripcion) >= 5),
    monto NUMERIC(12,2) NOT NULL CHECK (monto != 0),
    metodo_pago VARCHAR(20) CHECK (metodo_pago IN ('EFECTIVO', 'TARJETA_DEBITO', 'TARJETA_CREDITO', 'TRANSFERENCIA', 'VALES')),
    referencia VARCHAR(50),
    usuario_id INTEGER NOT NULL REFERENCES selemti.users(id),
    sucursal_id VARCHAR(10) NOT NULL CHECK (sucursal_id IN ('SUR', 'NORTE', 'CENTRO')),
    estado VARCHAR(15) DEFAULT 'ACTIVO' CHECK (estado IN ('ACTIVO', 'CANCELADO', 'AJUSTADO')),
    created_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (CASE WHEN tipo_movimiento = 'VENTA' THEN referencia IS NOT NULL ELSE TRUE END),
    CHECK (CASE WHEN tipo_movimiento IN ('GASTO', 'RETIRO') THEN monto < 0 ELSE TRUE END),
    CHECK (CASE WHEN tipo_movimiento IN ('APERTURA', 'VENTA', 'DEPOSITO') THEN monto > 0 ELSE TRUE END)
);
-- 21. CAJA_CIERRES
CREATE TABLE selemti.caja_cierres (
    id SERIAL PRIMARY KEY,
    caja_id VARCHAR(10) NOT NULL CHECK (caja_id IN ('CAJA1', 'CAJA2', 'CAJA3')),
    fecha_cierre DATE NOT NULL DEFAULT CURRENT_DATE,
    turno VARCHAR(10) NOT NULL CHECK (turno IN ('MATUTINO', 'VESPERTINO', 'NOCTURNO')),
    usuario_cajero INTEGER NOT NULL REFERENCES selemti.users(id),
    usuario_supervisor INTEGER REFERENCES selemti.users(id),
    saldo_inicial NUMERIC(12,2) NOT NULL CHECK (saldo_inicial >= 0),
    total_ventas_efectivo NUMERIC(12,2) CHECK (total_ventas_efectivo >= 0),
    total_ventas_tarjeta NUMERIC(12,2) CHECK (total_ventas_tarjeta >= 0),
    total_otros_ingresos NUMERIC(12,2) CHECK (total_otros_ingresos >= 0),
    total_gastos NUMERIC(12,2) CHECK (total_gastos >= 0),
    total_retiros NUMERIC(12,2) CHECK (total_retiros >= 0),
    efectivo_declarado NUMERIC(12,2) CHECK (efectivo_declarado >= 0),
    diferencia_efectivo NUMERIC(12,2),
    estado_cierre VARCHAR(15) DEFAULT 'PENDIENTE' CHECK (estado_cierre IN ('PENDIENTE', 'APROBADO', 'RECHAZADO', 'AJUSTADO')),
    motivo_diferencia TEXT,
    fecha_aprobacion TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    
    UNIQUE (caja_id, fecha_cierre, turno),
    CHECK (CASE WHEN ABS(diferencia_efectivo) > 50 THEN motivo_diferencia IS NOT NULL ELSE TRUE END),
    CHECK (CASE WHEN estado_cierre = 'APROBADO' THEN usuario_supervisor IS NOT NULL ELSE TRUE END)
);
-- 22. CAJA_DIFERENCIAS
CREATE TABLE selemti.caja_diferencias (
    id SERIAL PRIMARY KEY,
    cierre_id INTEGER NOT NULL REFERENCES selemti.caja_cierres(id) ON DELETE CASCADE,
    tipo_diferencia VARCHAR(15) NOT NULL CHECK (tipo_diferencia IN ('SOBRANTE', 'FALTANTE', 'GASTO_NO_REGISTRADO', 'INGRESO_NO_REGISTRADO')),
    monto_diferencia NUMERIC(10,2) NOT NULL CHECK (monto_diferencia != 0),
    descripcion_detallada TEXT NOT NULL CHECK (LENGTH(descripcion_detallada) >= 10),
    accion_correctiva TEXT,
    usuario_responsable INTEGER REFERENCES selemti.users(id),
    estado_resolucion VARCHAR(15) DEFAULT 'PENDIENTE' CHECK (estado_resolucion IN ('PENDIENTE', 'RESUELTO', 'JUSTIFICADO', 'IRRECUPERABLE')),
    fecha_resolucion TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (CASE 
        WHEN tipo_diferencia IN ('SOBRANTE', 'INGRESO_NO_REGISTRADO') THEN monto_diferencia > 0 
        WHEN tipo_diferencia IN ('FALTANTE', 'GASTO_NO_REGISTRADO') THEN monto_diferencia < 0 
        ELSE TRUE 
    END)
);
RAISE NOTICE 'Script 05 (Módulo Caja - 3 tablas) ejecutado exitosamente';
-- END 05_modulo_caja.sql

-- BEGIN 06_modulo_appcc.sql
-- =====================================================
-- SCRIPT 06: MÓDULO APPCC (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- 23. APPCC_PUNTOS_CONTROL
CREATE TABLE selemti.appcc_puntos_control (
    id SERIAL PRIMARY KEY,
    codigo_punto VARCHAR(20) UNIQUE NOT NULL CHECK (codigo_punto ~ '^PCC-[A-Z0-9\-]{1,15}$'),
    nombre_punto VARCHAR(100) NOT NULL,
    proceso VARCHAR(50) NOT NULL CHECK (proceso IN ('RECEPCION', 'ALMACENAMIENTO', 'PREPARACION', 'COCCION', 'ENFRIAMIENTO', 'REGENERACION', 'SERVICIO')),
    peligro_identificado VARCHAR(100) NOT NULL CHECK (LENGTH(peligro_identificado) >= 5),
    tipo_peligro VARCHAR(20) NOT NULL CHECK (tipo_peligro IN ('BIOLOGICO', 'QUIMICO', 'FISICO', 'ALERGENOS')),
    medida_control VARCHAR(200) NOT NULL,
    limite_critico VARCHAR(100) NOT NULL,
    frecuencia_monitoreo VARCHAR(50) NOT NULL,
    responsable_monitoreo VARCHAR(50) NOT NULL,
    accion_correctiva TEXT NOT NULL,
    activo BOOLEAN DEFAULT TRUE,
    usuario_creador INTEGER REFERENCES selemti.users(id),
    fecha_creacion TIMESTAMP DEFAULT NOW(),
    fecha_revision TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (fecha_revision IS NULL OR fecha_revision >= fecha_creacion)
);
-- INSERTAR PUNTOS DE CONTROL APPCC BÁSICOS
INSERT INTO selemti.appcc_puntos_control VALUES 
(1, 'PCC-RECEP-001', 'Recepción Productos Perecederos', 'RECEPCION', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control de temperatura', 'Temperatura <= 4°C para productos refrigerados', 'CADA LOTE', 'Personal Almacén', 'Rechazar lote y notificar al proveedor', true, 1, NOW(), NULL, NOW(), NOW()),
(2, 'PCC-ALM-001', 'Almacenamiento Refrigerado', 'ALMACENAMIENTO', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control temperatura neveras', 'Temperatura entre 0°C y 4°C', 'CADA 4 HORAS', 'Personal Cocina', 'Ajustar temperatura y verificar productos', true, 1, NOW(), NULL, NOW(), NOW()),
(3, 'PCC-COC-001', 'Cocción de Alimentos', 'COCCION', 'Supervivencia de microorganismos', 'BIOLOGICO', 'Control temperatura interna', 'Temperatura interna >= 75°C por 2 minutos', 'CADA BATCH', 'Chef', 'Extender tiempo de cocción', true, 1, NOW(), NULL, NOW(), NOW());
-- 24. APPCC_REGISTROS
CREATE TABLE selemti.appcc_registros (
    id SERIAL PRIMARY KEY,
    punto_control_id INTEGER NOT NULL REFERENCES selemti.appcc_puntos_control(id),
    fecha_registro DATE NOT NULL DEFAULT CURRENT_DATE,
    hora_registro TIME NOT NULL DEFAULT CURRENT_TIME,
    valor_medido VARCHAR(50) NOT NULL,
    cumple_limite BOOLEAN NOT NULL,
    observaciones TEXT,
    usuario_registrador INTEGER NOT NULL REFERENCES selemti.users(id),
    evidencia_fotografica_url VARCHAR(500),
    created_at TIMESTAMP DEFAULT NOW(),
    
    UNIQUE (punto_control_id, fecha_registro, hora_registro),
    CHECK (hora_registro BETWEEN '06:00:00' AND '23:00:00')
);
-- 25. APPCC_ALERTAS
CREATE TABLE selemti.appcc_alertas (
    id SERIAL PRIMARY KEY,
    punto_control_id INTEGER NOT NULL REFERENCES selemti.appcc_puntos_control(id),
    registro_id INTEGER REFERENCES selemti.appcc_registros(id),
    fecha_alerta TIMESTAMP NOT NULL DEFAULT NOW(),
    tipo_alerta VARCHAR(20) NOT NULL CHECK (tipo_alerta IN ('LIMITE_EXCEDIDO', 'REGISTRO_FALTANTE', 'EQUIPO_FALLADO')),
    gravedad VARCHAR(10) NOT NULL CHECK (gravedad IN ('BAJA', 'MEDIA', 'ALTA', 'CRITICA')),
    descripcion_alerta TEXT NOT NULL CHECK (LENGTH(descripcion_alerta) >= 10),
    accion_tomada TEXT,
    usuario_responsable INTEGER REFERENCES selemti.users(id),
    estado_alerta VARCHAR(15) DEFAULT 'PENDIENTE' CHECK (estado_alerta IN ('PENDIENTE', 'EN_PROCESO', 'RESUELTA', 'ESCALADA')),
    fecha_resolucion TIMESTAMP,
    tiempo_resolucion_min INTEGER,
    created_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (fecha_resolucion IS NULL OR fecha_resolucion >= fecha_alerta),
    CHECK (CASE WHEN estado_alerta = 'RESUELTA' THEN fecha_resolucion IS NOT NULL AND accion_tomada IS NOT NULL ELSE TRUE END)
);
-- 26. APPCC_ACCIONES
CREATE TABLE selemti.appcc_acciones (
    id SERIAL PRIMARY KEY,
    alerta_id INTEGER NOT NULL REFERENCES selemti.appcc_alertas(id) ON DELETE CASCADE,
    descripcion_accion TEXT NOT NULL CHECK (LENGTH(descripcion_accion) >= 10),
    tipo_accion VARCHAR(20) NOT NULL CHECK (tipo_accion IN ('CORRECTIVA', 'PREVENTIVA', 'MEJORA')),
    usuario_asignado INTEGER NOT NULL REFERENCES selemti.users(id),
    fecha_limite DATE NOT NULL CHECK (fecha_limite >= CURRENT_DATE),
    fecha_completado TIMESTAMP,
    estado_accion VARCHAR(15) DEFAULT 'PENDIENTE' CHECK (estado_accion IN ('PENDIENTE', 'EN_PROGRESO', 'COMPLETADA', 'CANCELADA')),
    evidencia_url VARCHAR(500),
    eficacia_verificada BOOLEAN DEFAULT FALSE,
    fecha_verificacion TIMESTAMP,
    usuario_verificador INTEGER REFERENCES selemti.users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (fecha_completado IS NULL OR fecha_completado >= created_at),
    CHECK (fecha_verificacion IS NULL OR fecha_verificacion >= fecha_completado),
    CHECK (CASE WHEN eficacia_verificada = true THEN fecha_verificacion IS NOT NULL AND usuario_verificador IS NOT NULL ELSE TRUE END)
);
RAISE NOTICE 'Script 06 (Módulo APPCC - 4 tablas) ejecutado exitosamente';
-- END 06_modulo_appcc.sql

-- BEGIN 07_modulo_configuracion.sql
-- =====================================================
-- SCRIPT 07: MÓDULO DE CONFIGURACIÓN (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- 27. PARAMETROS_SISTEMA
CREATE TABLE selemti.parametros_sistema (
    id SERIAL PRIMARY KEY,
    codigo_parametro VARCHAR(50) UNIQUE NOT NULL CHECK (LENGTH(codigo_parametro) >= 3),
    nombre_parametro VARCHAR(100) NOT NULL,
    valor_parametro TEXT NOT NULL,
    tipo_dato VARCHAR(10) NOT NULL CHECK (tipo_dato IN ('TEXTO', 'NUMERICO', 'BOOLEANO', 'FECHA', 'JSON')),
    modulo VARCHAR(20) NOT NULL CHECK (modulo IN ('INVENTARIO', 'RECETAS', 'VENTAS', 'CAJA', 'APPCC', 'GENERAL')),
    descripcion TEXT NOT NULL,
    valor_por_defecto TEXT,
    editable BOOLEAN DEFAULT TRUE,
    requiere_reinicio BOOLEAN DEFAULT FALSE,
    usuario_ultima_modificacion INTEGER REFERENCES selemti.users(id),
    fecha_ultima_modificacion TIMESTAMP DEFAULT NOW(),
    created_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (CASE 
        WHEN tipo_dato = 'NUMERICO' THEN valor_parametro ~ '^-?[0-9]+(\.[0-9]+)?$'
        WHEN tipo_dato = 'BOOLEANO' THEN valor_parametro IN ('true', 'false', '1', '0')
        WHEN tipo_dato = 'FECHA' THEN valor_parametro ~ '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
        ELSE TRUE 
    END)
);
-- INSERTAR PARÁMETROS CRÍTICOS DEL SISTEMA
INSERT INTO selemti.parametros_sistema VALUES 
(1, 'INV_TOLERANCIA_DIFERENCIA', 'Tolerancia para diferencias de inventario', '0.05', 'NUMERICO', 'INVENTARIO', 'Tolerancia permitida para diferencias en conteos físicos (5%)', '0.05', true, false, NULL, NOW(), NOW()),
(2, 'CAJA_TOLERANCIA_EFECTIVO', 'Tolerancia para diferencias de efectivo', '50.00', 'NUMERICO', 'CAJA', 'Tolerancia en pesos para diferencias de caja sin requerir aprobación', '50.00', true, false, NULL, NOW(), NOW()),
(3, 'APPCC_FRECUENCIA_MONITOREO', 'Frecuencia de monitoreo APPCC', '4', 'NUMERICO', 'APPCC', 'Horas entre monitoreos de puntos críticos', '4', true, true, NULL, NOW(), NOW()),
(4, 'KDS_TIEMPO_MAX_PREPARACION', 'Tiempo máximo de preparación', '30', 'NUMERICO', 'VENTAS', 'Tiempo máximo en minutos para preparación de platos', '30', true, false, NULL, NOW(), NOW()),
(5, 'SISTEMA_MODO_MANTENIMIENTO', 'Modo mantenimiento del sistema', 'false', 'BOOLEANO', 'GENERAL', 'Activa el modo mantenimiento del sistema', 'false', true, true, NULL, NOW(), NOW()),
(6, 'INV_POLITICA_CONSUMO', 'Política de consumo de inventario', 'FEFO', 'TEXTO', 'INVENTARIO', 'Política por defecto para consumo de inventario (FEFO/PEPS)', 'FEFO', true, false, NULL, NOW(), NOW());
-- 28. PROVEEDORES
CREATE TABLE selemti.proveedores (
    codigo VARCHAR(20) PRIMARY KEY CHECK (codigo ~ '^PROV-[A-Z0-9\-]{1,15}$'),
    nombre VARCHAR(100) NOT NULL,
    rfc VARCHAR(13) CHECK (LENGTH(rfc) = 13 OR rfc IS NULL),
    direccion TEXT,
    telefono VARCHAR(15),
    email VARCHAR(100) CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'),
    contacto_principal VARCHAR(100),
    tipo_proveedor VARCHAR(20) CHECK (tipo_proveedor IN ('ALIMENTOS', 'BEBIDAS', 'LIMPIEZA', 'EQUIPO', 'SERVICIO')),
    categoria_calidad VARCHAR(10) CHECK (categoria_calidad IN ('A', 'B', 'C', 'SUSPENDIDO')),
    plazo_entrega_dias INTEGER CHECK (plazo_entrega_dias > 0),
    condiciones_pago VARCHAR(50),
    activo BOOLEAN DEFAULT TRUE,
    fecha_alta DATE DEFAULT CURRENT_DATE,
    fecha_ultima_compra DATE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (rfc IS NULL OR rfc ~ '^[A-Z&Ñ]{3,4}[0-9]{6}[A-Z0-9]{3}$')
);
-- 29. UBICACIONES
CREATE TABLE selemti.ubicaciones (
    codigo VARCHAR(10) PRIMARY KEY CHECK (codigo LIKE 'UBIC-%'),
    nombre VARCHAR(50) NOT NULL,
    tipo_ubicacion VARCHAR(20) NOT NULL CHECK (tipo_ubicacion IN ('BODEGA', 'REFRIGERADOR', 'CONGELADOR', 'ALACENA', 'BARRA', 'COCINA', 'MOSTRADOR')),
    sucursal VARCHAR(10) NOT NULL CHECK (sucursal IN ('SUR', 'NORTE', 'CENTRO')),
    temperatura_ideal NUMERIC(5,2),
    capacidad_maxima_kg NUMERIC(10,3),
    responsable INTEGER REFERENCES selemti.users(id),
    activa BOOLEAN DEFAULT TRUE,
    ubicacion_padre VARCHAR(10) REFERENCES selemti.ubicaciones(codigo),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (ubicacion_padre IS NULL OR ubicacion_padre != codigo)
);
-- INSERTAR UBICACIONES BÁSICAS
INSERT INTO selemti.ubicaciones VALUES 
('UBIC-BODEGA1', 'Bodega Principal', 'BODEGA', 'SUR', 18.0, 1000.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-REFRIG1', 'Refrigerador Carnes', 'REFRIGERADOR', 'SUR', 4.0, 200.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-CONGEL1', 'Congelador Pescados', 'CONGELADOR', 'SUR', -18.0, 150.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-BARRA', 'Barra Principal', 'BARRA', 'SUR', 8.0, 50.0, NULL, true, NULL, NOW(), Now());
-- 30. CATEGORIAS_ITEMS
CREATE TABLE selemti.categorias_items (
    codigo VARCHAR(10) PRIMARY KEY CHECK (codigo LIKE 'CAT-%'),
    nombre VARCHAR(50) NOT NULL,
    descripcion TEXT,
    tipo_categoria VARCHAR(20) NOT NULL CHECK (tipo_categoria IN ('INSUMO', 'PRODUCTO_TERMINADO', 'MATERIAL', 'SERVICIO')),
    categoria_padre VARCHAR(10) REFERENCES selemti.categorias_items(codigo),
    cuenta_contable VARCHAR(20),
    porcentaje_merma_esperado NUMERIC(5,2) DEFAULT 0 CHECK (porcentaje_merma_esperado BETWEEN 0 AND 100),
    vida_util_dias INTEGER CHECK (vida_util_dias > 0),
    activa BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    
    CHECK (categoria_padre IS NULL OR categoria_padre != codigo)
);
-- INSERTAR CATEGORÍAS BÁSICAS
INSERT INTO selemti.categorias_items VALUES 
('CAT-PROTEINA', 'Proteínas', 'Carnes, pescados, aves', 'INSUMO', NULL, '1101', 5.0, 7, true, NOW(), NOW()),
('CAT-LACTEO', 'Lácteos', 'Leche, queso, yogurt', 'INSUMO', NULL, '1102', 3.0, 10, true, NOW(), NOW()),
('CAT-VERDURA', 'Verduras', 'Verduras frescas', 'INSUMO', NULL, '1103', 8.0, 5, true, NOW(), NOW()),
('CAT-BEBIDA', 'Bebidas', 'Refrescos, jugos, agua', 'INSUMO', NULL, '1104', 1.0, 30, true, NOW(), NOW()),
('CAT-MENU', 'Platos del Menú', 'Productos terminados para venta', 'PRODUCTO_TERMINADO', NULL, '2101', 2.0, 1, true, NOW(), NOW());
RAISE NOTICE 'Script 07 (Módulo Configuración - 4 tablas) ejecutado exitosamente';
-- END 07_modulo_configuracion.sql

-- BEGIN 08_datos_iniciales.sql
-- =====================================================
-- SCRIPT 08: DATOS INICIALES DEL SISTEMA
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- 1. CREAR USUARIO ADMINISTRADOR INICIAL
INSERT INTO selemti.users (username, password_hash, email, nombre_completo, sucursal_id, activo) VALUES 
('admin', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'admin@restaurante.com', 'Administrador del Sistema', 'SUR', true);
-- 2. ASIGNAR ROLES AL ADMINISTRADOR
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(1, 'GERENTE', 1),
(1, 'CHEF', 1),
(1, 'ALMACEN', 1),
(1, 'CAJERO', 1),
(1, 'AUDITOR', 1);
-- 3. CREAR USUARIOS DE EJEMPLO POR ROL
INSERT INTO selemti.users (username, password_hash, nombre_completo, sucursal_id, activo) VALUES 
('chef.juan', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Juan Pérez - Chef', 'SUR', true),
('almacen.maria', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'María García - Almacén', 'SUR', true),
('caja.carlos', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Carlos López - Cajero', 'SUR', true);
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(2, 'CHEF', 1),
(3, 'ALMACEN', 1),
(4, 'CAJERO', 1);
-- 4. INSERTAR ÍTEMS DE EJEMPLO (MATERIAS PRIMAS)
INSERT INTO selemti.items (id, nombre, categoria_id, unidad_medida, perishable, temperatura_min, temperatura_max) VALUES 
('PROT-POLLO-PECHUGA-1KG', 'Pechuga de Pollo', 'CAT-PROTEINA', 'KG', true, 0, 4),
('PROT-SALMON-FRESCO-1KG', 'Salmón Fresco', 'CAT-PROTEINA', 'KG', true, -2, 2),
('VERD-LECHUGA-ROMA-1KG', 'Lechuga Romana', 'CAT-VERDURA', 'KG', true, 1, 4),
('VERD-TOMATE-ROJO-1KG', 'Tomate Rojo', 'CAT-VERDURA', 'KG', true, 10, 15),
('LACT-QUESO-MOZZARELLA-1KG', 'Queso Mozzarella', 'CAT-LACTEO', 'KG', true, 2, 6),
('BEBID-AGUA-1LT', 'Agua Purificada', 'CAT-BEBIDA', 'LT', false, NULL, NULL);
-- 5. INSERTAR RECETAS DE EJEMPLO
INSERT INTO selemti.receta_cab (id, codigo_plato_pos, nombre_plato, categoria_cocina, tipo_preparacion, tiempo_preparacion_min, rendimiento_porciones, nivel_dificultad, activo, usuario_creador, costo_standard_porcion, precio_venta_sugerido) VALUES 
('REC-CEVICHE-CLASICO', 'CEV-001', 'Ceviche Clásico', 'PLATO_FUERTE', 'FRIA', 20, 4, 'MEDIA', true, 1, 45.00, 180.00),
('REC-ENSALADA-CESAR', 'ENS-001', 'Ensalada César', 'ENTRADA', 'FRIA', 15, 2, 'BAJA', true, 1, 35.00, 120.00);
-- 6. INSERTAR DETALLES DE RECETAS
INSERT INTO selemti.receta_det (receta_id, item_id, tipo_componente, cantidad_bruta, porcentaje_merma, cantidad_neta, orden_mezcla, tipo_medida) VALUES 
('REC-CEVICHE-CLASICO', 'PROT-SALMON-FRESCO-1KG', 'INGREDIENTE', 0.500, 10.00, 0.450, 1, 'PESO'),
('REC-CEVICHE-CLASICO', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.200, 5.00, 0.190, 2, 'PESO'),
('REC-ENSALADA-CESAR', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.300, 5.00, 0.285, 1, 'PESO'),
('REC-ENSALADA-CESAR', 'LACT-QUESO-MOZZARELLA-1KG', 'INGREDIENTE', 0.100, 2.00, 0.098, 2, 'PESO');
-- 7. ACTUALIZAR FOREIGN KEYS PENDIENTES
-- Actualizar recepcion_cab con referencia a proveedores
UPDATE selemti.recepcion_cab SET proveedor_id = 'PROV-CARNICOS-LA-PALMA' WHERE proveedor_id IS NOT NULL;
-- 8. CREAR PROVEEDORES DE EJEMPLO
INSERT INTO selemti.proveedores (codigo, nombre, tipo_proveedor, categoria_calidad, activo) VALUES 
('PROV-CARNICOS-LA-PALMA', 'Cárnicos La Palma', 'ALIMENTOS', 'A', true),
('PROV-PESCADOS-FRESCOS', 'Pescados Frescos del Pacífico', 'ALIMENTOS', 'A', true),
('PROV-HORTALIZAS-ORGANICAS', 'Hortalizas Orgánicas', 'ALIMENTOS', 'B', true);
RAISE NOTICE 'Script 08 (Datos iniciales) ejecutado exitosamente';
-- END 08_datos_iniciales.sql

-- BEGIN 09_indices_optimizacion.sql
-- =====================================================
-- SCRIPT 09: ÍNDICES DE OPTIMIZACIÓN
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- ÍNDICES PARA MÓDULO INVENTARIO
CREATE INDEX idx_mov_inv_item_fecha ON selemti.mov_inv(item_id, fecha_movimiento);
CREATE INDEX idx_mov_inv_referencia ON selemti.mov_inv(referencia_tipo, referencia_id);
CREATE INDEX idx_mov_inv_batch ON selemti.mov_inv(inventory_batch_id);
CREATE INDEX idx_mov_inv_salidas ON selemti.mov_inv(item_id, fecha_movimiento) WHERE tipo_movimiento = 'S';
CREATE INDEX idx_inventory_batch_estado ON selemti.inventory_batch(estado);
CREATE INDEX idx_inventory_batch_item_estado_caducidad ON selemti.inventory_batch(item_id, estado, fecha_caducidad);
CREATE INDEX idx_recepcion_det_lote ON selemti.recepcion_det(lote_proveedor, fecha_caducidad);
CREATE INDEX idx_recepcion_det_item ON selemti.recepcion_det(item_id);
CREATE INDEX idx_recepcion_det_recepcion ON selemti.recepcion_det(recepcion_id);
-- ÍNDICES PARA MÓDULO RECETAS
CREATE INDEX idx_receta_det_item ON selemti.receta_det(item_id);
CREATE INDEX idx_receta_det_orden ON selemti.receta_det(receta_id, orden_mezcla);
CREATE INDEX idx_op_produccion_receta ON selemti.op_produccion_cab(receta_id);
CREATE INDEX idx_op_produccion_fecha ON selemti.op_produccion_cab(fecha_produccion);
CREATE INDEX idx_op_produccion_estado ON selemti.op_produccion_cab(estado);
CREATE INDEX idx_op_det_op ON selemti.op_produccion_det(op_id);
CREATE INDEX idx_op_det_item ON selemti.op_produccion_det(item_id);
CREATE INDEX idx_op_det_batch ON selemti.op_produccion_det(inventory_batch_id);
-- ÍNDICES PARA MÓDULO VENTAS/KDS
CREATE INDEX idx_ticket_cab_fecha ON selemti.ticket_venta_cab(fecha_venta);
CREATE INDEX idx_ticket_cab_sucursal ON selemti.ticket_venta_cab(sucursal_id);
CREATE INDEX idx_ticket_cab_estado ON selemti.ticket_venta_cab(estado_ticket);
CREATE INDEX idx_ticket_cab_pos_id ON selemti.ticket_venta_cab(ticket_id_pos);
CREATE INDEX idx_ticket_det_ticket ON selemti.ticket_venta_det(ticket_id);
CREATE INDEX idx_ticket_det_item ON selemti.ticket_venta_det(item_id);
CREATE INDEX idx_ticket_det_estado ON selemti.ticket_venta_det(estado_item);
CREATE INDEX idx_ticket_det_estacion ON selemti.ticket_venta_det(estacion_asignada);
CREATE INDEX idx_kds_ordenes_estacion ON selemti.kds_ordenes(estacion_trabajo, estado_orden);
CREATE INDEX idx_kds_ordenes_estado ON selemti.kds_ordenes(estado_orden);
CREATE INDEX idx_kds_ordenes_ticket ON selemti.kds_ordenes(ticket_det_id);
CREATE INDEX idx_kds_ordenes_tiempo ON selemti.kds_ordenes(estacion_trabajo, orden_en_cola);
-- ÍNDICES PARA MÓDULO CAJA
CREATE INDEX idx_caja_movimientos_caja ON selemti.caja_movimientos(caja_id, fecha_movimiento);
CREATE INDEX idx_caja_movimientos_tipo ON selemti.caja_movimientos(tipo_movimiento);
CREATE INDEX idx_caja_movimientos_usuario ON selemti.caja_movimientos(usuario_id);
CREATE INDEX idx_caja_cierres_fecha ON selemti.caja_cierres(fecha_cierre);
CREATE INDEX idx_caja_cierres_usuario ON selemti.caja_cierres(usuario_cajero);
CREATE INDEX idx_caja_cierres_estado ON selemti.caja_cierres(estado_cierre);
-- ÍNDICES PARA MÓDULO APPCC
CREATE INDEX idx_appcc_registros_fecha ON selemti.appcc_registros(fecha_registro);
CREATE INDEX idx_appcc_registros_punto ON selemti.appcc_registros(punto_control_id);
CREATE INDEX idx_appcc_registros_cumple ON selemti.appcc_registros(cumple_limite);
CREATE INDEX idx_appcc_alertas_fecha ON selemti.appcc_alertas(fecha_alerta);
CREATE INDEX idx_appcc_alertas_estado ON selemti.appcc_alertas(estado_alerta);
CREATE INDEX idx_appcc_alertas_gravedad ON selemti.appcc_alertas(gravedad);
-- ÍNDICES PARA AUDITORÍA
CREATE INDEX idx_audit_log_timestamp ON selemti.audit_log(timestamp);
CREATE INDEX idx_audit_log_user_action ON selemti.audit_log(user_id, action_type);
CREATE INDEX idx_audit_log_table_record ON selemti.audit_log(table_name, record_id);
-- ÍNDICES PARA BÚSQUEDA DE TEXTO
CREATE INDEX idx_items_nombre_trgm ON selemti.items USING gin (nombre gin_trgm_ops);
CREATE INDEX idx_receta_cab_nombre ON selemti.receta_cab USING gin (nombre_plato gin_trgm_ops);
-- VISTAS PARA CONSULTAS FRECUENTES
CREATE OR REPLACE VIEW selemti.v_stock_actual AS
SELECT 
    item_id,
    ubicacion_id,
    SUM(CASE WHEN tipo_movimiento = 'E' THEN cantidad ELSE -cantidad END) as stock_actual
FROM selemti.mov_inv
GROUP BY item_id, ubicacion_id;
CREATE OR REPLACE VIEW selemti.v_stock_por_lote_fefo AS
SELECT 
    b.item_id,
    b.id as batch_id,
    b.lote_proveedor,
    b.fecha_caducidad,
    b.ubicacion_id,
    b.cantidad_actual as stock_lote,
    b.estado
FROM selemti.inventory_batch b
WHERE b.estado = 'ACTIVO' 
AND b.cantidad_actual > 0
ORDER BY b.fecha_caducidad ASC;
RAISE NOTICE 'Script 09 (Índices de optimización) ejecutado exitosamente';
RAISE NOTICE '✅ ESQUEMA SELETI COMPLETADO - 30 TABLAS CREADAS';
-- END 09_indices_optimizacion.sql

-- BEGIN corte_auxiliar.sql
-- =========================================
--  ESQUEMA AUXILIAR TERRENA  (Safe for POS)
-- =========================================

-- 1) Sesión de cajón propia de Terrena (ventana de precorte/corte/postcorte)
CREATE TABLE IF NOT EXISTS terrena_drawer_session (
  id               BIGSERIAL PRIMARY KEY,
  terminal_id      INTEGER NOT NULL REFERENCES public.terminal(id) ON UPDATE NO ACTION ON DELETE NO ACTION,
  dah_id           INTEGER NULL REFERENCES public.drawer_assigned_history(id) ON UPDATE NO ACTION ON DELETE SET NULL,
  assigned_user    INTEGER NULL REFERENCES public.users(auto_id) ON UPDATE NO ACTION ON DELETE SET NULL,
  window_start     TIMESTAMP NOT NULL,           -- inicio de la “ventana” (último reset/corte o primer movimiento del día)
  window_end       TIMESTAMP NULL,               -- fin (cuando se corta / se cierra sesión)
  status           VARCHAR(20) NOT NULL DEFAULT 'OPEN', -- OPEN | READY_FOR_CUT | CUT_DONE | CLOSED
  notes            TEXT NULL,
  created_at       TIMESTAMP NOT NULL DEFAULT now(),
  updated_at       TIMESTAMP NOT NULL DEFAULT now()
);
CREATE INDEX IF NOT EXISTS idx_terrena_session_terminal ON terrena_drawer_session(terminal_id, status);
-- 2) Precorte (encabezado)
CREATE TABLE IF NOT EXISTS terrena_precorte (
  id             BIGSERIAL PRIMARY KEY,
  session_id     BIGINT NOT NULL REFERENCES terrena_drawer_session(id) ON UPDATE NO ACTION ON DELETE CASCADE,
  user_id        INTEGER NULL REFERENCES public.users(auto_id),
  created_at     TIMESTAMP NOT NULL DEFAULT now(),
  notes          TEXT NULL
);
-- 3) Conteo rápido de efectivo (denominaciones)
CREATE TABLE IF NOT EXISTS terrena_precorte_cash (
  id            BIGSERIAL PRIMARY KEY,
  precorte_id   BIGINT NOT NULL REFERENCES terrena_precorte(id) ON UPDATE NO ACTION ON DELETE CASCADE,
  denom_value   NUMERIC(12,2) NOT NULL,
  qty           INTEGER NOT NULL DEFAULT 0
);
-- 4) Declarados por método (efectivo/tarjeta/transfer/etc.)
CREATE TABLE IF NOT EXISTS terrena_precorte_declared (
  id            BIGSERIAL PRIMARY KEY,
  precorte_id   BIGINT NOT NULL REFERENCES terrena_precorte(id) ON UPDATE NO ACTION ON DELETE CASCADE,
  method        VARCHAR(40) NOT NULL,            -- CASH | CREDIT | DEBIT | TRANSFER | CUSTOM:<name>
  amount        NUMERIC(14,2) NOT NULL DEFAULT 0
);
-- 5) Resultado de conciliación (postcorte)
CREATE TABLE IF NOT EXISTS terrena_conciliacion (
  id              BIGSERIAL PRIMARY KEY,
  session_id      BIGINT NOT NULL REFERENCES terrena_drawer_session(id) ON UPDATE NO ACTION ON DELETE CASCADE,
  declared_total  NUMERIC(14,2) NOT NULL DEFAULT 0,
  system_total    NUMERIC(14,2) NOT NULL DEFAULT 0,
  diff_total      NUMERIC(14,2) NOT NULL DEFAULT 0,
  details_json    JSONB NULL,                    -- breakdown (por método, descuentos, anulaciones, retiros…)
  created_at      TIMESTAMP NOT NULL DEFAULT now()
);
-- Helper: view de pagos en ventana (por terminal)
DROP VIEW IF EXISTS terrena_vw_window_payments;
CREATE VIEW terrena_vw_window_payments AS
SELECT
  s.id                AS session_id,
  t.terminal_id,
  t.user_id,
  t.payment_type,
  t.payment_sub_type,
  t.custom_payment_name,
  SUM(
    CASE
      WHEN COALESCE(t.voided,false) = TRUE THEN 0
      WHEN UPPER(COALESCE(t.transaction_type,'')) IN ('REFUND','VOID','RETURN') THEN 0
      ELSE COALESCE(t.amount,0)
    END
  ) AS total
FROM terrena_drawer_session s
JOIN transactions t
  ON t.terminal_id = s.terminal_id
 AND t.transaction_time >= s.window_start
 AND (s.window_end IS NULL OR t.transaction_time <= s.window_end)
GROUP BY s.id, t.terminal_id, t.user_id, t.payment_type, t.payment_sub_type, t.custom_payment_name;
-- Vendedores por ventana
DROP VIEW IF EXISTS terrena_vw_window_sellers;
CREATE VIEW terrena_vw_window_sellers AS
SELECT
  s.id      AS session_id,
  u.auto_id AS user_id,
  TRIM(COALESCE(u.first_name,'') || ' ' || COALESCE(u.last_name,'')) AS name,
  SUM(
    CASE
      WHEN COALESCE(t.voided,false) = TRUE THEN 0
      WHEN UPPER(COALESCE(t.transaction_type,'')) IN ('REFUND','VOID','RETURN') THEN 0
      ELSE COALESCE(t.amount,0)
    END
  ) AS total
FROM terrena_drawer_session s
JOIN transactions t
  ON t.terminal_id = s.terminal_id
 AND t.transaction_time >= s.window_start
 AND (s.window_end IS NULL OR t.transaction_time <= s.window_end)
JOIN users u ON u.auto_id = t.user_id
GROUP BY s.id, u.auto_id, name;
-- Descuentos por ventana (ticket y por ítem)
DROP VIEW IF EXISTS terrena_vw_window_discounts;
CREATE VIEW terrena_vw_window_discounts AS
SELECT s.id AS session_id,
       SUM(COALESCE(td.value,0)) AS ticket_discount_value,
       SUM(COALESCE(tid.amount,0)) AS item_discount_amount
FROM terrena_drawer_session s
LEFT JOIN ticket tk
  ON tk.terminal_id = s.terminal_id
 AND tk.create_date >= s.window_start
 AND (s.window_end IS NULL OR tk.create_date <= s.window_end)
LEFT JOIN ticket_discount td ON td.ticket_id = tk.id
LEFT JOIN ticket_item ti     ON ti.ticket_id = tk.id
LEFT JOIN ticket_item_discount tid ON tid.ticket_itemid = ti.id
GROUP BY s.id;
-- Retiros / PayOuts (transactions ya trae payout_* cuando aplica)
DROP VIEW IF EXISTS terrena_vw_window_payouts;
CREATE VIEW terrena_vw_window_payouts AS
SELECT s.id AS session_id,
       COUNT(*) FILTER (WHERE t.payout_reason_id IS NOT NULL) AS payout_count,
       COALESCE(SUM(CASE WHEN t.payout_reason_id IS NOT NULL THEN t.amount ELSE 0 END),0) AS payout_amount
FROM terrena_drawer_session s
LEFT JOIN transactions t
  ON t.terminal_id = s.terminal_id
 AND t.transaction_time >= s.window_start
 AND (s.window_end IS NULL OR t.transaction_time <= s.window_end)
GROUP BY s.id;
-- END corte_auxiliar.sql

-- BEGIN DEPLOY_CONSOLIDADO_FULL_PG95-20251017-0953.sql
-- DEPLOY CONSOLIDADO FULL PG95
-- Fecha: 10/17/2025 09:53:25
SET client_min_messages TO warning;
SET search_path TO selemti, public;
-- BEGIN BASE: 000.  SISTEMA SELEMTI - ESQUEMA COMPLETO DE BASE DE DATOS- OK.sql\n
-- =====================================================================
-- SISTEMA SELEMTI - ESQUEMA COMPLETO DE BASE DE DATOS
-- PostgreSQL 9.5 compatible - VERSIÓN CORREGIDA (v4.0)
-- Fecha: September 26, 2025
-- Idempotente: Sí (ejecutable múltiples veces)
-- =====================================================================

-- **CORRECCIÓN DE ERRORES PREVIOS: 
-- 1. Se eliminaron metacomandos de psql.
-- 2. Se agregó IF NOT EXISTS a todas las tablas y tipos.
-- 3. Se reemplazó ALTER TABLE ADD COLUMN IF NOT EXISTS (PG 9.6+) con bloques DO.
-- 4. Se reemplazó UNIQUE(COALESCE(...)) con CREATE UNIQUE INDEX separado.
-- 5. Se agregó DROP/CREATE para tabla USERS para corregir el error de columna 'username'.
-- 6. **CORREGIDO:** Se ajustó la longitud del hash de la contraseña a 60 caracteres para pasar la restricción CHECK.

SET client_min_messages = WARNING;
SET TIME ZONE 'America/Mexico_City';
-- 1.2 CREAR USUARIO DEDICADO
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'selemti_user') THEN
        -- Nota: En sistemas de producción, use una contraseña más segura
        CREATE USER selemti_user WITH PASSWORD 'selemti_password_2024';
        RAISE NOTICE 'Usuario selemti_user creado exitosamente';
    ELSE
        RAISE NOTICE 'Usuario selemti_user ya existe';
    END IF;
END
$$;
-- 1.3 OTORGAR PERMISOS
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT CREATE ON SCHEMA selemti TO selemti_user;
GRANT USAGE ON SCHEMA public TO selemti_user;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO selemti_user;
-- 1.4 CONFIGURAR SEARCH PATH
ALTER USER selemti_user SET search_path = 'selemti, public';
SET search_path TO selemti, public;
-- 2. TABLAS MAESTRAS BASE
------------------------------------------------------

-- **CORRECCIÓN 5: FORZAR RECREACIÓN DE TABLA USERS PARA CORREGIR EL ERROR DE COLUMNA.**
DROP TABLE IF EXISTS selemti.users CASCADE;
DROP SEQUENCE IF EXISTS selemti.users_id_seq CASCADE;
COMMENT ON TABLE selemti.users IS 'Usuarios del sistema con sus credenciales y estado';
COMMENT ON TABLE selemti.user_roles IS 'Asignación de roles a usuarios (RBAC)';
COMMENT ON TABLE selemti.items IS 'Maestro de todos los ítems del sistema';
COMMENT ON TABLE selemti.inventory_batch IS 'Lotes de inventario con trazabilidad completa';
COMMENT ON TABLE selemti.mov_inv IS 'Kardex completo de movimientos de inventario';
COMMENT ON TABLE selemti.receta_cab IS 'Cabecera de recetas y platos del menú';
COMMENT ON TABLE selemti.receta_version IS 'Control de versiones de recetas';
COMMENT ON TABLE selemti.receta_det IS 'Detalle de ingredientes por versión de receta';
COMMENT ON TABLE selemti.op_produccion_cab IS 'Órdenes de producción para elaborados';
-- 3.2 INSERTAR UNIDADES BASE
INSERT INTO selemti.unidades_medida (codigo, nombre, tipo, categoria, es_base, factor_conversion_base, decimales) VALUES 
('GR', 'Gramo', 'PESO', 'METRICO', true, 1.0, 2),
('KG', 'Kilogramo', 'PESO', 'METRICO', false, 1000.0, 2),
('ML', 'Mililitro', 'VOLUMEN', 'METRICO', true, 1.0, 2),
('LT', 'Litro', 'VOLUMEN', 'METRICO', false, 1000.0, 2),
('PZ', 'Pieza', 'UNIDAD', 'CULINARIO', true, 1.0, 0),
('OZ', 'Onza', 'PESO', 'IMPERIAL', false, 28.3495, 2),
('LB', 'Libra', 'PESO', 'IMPERIAL', false, 453.592, 2)
ON CONFLICT (codigo) DO NOTHING;
-- 3.4 ACTUALIZAR TABLA ITEMS CON NUEVAS UOM
-- **CORRECCIÓN 3: Reemplazo de ALTER TABLE ADD COLUMN IF NOT EXISTS por bloque DO $$ BEGIN ... END $$**
DO $$
BEGIN
    -- unidad_medida_id
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='unidad_medida_id') THEN
        ALTER TABLE selemti.items ADD COLUMN unidad_medida_id INTEGER REFERENCES selemti.unidades_medida(id);
    END IF;

    -- factor_conversion
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='factor_conversion') THEN
        ALTER TABLE selemti.items ADD COLUMN factor_conversion NUMERIC(12,6) DEFAULT 1.0;
    END IF;

    -- unidad_compra_id
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='unidad_compra_id') THEN
        ALTER TABLE selemti.items ADD COLUMN unidad_compra_id INTEGER REFERENCES selemti.unidades_medida(id);
    END IF;

    -- factor_compra
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='factor_compra') THEN
        ALTER TABLE selemti.items ADD COLUMN factor_compra NUMERIC(12,6) DEFAULT 1.0;
    END IF;
END $$;
-- 5.3 ACTUALIZAR TICKETS CON MODIFICADORES
-- **CORRECCIÓN 4: Reemplazo de ALTER TABLE ADD COLUMN IF NOT EXISTS por bloque DO $$ BEGIN ... END $$**
DO $$
BEGIN
    -- receta_shadow_id
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='ticket_venta_det' AND column_name='receta_shadow_id') THEN
        ALTER TABLE selemti.ticket_venta_det ADD COLUMN receta_shadow_id INTEGER REFERENCES selemti.receta_shadow(id);
    END IF;

    -- reprocesado
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='ticket_venta_det' AND column_name='reprocesado') THEN
        ALTER TABLE selemti.ticket_venta_det ADD COLUMN reprocesado BOOLEAN DEFAULT FALSE;
    END IF;
    
    -- version_reproceso
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='ticket_venta_det' AND column_name='version_reproceso') THEN
        ALTER TABLE selemti.ticket_venta_det ADD COLUMN version_reproceso INTEGER DEFAULT 1;
    END IF;

    -- modificadores_aplicados
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='ticket_venta_det' AND column_name='modificadores_aplicados') THEN
        ALTER TABLE selemti.ticket_venta_det ADD COLUMN modificadores_aplicados JSON;
    END IF;
END $$;
-- **CORRECCIÓN 6: Reemplazo de ALTER TABLE ADD COLUMN IF NOT EXISTS por bloque DO $$ BEGIN ... END $$**
DO $$
BEGIN
    -- tipo
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='tipo') THEN
        ALTER TABLE selemti.items ADD COLUMN tipo selemti.producto_tipo;
    END IF;

    -- unidad_salida_id
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_schema='selemti' AND table_name='items' AND column_name='unidad_salida_id') THEN
        ALTER TABLE selemti.items ADD COLUMN unidad_salida_id INT REFERENCES selemti.unidades_medida(id);
    END IF;
END$$;
---## 10. FUNCIONES Y VISTAS

-- 10.1 FUNCIÓN DE REPROCESAMIENTO DE COSTOS
CREATE OR REPLACE FUNCTION selemti.reprocesar_costos_historicos(
    p_fecha_desde DATE,
    p_fecha_hasta DATE DEFAULT NULL,
    p_algoritmo VARCHAR(10) DEFAULT 'WAC',
    p_usuario_id INTEGER DEFAULT 1
) RETURNS INTEGER AS $$
DECLARE
    v_lote_id INTEGER;
v_total_actualizados INTEGER := 0;
v_item_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
INSERT INTO selemti.job_recalc_queue (scope_type, scope_from, scope_to, reason, status)
    VALUES ('PERIODO', p_fecha_desde, p_fecha_hasta, 'Reproceso costos ' || p_algoritmo, 'RUNNING')
    RETURNING id INTO v_lote_id;
FOR v_item_record IN 
        SELECT DISTINCT item_id 
        FROM selemti.mov_inv 
        WHERE ts BETWEEN p_fecha_desde AND p_fecha_hasta
    LOOP
        UPDATE selemti.historial_costos_item
        SET costo_wac = (
            SELECT AVG(costo_unit * cantidad) / NULLIF(SUM(cantidad), 0)
            FROM selemti.mov_inv 
            WHERE item_id = v_item_record.item_id 
            AND ts BETWEEN p_fecha_desde AND p_fecha_hasta 
            AND tipo IN ('COMPRA', 'RECEPCION')
        )
        WHERE item_id = v_item_record.item_id AND fecha_efectiva BETWEEN p_fecha_desde AND p_fecha_hasta;
v_total_actualizados := v_total_actualizados + 1;
END LOOP;
UPDATE selemti.job_recalc_queue 
    SET status = 'DONE', 
        result = ('{"actualizados": ' || v_total_actualizados || '}')::json
    WHERE id = v_lote_id;
RETURN v_total_actualizados;
EXCEPTION
    WHEN OTHERS THEN
        UPDATE selemti.job_recalc_queue 
        SET status = 'FAILED', 
            result = ('{"error": "' || REPLACE(SQLERRM, '"', '\"') || '"}')::json
        WHERE id = v_lote_id;
RAISE;
END;
$$ LANGUAGE plpgsql;
-- 10.2 FUNCIÓN DE INFERENCIA DE RECETAS
CREATE OR REPLACE FUNCTION selemti.inferir_recetas_de_ventas(
    p_fecha_desde DATE,
    p_fecha_hasta DATE DEFAULT NULL
) RETURNS INTEGER AS $$
DECLARE
    v_recetas_inferidas INTEGER := 0;
v_plato_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
FOR v_plato_record IN 
        SELECT DISTINCT td.item_id, COUNT(*) as total_ventas
        FROM selemti.ticket_venta_det td
        JOIN selemti.ticket_venta_cab tc ON td.ticket_id = tc.id
        WHERE tc.fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta
          AND td.receta_shadow_id IS NULL
        GROUP BY td.item_id
        HAVING COUNT(*) >= 5
    LOOP
        INSERT INTO selemti.receta_shadow (codigo_plato_pos, nombre_plato, total_ventas_analizadas, fecha_primer_venta, fecha_ultima_venta)
        VALUES (v_plato_record.item_id, 'Inferida_' || v_plato_record.item_id, v_plato_record.total_ventas, p_fecha_desde, p_fecha_hasta);
UPDATE selemti.ticket_venta_det
        SET receta_shadow_id = currval('selemti.receta_shadow_id_seq'), reprocesado = TRUE, version_reproceso = 1
        WHERE item_id = v_plato_record.item_id
          AND ticket_id IN (SELECT id FROM selemti.ticket_venta_cab WHERE fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta);
v_recetas_inferidas := v_recetas_inferidas + 1;
END LOOP;
RETURN v_recetas_inferidas;
END;
$$ LANGUAGE plpgsql;
-- 10.3 FUNCIÓN DE CIERRE DE LOTE PREPARADO
CREATE OR REPLACE FUNCTION selemti.cerrar_lote_preparado(
    p_lote_id BIGINT,
    p_clase selemti.merma_clase,
    p_motivo TEXT,
    p_usuario_id INT DEFAULT NULL,
    p_uom_id INT DEFAULT NULL
) RETURNS BIGINT AS $$
DECLARE
    v_item_id TEXT;
v_qty_disponible NUMERIC(14,6);
v_mov_id BIGINT;
BEGIN
    SELECT b.item_id, b.cantidad_actual
    INTO v_item_id, v_qty_disponible
    FROM selemti.inventory_batch b
    WHERE b.id = p_lote_id;
IF v_item_id IS NULL THEN
        RAISE EXCEPTION 'Lote % no existe', p_lote_id;
END IF;
IF v_qty_disponible IS NULL OR v_qty_disponible <= 0 THEN
        RETURN 0;
END IF;
INSERT INTO selemti.mov_inv (ts, item_id, lote_id, cantidad, tipo, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, 0 - v_qty_disponible, 'MERMA', 'CIERRE_PREP', p_lote_id)
    RETURNING id INTO v_mov_id;
INSERT INTO selemti.perdida_log (ts, item_id, lote_id, clase, motivo, qty_canonica, usuario_id, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, p_clase, p_motivo, v_qty_disponible, p_usuario_id, 'CIERRE_PREP', v_mov_id);
RETURN v_mov_id;
END;
$$ LANGUAGE plpgsql;
-- 10.4 VISTAS PRINCIPALES
-- Se usó CREATE OR REPLACE VIEW para idempotencia
CREATE OR REPLACE VIEW selemti.v_stock_actual AS
SELECT 
    i.id as item_id,
    i.nombre,
    COALESCE(SUM(
        CASE WHEN m.tipo = 'ENTRADA' THEN m.cantidad 
             WHEN m.tipo = 'SALIDA' THEN -m.cantidad 
             ELSE 0 END
    ), 0) as stock_actual
FROM selemti.items i
LEFT JOIN selemti.mov_inv m ON i.id = m.item_id
GROUP BY i.id, i.nombre;
CREATE OR REPLACE VIEW selemti.v_ingenieria_menu_completa AS
SELECT 
    rc.id as receta_id,
    rc.nombre_plato,
    rc.codigo_plato_pos,
    rc.precio_venta_sugerido,
    rc.costo_standard_porcion as costo_actual,
    (rc.precio_venta_sugerido - rc.costo_standard_porcion) as margen_actual,
    CASE WHEN rc.precio_venta_sugerido > 0 THEN 
        (rc.precio_venta_sugerido - rc.costo_standard_porcion) / rc.precio_venta_sugerido * 100 
        ELSE 0 END as porcentaje_margen,
    rc.costo_standard_porcion > (rc.precio_venta_sugerido * 0.4) as alerta_costo_alto,
    (SELECT COUNT(*) FROM selemti.ticket_venta_det td WHERE td.item_id = rc.id) = 0 as alerta_sin_ventas
FROM selemti.receta_cab rc
WHERE rc.activo = true;
CREATE OR REPLACE VIEW selemti.v_merma_por_item AS
SELECT
    m.item_id,
    date_trunc('week', m.ts)::date AS semana,
    SUM(CASE WHEN m.tipo = 'MERMA' THEN m.cantidad ELSE 0 END) as qty_mermada,
    SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) as qty_recibida,
    CASE 
        WHEN SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) > 0
        THEN ROUND(100.0 * SUM(CASE WHEN m.tipo='MERMA' THEN m.cantidad ELSE 0 END) / 
            NULLIF(SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END),0), 2)
        ELSE 0
    END AS merma_pct
FROM selemti.mov_inv m
GROUP BY m.item_id, date_trunc('week', m.ts)::date;
---## 11. DATOS INICIALES Y CONFIGURACIÓN

-- 11.1 INSERTAR USUARIO ADMIN POR DEFECTO
-- **CORRECCIÓN 6:** Dummy hash de 60 caracteres para cumplir con la restricción CHECK.
INSERT INTO selemti.users ("username", "password_hash", "nombre_completo", "email", "activo") 
VALUES ('admin', 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', 'Administrador del Sistema', 'admin@selemti.com', true)
ON CONFLICT ("username") DO NOTHING;
-- 11.2 ASIGNAR ROL DE GERENTE
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by)
SELECT id, 'GERENTE', 1 FROM selemti.users WHERE username = 'admin'
ON CONFLICT (user_id, role_id) DO NOTHING;
-- 11.3 CONFIGURAR SUCURSAL PRINCIPAL
INSERT INTO selemti.param_sucursal (sucursal_id, consumo, tolerancia_precorte_pct, tolerancia_corte_abs)
VALUES ('SUR', 'FEFO', 0.02, 50.0)
ON CONFLICT (sucursal_id) DO NOTHING;
--- ## 12. VERIFICACIÓN FINAL

DO $$
DECLARE
    v_table_count INTEGER;
BEGIN
    -- Contar tablas creadas
    SELECT COUNT(*) INTO v_table_count
    FROM information_schema.tables 
    WHERE table_schema = 'selemti';
    
    RAISE NOTICE '✅ ESQUEMA SELEMTI CREADO EXITOSAMENTE';
    RAISE NOTICE '✅ TABLAS CREADAS: %', v_table_count;
    RAISE NOTICE '✅ POSTGRESQL 9.5 COMPATIBLE';
    RAISE NOTICE '✅ EJECUCIÓN FINALIZADA - SISTEMA LISTO PARA DESARROLLO';
END $$;
-- Marca el VARCHAR como deprecado (opcional: quitarlo más adelante)
ALTER TABLE selemti.items
  ALTER COLUMN unidad_medida SET DEFAULT 'PZ';
-- (Opcional a futuro) mover toda lectura/escritura a unidad_medida_id y
-- agregar una vista que exponga ambos para UI:
CREATE OR REPLACE VIEW selemti.v_items_con_uom AS
SELECT i.*,
       um.codigo  AS uom_codigo,
       um.nombre  AS uom_nombre,
       um.tipo    AS uom_tipo
FROM selemti.items i
LEFT JOIN selemti.unidades_medida um
       ON um.id = i.unidad_medida_id;
ALTER TABLE selemti.inventory_batch
  DROP CONSTRAINT IF EXISTS inventory_batch_fecha_caducidad_check;
CREATE OR REPLACE VIEW selemti.v_stock_brechas AS
SELECT sp.sucursal_id, sp.almacen_id, sp.item_id,
       sp.min_qty, sp.max_qty,
       COALESCE(sa.stock_actual,0) AS stock_actual,
       GREATEST(sp.min_qty - COALESCE(sa.stock_actual,0), 0) AS qty_a_comprar
FROM selemti.stock_policy sp
LEFT JOIN (
  SELECT item_id, SUM(
    CASE WHEN tipo IN ('ENTRADA') THEN cantidad
         WHEN tipo IN ('SALIDA','MERMA','AJUSTE','TRASPASO') THEN -cantidad
         ELSE 0 END
  ) AS stock_actual
  FROM selemti.mov_inv
  GROUP BY item_id
) sa ON sa.item_id = sp.item_id;
CREATE OR REPLACE VIEW selemti.v_merma_por_item AS
SELECT
  m.item_id,
  date_trunc('week', m.ts)::date AS semana,
  SUM(CASE WHEN m.tipo = 'MERMA' THEN m.cantidad ELSE 0 END)                      AS qty_mermada,
  SUM(CASE WHEN m.tipo IN ('ENTRADA') THEN m.cantidad ELSE 0 END)                 AS qty_recibida,
  ROUND(100.0 * NULLIF(
    SUM(CASE WHEN m.tipo='MERMA' THEN m.cantidad ELSE 0 END),0
  ) / NULLIF(SUM(CASE WHEN m.tipo IN ('ENTRADA') THEN m.cantidad ELSE 0 END),0), 2) AS merma_pct
FROM selemti.mov_inv m
GROUP BY m.item_id, date_trunc('week', m.ts)::date;
CREATE OR REPLACE FUNCTION selemti.registrar_consumo_porcionado(
  p_ticket_id BIGINT,
  p_ticket_det_id BIGINT,
  p_item_id TEXT,
  p_qty_total NUMERIC,      -- p.ej. 1000 ml de salsa
  p_distribucion JSON       -- [{receta_version_id: X, qty_ml: 300}, ...]
) RETURNS INT AS $$
DECLARE
  r JSON;
v_count INT := 0;
BEGIN
  FOR r IN SELECT * FROM json_array_elements(p_distribucion)
  LOOP
    INSERT INTO selemti.ticket_det_consumo(
      ticket_id, ticket_det_id, item_id, lote_id, qty_canonica, ref_tipo, ref_id
    )
    VALUES (
      p_ticket_id, p_ticket_det_id, p_item_id, NULL,
      (r->>'qty_ml')::NUMERIC,
      'PORCION', p_ticket_det_id
    );
v_count := v_count + 1;
END LOOP;
RETURN v_count;
END;
$$ LANGUAGE plpgsql;
-- Trigger BI para subtotal
CREATE OR REPLACE FUNCTION selemti.fn_precorte_efectivo_bi()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  NEW.subtotal := COALESCE(NEW.denominacion,0) * COALESCE(NEW.cantidad,0);
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_precorte_efectivo_bi ON selemti.precorte_efectivo;
-- 2) Funciones (ASCII-safe) y triggers

-- 2.1 Slug ASCII (evita problemas de codificación)
CREATE OR REPLACE FUNCTION selemti.fn_slug(txt text)
RETURNS text LANGUAGE plpgsql AS $$
DECLARE s TEXT := lower(coalesce(txt,''));
BEGIN
  -- sólo minúsculas y guiones (sin acentos para evitar encoding issues)
  s := regexp_replace(s, '[^a-z0-9]+', '-', 'g');
s := regexp_replace(s, '(^-|-$)', '', 'g');
IF s = '' THEN RETURN NULL;
END IF;
RETURN s;
END $$;
CREATE OR REPLACE FUNCTION selemti.fn_normalizar_forma_pago(
  p_payment_type TEXT,
  p_transaction_type TEXT,
  p_payment_sub_type TEXT,
  p_custom_name TEXT
) RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE pt TEXT := upper(coalesce(p_payment_type,''));
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN ('CASH','CREDIT','DEBIT','TRANSFER') THEN
    RETURN pt;
ELSIF pt = 'CUSTOM_PAYMENT' THEN
    IF cn IS NOT NULL THEN
      RETURN 'CUSTOM:' || cn;
ELSE
      RETURN 'CUSTOM';
END IF;
ELSE
    RETURN pt;
-- fallback
  END IF;
END $$;
-- Trigger en transactions para auto-poblar catálogo (usa ON CONFLICT DO NOTHING genérico)
CREATE OR REPLACE FUNCTION selemti.fn_tx_after_insert_forma_pago()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_codigo TEXT;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
                NEW.payment_type,
                NEW.transaction_type,
                NEW.payment_sub_type,
                NEW.custom_payment_name
              );
INSERT INTO selemti.formas_pago
    (codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref)
  VALUES
    (v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref)
  ON CONFLICT DO NOTHING;
-- aplica por uq_fp_codigo o por uq_fp_huella_expr

  RETURN NEW;
END $$;
-- (re)crear trigger
DROP TRIGGER IF EXISTS trg_selemti_tx_ai_forma_pago ON public.transactions;
-- Semillas mínimas
INSERT INTO selemti.formas_pago(codigo, payment_type)
VALUES ('CASH','CASH'),('CREDIT','CREDIT'),('DEBIT','DEBIT'),('TRANSFER','TRANSFER')
ON CONFLICT DO NOTHING;
-- 2.2 Apertura/cierre por historial (corrige UPDATE sin ORDER BY LIMIT)
CREATE OR REPLACE FUNCTION selemti.fn_dah_after_insert()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE
  v_terminal_id   INTEGER;
v_apertura_ts   TIMESTAMPTZ := NEW."time";
v_fondo         NUMERIC(12,2) := 0;
v_op            TEXT := COALESCE(NEW.operation,'');
v_obj_id        BIGINT;
BEGIN
  v_terminal_id := selemti.fn_resolver_terminal_para_usuario(NEW.a_user, NEW."time");
IF v_terminal_id IS NULL THEN
    INSERT INTO selemti.auditoria(quien, que, payload)
    VALUES (NEW.a_user, 'NO_SE_PUDO_RESOLVER_TERMINAL', jsonb_build_object('dah_id',NEW.id,'operation',NEW.operation,'time',NEW."time"));
RETURN NEW;
END IF;
-- Apertura/asignación
  IF v_op ~* '(assign|asign|open|apert)' THEN
    v_fondo := selemti.fn_fondo_actual(v_terminal_id);
IF NOT EXISTS (
      SELECT 1 FROM selemti.sesion_cajon s
      WHERE s.terminal_id = v_terminal_id
        AND s.cajero_usuario_id = NEW.a_user
        AND s.apertura_ts = v_apertura_ts
    ) THEN
      INSERT INTO selemti.sesion_cajon(terminal_id, cajero_usuario_id, dah_evento_id,
                                       apertura_ts, estatus, opening_float, creado_por)
      VALUES (v_terminal_id, NEW.a_user, NEW.id,
              v_apertura_ts, 'ACTIVA', v_fondo, NEW.a_user);
INSERT INTO selemti.auditoria(quien, que, payload)
      VALUES (NEW.a_user, 'APERTURA_SESION_CAJON', jsonb_build_object('fondo',v_fondo));
END IF;
END IF;
-- Cierre/liberación base (elige la última sesión abierta via subselect)
  IF v_op ~* '(release|liber|close|cerrar|unassign|fin|end)' THEN
    SELECT s.id INTO v_obj_id
    FROM selemti.sesion_cajon s
    WHERE s.terminal_id = v_terminal_id
      AND s.cajero_usuario_id = NEW.a_user
      AND s.cierre_ts IS NULL
    ORDER BY s.apertura_ts DESC
    LIMIT 1;
IF v_obj_id IS NOT NULL THEN
      UPDATE selemti.sesion_cajon
         SET cierre_ts = COALESCE(cierre_ts, NEW."time"),
             estatus   = CASE WHEN estatus='ACTIVA' THEN 'LISTO_PARA_CORTE' ELSE estatus END
       WHERE id = v_obj_id;
END IF;
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_dah_ai ON public.drawer_assigned_history;
-- 2.3 Snapshot de cierre (terminal BEFORE UPDATE) — corrige sintaxis
CREATE OR REPLACE FUNCTION selemti.fn_terminal_bu_snapshot_cierre()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_obj_id BIGINT;
BEGIN
  IF OLD.assigned_user IS NOT NULL AND NEW.assigned_user IS NULL THEN
    SELECT s.id INTO v_obj_id
    FROM selemti.sesion_cajon s
    WHERE s.terminal_id = OLD.id
      AND s.cajero_usuario_id = OLD.assigned_user
      AND s.cierre_ts IS NULL
    ORDER BY s.apertura_ts DESC
    LIMIT 1;
IF v_obj_id IS NOT NULL THEN
      UPDATE selemti.sesion_cajon
         SET closing_float = COALESCE(closing_float, OLD.current_balance::numeric),
             cierre_ts     = COALESCE(cierre_ts, now()),
             estatus       = CASE WHEN estatus='ACTIVA' THEN 'LISTO_PARA_CORTE' ELSE estatus END
       WHERE id = v_obj_id;
INSERT INTO selemti.auditoria(quien, que, payload)
      VALUES (OLD.assigned_user, 'SNAPSHOT_CIERRE_TERMINAL',
              jsonb_build_object('terminal_id',OLD.id,'closing_float',OLD.current_balance));
END IF;
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_terminal_bu_snapshot ON public.terminal;
-- 2.4 Refuerzo de cierre en drawer_assigned_history (corrige UPDATE)
CREATE OR REPLACE FUNCTION selemti.fn_dah_after_insert_refuerzo()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE
  v_terminal_id   INTEGER;
v_now_balance   NUMERIC(12,2);
v_op            TEXT := COALESCE(NEW.operation,'');
v_obj_id        BIGINT;
BEGIN
  IF v_op !~* '(release|liber|close|cerrar|unassign|fin|end)' THEN
    RETURN NEW;
END IF;
v_terminal_id := selemti.fn_resolver_terminal_para_usuario(NEW.a_user, NEW."time");
IF v_terminal_id IS NULL THEN
    RETURN NEW;
END IF;
SELECT current_balance::numeric INTO v_now_balance
  FROM public.terminal WHERE id = v_terminal_id;
SELECT s.id INTO v_obj_id
  FROM selemti.sesion_cajon s
  WHERE s.terminal_id = v_terminal_id
    AND s.cajero_usuario_id = NEW.a_user
    AND s.cierre_ts IS NULL
  ORDER BY s.apertura_ts DESC
  LIMIT 1;
IF v_obj_id IS NOT NULL THEN
    UPDATE selemti.sesion_cajon
       SET closing_float = COALESCE(closing_float, NULLIF(v_now_balance,0)),
           cierre_ts     = COALESCE(cierre_ts, NEW."time"),
           estatus       = CASE WHEN estatus='ACTIVA' THEN 'LISTO_PARA_CORTE' ELSE estatus END
     WHERE id = v_obj_id;
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_dah_ai_refuerzo ON public.drawer_assigned_history;
-- 3) VISTAS (crear/rehacer en orden;
ya existe formas_pago)
-- 3.1 Ventas por forma de pago
CREATE OR REPLACE VIEW selemti.vw_sesion_ventas AS
WITH base AS (
  SELECT
    s.id AS sesion_id,
    t.amount::numeric AS monto,
    COALESCE(
      fp.codigo,
      selemti.fn_normalizar_forma_pago(t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name)
    ) AS codigo_fp
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   AND t.user_id           = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type             = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
)
SELECT sesion_id, codigo_fp, SUM(monto) AS monto
FROM base
GROUP BY sesion_id, codigo_fp;
-- 3.2 Descuentos (placeholder)
CREATE OR REPLACE VIEW selemti.vw_sesion_descuentos AS
SELECT s.id AS sesion_id, 0::numeric AS descuentos
FROM selemti.sesion_cajon s;
-- 3.3 Anulaciones
CREATE OR REPLACE VIEW selemti.vw_sesion_anulaciones AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE WHEN tk.status IN ('VOID','REFUND') THEN tk.total_price ELSE 0 END),0)::numeric AS total_anulado
FROM selemti.sesion_cajon s
LEFT JOIN public.ticket tk
  ON tk.closing_date >= s.apertura_ts
 AND tk.closing_date <  COALESCE(s.cierre_ts, now())
 AND tk.terminal_id   = s.terminal_id
 AND tk.owner_id      = s.cajero_usuario_id
GROUP BY s.id;
-- 3.4 Retiros
CREATE OR REPLACE VIEW selemti.vw_sesion_retiros AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE WHEN t.transaction_type IN ('PAYOUT','EXPENSE') THEN t.amount::numeric ELSE 0 END),0) AS retiros
FROM selemti.sesion_cajon s
JOIN public.transactions t
  ON t.transaction_time >= s.apertura_ts
 AND t.transaction_time <  COALESCE(s.cierre_ts, now())
 AND t.terminal_id       = s.terminal_id
 AND t.user_id           = s.cajero_usuario_id
GROUP BY s.id;
-- 3.5 Reembolsos efectivo
CREATE OR REPLACE VIEW selemti.vw_sesion_reembolsos_efectivo AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE
         WHEN (t.transaction_type IN ('REFUND','RETURN') OR COALESCE(t.voided,false)=true)
          AND (t.payment_type = 'CASH' OR t.transaction_type = 'CASH')
         THEN t.amount::numeric ELSE 0 END),0) AS reembolsos_efectivo
FROM selemti.sesion_cajon s
JOIN public.transactions t
  ON t.transaction_time >= s.apertura_ts
 AND t.transaction_time <  COALESCE(s.cierre_ts, now())
 AND t.terminal_id       = s.terminal_id
 AND t.user_id           = s.cajero_usuario_id
GROUP BY s.id;
-- 3.6 Conciliación final
CREATE OR REPLACE VIEW selemti.vw_conciliacion_sesion AS
WITH ventas AS (
  SELECT
    sesion_id,
    SUM(CASE WHEN codigo_fp = 'CASH' THEN monto ELSE 0 END) AS ventas_efectivo,
    SUM(CASE WHEN codigo_fp IN ('CREDIT','DEBIT','TRANSFER') OR codigo_fp LIKE 'CUSTOM:%'
             THEN monto ELSE 0 END) AS ventas_no_efectivo
  FROM selemti.vw_sesion_veNTAS
  GROUP BY sesion_id
),
decl AS (
  SELECT
    s.id AS sesion_id,
    COALESCE(MAX(p.declarado_efectivo),0)::numeric      AS precorte_efectivo,
    COALESCE(MAX(pc.declarado_efectivo_fin),0)::numeric AS post_efectivo,
    COALESCE(MAX(pc.declarado_tarjetas_fin),0)::numeric AS post_tarjetas
  FROM selemti.sesion_cajon s
  LEFT JOIN selemti.precorte  p  ON p.sesion_id  = s.id
  LEFT JOIN selemti.postcorte pc ON pc.sesion_id = s.id
  GROUP BY s.id
)
SELECT
  s.id                AS sesion_id,
  s.terminal_id,
  s.cajero_usuario_id,
  s.apertura_ts,
  s.cierre_ts,
  s.estatus,

  s.opening_float,
  COALESCE(v.ventas_efectivo,0)      AS sistema_efectivo,
  COALESCE(v.ventas_no_efectivo,0)   AS sistema_no_efectivo,
  COALESCE(dsc.descuentos,0)         AS sistema_descuentos,
  COALESCE(an.total_anulado,0)       AS sistema_anulaciones,
  COALESCE(re.retiros,0)             AS sistema_retiros,
  COALESCE(rc.reembolsos_efectivo,0) AS sistema_reembolsos_efectivo,

  ( s.opening_float
    + COALESCE(v.ventas_efectivo,0)
    - COALESCE(re.retiros,0)
    - COALESCE(rc.reembolsos_efectivo,0)
  ) AS sistema_efectivo_esperado,

  COALESCE(dl.precorte_efectivo,0) AS declarado_precorte_efectivo,
  COALESCE(dl.post_efectivo,0)     AS declarado_post_efectivo,
  COALESCE(dl.post_tarjetas,0)     AS declarado_post_tarjetas,

  (COALESCE(dl.post_efectivo,0)  - ( s.opening_float
                                   + COALESCE(v.ventas_efectivo,0)
                                   - COALESCE(re.retiros,0)
                                   - COALESCE(rc.reembolsos_efectivo,0))) AS diferencia_efectivo,
  (COALESCE(dl.post_tarjetas,0) - COALESCE(v.ventas_no_efectivo,0))        AS diferencia_no_efectivo,

  s.closing_float AS cierre_pos_snapshot,
  COALESCE(s.closing_float,
           ( s.opening_float
             + COALESCE(v.ventas_efectivo,0)
             - COALESCE(re.retiros,0)
             - COALESCE(rc.reembolsos_efectivo,0)
           )) AS cierre_pos_efectivo_final

FROM selemti.sesion_cajon s
LEFT JOIN ventas                           v   ON v.sesion_id   = s.id
LEFT JOIN selemti.vw_sesion_descuentos     dsc ON dsc.sesion_id = s.id
LEFT JOIN selemti.vw_sesion_anulaciones    an  ON an.sesion_id  = s.id
LEFT JOIN selemti.vw_sesion_retiros        re  ON re.sesion_id  = s.id
LEFT JOIN selemti.vw_sesion_reembolsos_efectivo rc ON rc.sesion_id = s.id
LEFT JOIN decl                             dl  ON dl.sesion_id  = s.id;
-- 2. CREAR USUARIO DEDICADO
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'selemti_user') THEN
        CREATE USER selemti_user WITH PASSWORD 'selemti_password_2024';
        RAISE NOTICE 'Usuario selemti_user creado exitosamente';
    ELSE
        RAISE NOTICE 'Usuario selemti_user ya existe';
    END IF;
END
$$;
-- 3. OTORGAR PERMISOS
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT CREATE ON SCHEMA selemti TO selemti_user;
-- 4. PERMISOS DE LECTURA ENTRE ESQUEMAS
GRANT USAGE ON SCHEMA public TO selemti_user;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO selemti_user;
-- 5. CONFIGURAR SEARCH PATH
ALTER USER selemti_user SET search_path = 'selemti, public';
RAISE NOTICE 'Script 00 ejecutado exitosamente';
\n-- END 00_esquema_selemti.sql\n
\n-- BEGIN 000. deploy_selemti_full.sql\n
-- =====================================================================
-- Selemti: Deploy Unificado (esquema, tipos, tablas, vistas, funciones)
-- Idempotente / Migration-Safe
-- Owner: postgres  |  TZ operativa: America/Mexico_City
-- PolÃ­tica consumo: FEFO (default) / PEPS por sucursal (parametrizable)
-- UOM base: GR (peso), ML (volumen), PZ (unidad)
-- =====================================================================

-- 0) PreÃ¡mbulo
SET client_min_messages = WARNING;
-- Search path sugerido para aplicaciones:
--   ALTER ROLE selemti_user SET search_path = 'selemti, public';
INSERT INTO selemti.unidad_medida (codigo,nombre,tipo,es_base,factor_a_base,decimales)
VALUES
 ('GR','Gramo','PESO',TRUE,1,2),
 ('KG','Kilogramo','PESO',FALSE,1000,2),
 ('ML','Mililitro','VOLUMEN',TRUE,1,2),
 ('LT','Litro','VOLUMEN',FALSE,1000,2),
 ('PZ','Pieza','UNIDAD',TRUE,1,0),
 ('OZ','Onza','PESO',FALSE,28.3495,2),
 ('LB','Libra','PESO',FALSE,453.592,2)
ON CONFLICT (codigo) DO NOTHING;
INSERT INTO selemti.rol (codigo, nombre) VALUES
 ('GERENTE','Gerente'),('CHEF','Chef/Jefe Barra'),('ALMACEN','AlmacÃ©n'),
 ('CAJERO','Cajero'),('AUDITOR','Auditor/APPCC'),('SISTEMA','IntegraciÃ³n')
ON CONFLICT (codigo) DO NOTHING;
-- 10) Funciones clave (stubs seguros) -----------------------------

-- PolÃ­tica de selecciÃ³n de lote (FEFO/PEPS)
CREATE OR REPLACE FUNCTION selemti.pick_lotes(
  p_insumo_id BIGINT,
  p_sucursal_id INT,
  p_bodega_id INT,
  p_qty NUMERIC,
  p_policy selemti.consumo_policy DEFAULT 'FEFO'
) RETURNS TABLE(lote_id BIGINT, qty NUMERIC) AS $$
BEGIN
  -- FEFO: ordenar por caducidad asc;
PEPS: por ts_in asc vÃ­a cost_layer o primer lote
  IF p_policy = 'FEFO' THEN
    RETURN QUERY
      SELECT l.id, LEAST(p_qty - COALESCE(SUM(m.qty) FILTER (WHERE 1=1),0), 0)::NUMERIC
      FROM selemti.lote l
      JOIN LATERAL (
        SELECT COALESCE(SUM(CASE WHEN mi.tipo IN ('RECEPCION','COMPRA','TRASPASO_IN') THEN mi.qty
                                 WHEN mi.tipo IN ('VENTA','CONSUMO_OP','AJUSTE','TRASPASO_OUT','ANULACION') THEN -mi.qty
                            END),0) qty_disp
        FROM selemti.mov_inv mi
        WHERE mi.lote_id = l.id
      ) s ON true
      WHERE l.insumo_id = p_insumo_id
        AND l.estado='ACTIVO'
      ORDER BY l.caducidad NULLS LAST, l.id
      LIMIT 0;
-- (stub para demo;
implementar cÃ¡lculo por partes)
  ELSE
    RETURN QUERY SELECT NULL::BIGINT, 0::NUMERIC LIMIT 0;
END IF;
END;
$$ LANGUAGE plpgsql;
-- Ingesta de ticket POS â†’ Descargo inventario (con PLU y modificadores)
CREATE OR REPLACE FUNCTION selemti.ingesta_ticket(
  p_ticket_id BIGINT,
  p_sucursal_id INT,
  p_bodega_id INT,
  p_usuario_id BIGINT
) RETURNS VOID AS $$
DECLARE
  r RECORD;
v_policy selemti.consumo_policy;
BEGIN
  SELECT consumo_policy INTO v_policy
  FROM selemti.param_sucursal WHERE sucursal_id = p_sucursal_id;
FOR r IN
    SELECT ti.id as ticket_item_id, ti.plu, ti.qty, ti.precio,
           pm.tipo, pm.receta_version_id, pm.insumo_id, pm.factor_insumo
    FROM public.ticket_item ti
    LEFT JOIN LATERAL (
      SELECT * FROM selemti.pos_map
      WHERE pos_system='FLOREANT' AND plu = ti.plu
        AND (vigente_hasta IS NULL OR vigente_hasta >= ti.created) -- ajustar campo fecha POS
      ORDER BY vigente_desde DESC
      LIMIT 1
    ) pm ON true
    WHERE ti.ticket_id = p_ticket_id
  LOOP
    IF r.receta_version_id IS NOT NULL THEN
      -- Descargo por receta
      INSERT INTO selemti.mov_inv(ts,sucursal_id,bodega_id,insumo_id,lote_id,tipo,qty,um_id,costo_unit,ref_tipo,ref_id,usuario_id)
      SELECT now(), p_sucursal_id, p_bodega_id, ri.insumo_id, NULL, 'VENTA',
             (ri.cantidad * r.qty) * -1, u.id, NULL, 'TICKET', r.ticket_item_id, p_usuario_id
      FROM selemti.receta_insumo ri
      JOIN selemti.insumo i ON i.id=ri.insumo_id
      JOIN selemti.unidad_medida u ON u.id=i.um_id
      WHERE ri.receta_version_id = r.receta_version_id;
ELSIF r.insumo_id IS NOT NULL THEN
      -- Descargo directo de insumo (ej. botella PZ, sabor como insumo)
      INSERT INTO selemti.mov_inv(ts,sucursal_id,bodega_id,insumo_id,lote_id,tipo,qty,um_id,costo_unit,ref_tipo,ref_id,usuario_id)
      SELECT now(), p_sucursal_id, p_bodega_id, r.insumo_id, NULL, 'VENTA',
             (COALESCE(r.factor_insumo,1) * r.qty) * -1, i.um_id, NULL, 'TICKET', r.ticket_item_id, p_usuario_id
      FROM selemti.insumo i WHERE i.id=r.insumo_id;
ELSE
      -- Sin impacto inventario (ej. servicio)
      CONTINUE;
END IF;
END LOOP;
END;
$$ LANGUAGE plpgsql;
-- Reproceso de costos histÃ³ricos (WAC baseline;
ampliable a PEPS)
CREATE OR REPLACE FUNCTION selemti.recalcular_costos_periodo(
  p_desde DATE,
  p_hasta DATE DEFAULT CURRENT_DATE
) RETURNS INTEGER AS $$
DECLARE
  v_cnt INT := 0;
BEGIN
  -- Ejemplo simple: recalcular costo WAC por insumo en rango (extensible)
  INSERT INTO selemti.hist_cost_insumo (insumo_id,fecha_efectiva,costo_wac,algoritmo_principal)
  SELECT mi.insumo_id, p_desde,
         CASE WHEN SUM(CASE WHEN mi.tipo IN ('RECEPCION','COMPRA','TRASPASO_IN') THEN (mi.costo_unit * mi.qty) ELSE 0 END) <> 0
              THEN SUM(CASE WHEN mi.tipo IN ('RECEPCION','COMPRA','TRASPASO_IN') THEN (mi.costo_unit * mi.qty) ELSE 0 END)
                   / NULLIF(SUM(CASE WHEN mi.tipo IN ('RECEPCION','COMPRA','TRASPASO_IN') THEN mi.qty ELSE 0 END),0)
              ELSE NULL END,
         'WAC'
  FROM selemti.mov_inv mi
  WHERE mi.ts::date BETWEEN p_desde AND p_hasta
  GROUP BY mi.insumo_id
  ON CONFLICT DO NOTHING;
GET DIAGNOSTICS v_cnt = ROW_COUNT;
RETURN v_cnt;
END;
$$ LANGUAGE plpgsql;
-- 11) Vistas Ãºtiles (ingenierÃ­a de menÃº, existencias por lote, trazabilidad)
CREATE OR REPLACE VIEW selemti.v_existencias_lote AS
SELECT
  l.id AS lote_id, l.insumo_id, i.nombre AS insumo,
  SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA','TRASPASO_IN') THEN m.qty
           WHEN m.tipo IN ('VENTA','CONSUMO_OP','AJUSTE','TRASPASO_OUT','ANULACION') THEN -m.qty
      END) AS qty_disponible,
  l.caducidad, l.estado
FROM selemti.lote l
LEFT JOIN selemti.mov_inv m ON m.lote_id = l.id
JOIN selemti.insumo i ON i.id = l.insumo_id
GROUP BY l.id,i.nombre;
CREATE OR REPLACE VIEW selemti.v_trazabilidad_ticket AS
SELECT
  m.ref_id AS ticket_item_id, m.insumo_id, i.nombre AS insumo, m.qty, m.ts, m.lote_id
FROM selemti.mov_inv m
JOIN selemti.insumo i ON i.id=m.insumo_id
WHERE m.ref_tipo='TICKET';
-- 12) Roles y permisos sugeridos
DO $$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname='selemti_user') THEN
    CREATE ROLE selemti_user LOGIN;
  END IF;
END$$;
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA selemti TO selemti_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA selemti GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO selemti_user;
CREATE OR REPLACE FUNCTION selemti.fn_precorte_efectivo_bi()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  NEW.subtotal := COALESCE(NEW.denominacion,0) * COALESCE(NEW.cantidad,0);
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_precorte_efectivo_bi ON selemti.precorte_efectivo;
CREATE OR REPLACE FUNCTION selemti.fn_slug(in_text TEXT)
RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE s TEXT := lower(coalesce(in_text,''));
BEGIN
  s := translate(s, 'ÁÉÍÓÚÜÑáéíóúüñ', 'AEIOUUNaeiouun');
s := regexp_replace(s, '[^a-z0-9]+', '-', 'g');
s := regexp_replace(s, '(^-|-$)', '', 'g');
IF s = '' THEN RETURN NULL;
END IF;
RETURN s;
END $$;
CREATE OR REPLACE FUNCTION selemti.fn_normalizar_forma_pago(
  p_payment_type TEXT,
  p_transaction_type TEXT,
  p_payment_sub_type TEXT,
  p_custom_name TEXT
) RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE pt TEXT := upper(coalesce(p_payment_type,''));
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN ('CASH','CREDIT','DEBIT','TRANSFER') THEN
    RETURN pt;
ELSIF pt = 'CUSTOM_PAYMENT' THEN
    IF cn IS NOT NULL THEN RETURN 'CUSTOM:'||cn;
ELSE RETURN 'CUSTOM';
END IF;
ELSIF pt IN ('REFUND','PAY_OUT','CASH_DROP') THEN
    RETURN pt;
-- egresos/ajustes estandarizados
  ELSE
    RETURN pt;
END IF;
END $$;
CREATE OR REPLACE FUNCTION selemti.fn_tx_after_insert_forma_pago()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_codigo TEXT;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
    NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name
  );
INSERT INTO selemti.formas_pago(
    codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref
  )
  VALUES (
    v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref
  )
  ON CONFLICT DO NOTHING;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_tx_ai_forma_pago ON public.transactions;
INSERT INTO selemti.formas_pago(codigo, payment_type) VALUES
  ('CASH','CASH'),('CREDIT','CREDIT'),('DEBIT','DEBIT'),('TRANSFER','TRANSFER'),
  ('REFUND','REFUND'),('PAY_OUT','PAY_OUT'),('CASH_DROP','CASH_DROP')
ON CONFLICT DO NOTHING;
-- 5) Hooks con Floreant (terminal + asignaciones) -----------------------------
-- 1) Crear columna solo si no existe (compatible con versiones viejas)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1
    FROM information_schema.columns
    WHERE table_schema = 'selemti'
      AND table_name   = 'sesion_cajon'
      AND column_name  = 'skipped_precorte'
  ) THEN
    ALTER TABLE selemti.sesion_cajon
      ADD COLUMN skipped_precorte boolean DEFAULT false NOT NULL;
    COMMENT ON COLUMN selemti.sesion_cajon.skipped_precorte
      IS 'TRUE si se cerró la sesión/corte sin tener un precorte (conteo) previo.';
  END IF;
END$$;
ALTER TABLE selemti.postcorte
ADD COLUMN validado boolean DEFAULT FALSE;
ALTER TABLE selemti.postcorte
ADD COLUMN validado_en timestamp without time zone;
ALTER TABLE selemti.postcorte
ADD COLUMN validado_por integer;
DO $$
BEGIN
  ALTER TABLE selemti.precorte ADD COLUMN notas text;
EXCEPTION WHEN duplicate_column THEN
  -- ya existía, no hacer nada
  NULL;
END$$;
CREATE OR REPLACE FUNCTION selemti.fn_terminal_bu_snapshot_cierre()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_has_old boolean := (OLD.assigned_user IS NOT NULL);
DECLARE v_has_new boolean := (NEW.assigned_user IS NOT NULL);
BEGIN
  IF (v_has_old AND NOT v_has_new) THEN
    UPDATE selemti.sesion_cajon
      SET cierre_ts = now(),
          estatus   = 'LISTO_PARA_CORTE',
          closing_float = COALESCE(OLD.current_balance,0)
    WHERE terminal_id = OLD.id
      AND cajero_usuario_id = OLD.assigned_user
      AND cierre_ts IS NULL;
END IF;
IF (NOT v_has_old AND v_has_new) THEN
    INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id
    )
    VALUES(
      NEW.id, COALESCE(NEW.name, 'Terminal '||NEW.id), COALESCE(NEW.location,''),
      NEW.assigned_user, now(), 'ACTIVA', COALESCE(NEW.current_balance,0), NULL
    );
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_terminal_bu_snapshot ON public.terminal;
CREATE OR REPLACE FUNCTION selemti.fn_dah_after_insert()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_term RECORD;
BEGIN
  IF NEW.operation = 'ASIGNAR' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
IF v_term IS NULL THEN
      INSERT INTO selemti.auditoria(quien,que,payload)
      VALUES(NEW.a_user,'NO_SE_PUDO_RESOLVER_TERMINAL',
             jsonb_build_object('dah_id',NEW.id,'operation',NEW.operation,'time',NEW."time"));
RETURN NEW;
END IF;
INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id
    ) VALUES (
      v_term.id, COALESCE(v_term.name,'Terminal '||v_term.id), COALESCE(v_term.location,''),
      NEW.a_user, COALESCE(NEW."time", now()), 'ACTIVA', COALESCE(v_term.current_balance,0), NEW.id
    );
ELSIF NEW.operation = 'CERRAR' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
UPDATE selemti.sesion_cajon
       SET cierre_ts     = COALESCE(NEW."time", now()),
           estatus       = 'LISTO_PARA_CORTE',
           closing_float = COALESCE(v_term.current_balance,0),
           dah_evento_id = COALESCE(dah_evento_id, NEW.id)
     WHERE terminal_id = COALESCE(v_term.id, terminal_id)
       AND cajero_usuario_id = NEW.a_user
       AND cierre_ts IS NULL;
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_dah_ai ON public.drawer_assigned_history;
CREATE OR REPLACE FUNCTION selemti.fn_reparar_sesion_apertura(p_terminal_id INT, p_usuario INT)
RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE v_term RECORD;
BEGIN
  IF EXISTS (
    SELECT 1 FROM selemti.sesion_cajon
    WHERE terminal_id=p_terminal_id AND cajero_usuario_id=p_usuario AND cierre_ts IS NULL
  ) THEN
    RETURN 'YA_EXISTE_SESION_ABIERTA';
END IF;
SELECT * INTO v_term FROM public.terminal WHERE id=p_terminal_id;
IF v_term IS NULL THEN RETURN 'TERMINAL_NO_ENCONTRADA';
END IF;
INSERT INTO selemti.sesion_cajon(
    terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
    apertura_ts, estatus, opening_float
  ) VALUES (
    p_terminal_id, COALESCE(v_term.name,'Terminal '||p_terminal_id), COALESCE(v_term.location,''),
    p_usuario, now(), 'ACTIVA', COALESCE(v_term.current_balance,0)
  );
RETURN 'CREADA';
END $$;
-- 6) Vistas operativas por sesión --------------------------------------------

-- 6.1 Ventas válidas por forma de pago (solo cobros: transaction_type='CREDIT', no void)
CREATE OR REPLACE VIEW selemti.vw_sesion_ventas AS
WITH base AS (
  SELECT
    s.id AS sesion_id,
    t.amount::numeric AS monto,
    COALESCE( fp.codigo,
      selemti.fn_normalizar_forma_pago(t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name)
    ) AS codigo_fp
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   AND t.user_id           = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
  WHERE COALESCE(t.voided,false)=false
    AND t.transaction_type = 'CREDIT'
)
SELECT sesion_id, codigo_fp, SUM(monto)::numeric(12,2) AS monto
FROM base
GROUP BY sesion_id, codigo_fp;
-- 6.2 Descuentos reales (ticket + ítem) en la ventana de la sesión
CREATE OR REPLACE VIEW selemti.vw_sesion_descuentos AS
WITH tk_win AS (
  SELECT s.id AS sesion_id, tk.id AS ticket_id
  FROM selemti.sesion_cajon s
  JOIN public.ticket tk
    ON tk.terminal_id = s.terminal_id
   AND tk.owner_id    = s.cajero_usuario_id
   AND tk.create_date >= s.apertura_ts
   AND tk.create_date <  COALESCE(s.cierre_ts, now())
),
td_agg AS ( -- descuentos al ticket (columna 'value')
  SELECT td.ticket_id, SUM(COALESCE(td.value,0))::numeric AS sum_td
  FROM public.ticket_discount td
  GROUP BY td.ticket_id
),
tid_agg AS ( -- descuentos por ítem (columna 'amount')
  SELECT ti.ticket_id, SUM(COALESCE(tid.amount,0))::numeric AS sum_tid
  FROM public.ticket_item_discount tid
  JOIN public.ticket_item ti ON ti.id = tid.ticket_itemid
  GROUP BY ti.ticket_id
)
SELECT tw.sesion_id,
       COALESCE(SUM(td_agg.sum_td),0)::numeric + COALESCE(SUM(tid_agg.sum_tid),0)::numeric AS descuentos
FROM tk_win tw
LEFT JOIN td_agg  ON td_agg.ticket_id  = tw.ticket_id
LEFT JOIN tid_agg ON tid_agg.ticket_id = tw.ticket_id
GROUP BY tw.sesion_id;
-- 6.3 Retiros / Bleed (egresos de caja): PAY_OUT + CASH_DROP
CREATE OR REPLACE VIEW selemti.vw_sesion_retiros AS
WITH tx AS (
  SELECT
    s.id AS sesion_id,
    COALESCE( fp.codigo,
      selemti.fn_normalizar_forma_pago(t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name)
    ) AS codigo_fp,
    t.amount::numeric AS monto
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   AND t.user_id           = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
)
SELECT sesion_id,
       SUM(CASE WHEN codigo_fp IN ('PAY_OUT','CASH_DROP') THEN monto ELSE 0 END)::numeric(12,2) AS retiros
FROM tx
GROUP BY sesion_id;
-- 6.4 Reembolsos en EFECTIVO (REFUND cuyo sub-tipo sea CASH)
CREATE OR REPLACE VIEW selemti.vw_sesion_reembolsos_efectivo AS
WITH tx AS (
  SELECT
    s.id AS sesion_id,
    t.payment_sub_type,
    COALESCE( fp.codigo,
      selemti.fn_normalizar_forma_pago(t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name)
    ) AS codigo_fp,
    t.amount::numeric AS monto
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   AND t.user_id           = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
)
SELECT sesion_id,
       SUM(CASE WHEN codigo_fp='REFUND' AND UPPER(COALESCE(payment_sub_type,''))='CASH'
                THEN monto ELSE 0 END)::numeric(12,2) AS reembolsos_efectivo
FROM tx
GROUP BY sesion_id;
-- 6.5 DPR por sesión (oficial Floreant, si cae en la ventana)
CREATE OR REPLACE VIEW selemti.vw_sesion_dpr AS
WITH s AS (
  SELECT id, terminal_id, cajero_usuario_id, apertura_ts, COALESCE(cierre_ts, now()) AS fin_ts
  FROM selemti.sesion_cajon
)
SELECT
  s.id AS sesion_id,
  dpr.*
FROM s
JOIN public.drawer_pull_report dpr
  ON dpr.terminal_id = s.terminal_id
 AND dpr.user_id     = s.cajero_usuario_id
 AND dpr.report_time >= s.apertura_ts
 AND dpr.report_time <  s.fin_ts;
-- 7) Vista final: Conciliación por sesión -------------------------------------
CREATE OR REPLACE VIEW selemti.vw_conciliacion_sesion AS
WITH sys AS (
  SELECT
    s.id AS sesion_id,
    s.opening_float,
    SUM(CASE WHEN v.codigo_fp='CASH'                 THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_cash,
    SUM(CASE WHEN v.codigo_fp IN ('CREDIT','CREDIT_CARD') THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_credito,
    SUM(CASE WHEN v.codigo_fp IN ('DEBIT','DEBIT_CARD')   THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_debito,
    SUM(CASE WHEN v.codigo_fp LIKE 'CUSTOM:%'        THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_custom,
    SUM(CASE WHEN v.codigo_fp='TRANSFER'             THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_transfer,
    SUM(CASE WHEN v.codigo_fp='GIFT_CERT'            THEN v.monto ELSE 0 END)::numeric(12,2) AS sys_gift
  FROM selemti.sesion_cajon s
  LEFT JOIN selemti.vw_sesion_ventas v ON v.sesion_id = s.id
  GROUP BY s.id, s.opening_float
),
re AS (
  SELECT sesion_id, retiros FROM selemti.vw_sesion_retiros
),
cr AS (
  SELECT sesion_id, reembolsos_efectivo FROM selemti.vw_sesion_reembolsos_efectivo
),
ds AS (
  SELECT sesion_id, descuentos FROM selemti.vw_sesion_descuentos
),
decl_cash AS ( -- último precorte por sesión (efectivo contado)
  SELECT p.sesion_id, SUM(pe.subtotal)::numeric(12,2) AS declarado_efectivo
  FROM selemti.precorte p
  LEFT JOIN selemti.precorte_efectivo pe ON pe.precorte_id = p.id
  GROUP BY p.sesion_id
),
decl_otros AS ( -- declarados no-efectivo por tipo
  SELECT
    p.sesion_id,
    SUM(CASE WHEN po.tipo='CREDITO'            THEN po.monto ELSE 0 END)::numeric(12,2) AS decl_credito,
    SUM(CASE WHEN po.tipo='DEBITO'             THEN po.monto ELSE 0 END)::numeric(12,2) AS decl_debito,
    SUM(CASE WHEN po.tipo IN ('TRANSFER')      THEN po.monto ELSE 0 END)::numeric(12,2) AS decl_transfer,
    SUM(CASE WHEN po.tipo LIKE 'CUSTOM:%'      THEN po.monto ELSE 0 END)::numeric(12,2) AS decl_custom,
    SUM(CASE WHEN po.tipo='GIFT_CERT'          THEN po.monto ELSE 0 END)::numeric(12,2) AS decl_gift
  FROM selemti.precorte p
  LEFT JOIN selemti.precorte_otros po ON po.precorte_id = p.id
  GROUP BY p.sesion_id
),
eff AS (
  SELECT
    sys.sesion_id,
    sys.opening_float,
    COALESCE(sys.sys_cash,0)           AS cash_in,
    COALESCE(re.retiros,0)             AS cash_out,
    COALESCE(cr.reembolsos_efectivo,0) AS cash_refund,
    (sys.opening_float + COALESCE(sys.sys_cash,0) - COALESCE(re.retiros,0) - COALESCE(cr.reembolsos_efectivo,0))::numeric(12,2)
      AS sistema_efectivo_esperado
  FROM sys
  LEFT JOIN re ON re.sesion_id = sys.sesion_id
  LEFT JOIN cr ON cr.sesion_id = sys.sesion_id
),
tc AS (
  SELECT
    sys.sesion_id,
    (COALESCE(sys.sys_credito,0)+COALESCE(sys.sys_debito,0)+COALESCE(sys.sys_transfer,0)+COALESCE(sys.sys_custom,0)+COALESCE(sys.sys_gift,0))::numeric(12,2)
      AS sistema_no_efectivo
  FROM sys
)
SELECT
  sys.sesion_id,

  -- EFECTIVO
  eff.sistema_efectivo_esperado,
  COALESCE(dc.declarado_efectivo,0)::numeric(12,2) AS declarado_efectivo,
  (COALESCE(dc.declarado_efectivo,0) - eff.sistema_efectivo_esperado)::numeric(12,2) AS diferencia_efectivo,
  CASE
    WHEN COALESCE(dc.declarado_efectivo,0) = eff.sistema_efectivo_esperado THEN 'CUADRA'
    WHEN COALESCE(dc.declarado_efectivo,0) > eff.sistema_efectivo_esperado THEN 'A_FAVOR'
    ELSE 'EN_CONTRA'
  END AS veredicto_efectivo,

  -- SISTEMA – NO EFECTIVO (desglose) y DECLARADOS
  sys.sys_credito, sys.sys_debito, sys.sys_transfer, sys.sys_custom, sys.sys_gift,
  dotros.decl_credito, dotros.decl_debito, dotros.decl_transfer, dotros.decl_custom, dotros.decl_gift,
  tc.sistema_no_efectivo,

  -- Descuentos calculados (BD) y DPR oficial (si existe en ventana)
  ds.descuentos AS total_descuentos,
  dpr.begin_cash, dpr.cash_receipt_amount, dpr.credit_card_receipt_amount, dpr.debit_card_receipt_amount,
  dpr.pay_out_amount, dpr.drawer_bleed_amount, dpr.refund_amount, dpr.totaldiscountamount, dpr.totalvoid,
  dpr.drawer_accountable, dpr.cash_to_deposit, dpr.variance, dpr.report_time

FROM sys
LEFT JOIN eff        ON eff.sesion_id = sys.sesion_id
LEFT JOIN decl_cash  dc  ON dc.sesion_id  = sys.sesion_id
LEFT JOIN decl_otros dotros ON dotros.sesion_id = sys.sesion_id
LEFT JOIN tc         ON tc.sesion_id     = sys.sesion_id
LEFT JOIN ds         ON ds.sesion_id     = sys.sesion_id
LEFT JOIN selemti.vw_sesion_dpr dpr ON dpr.sesion_id = sys.sesion_id
ORDER BY sys.sesion_id DESC;
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1
    FROM information_schema.columns
    WHERE table_schema = 'selemti'
      AND table_name   = 'sesion_cajon'
      AND column_name  = 'skipped_precorte'
  ) THEN
    ALTER TABLE selemti.sesion_cajon
      ADD COLUMN skipped_precorte boolean NOT NULL DEFAULT FALSE;
  END IF;
END $$;
CREATE INDEX IF NOT EXISTS precorte_sesion_id_idx

\n-- END 000. Query Despliegue cortes 05-09-2025.sql\n
\n-- BEGIN 000. Query_corte_04_09_2025_V2.sql\n
-- ============================================================================
-- SELEMTI v2.0  (PostgreSQL 9.5)
-- Auxiliar de Caja, Precorte, ConciliaciÃ³n con integraciÃ³n a Floreant POS
-- ============================================================================
-- Supone esquema base de Floreant en "public" con:
--   - public.drawer_assigned_history(id, time, operation, a_user)
--   - public.terminal(id, assigned_user, current_balance, name, location, has_cash_drawer, in_use, active, floor_id)
--   - public.transactions(id, terminal_id, user_id, transaction_time, payment_type, transaction_type, payment_sub_type,
--                         custom_payment_name, custom_payment_ref, amount, voided)
--   - public.ticket(id, terminal_id, owner_id, create_date, closing_date, status, total_price)
--   - public.drawer_pull_report(...)  -- resumen de corte POS (opcional)
-- ============================================================================
ALTER TABLE public.drawer_pull_report_voidtickets
ADD COLUMN id SERIAL PRIMARY KEY;
INSERT INTO public.payout_reasons(id, reason_text) VALUES
(100,'Compra de insumos menor'),(200,'Gastos operativos'),(300,'ReposiciÃ³n de caja')
ON CONFLICT DO NOTHING;
INSERT INTO public.void_reasons(id, reason_text) VALUES
(10,'Error de captura'),(20,'Pago mal tipificado'),(30,'Cliente cancela')
ON CONFLICT DO NOTHING;
CREATE OR REPLACE FUNCTION selemti.fn_precorte_efectivo_bi()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  NEW.subtotal := COALESCE(NEW.denominacion,0) * COALESCE(NEW.cantidad,0);
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_precorte_efectivo_bi ON selemti.precorte_efectivo;
CREATE OR REPLACE FUNCTION selemti.fn_slug(in_text TEXT)
RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE s TEXT := lower(coalesce(in_text,''));
BEGIN
  s := translate(s, 'ÃÃ‰ÃÃ“ÃšÃœÃ‘Ã¡Ã©Ã­Ã³ÃºÃ¼Ã±', 'AEIOUUNaeiouun');
s := regexp_replace(s, '[^a-z0-9]+', '-', 'g');
s := regexp_replace(s, '(^-|-$)', '', 'g');
IF s = '' THEN RETURN NULL;
END IF;
RETURN s;
END $$;
CREATE OR REPLACE FUNCTION selemti.fn_normalizar_forma_pago(
  p_payment_type TEXT, p_transaction_type TEXT, p_payment_sub_type TEXT, p_custom_name TEXT
) RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE pt TEXT := upper(coalesce(p_payment_type,''));
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN ('CASH','CREDIT','DEBIT','TRANSFER') THEN
    RETURN pt;
ELSIF pt = 'CUSTOM_PAYMENT' THEN
    IF cn IS NOT NULL THEN RETURN 'CUSTOM:'||cn;
ELSE RETURN 'CUSTOM';
END IF;
ELSE
    RETURN pt;
END IF;
END $$;
-- Alimentar catÃ¡logo con cada transacciÃ³n nueva
CREATE OR REPLACE FUNCTION selemti.fn_tx_after_insert_forma_pago()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_codigo TEXT;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
                NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name);
INSERT INTO selemti.formas_pago(codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref)
  VALUES (v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref)
  ON CONFLICT DO NOTHING;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_tx_ai_forma_pago ON public.transactions;
-- Semilla bÃ¡sica
INSERT INTO selemti.formas_pago(codigo, payment_type)
VALUES ('CASH','CASH'),('CREDIT','CREDIT'),('DEBIT','DEBIT'),('TRANSFER','TRANSFER')
ON CONFLICT DO NOTHING;
-- =======================================
-- 5) Apertura/cierre automÃ¡ticos desde Floreant
-- =======================================

-- 5.1 BEFORE UPDATE en public.terminal para snapshot de cierre/apertura
CREATE OR REPLACE FUNCTION selemti.fn_terminal_bu_snapshot_cierre()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_sesion_id BIGINT;
BEGIN
  -- CIERRE: si assigned_user pasa de NOT NULL -> NULL, cerramos sesiÃ³n previa
  IF (OLD.assigned_user IS NOT NULL AND NEW.assigned_user IS NULL) THEN
    UPDATE selemti.sesion_cajon
      SET cierre_ts = now(),
          estatus = 'LISTO_PARA_CORTE',
          closing_float = COALESCE(OLD.current_balance,0)
    WHERE terminal_id = OLD.id
      AND cajero_usuario_id = OLD.assigned_user
      AND cierre_ts IS NULL;
PERFORM selemti.auditoria.id FROM selemti.auditoria
    WHERE false;
-- no-op para compilar
  END IF;
-- APERTURA: si assigned_user pasa de NULL -> NOT NULL, abrimos nueva sesiÃ³n
  IF (OLD.assigned_user IS NULL AND NEW.assigned_user IS NOT NULL) THEN
    INSERT INTO selemti.sesion_cajon(terminal_id, terminal_nombre, sucursal,
                                     cajero_usuario_id, apertura_ts, estatus, opening_float, dah_evento_id)
    VALUES(NEW.id, COALESCE(NEW.name, 'Terminal '||NEW.id), COALESCE(NEW.location,''),
           NEW.assigned_user, now(), 'ACTIVA', COALESCE(NEW.current_balance,0), NULL);
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_terminal_bu_snapshot ON public.terminal;
-- 5.2 AFTER INSERT en drawer_assigned_history para registrar apertura/cierre con rastreabilidad
-- operation = 'ASIGNAR' abre sesiÃ³n;
'CERRAR' marca cierre con closing_float (de terminal)
CREATE OR REPLACE FUNCTION selemti.fn_dah_after_insert()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_term RECORD;
BEGIN
  IF NEW.operation = 'ASIGNAR' THEN
    SELECT * INTO v_term FROM public.terminal WHERE assigned_user = NEW.a_user ORDER BY id LIMIT 1;
IF v_term IS NULL THEN
      INSERT INTO selemti.auditoria(quien,que,payload)
      VALUES(NEW.a_user,'NO_SE_PUDO_RESOLVER_TERMINAL', jsonb_build_object('dah_id',NEW.id,'operation',NEW.operation,'time',NEW.time));
RETURN NEW;
END IF;
INSERT INTO selemti.sesion_cajon(terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
                                     apertura_ts, estatus, opening_float, dah_evento_id)
    VALUES (v_term.id, COALESCE(v_term.name,'Terminal '||v_term.id), COALESCE(v_term.location,''),
            NEW.a_user, COALESCE(NEW.time, now()), 'ACTIVA', COALESCE(v_term.current_balance,0), NEW.id);
ELSIF NEW.operation = 'CERRAR' THEN
    SELECT * INTO v_term FROM public.terminal WHERE assigned_user = NEW.a_user ORDER BY id LIMIT 1;
UPDATE selemti.sesion_cajon
      SET cierre_ts     = COALESCE(NEW.time, now()),
          estatus       = 'LISTO_PARA_CORTE',
          closing_float = COALESCE(v_term.current_balance,0),
          dah_evento_id = COALESCE(dah_evento_id, NEW.id)
    WHERE terminal_id = COALESCE(v_term.id, terminal_id)
      AND cajero_usuario_id = NEW.a_user
      AND cierre_ts IS NULL;
END IF;
RETURN NEW;
END $$;
DROP TRIGGER IF EXISTS trg_selemti_dah_ai ON public.drawer_assigned_history;
-- Reparador manual de apertura (por si no se generÃ³)
CREATE OR REPLACE FUNCTION selemti.fn_reparar_sesion_apertura(p_terminal_id INT, p_usuario INT)
RETURNS TEXT LANGUAGE plpgsql AS $$
DECLARE v_term RECORD;
BEGIN
  IF EXISTS (SELECT 1 FROM selemti.sesion_cajon
             WHERE terminal_id=p_terminal_id AND cajero_usuario_id=p_usuario AND cierre_ts IS NULL) THEN
    RETURN 'YA_EXISTE_SESION_ABIERTA';
END IF;
SELECT * INTO v_term FROM public.terminal WHERE id=p_terminal_id;
IF v_term IS NULL THEN RETURN 'TERMINAL_NO_ENCONTRADA';
END IF;
INSERT INTO selemti.sesion_cajon(terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
                                   apertura_ts, estatus, opening_float)
  VALUES (p_terminal_id, COALESCE(v_term.name,'Terminal '||p_terminal_id), COALESCE(v_term.location,''),
          p_usuario, now(), 'ACTIVA', COALESCE(v_term.current_balance,0));
RETURN 'CREADA';
END $$;
-- =======================================
-- 6) Vistas operativas por sesiÃ³n
-- =======================================

-- 6.1 Ventas normalizadas por forma de pago
CREATE OR REPLACE VIEW selemti.vw_sesion_ventas AS
WITH base AS (
  SELECT
    s.id AS sesion_id,
    t.amount::numeric AS monto,
    COALESCE(
      fp.codigo,
      selemti.fn_normalizar_forma_pago(t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name)
    ) AS codigo_fp
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   AND t.user_id           = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
)
SELECT sesion_id, codigo_fp, SUM(monto) AS monto
FROM base
GROUP BY sesion_id, codigo_fp;
-- 6.2 Descuentos (si no existen a nivel item, dejamos 0)
CREATE OR REPLACE VIEW selemti.vw_sesion_descuentos AS
SELECT s.id AS sesion_id, 0::numeric AS descuentos
FROM selemti.sesion_cajon s;
-- 6.3 Anulaciones / Refund (ticket.status)
CREATE OR REPLACE VIEW selemti.vw_sesion_anulaciones AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE WHEN tk.status IN ('VOID','REFUND') THEN tk.total_price ELSE 0 END),0)::numeric AS total_anulado
FROM selemti.sesion_cajon s
LEFT JOIN public.ticket tk
  ON tk.closing_date >= s.apertura_ts
 AND tk.closing_date <  COALESCE(s.cierre_ts, now())
 AND tk.terminal_id   = s.terminal_id
 AND tk.owner_id      = s.cajero_usuario_id
GROUP BY s.id;
-- 6.4 Retiros / Egresos (transactions.transaction_type)
CREATE OR REPLACE VIEW selemti.vw_sesion_retiros AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE WHEN t.transaction_type IN ('PAYOUT','EXPENSE') THEN t.amount::numeric ELSE 0 END),0) AS retiros
FROM selemti.sesion_cajon s
JOIN public.transactions t
  ON t.transaction_time >= s.apertura_ts
 AND t.transaction_time <  COALESCE(s.cierre_ts, now())
 AND t.terminal_id       = s.terminal_id
 AND t.user_id           = s.cajero_usuario_id
GROUP BY s.id;
-- 6.5 Reembolsos en EFECTIVO (heurÃ­stica)
CREATE OR REPLACE VIEW selemti.vw_sesion_reembolsos_efectivo AS
SELECT s.id AS sesion_id,
       COALESCE(SUM(CASE
         WHEN (t.transaction_type IN ('REFUND','RETURN') OR COALESCE(t.voided,false)=true)
          AND (t.payment_type = 'CASH' OR t.transaction_type = 'CASH')
         THEN t.amount::numeric ELSE 0 END),0) AS reembolsos_efectivo
FROM selemti.sesion_cajon s
JOIN public.transactions t
  ON t.transaction_time >= s.apertura_ts
 AND t.transaction_time <  COALESCE(s.cierre_ts, now())
 AND t.terminal_id       = s.terminal_id
 AND t.user_id           = s.cajero_usuario_id
GROUP BY s.id;
-- 6.6 (OPCIONAL) Resumen â€œtiraâ€ de Floreant: tomar el ÃšLTIMO drawer_pull_report de la ventana
--     Si no hay datos en drawer_pull_report, estos campos quedarÃ¡n NULL.
--     Columnas confirmadas en el dump de Floreant. :contentReference[oaicite:2]{index=2}
CREATE OR REPLACE VIEW selemti.vw_sesion_dpr AS
WITH ult AS (
  SELECT s.id AS sesion_id, dpr.*
  FROM selemti.sesion_cajon s
  JOIN LATERAL (
    SELECT *
    FROM public.drawer_pull_report r
    WHERE r.terminal_id = s.terminal_id
      AND r.user_id     = s.cajero_usuario_id
      AND r.report_time >= s.apertura_ts
      AND r.report_time <  COALESCE(s.cierre_ts, now())
    ORDER BY r.report_time DESC
    LIMIT 1
  ) dpr ON true
)
SELECT
  sesion_id,
  begin_cash::numeric(12,2)     AS dpr_begin_cash,
  cash_receipt_amount::numeric  AS dpr_cash_receipts,
  credit_card_receipt_amount::numeric AS dpr_credit_amount,
  debit_card_receipt_amount::numeric  AS dpr_debit_amount,
  pay_out_amount::numeric       AS dpr_payout,
  drawer_bleed_amount::numeric  AS dpr_bleed,
  refund_amount::numeric        AS dpr_refunds,
  variance::numeric             AS dpr_variance,
  totalvoid::numeric            AS dpr_total_void,
  totaldiscountamount::numeric  AS dpr_total_discount
FROM ult;
-- 6.7 Vista final de conciliaciÃ³n
CREATE OR REPLACE VIEW selemti.vw_conciliacion_sesion AS
WITH ventas AS (
  SELECT
    sesion_id,
    SUM(CASE WHEN codigo_fp = 'CASH' THEN monto ELSE 0 END) AS ventas_efectivo,
    SUM(CASE WHEN codigo_fp IN ('CREDIT','DEBIT','TRANSFER') OR codigo_fp LIKE 'CUSTOM:%'
             THEN monto ELSE 0 END) AS ventas_no_efectivo
  FROM selemti.vw_sesion_ventas
  GROUP BY sesion_id
),
decl AS (
  SELECT
    p.sesion_id,
    COALESCE(MAX(p.declarado_efectivo),0)::numeric AS precorte_efectivo,
    COALESCE(SUM(CASE WHEN o.tipo='CREDITO'  THEN o.monto ELSE 0 END),0)::numeric AS decl_tc,
    COALESCE(SUM(CASE WHEN o.tipo='DEBITO'   THEN o.monto ELSE 0 END),0)::numeric AS decl_td,
    COALESCE(SUM(CASE WHEN o.tipo='TRANSFER' THEN o.monto ELSE 0 END),0)::numeric AS decl_transfer
  FROM selemti.precorte p
  LEFT JOIN selemti.precorte_otros o ON o.precorte_id = p.id
  GROUP BY p.sesion_id
)
SELECT
  s.id AS sesion_id,
  s.terminal_id, s.terminal_nombre, s.sucursal,
  s.cajero_usuario_id, s.apertura_ts, s.cierre_ts, s.estatus,
  -- Sistema
  COALESCE(s.opening_float,0) AS opening_float,
  COALESCE(v.ventas_efectivo,0)      AS sistema_efectivo,
  COALESCE(v.ventas_no_efectivo,0)   AS sistema_no_efectivo,
  COALESCE(dsc.descuentos,0)         AS sistema_descuentos,
  COALESCE(an.total_anulado,0)       AS sistema_anulaciones,
  COALESCE(reti.retiros,0)           AS sistema_retiros,
  COALESCE(reem.reembolsos_efectivo,0) AS sistema_reembolsos_efectivo,
  ( COALESCE(s.opening_float,0) + COALESCE(v.ventas_efectivo,0)
    - COALESCE(reti.retiros,0) - COALESCE(reem.reembolsos_efectivo,0)
  )::numeric(12,2) AS sistema_efectivo_esperado,
  -- Declarados (precorte)
  COALESCE(d.precorte_efectivo,0) AS declarado_precorte_efectivo,
  (COALESCE(d.decl_tc,0)+COALESCE(d.decl_td,0)+COALESCE(d.decl_transfer,0))::numeric(12,2) AS declarado_precorte_tarjetas,
  -- Snapshot POS (si existe) y cierre final preferente
  s.closing_float AS cierre_pos_snapshot,
  COALESCE(s.closing_float,
           ( COALESCE(s.opening_float,0) + COALESCE(v.ventas_efectivo,0)
             - COALESCE(reti.retiros,0) - COALESCE(reem.reembolsos_efectivo,0)
           ))::numeric(12,2) AS cierre_pos_efectivo_final,
  -- DPR (tira POS) opcional
  dpr.dpr_begin_cash, dpr.dpr_cash_receipts, dpr.dpr_credit_amount, dpr.dpr_debit_amount,
  dpr.dpr_payout, dpr.dpr_bleed, dpr.dpr_refunds, dpr.dpr_variance, dpr.dpr_total_void, dpr.dpr_total_discount,
  -- Dif y veredictos
  (COALESCE(d.precorte_efectivo,0) - (COALESCE(s.opening_float,0) + COALESCE(v.ventas_efectivo,0)
   - COALESCE(reti.retiros,0) - COALESCE(reem.reembolsos_efectivo,0)))::numeric(12,2) AS diferencia_efectivo,
  CASE
    WHEN COALESCE(d.precorte_efectivo,0) = (COALESCE(s.opening_float,0) + COALESCE(v.ventas_efectivo,0)
      - COALESCE(reti.retiros,0) - COALESCE(reem.reembolsos_efectivo,0)) THEN 'CUADRA'
    WHEN COALESCE(d.precorte_efectivo,0) > (COALESCE(s.opening_float,0) + COALESCE(v.ventas_efectivo,0)
      - COALESCE(reti.retiros,0) - COALESCE(reem.reembolsos_efectivo,0)) THEN 'A_FAVOR'
    ELSE 'EN_CONTRA'
  END AS veredicto_efectivo,
  ((COALESCE(d.decl_tc,0)+COALESCE(d.decl_td,0)+COALESCE(d.decl_transfer,0)) - COALESCE(v.ventas_no_efectivo,0))::numeric(12,2) AS diferencia_tarjetas,
  CASE
    WHEN (COALESCE(d.decl_tc,0)+COALESCE(d.decl_td,0)+COALESCE(d.decl_transfer,0)) = COALESCE(v.ventas_no_efectivo,0) THEN 'CUADRA'
    WHEN (COALESCE(d.decl_tc,0)+COALESCE(d.decl_td,0)+COALESCE(d.decl_transfer,0)) > COALESCE(v.ventas_no_efectivo,0) THEN 'A_FAVOR'
    ELSE 'EN_CONTRA'
  END AS veredicto_tarjetas
FROM selemti.sesion_cajon s
LEFT JOIN ventas                          v   ON v.sesion_id   = s.id
LEFT JOIN selemti.vw_sesion_descuentos    dsc ON dsc.sesion_id = s.id
LEFT JOIN selemti.vw_sesion_anulaciones   an  ON an.sesion_id  = s.id
LEFT JOIN selemti.vw_sesion_retiros       reti ON reti.sesion_id= s.id
LEFT JOIN selemti.vw_sesion_reembolsos_efectivo reem ON reem.sesion_id = s.id
LEFT JOIN decl                            d   ON d.sesion_id   = s.id
LEFT JOIN selemti.vw_sesion_dpr           dpr ON dpr.sesion_id = s.id;
END IF;
END IF;
END
$ix$;
-- 2) Ventana de asignaciÃ³n: compatible con tu drawer_assigned_history real
--    (en tu BD "drawer_assigned_history" no trae terminal_id;
anclamos por usuario)
CREATE OR REPLACE FUNCTION public._last_assign_window(
    _terminal_id integer,  -- firma estable
    _user_id     integer,
    _ref_time    timestamptz
) RETURNS TABLE (from_ts timestamptz, to_ts timestamptz)
LANGUAGE sql STABLE AS $$
WITH ev AS (
    SELECT
        dah."time" AS event_time,
        dah.operation AS action,
        LAG(dah."time") OVER (PARTITION BY dah.a_user ORDER BY dah."time") AS prev_event
    FROM public.drawer_assigned_history dah
    WHERE dah.a_user = _user_id
      AND dah."time" <= _ref_time
)
SELECT
    COALESCE(prev_event, _ref_time - INTERVAL '24 hours')::timestamptz AS from_ts,
    event_time::timestamptz AS to_ts
FROM ev
WHERE action IN ('ASIGNAR','ASSIGN','OPEN','CERRAR','CLOSE','LIBERAR','UNASSIGN')
ORDER BY event_time DESC
LIMIT 1;
$$;
-- 4) Smoke views (opcionales) para validar sin tocar lÃ³gica
CREATE OR REPLACE VIEW selemti.vw_fast_tx AS
SELECT t.terminal_id, t.user_id, t.transaction_time, t.payment_type, t.transaction_type,
       t.payment_sub_type, t.custom_payment_name, t.custom_payment_ref, t.amount, t.voided
FROM public.transactions t;
CREATE OR REPLACE VIEW selemti.vw_fast_tickets AS
SELECT tk.id, tk.terminal_id, tk.owner_id, tk.create_date, tk.closing_date,
       tk.status, tk.total_discount, tk.total_price
FROM public.ticket tk;
--- Query para vistas 
CREATE OR REPLACE VIEW selemti.vw_sesion_ventas AS
WITH tx AS (
  SELECT
    s.id AS sesion_id,
    t.amount::numeric AS monto,
    COALESCE(
      fp.codigo,
      selemti.fn_normalizar_forma_pago(
        t.payment_type, t.transaction_type, t.payment_sub_type, t.custom_payment_name
      )
    ) AS codigo_fp
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   -- ðŸ”Ž SIN filtro por usuario (t.user_id)
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')
  WHERE COALESCE(t.voided,false) = false
    AND UPPER(COALESCE(t.transaction_type,'')) NOT IN ('VOID','REFUND','RETURN')
)
SELECT sesion_id, codigo_fp, SUM(monto)::numeric(12,2) AS monto
FROM tx
GROUP BY sesion_id, codigo_fp;
ALTER TABLE selemti.vw_sesion_ventas OWNER TO postgres;
-------------------------------
--------------------------
-- =========================================================
-- 1) Columnas para TRANSFERENCIAS (compatibles con PG 9.5)
-- =========================================================
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='sistema_transferencias'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN sistema_transferencias numeric(12,2) NOT NULL DEFAULT 0;
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='declarado_transferencias'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN declarado_transferencias numeric(12,2) NOT NULL DEFAULT 0;
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='diferencia_transferencias'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN diferencia_transferencias numeric(12,2) NOT NULL DEFAULT 0;
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='veredicto_transferencias'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN veredicto_transferencias text NOT NULL DEFAULT 'CUADRA';
  END IF;
END
$$;
-- =========================================================
-- 2) Campos de VALIDACIÃ“N por supervisor (PG 9.5)
-- =========================================================
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='validado'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN validado boolean NOT NULL DEFAULT FALSE;
    COMMENT ON COLUMN selemti.postcorte.validado
      IS 'TRUE cuando el supervisor valida/cierra el postcorte';
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='validado_por'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN validado_por integer;
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='postcorte' AND column_name='validado_en'
  ) THEN
    ALTER TABLE selemti.postcorte
      ADD COLUMN validado_en timestamptz;
  END IF;
END
$$;
-----

CREATE OR REPLACE VIEW selemti.vw_sesion_dpr AS 
WITH s AS (
  SELECT
    sesion_cajon.id,
    sesion_cajon.terminal_id,
    sesion_cajon.cajero_usuario_id,
    sesion_cajon.apertura_ts,
    COALESCE(sesion_cajon.cierre_ts, now()) AS fin_ts
  FROM selemti.sesion_cajon
)
SELECT
  s.id AS sesion_id,
  dpr.id,
  dpr.report_time,
  dpr.reg,
  dpr.ticket_count,
  dpr.begin_cash,
  dpr.net_sales,
  dpr.sales_tax,
  dpr.cash_tax,
  dpr.total_revenue,
  dpr.gross_receipts,
  dpr.giftcertreturncount,
  dpr.giftcertreturnamount,
  dpr.giftcertchangeamount,
  dpr.cash_receipt_no,
  dpr.cash_receipt_amount,
  dpr.credit_card_receipt_no,
  dpr.credit_card_receipt_amount,
  dpr.debit_card_receipt_no,
  dpr.debit_card_receipt_amount,
  dpr.refund_receipt_count,
  dpr.refund_amount,
  dpr.receipt_differential,
  dpr.cash_back,
  dpr.cash_tips,
  dpr.charged_tips,
  dpr.tips_paid,
  dpr.tips_differential,
  dpr.pay_out_no,
  dpr.pay_out_amount,
  dpr.drawer_bleed_no,
  dpr.drawer_bleed_amount,
  dpr.drawer_accountable,
  dpr.cash_to_deposit,
  dpr.variance,
  dpr.delivery_charge,
  dpr.totalvoidwst,
  dpr.totalvoid,
  dpr.totaldiscountcount,
  dpr.totaldiscountamount,
  dpr.totaldiscountsales,
  dpr.totaldiscountguest,
  dpr.totaldiscountpartysize,
  dpr.totaldiscountchecksize,
  dpr.totaldiscountpercentage,
  dpr.totaldiscountratio,
  dpr.user_id,
  dpr.terminal_id
FROM s
JOIN public.drawer_pull_report dpr
  ON dpr.terminal_id = s.terminal_id
 -- ðŸ”´ quitamos el filtro por usuario:
 -- AND dpr.user_id = s.cajero_usuario_id
 AND dpr.report_time >= s.apertura_ts
 AND dpr.report_time <  s.fin_ts;
ALTER TABLE selemti.vw_sesion_dpr OWNER TO postgres;
-------------
CREATE OR REPLACE VIEW selemti.vw_sesion_ventas AS 
WITH base AS (
  SELECT
    s.id AS sesion_id,
    t.amount::numeric AS monto,
    COALESCE(
      fp.codigo,
      selemti.fn_normalizar_forma_pago(
        t.payment_type::text,
        t.transaction_type::text,
        t.payment_sub_type::text,
        t.custom_payment_name::text
      )
    ) AS codigo_fp
  FROM selemti.sesion_cajon s
  JOIN public.transactions t
    ON t.transaction_time >= s.apertura_ts
   AND t.transaction_time <  COALESCE(s.cierre_ts, now())
   AND t.terminal_id       = s.terminal_id
   -- ðŸ”´ quitamos el filtro por usuario:
   -- AND t.user_id = s.cajero_usuario_id
  LEFT JOIN selemti.formas_pago fp
    ON fp.payment_type                  = t.payment_type::text
   AND COALESCE(fp.transaction_type,'') = COALESCE(t.transaction_type,'')::text
   AND COALESCE(fp.payment_sub_type,'') = COALESCE(t.payment_sub_type,'')::text
   AND COALESCE(fp.custom_name,'')      = COALESCE(t.custom_payment_name,'')::text
   AND COALESCE(fp.custom_ref,'')       = COALESCE(t.custom_payment_ref,'')::text
  WHERE COALESCE(t.voided,false) = false
    AND t.transaction_type::text = 'CREDIT'::text
)
SELECT
  base.sesion_id,
  base.codigo_fp,
  SUM(base.monto)::numeric(12,2) AS monto
FROM base
GROUP BY base.sesion_id, base.codigo_fp;
ALTER TABLE selemti.vw_sesion_ventas OWNER TO postgres;
-- items: tipologÃ­a + UOM de salida (para recetas/OP)
ALTER TABLE IF EXISTS selemti.items
  ADD COLUMN IF NOT EXISTS tipo selemti.producto_tipo,
  ADD COLUMN IF NOT EXISTS unidad_salida_id INT REFERENCES selemti.unidades_medida(id);
-- ticket_venta_det: capturar los modificadores aplicados por lÃ­nea
ALTER TABLE IF EXISTS selemti.ticket_venta_det
  ADD COLUMN IF NOT EXISTS modificadores_aplicados JSONB;
/* --------------------------------------------------------------
   H) Vista de mermas por Ã­tem (operativa semanal)
   -------------------------------------------------------------- */
CREATE OR REPLACE VIEW selemti.v_merma_por_item AS
SELECT
  m.item_id,
  date_trunc('week', m.ts)::date AS semana,
  SUM(CASE WHEN m.tipo = 'MERMA' THEN m.cantidad ELSE 0 END)                AS qty_mermada,  -- en canÃ³nica
  SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) AS qty_recibida,
  CASE 
    WHEN SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) > 0
    THEN ROUND(
      100.0 * SUM(CASE WHEN m.tipo='MERMA' THEN m.cantidad ELSE 0 END) /
      NULLIF(SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END),0)
    , 2)
    ELSE 0
  END AS merma_pct
FROM selemti.mov_inv m
GROUP BY 1,2;
/* --------------------------------------------------------------
   K) Defaults razonables / semillas mÃ­nimas (opcional)
   -------------------------------------------------------------- */
-- FEFO como default para sucursal "PRINCIPAL" si no existe
INSERT INTO selemti.param_sucursal (sucursal_id, consumo)
SELECT 'PRINCIPAL', 'FEFO'
WHERE NOT EXISTS (SELECT 1 FROM selemti.param_sucursal WHERE sucursal_id='PRINCIPAL');
/* ======================================================================
   FIN 010.delta_full_plus.sql
   - Compatibilidad PG 9.5
   - No usa particiones ni funciones avanzadas de versiÃ³n posterior.
   - Ejecutable mÃºltiples veces sin romper consistencia.
   ====================================================================== */

\n-- END 010.delta_full_plus.sql\n
\n-- BEGIN 011.delta_merma_desperdicio_porciones.sql\n
/* ======================================================================
   011.delta_merma_desperdicio_porciones.sql
   Complemento: Merma vs Desperdicio + Porcionamiento de preparaciones
   Compatibilidad: PostgreSQL 9.5, idempotente
   Supone: esquema selemti, OP/lotes internos, mov_inv y ticket_venta_* existentes
   ====================================================================== */

SET client_min_messages = WARNING;
SET TIME ZONE 'America/Mexico_City';
SET search_path TO selemti, public;
/* --------------------------------------------------------------
   3) Cierre de lote preparado (remanente â†’ merma o desperdicio)
   -------------------------------------------------------------- */
-- Al finalizar el turno/dÃ­a o al vencimiento, registra el remanente de una
-- preparaciÃ³n (lote interno) como salida + log de pÃ©rdida con clase.
-- Esta funciÃ³n no hace cÃ¡lculos de FEFO/PEPS, asume lote explÃ­cito.
CREATE OR REPLACE FUNCTION selemti.cerrar_lote_preparado(
  p_lote_id       BIGINT,
  p_clase         selemti.merma_clase,      -- 'MERMA' o 'DESPERDICIO'
  p_motivo        TEXT,
  p_usuario_id    INT DEFAULT NULL,
  p_uom_id        INT DEFAULT NULL          -- si envÃ­as qty_original/uom
) RETURNS BIGINT AS $$
DECLARE
  v_item_id        TEXT;
v_qty_disponible NUMERIC(14,6);
v_mov_id         BIGINT;
BEGIN
  -- Disponibilidad del lote (en canÃ³nica)
  SELECT b.item_id,
         COALESCE(SUM(CASE WHEN m.signo IS NULL THEN 0 ELSE m.signo * m.cantidad END),0)
  INTO   v_item_id, v_qty_disponible
  FROM   selemti.inventory_batch b
  LEFT JOIN selemti.v_kardex_por_lote m ON m.lote_id = b.id        -- o suma de mov_inv por lote
  WHERE  b.id = p_lote_id
  GROUP  BY b.item_id;
IF v_item_id IS NULL THEN
    RAISE EXCEPTION 'Lote % no existe', p_lote_id;
END IF;
IF v_qty_disponible IS NULL OR v_qty_disponible <= 0 THEN
    RETURN 0;
-- nada que cerrar
  END IF;
-- 3.1) Registrar salida en kardex (MERMA operativa)
  INSERT INTO selemti.mov_inv (
    ts, item_id, lote_id, cantidad, qty_original, uom_original_id,
    tipo, ref_tipo, ref_id, sucursal_id
  )
  VALUES (
    now(), v_item_id, p_lote_id, 0 - v_qty_disponible, NULL, p_uom_id,
    'MERMA', 'CIERRE_PREP', p_lote_id, NULL
  )
  RETURNING id INTO v_mov_id;
-- 3.2) Log de pÃ©rdida con clase (MERMA/DESPERDICIO)
  INSERT INTO selemti.perdida_log (
    ts, item_id, lote_id, clase, motivo, qty_canonica, uom_original_id,
    usuario_id, ref_tipo, ref_id
  ) VALUES (
    now(), v_item_id, p_lote_id, p_clase, p_motivo, v_qty_disponible, p_uom_id,
    p_usuario_id, 'CIERRE_PREP', v_mov_id
  );
RETURN v_mov_id;
END;
$$ LANGUAGE plpgsql;
/* --------------------------------------------------------------
   4) Vistas KPI: Merma vs Desperdicio y Rendimiento de preparaciÃ³n
   -------------------------------------------------------------- */
-- 4.1) KPI por semana y clase (MERMA/DESPERDICIO)
CREATE OR REPLACE VIEW selemti.v_perdida_clase_semana AS
SELECT
  item_id,
  date_trunc('week', ts)::date AS semana,
  clase,
  SUM(qty_canonica) AS qty_canonica
FROM selemti.perdida_log
GROUP BY 1,2,3;
-- 4.2) Rendimiento de preparaciÃ³n: usa OP (teÃ³rico) vs entregado (real) y consumo registrado
-- Nota: ajusta nombres de tablas de OP/lotes internos segÃºn tu esquema.
-- Este es un esqueleto que asume:
--   - selemti.op_produccion (id, receta_id, qty_planeada, qty_real, lote_resultado_id, ts_cierre)
--   - v_kardex_por_lote suma mov_inv por lote.
CREATE OR REPLACE VIEW selemti.v_rendimiento_preparacion AS
SELECT
  op.id                       AS op_id,
  op.receta_id,
  op.lote_resultado_id        AS lote_id,
  op.qty_planeada,
  op.qty_real,
  (CASE WHEN op.qty_planeada IS NULL OR op.qty_planeada=0 THEN NULL
        ELSE ROUND(100.0 * op.qty_real / op.qty_planeada, 2) END) AS rendimiento_pct,
  kardex.saldo_final_canonica AS saldo_lote_canonica,
  (CASE WHEN op.qty_real IS NULL OR op.qty_real=0 THEN NULL
        ELSE ROUND(100.0 * kardex.saldo_final_canonica / op.qty_real, 2) END) AS sobrante_pct
FROM selemti.op_produccion op
LEFT JOIN (
  SELECT
    lote_id,
    SUM(CASE WHEN signo IS NULL THEN 0 ELSE signo * cantidad END) AS saldo_final_canonica
  FROM selemti.v_kardex_por_lote   -- o arma una suma de mov_inv por lote
  GROUP BY lote_id
) kardex ON kardex.lote_id = op.lote_resultado_id;
/* --------------------------------------------------------------
   5) Vista de porciones por ticket (para preparaciones compartidas)
   -------------------------------------------------------------- */
CREATE OR REPLACE VIEW selemti.v_porciones_por_ticket AS
SELECT
  tdc.ticket_id,
  tdc.ticket_det_id,
  tdc.item_id       AS insumo_preparado,
  tdc.lote_id,
  SUM(tdc.qty_canonica) AS qty_total_canonica,
  COUNT(*)              AS usos
FROM selemti.ticket_det_consumo tdc
GROUP BY 1,2,3,4;
/* ======================================================================
   FIN 011.delta_merma_desperdicio_porciones.sql
   ====================================================================== */

\n-- END 011.delta_merma_desperdicio_porciones.sql\n
\n-- BEGIN 02_modulo_inventario.sql\n
-- =====================================================
-- SCRIPT 02: MÃ“DULO DE INVENTARIO (8 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA INVENTARIO
CREATE SEQUENCE selemti.recepcion_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.traspaso_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.ajuste_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.conteo_daily_seq START WITH 1 INCREMENT BY 1;
RAISE NOTICE 'Script 02 (MÃ³dulo Inventario - 8 tablas) ejecutado exitosamente';
\n-- END 02_modulo_inventario.sql\n
\n-- BEGIN 03_modulo_recetas.sql\n
-- =====================================================
-- SCRIPT 03: MÃ“DULO DE RECETAS/PRODUCCIÃ“N (6 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA RECETAS/PRODUCCIÃ“N
CREATE SEQUENCE selemti.op_daily_seq START WITH 1 INCREMENT BY 1;
COMMENT ON TABLE selemti.receta_cab IS 'Maestro de recetas/platos del menÃº del restaurante';
COMMENT ON TABLE selemti.receta_det IS 'Detalle de ingredientes y sub-recetas que componen una receta';
RAISE NOTICE 'Script 03 (MÃ³dulo Recetas - 6 tablas) ejecutado exitosamente';
\n-- END 03_modulo_recetas.sql\n
\n-- BEGIN 04_modulo_ventas.sql\n
-- =====================================================
-- SCRIPT 04: MÃ“DULO DE VENTAS/KDS (5 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR ESTACIONES POR DEFECTO
INSERT INTO selemti.kds_estaciones VALUES 
('COCINA_CALIENTE', 'Cocina Caliente', 'PreparaciÃ³n de platos que requieren cocciÃ³n', 'Ãrea principal cocina', NULL, 10, 15, true, NULL, NOW(), NOW()),
('COCINA_FRIA', 'Cocina FrÃ­a', 'PreparaciÃ³n de ensaladas y entradas frÃ­as', 'Ãrea refrigerada cocina', NULL, 8, 10, true, NULL, NOW(), NOW()),
('BARRA', 'Barra', 'PreparaciÃ³n de bebidas y cocteles', 'Barra principal', NULL, 12, 8, true, NULL, NOW(), NOW()),
('POSTRES', 'Postres', 'PreparaciÃ³n de postres y dulces', 'Ãrea postres', NULL, 6, 12, true, NULL, NOW(), NOW()),
('PANADERIA', 'PanaderÃ­a', 'PreparaciÃ³n de pan y reposterÃ­a', 'Ãrea hornos', NULL, 5, 20, true, NULL, NOW(), NOW());
RAISE NOTICE 'Script 04 (MÃ³dulo Ventas/KDS - 5 tablas) ejecutado exitosamente';
\n-- END 04_modulo_ventas.sql\n
\n-- BEGIN 05_modulo_caja.sql\n
-- =====================================================
-- SCRIPT 05: MÃ“DULO DE CAJA (3 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
RAISE NOTICE 'Script 05 (MÃ³dulo Caja - 3 tablas) ejecutado exitosamente';
\n-- END 05_modulo_caja.sql\n
\n-- BEGIN 06_modulo_appcc.sql\n
-- =====================================================
-- SCRIPT 06: MÃ“DULO APPCC (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR PUNTOS DE CONTROL APPCC BÃSICOS
INSERT INTO selemti.appcc_puntos_control VALUES 
(1, 'PCC-RECEP-001', 'RecepciÃ³n Productos Perecederos', 'RECEPCION', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control de temperatura', 'Temperatura <= 4Â°C para productos refrigerados', 'CADA LOTE', 'Personal AlmacÃ©n', 'Rechazar lote y notificar al proveedor', true, 1, NOW(), NULL, NOW(), NOW()),
(2, 'PCC-ALM-001', 'Almacenamiento Refrigerado', 'ALMACENAMIENTO', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control temperatura neveras', 'Temperatura entre 0Â°C y 4Â°C', 'CADA 4 HORAS', 'Personal Cocina', 'Ajustar temperatura y verificar productos', true, 1, NOW(), NULL, NOW(), NOW()),
(3, 'PCC-COC-001', 'CocciÃ³n de Alimentos', 'COCCION', 'Supervivencia de microorganismos', 'BIOLOGICO', 'Control temperatura interna', 'Temperatura interna >= 75Â°C por 2 minutos', 'CADA BATCH', 'Chef', 'Extender tiempo de cocciÃ³n', true, 1, NOW(), NULL, NOW(), NOW());
RAISE NOTICE 'Script 06 (MÃ³dulo APPCC - 4 tablas) ejecutado exitosamente';
\n-- END 06_modulo_appcc.sql\n
\n-- BEGIN 07_modulo_configuracion.sql\n
-- =====================================================
-- SCRIPT 07: MÃ“DULO DE CONFIGURACIÃ“N (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR PARÃMETROS CRÃTICOS DEL SISTEMA
INSERT INTO selemti.parametros_sistema VALUES 
(1, 'INV_TOLERANCIA_DIFERENCIA', 'Tolerancia para diferencias de inventario', '0.05', 'NUMERICO', 'INVENTARIO', 'Tolerancia permitida para diferencias en conteos fÃ­sicos (5%)', '0.05', true, false, NULL, NOW(), NOW()),
(2, 'CAJA_TOLERANCIA_EFECTIVO', 'Tolerancia para diferencias de efectivo', '50.00', 'NUMERICO', 'CAJA', 'Tolerancia en pesos para diferencias de caja sin requerir aprobaciÃ³n', '50.00', true, false, NULL, NOW(), NOW()),
(3, 'APPCC_FRECUENCIA_MONITOREO', 'Frecuencia de monitoreo APPCC', '4', 'NUMERICO', 'APPCC', 'Horas entre monitoreos de puntos crÃ­ticos', '4', true, true, NULL, NOW(), NOW()),
(4, 'KDS_TIEMPO_MAX_PREPARACION', 'Tiempo mÃ¡ximo de preparaciÃ³n', '30', 'NUMERICO', 'VENTAS', 'Tiempo mÃ¡ximo en minutos para preparaciÃ³n de platos', '30', true, false, NULL, NOW(), NOW()),
(5, 'SISTEMA_MODO_MANTENIMIENTO', 'Modo mantenimiento del sistema', 'false', 'BOOLEANO', 'GENERAL', 'Activa el modo mantenimiento del sistema', 'false', true, true, NULL, NOW(), NOW()),
(6, 'INV_POLITICA_CONSUMO', 'PolÃ­tica de consumo de inventario', 'FEFO', 'TEXTO', 'INVENTARIO', 'PolÃ­tica por defecto para consumo de inventario (FEFO/PEPS)', 'FEFO', true, false, NULL, NOW(), NOW());
-- INSERTAR UBICACIONES BÃSICAS
INSERT INTO selemti.ubicaciones VALUES 
('UBIC-BODEGA1', 'Bodega Principal', 'BODEGA', 'SUR', 18.0, 1000.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-REFRIG1', 'Refrigerador Carnes', 'REFRIGERADOR', 'SUR', 4.0, 200.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-CONGEL1', 'Congelador Pescados', 'CONGELADOR', 'SUR', -18.0, 150.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-BARRA', 'Barra Principal', 'BARRA', 'SUR', 8.0, 50.0, NULL, true, NULL, NOW(), Now());
-- INSERTAR CATEGORÃAS BÃSICAS
INSERT INTO selemti.categorias_items VALUES 
('CAT-PROTEINA', 'ProteÃ­nas', 'Carnes, pescados, aves', 'INSUMO', NULL, '1101', 5.0, 7, true, NOW(), NOW()),
('CAT-LACTEO', 'LÃ¡cteos', 'Leche, queso, yogurt', 'INSUMO', NULL, '1102', 3.0, 10, true, NOW(), NOW()),
('CAT-VERDURA', 'Verduras', 'Verduras frescas', 'INSUMO', NULL, '1103', 8.0, 5, true, NOW(), NOW()),
('CAT-BEBIDA', 'Bebidas', 'Refrescos, jugos, agua', 'INSUMO', NULL, '1104', 1.0, 30, true, NOW(), NOW()),
('CAT-MENU', 'Platos del MenÃº', 'Productos terminados para venta', 'PRODUCTO_TERMINADO', NULL, '2101', 2.0, 1, true, NOW(), NOW());
RAISE NOTICE 'Script 07 (MÃ³dulo ConfiguraciÃ³n - 4 tablas) ejecutado exitosamente';
\n-- END 07_modulo_configuracion.sql\n
\n-- BEGIN 08_datos_iniciales.sql\n
-- =====================================================
-- SCRIPT 08: DATOS INICIALES DEL SISTEMA
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- 1. CREAR USUARIO ADMINISTRADOR INICIAL
INSERT INTO selemti.users (username, password_hash, email, nombre_completo, sucursal_id, activo) VALUES 
('admin', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'admin@restaurante.com', 'Administrador del Sistema', 'SUR', true);
-- 2. ASIGNAR ROLES AL ADMINISTRADOR
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(1, 'GERENTE', 1),
(1, 'CHEF', 1),
(1, 'ALMACEN', 1),
(1, 'CAJERO', 1),
(1, 'AUDITOR', 1);
-- 3. CREAR USUARIOS DE EJEMPLO POR ROL
INSERT INTO selemti.users (username, password_hash, nombre_completo, sucursal_id, activo) VALUES 
('chef.juan', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Juan PÃ©rez - Chef', 'SUR', true),
('almacen.maria', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'MarÃ­a GarcÃ­a - AlmacÃ©n', 'SUR', true),
('caja.carlos', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Carlos LÃ³pez - Cajero', 'SUR', true);
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(2, 'CHEF', 1),
(3, 'ALMACEN', 1),
(4, 'CAJERO', 1);
-- 4. INSERTAR ÃTEMS DE EJEMPLO (MATERIAS PRIMAS)
INSERT INTO selemti.items (id, nombre, categoria_id, unidad_medida, perishable, temperatura_min, temperatura_max) VALUES 
('PROT-POLLO-PECHUGA-1KG', 'Pechuga de Pollo', 'CAT-PROTEINA', 'KG', true, 0, 4),
('PROT-SALMON-FRESCO-1KG', 'SalmÃ³n Fresco', 'CAT-PROTEINA', 'KG', true, -2, 2),
('VERD-LECHUGA-ROMA-1KG', 'Lechuga Romana', 'CAT-VERDURA', 'KG', true, 1, 4),
('VERD-TOMATE-ROJO-1KG', 'Tomate Rojo', 'CAT-VERDURA', 'KG', true, 10, 15),
('LACT-QUESO-MOZZARELLA-1KG', 'Queso Mozzarella', 'CAT-LACTEO', 'KG', true, 2, 6),
('BEBID-AGUA-1LT', 'Agua Purificada', 'CAT-BEBIDA', 'LT', false, NULL, NULL);
-- 5. INSERTAR RECETAS DE EJEMPLO
INSERT INTO selemti.receta_cab (id, codigo_plato_pos, nombre_plato, categoria_cocina, tipo_preparacion, tiempo_preparacion_min, rendimiento_porciones, nivel_dificultad, activo, usuario_creador, costo_standard_porcion, precio_venta_sugerido) VALUES 
('REC-CEVICHE-CLASICO', 'CEV-001', 'Ceviche ClÃ¡sico', 'PLATO_FUERTE', 'FRIA', 20, 4, 'MEDIA', true, 1, 45.00, 180.00),
('REC-ENSALADA-CESAR', 'ENS-001', 'Ensalada CÃ©sar', 'ENTRADA', 'FRIA', 15, 2, 'BAJA', true, 1, 35.00, 120.00);
-- 6. INSERTAR DETALLES DE RECETAS
INSERT INTO selemti.receta_det (receta_id, item_id, tipo_componente, cantidad_bruta, porcentaje_merma, cantidad_neta, orden_mezcla, tipo_medida) VALUES 
('REC-CEVICHE-CLASICO', 'PROT-SALMON-FRESCO-1KG', 'INGREDIENTE', 0.500, 10.00, 0.450, 1, 'PESO'),
('REC-CEVICHE-CLASICO', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.200, 5.00, 0.190, 2, 'PESO'),
('REC-ENSALADA-CESAR', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.300, 5.00, 0.285, 1, 'PESO'),
('REC-ENSALADA-CESAR', 'LACT-QUESO-MOZZARELLA-1KG', 'INGREDIENTE', 0.100, 2.00, 0.098, 2, 'PESO');
-- 7. ACTUALIZAR FOREIGN KEYS PENDIENTES
-- Actualizar recepcion_cab con referencia a proveedores
UPDATE selemti.recepcion_cab SET proveedor_id = 'PROV-CARNICOS-LA-PALMA' WHERE proveedor_id IS NOT NULL;
-- 8. CREAR PROVEEDORES DE EJEMPLO
INSERT INTO selemti.proveedores (codigo, nombre, tipo_proveedor, categoria_calidad, activo) VALUES 
('PROV-CARNICOS-LA-PALMA', 'CÃ¡rnicos La Palma', 'ALIMENTOS', 'A', true),
('PROV-PESCADOS-FRESCOS', 'Pescados Frescos del PacÃ­fico', 'ALIMENTOS', 'A', true),
('PROV-HORTALIZAS-ORGANICAS', 'Hortalizas OrgÃ¡nicas', 'ALIMENTOS', 'B', true);
RAISE NOTICE 'Script 08 (Datos iniciales) ejecutado exitosamente';
\n-- END 08_datos_iniciales.sql\n
\n-- BEGIN 09_indices_optimizacion.sql\n
-- =====================================================
-- SCRIPT 09: ÃNDICES DE OPTIMIZACIÃ“N
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- VISTAS PARA CONSULTAS FRECUENTES
CREATE OR REPLACE VIEW selemti.v_stock_actual AS
SELECT 
    item_id,
    ubicacion_id,
    SUM(CASE WHEN tipo_movimiento = 'E' THEN cantidad ELSE -cantidad END) as stock_actual
FROM selemti.mov_inv
GROUP BY item_id, ubicacion_id;
CREATE OR REPLACE VIEW selemti.v_stock_por_lote_fefo AS
SELECT 
    b.item_id,
    b.id as batch_id,
    b.lote_proveedor,
    b.fecha_caducidad,
    b.ubicacion_id,
    b.cantidad_actual as stock_lote,
    b.estado
FROM selemti.inventory_batch b
WHERE b.estado = 'ACTIVO' 
AND b.cantidad_actual > 0
ORDER BY b.fecha_caducidad ASC;
RAISE NOTICE 'Script 09 (Ãndices de optimizaciÃ³n) ejecutado exitosamente';
RAISE NOTICE 'âœ… ESQUEMA SELETI COMPLETADO - 30 TABLAS CREADAS';
-- Helper: view de pagos en ventana (por terminal)
DROP VIEW IF EXISTS terrena_vw_window_payments;
-- Vendedores por ventana
DROP VIEW IF EXISTS terrena_vw_window_sellers;
-- Descuentos por ventana (ticket y por Ã­tem)
DROP VIEW IF EXISTS terrena_vw_window_discounts;
-- Retiros / PayOuts (transactions ya trae payout_* cuando aplica)
DROP VIEW IF EXISTS terrena_vw_window_payouts;
\n-- END corte_auxiliar.sql\n
\n-- BEGIN DEPLOY_CONSOLIDADO_PG95-20251017-0949.sql\n
-- DEPLOY CONSOLIDADO PG95
-- Fecha: 10/17/2025 09:49:04
SET client_min_messages TO warning;
SET search_path TO selemti, public;
-- 2. CREAR USUARIO DEDICADO
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'selemti_user') THEN
        CREATE USER selemti_user WITH PASSWORD 'selemti_password_2024';
        RAISE NOTICE 'Usuario selemti_user creado exitosamente';
    ELSE
        RAISE NOTICE 'Usuario selemti_user ya existe';
    END IF;
END
$$;
-- 3. OTORGAR PERMISOS
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT CREATE ON SCHEMA selemti TO selemti_user;
-- 4. PERMISOS DE LECTURA ENTRE ESQUEMAS
GRANT USAGE ON SCHEMA public TO selemti_user;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO selemti_user;
-- 5. CONFIGURAR SEARCH PATH
ALTER USER selemti_user SET search_path = 'selemti, public';
RAISE NOTICE 'Script 00 ejecutado exitosamente';
\n-- END 00_esquema_selemti.sql\n
\n-- BEGIN 01_tablas_maestras.sql\n
-- =====================================================
-- SCRIPT 01: TABLAS MAESTRAS BASE
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
COMMENT ON TABLE selemti.users IS 'Usuarios del sistema con sus credenciales y estado';
COMMENT ON TABLE selemti.user_roles IS 'AsignaciÃ³n de roles a usuarios (RBAC)';
COMMENT ON TABLE selemti.items IS 'Maestro de todos los Ã­tems del sistema (insumos, productos terminados, categorÃ­as, ubicaciones)';
COMMENT ON TABLE selemti.inventory_batch IS 'Control de lotes para trazabilidad APPCC';
COMMENT ON TABLE selemti.mov_inv IS 'Kardex - Libro mayor de inventario. Cada movimiento genera un registro aquÃ­';
COMMENT ON TABLE selemti.audit_log IS 'Registro completo de auditorÃ­a para cumplimiento APPCC y seguridad';
-- INSERTAR CÃ“DIGOS DE ERROR ESTÃNDAR
INSERT INTO selemti.error_codes VALUES 
('INV-001', 'BUSINESS', 'HIGH', 'Stock insuficiente para el Ã­tem %s. Stock actual: %s, requerido: %s', 'Intento de movimiento que causarÃ­a stock negativo', 'Verificar inventario fÃ­sico o recibir mercancÃ­a'),
('INV-002', 'BUSINESS', 'CRITICAL', 'Lote %s estÃ¡ bloqueado por motivo: %s', 'Intento de usar lote con estado BLOQUEADO o RECALL', 'Contactar al auditor APPCC para liberar el lote'),
('SEC-001', 'SECURITY', 'HIGH', 'Intento de acceso no autorizado al recurso %s por usuario %s', 'ViolaciÃ³n de control de acceso RBAC', 'Verificar asignaciÃ³n de roles y permisos');
RAISE NOTICE 'Script 01 (Tablas maestras) ejecutado exitosamente';
\n-- END 01_tablas_maestras.sql\n
\n-- BEGIN 02_modulo_inventario.sql\n
-- =====================================================
-- SCRIPT 02: MÃ“DULO DE INVENTARIO (8 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA INVENTARIO
CREATE SEQUENCE selemti.recepcion_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.traspaso_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.ajuste_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.conteo_daily_seq START WITH 1 INCREMENT BY 1;
RAISE NOTICE 'Script 02 (MÃ³dulo Inventario - 8 tablas) ejecutado exitosamente';
\n-- END 02_modulo_inventario.sql\n
\n-- BEGIN 03_modulo_recetas.sql\n
-- =====================================================
-- SCRIPT 03: MÃ“DULO DE RECETAS/PRODUCCIÃ“N (6 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA RECETAS/PRODUCCIÃ“N
CREATE SEQUENCE selemti.op_daily_seq START WITH 1 INCREMENT BY 1;
COMMENT ON TABLE selemti.receta_cab IS 'Maestro de recetas/platos del menÃº del restaurante';
COMMENT ON TABLE selemti.receta_det IS 'Detalle de ingredientes y sub-recetas que componen una receta';
RAISE NOTICE 'Script 03 (MÃ³dulo Recetas - 6 tablas) ejecutado exitosamente';
\n-- END 03_modulo_recetas.sql\n
\n-- BEGIN 04_modulo_ventas.sql\n
-- =====================================================
-- SCRIPT 04: MÃ“DULO DE VENTAS/KDS (5 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR ESTACIONES POR DEFECTO
INSERT INTO selemti.kds_estaciones VALUES 
('COCINA_CALIENTE', 'Cocina Caliente', 'PreparaciÃ³n de platos que requieren cocciÃ³n', 'Ãrea principal cocina', NULL, 10, 15, true, NULL, NOW(), NOW()),
('COCINA_FRIA', 'Cocina FrÃ­a', 'PreparaciÃ³n de ensaladas y entradas frÃ­as', 'Ãrea refrigerada cocina', NULL, 8, 10, true, NULL, NOW(), NOW()),
('BARRA', 'Barra', 'PreparaciÃ³n de bebidas y cocteles', 'Barra principal', NULL, 12, 8, true, NULL, NOW(), NOW()),
('POSTRES', 'Postres', 'PreparaciÃ³n de postres y dulces', 'Ãrea postres', NULL, 6, 12, true, NULL, NOW(), NOW()),
('PANADERIA', 'PanaderÃ­a', 'PreparaciÃ³n de pan y reposterÃ­a', 'Ãrea hornos', NULL, 5, 20, true, NULL, NOW(), NOW());
RAISE NOTICE 'Script 04 (MÃ³dulo Ventas/KDS - 5 tablas) ejecutado exitosamente';
\n-- END 04_modulo_ventas.sql\n
\n-- BEGIN 05_modulo_caja.sql\n
-- =====================================================
-- SCRIPT 05: MÃ“DULO DE CAJA (3 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
RAISE NOTICE 'Script 05 (MÃ³dulo Caja - 3 tablas) ejecutado exitosamente';
\n-- END 05_modulo_caja.sql\n
\n-- BEGIN 06_modulo_appcc.sql\n
-- =====================================================
-- SCRIPT 06: MÃ“DULO APPCC (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR PUNTOS DE CONTROL APPCC BÃSICOS
INSERT INTO selemti.appcc_puntos_control VALUES 
(1, 'PCC-RECEP-001', 'RecepciÃ³n Productos Perecederos', 'RECEPCION', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control de temperatura', 'Temperatura <= 4Â°C para productos refrigerados', 'CADA LOTE', 'Personal AlmacÃ©n', 'Rechazar lote y notificar al proveedor', true, 1, NOW(), NULL, NOW(), NOW()),
(2, 'PCC-ALM-001', 'Almacenamiento Refrigerado', 'ALMACENAMIENTO', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control temperatura neveras', 'Temperatura entre 0Â°C y 4Â°C', 'CADA 4 HORAS', 'Personal Cocina', 'Ajustar temperatura y verificar productos', true, 1, NOW(), NULL, NOW(), NOW()),
(3, 'PCC-COC-001', 'CocciÃ³n de Alimentos', 'COCCION', 'Supervivencia de microorganismos', 'BIOLOGICO', 'Control temperatura interna', 'Temperatura interna >= 75Â°C por 2 minutos', 'CADA BATCH', 'Chef', 'Extender tiempo de cocciÃ³n', true, 1, NOW(), NULL, NOW(), NOW());
RAISE NOTICE 'Script 06 (MÃ³dulo APPCC - 4 tablas) ejecutado exitosamente';
\n-- END 06_modulo_appcc.sql\n
\n-- BEGIN 07_modulo_configuracion.sql\n
-- =====================================================
-- SCRIPT 07: MÃ“DULO DE CONFIGURACIÃ“N (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR PARÃMETROS CRÃTICOS DEL SISTEMA
INSERT INTO selemti.parametros_sistema VALUES 
(1, 'INV_TOLERANCIA_DIFERENCIA', 'Tolerancia para diferencias de inventario', '0.05', 'NUMERICO', 'INVENTARIO', 'Tolerancia permitida para diferencias en conteos fÃ­sicos (5%)', '0.05', true, false, NULL, NOW(), NOW()),
(2, 'CAJA_TOLERANCIA_EFECTIVO', 'Tolerancia para diferencias de efectivo', '50.00', 'NUMERICO', 'CAJA', 'Tolerancia en pesos para diferencias de caja sin requerir aprobaciÃ³n', '50.00', true, false, NULL, NOW(), NOW()),
(3, 'APPCC_FRECUENCIA_MONITOREO', 'Frecuencia de monitoreo APPCC', '4', 'NUMERICO', 'APPCC', 'Horas entre monitoreos de puntos crÃ­ticos', '4', true, true, NULL, NOW(), NOW()),
(4, 'KDS_TIEMPO_MAX_PREPARACION', 'Tiempo mÃ¡ximo de preparaciÃ³n', '30', 'NUMERICO', 'VENTAS', 'Tiempo mÃ¡ximo en minutos para preparaciÃ³n de platos', '30', true, false, NULL, NOW(), NOW()),
(5, 'SISTEMA_MODO_MANTENIMIENTO', 'Modo mantenimiento del sistema', 'false', 'BOOLEANO', 'GENERAL', 'Activa el modo mantenimiento del sistema', 'false', true, true, NULL, NOW(), NOW()),
(6, 'INV_POLITICA_CONSUMO', 'PolÃ­tica de consumo de inventario', 'FEFO', 'TEXTO', 'INVENTARIO', 'PolÃ­tica por defecto para consumo de inventario (FEFO/PEPS)', 'FEFO', true, false, NULL, NOW(), NOW());
-- INSERTAR UBICACIONES BÃSICAS
INSERT INTO selemti.ubicaciones VALUES 
('UBIC-BODEGA1', 'Bodega Principal', 'BODEGA', 'SUR', 18.0, 1000.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-REFRIG1', 'Refrigerador Carnes', 'REFRIGERADOR', 'SUR', 4.0, 200.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-CONGEL1', 'Congelador Pescados', 'CONGELADOR', 'SUR', -18.0, 150.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-BARRA', 'Barra Principal', 'BARRA', 'SUR', 8.0, 50.0, NULL, true, NULL, NOW(), Now());
-- INSERTAR CATEGORÃAS BÃSICAS
INSERT INTO selemti.categorias_items VALUES 
('CAT-PROTEINA', 'ProteÃ­nas', 'Carnes, pescados, aves', 'INSUMO', NULL, '1101', 5.0, 7, true, NOW(), NOW()),
('CAT-LACTEO', 'LÃ¡cteos', 'Leche, queso, yogurt', 'INSUMO', NULL, '1102', 3.0, 10, true, NOW(), NOW()),
('CAT-VERDURA', 'Verduras', 'Verduras frescas', 'INSUMO', NULL, '1103', 8.0, 5, true, NOW(), NOW()),
('CAT-BEBIDA', 'Bebidas', 'Refrescos, jugos, agua', 'INSUMO', NULL, '1104', 1.0, 30, true, NOW(), NOW()),
('CAT-MENU', 'Platos del MenÃº', 'Productos terminados para venta', 'PRODUCTO_TERMINADO', NULL, '2101', 2.0, 1, true, NOW(), NOW());
RAISE NOTICE 'Script 07 (MÃ³dulo ConfiguraciÃ³n - 4 tablas) ejecutado exitosamente';
\n-- END 07_modulo_configuracion.sql\n
\n-- BEGIN 08_datos_iniciales.sql\n
-- =====================================================
-- SCRIPT 08: DATOS INICIALES DEL SISTEMA
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- 1. CREAR USUARIO ADMINISTRADOR INICIAL
INSERT INTO selemti.users (username, password_hash, email, nombre_completo, sucursal_id, activo) VALUES 
('admin', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'admin@restaurante.com', 'Administrador del Sistema', 'SUR', true);
-- 2. ASIGNAR ROLES AL ADMINISTRADOR
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(1, 'GERENTE', 1),
(1, 'CHEF', 1),
(1, 'ALMACEN', 1),
(1, 'CAJERO', 1),
(1, 'AUDITOR', 1);
-- 3. CREAR USUARIOS DE EJEMPLO POR ROL
INSERT INTO selemti.users (username, password_hash, nombre_completo, sucursal_id, activo) VALUES 
('chef.juan', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Juan PÃ©rez - Chef', 'SUR', true),
('almacen.maria', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'MarÃ­a GarcÃ­a - AlmacÃ©n', 'SUR', true),
('caja.carlos', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Carlos LÃ³pez - Cajero', 'SUR', true);
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(2, 'CHEF', 1),
(3, 'ALMACEN', 1),
(4, 'CAJERO', 1);
-- 4. INSERTAR ÃTEMS DE EJEMPLO (MATERIAS PRIMAS)
INSERT INTO selemti.items (id, nombre, categoria_id, unidad_medida, perishable, temperatura_min, temperatura_max) VALUES 
('PROT-POLLO-PECHUGA-1KG', 'Pechuga de Pollo', 'CAT-PROTEINA', 'KG', true, 0, 4),
('PROT-SALMON-FRESCO-1KG', 'SalmÃ³n Fresco', 'CAT-PROTEINA', 'KG', true, -2, 2),
('VERD-LECHUGA-ROMA-1KG', 'Lechuga Romana', 'CAT-VERDURA', 'KG', true, 1, 4),
('VERD-TOMATE-ROJO-1KG', 'Tomate Rojo', 'CAT-VERDURA', 'KG', true, 10, 15),
('LACT-QUESO-MOZZARELLA-1KG', 'Queso Mozzarella', 'CAT-LACTEO', 'KG', true, 2, 6),
('BEBID-AGUA-1LT', 'Agua Purificada', 'CAT-BEBIDA', 'LT', false, NULL, NULL);
-- 5. INSERTAR RECETAS DE EJEMPLO
INSERT INTO selemti.receta_cab (id, codigo_plato_pos, nombre_plato, categoria_cocina, tipo_preparacion, tiempo_preparacion_min, rendimiento_porciones, nivel_dificultad, activo, usuario_creador, costo_standard_porcion, precio_venta_sugerido) VALUES 
('REC-CEVICHE-CLASICO', 'CEV-001', 'Ceviche ClÃ¡sico', 'PLATO_FUERTE', 'FRIA', 20, 4, 'MEDIA', true, 1, 45.00, 180.00),
('REC-ENSALADA-CESAR', 'ENS-001', 'Ensalada CÃ©sar', 'ENTRADA', 'FRIA', 15, 2, 'BAJA', true, 1, 35.00, 120.00);
-- 6. INSERTAR DETALLES DE RECETAS
INSERT INTO selemti.receta_det (receta_id, item_id, tipo_componente, cantidad_bruta, porcentaje_merma, cantidad_neta, orden_mezcla, tipo_medida) VALUES 
('REC-CEVICHE-CLASICO', 'PROT-SALMON-FRESCO-1KG', 'INGREDIENTE', 0.500, 10.00, 0.450, 1, 'PESO'),
('REC-CEVICHE-CLASICO', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.200, 5.00, 0.190, 2, 'PESO'),
('REC-ENSALADA-CESAR', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.300, 5.00, 0.285, 1, 'PESO'),
('REC-ENSALADA-CESAR', 'LACT-QUESO-MOZZARELLA-1KG', 'INGREDIENTE', 0.100, 2.00, 0.098, 2, 'PESO');
-- 7. ACTUALIZAR FOREIGN KEYS PENDIENTES
-- Actualizar recepcion_cab con referencia a proveedores
UPDATE selemti.recepcion_cab SET proveedor_id = 'PROV-CARNICOS-LA-PALMA' WHERE proveedor_id IS NOT NULL;
-- 8. CREAR PROVEEDORES DE EJEMPLO
INSERT INTO selemti.proveedores (codigo, nombre, tipo_proveedor, categoria_calidad, activo) VALUES 
('PROV-CARNICOS-LA-PALMA', 'CÃ¡rnicos La Palma', 'ALIMENTOS', 'A', true),
('PROV-PESCADOS-FRESCOS', 'Pescados Frescos del PacÃ­fico', 'ALIMENTOS', 'A', true),
('PROV-HORTALIZAS-ORGANICAS', 'Hortalizas OrgÃ¡nicas', 'ALIMENTOS', 'B', true);
RAISE NOTICE 'Script 08 (Datos iniciales) ejecutado exitosamente';
\n-- END 08_datos_iniciales.sql\n
\n-- BEGIN 09_indices_optimizacion.sql\n
-- =====================================================
-- SCRIPT 09: ÃNDICES DE OPTIMIZACIÃ“N
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- VISTAS PARA CONSULTAS FRECUENTES
CREATE OR REPLACE VIEW selemti.v_stock_actual AS
SELECT 
    item_id,
    ubicacion_id,
    SUM(CASE WHEN tipo_movimiento = 'E' THEN cantidad ELSE -cantidad END) as stock_actual
FROM selemti.mov_inv
GROUP BY item_id, ubicacion_id;
CREATE OR REPLACE VIEW selemti.v_stock_por_lote_fefo AS
SELECT 
    b.item_id,
    b.id as batch_id,
    b.lote_proveedor,
    b.fecha_caducidad,
    b.ubicacion_id,
    b.cantidad_actual as stock_lote,
    b.estado
FROM selemti.inventory_batch b
WHERE b.estado = 'ACTIVO' 
AND b.cantidad_actual > 0
ORDER BY b.fecha_caducidad ASC;
RAISE NOTICE 'Script 09 (Ãndices de optimizaciÃ³n) ejecutado exitosamente';
RAISE NOTICE 'âœ… ESQUEMA SELETI COMPLETADO - 30 TABLAS CREADAS';
\n-- END 09_indices_optimizacion.sql\n
\n-- BEGIN 010.delta_full_plus.sql\n
/* ======================================================================
   010.delta_full_plus.sql
   Selemti - Deltas finales de modelo para operaciÃ³n multi-UOM, elaborados,
   traspasos, stock policies y mermas. PG â‰¥ 9.5
   ====================================================================== */

SET client_min_messages = WARNING;
SET TIME ZONE 'America/Mexico_City';
SET search_path TO selemti, public;
/* --------------------------------------------------------------
   A) UOM original en movimientos (fidelidad operativa)
   -------------------------------------------------------------- */
-- Se asume que selemti.unidades_medida ya existe (GR, ML, PZ, etc.)

-- Kardex: cantidad en canÃ³nica ya existe (cantidad/qty). Agregamos
-- qty_original + uom_original_id para preservar la UOM de la transacciÃ³n.
ALTER TABLE IF EXISTS selemti.mov_inv
  ADD COLUMN IF NOT EXISTS qty_original NUMERIC(14,6),
  ADD COLUMN IF NOT EXISTS uom_original_id INT REFERENCES selemti.unidades_medida(id);
-- items: tipologÃ­a + UOM de salida (para recetas/OP)
ALTER TABLE IF EXISTS selemti.items
  ADD COLUMN IF NOT EXISTS tipo selemti.producto_tipo,
  ADD COLUMN IF NOT EXISTS unidad_salida_id INT REFERENCES selemti.unidades_medida(id);
-- ticket_venta_det: capturar los modificadores aplicados por lÃ­nea
ALTER TABLE IF EXISTS selemti.ticket_venta_det
  ADD COLUMN IF NOT EXISTS modificadores_aplicados JSONB;
/* --------------------------------------------------------------
   H) Vista de mermas por Ã­tem (operativa semanal)
   -------------------------------------------------------------- */
CREATE OR REPLACE VIEW selemti.v_merma_por_item AS
SELECT
  m.item_id,
  date_trunc('week', m.ts)::date AS semana,
  SUM(CASE WHEN m.tipo = 'MERMA' THEN m.cantidad ELSE 0 END)                AS qty_mermada,  -- en canÃ³nica
  SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) AS qty_recibida,
  CASE 
    WHEN SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) > 0
    THEN ROUND(
      100.0 * SUM(CASE WHEN m.tipo='MERMA' THEN m.cantidad ELSE 0 END) /
      NULLIF(SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END),0)
    , 2)
    ELSE 0
  END AS merma_pct
FROM selemti.mov_inv m
GROUP BY 1,2;
/* --------------------------------------------------------------
   K) Defaults razonables / semillas mÃ­nimas (opcional)
   -------------------------------------------------------------- */
-- FEFO como default para sucursal "PRINCIPAL" si no existe
INSERT INTO selemti.param_sucursal (sucursal_id, consumo)
SELECT 'PRINCIPAL', 'FEFO'
WHERE NOT EXISTS (SELECT 1 FROM selemti.param_sucursal WHERE sucursal_id='PRINCIPAL');
/* ======================================================================
   FIN 010.delta_full_plus.sql
   - Compatibilidad PG 9.5
   - No usa particiones ni funciones avanzadas de versiÃ³n posterior.
   - Ejecutable mÃºltiples veces sin romper consistencia.
   ====================================================================== */

\n-- END 010.delta_full_plus.sql\n
\n-- BEGIN 011.delta_merma_desperdicio_porciones.sql\n
/* ======================================================================
   011.delta_merma_desperdicio_porciones.sql
   Complemento: Merma vs Desperdicio + Porcionamiento de preparaciones
   Compatibilidad: PostgreSQL 9.5, idempotente
   Supone: esquema selemti, OP/lotes internos, mov_inv y ticket_venta_* existentes
   ====================================================================== */

SET client_min_messages = WARNING;
SET TIME ZONE 'America/Mexico_City';
SET search_path TO selemti, public;
/* --------------------------------------------------------------
   3) Cierre de lote preparado (remanente â†’ merma o desperdicio)
   -------------------------------------------------------------- */
-- Al finalizar el turno/dÃ­a o al vencimiento, registra el remanente de una
-- preparaciÃ³n (lote interno) como salida + log de pÃ©rdida con clase.
-- Esta funciÃ³n no hace cÃ¡lculos de FEFO/PEPS, asume lote explÃ­cito.
CREATE OR REPLACE FUNCTION selemti.cerrar_lote_preparado(
  p_lote_id       BIGINT,
  p_clase         selemti.merma_clase,      -- 'MERMA' o 'DESPERDICIO'
  p_motivo        TEXT,
  p_usuario_id    INT DEFAULT NULL,
  p_uom_id        INT DEFAULT NULL          -- si envÃ­as qty_original/uom
) RETURNS BIGINT AS $$
DECLARE
  v_item_id        TEXT;
v_qty_disponible NUMERIC(14,6);
v_mov_id         BIGINT;
BEGIN
  -- Disponibilidad del lote (en canÃ³nica)
  SELECT b.item_id,
         COALESCE(SUM(CASE WHEN m.signo IS NULL THEN 0 ELSE m.signo * m.cantidad END),0)
  INTO   v_item_id, v_qty_disponible
  FROM   selemti.inventory_batch b
  LEFT JOIN selemti.v_kardex_por_lote m ON m.lote_id = b.id        -- o suma de mov_inv por lote
  WHERE  b.id = p_lote_id
  GROUP  BY b.item_id;
IF v_item_id IS NULL THEN
    RAISE EXCEPTION 'Lote % no existe', p_lote_id;
END IF;
IF v_qty_disponible IS NULL OR v_qty_disponible <= 0 THEN
    RETURN 0;
-- nada que cerrar
  END IF;
-- 3.1) Registrar salida en kardex (MERMA operativa)
  INSERT INTO selemti.mov_inv (
    ts, item_id, lote_id, cantidad, qty_original, uom_original_id,
    tipo, ref_tipo, ref_id, sucursal_id
  )
  VALUES (
    now(), v_item_id, p_lote_id, 0 - v_qty_disponible, NULL, p_uom_id,
    'MERMA', 'CIERRE_PREP', p_lote_id, NULL
  )
  RETURNING id INTO v_mov_id;
-- 3.2) Log de pÃ©rdida con clase (MERMA/DESPERDICIO)
  INSERT INTO selemti.perdida_log (
    ts, item_id, lote_id, clase, motivo, qty_canonica, uom_original_id,
    usuario_id, ref_tipo, ref_id
  ) VALUES (
    now(), v_item_id, p_lote_id, p_clase, p_motivo, v_qty_disponible, p_uom_id,
    p_usuario_id, 'CIERRE_PREP', v_mov_id
  );
RETURN v_mov_id;
END;
$$ LANGUAGE plpgsql;
/* --------------------------------------------------------------
   4) Vistas KPI: Merma vs Desperdicio y Rendimiento de preparaciÃ³n
   -------------------------------------------------------------- */
-- 4.1) KPI por semana y clase (MERMA/DESPERDICIO)
CREATE OR REPLACE VIEW selemti.v_perdida_clase_semana AS
SELECT
  item_id,
  date_trunc('week', ts)::date AS semana,
  clase,
  SUM(qty_canonica) AS qty_canonica
FROM selemti.perdida_log
GROUP BY 1,2,3;
-- 4.2) Rendimiento de preparaciÃ³n: usa OP (teÃ³rico) vs entregado (real) y consumo registrado
-- Nota: ajusta nombres de tablas de OP/lotes internos segÃºn tu esquema.
-- Este es un esqueleto que asume:
--   - selemti.op_produccion (id, receta_id, qty_planeada, qty_real, lote_resultado_id, ts_cierre)
--   - v_kardex_por_lote suma mov_inv por lote.
CREATE OR REPLACE VIEW selemti.v_rendimiento_preparacion AS
SELECT
  op.id                       AS op_id,
  op.receta_id,
  op.lote_resultado_id        AS lote_id,
  op.qty_planeada,
  op.qty_real,
  (CASE WHEN op.qty_planeada IS NULL OR op.qty_planeada=0 THEN NULL
        ELSE ROUND(100.0 * op.qty_real / op.qty_planeada, 2) END) AS rendimiento_pct,
  kardex.saldo_final_canonica AS saldo_lote_canonica,
  (CASE WHEN op.qty_real IS NULL OR op.qty_real=0 THEN NULL
        ELSE ROUND(100.0 * kardex.saldo_final_canonica / op.qty_real, 2) END) AS sobrante_pct
FROM selemti.op_produccion op
LEFT JOIN (
  SELECT
    lote_id,
    SUM(CASE WHEN signo IS NULL THEN 0 ELSE signo * cantidad END) AS saldo_final_canonica
  FROM selemti.v_kardex_por_lote   -- o arma una suma de mov_inv por lote
  GROUP BY lote_id
) kardex ON kardex.lote_id = op.lote_resultado_id;
/* --------------------------------------------------------------
   5) Vista de porciones por ticket (para preparaciones compartidas)
   -------------------------------------------------------------- */
CREATE OR REPLACE VIEW selemti.v_porciones_por_ticket AS
SELECT
  tdc.ticket_id,
  tdc.ticket_det_id,
  tdc.item_id       AS insumo_preparado,
  tdc.lote_id,
  SUM(tdc.qty_canonica) AS qty_total_canonica,
  COUNT(*)              AS usos
FROM selemti.ticket_det_consumo tdc
GROUP BY 1,2,3,4;
/* ======================================================================
   FIN 011.delta_merma_desperdicio_porciones.sql
   ====================================================================== */

\n-- END 011.delta_merma_desperdicio_porciones.sql\n
\n-- BEGIN precorte.sql\n
CREATE TABLE pc_precorte (
    id                bigserial PRIMARY KEY,
    terminal_id       integer NOT NULL REFERENCES public.terminal(id),
    terminal_location text NOT NULL,
    cashier_user_id   integer NOT NULL REFERENCES public.users(auto_id),
    from_ts           timestamptz NOT NULL,
    to_ts             timestamptz NOT NULL,
    opening_cash      numeric(12,2) DEFAULT 0,
    system_sales      numeric(12,2) DEFAULT 0,
    system_cash_exp   numeric(12,2) DEFAULT 0,
    system_card_exp   numeric(12,2) DEFAULT 0,
    system_other_exp  numeric(12,2) DEFAULT 0,
    counted_cash      numeric(12,2) DEFAULT 0,
    declared_card     numeric(12,2) DEFAULT 0,
    declared_other    numeric(12,2) DEFAULT 0,
    cash_diff         numeric(12,2) DEFAULT 0,
    card_diff         numeric(12,2) DEFAULT 0,
    other_diff        numeric(12,2) DEFAULT 0,
    discounts_cnt     integer DEFAULT 0,
    voids_cnt         integer DEFAULT 0,
    refunds_cnt       integer DEFAULT 0,
    open_tickets_cnt  integer DEFAULT 0,
    tips_cash         numeric(12,2) DEFAULT 0,
    tips_card         numeric(12,2) DEFAULT 0,
    notes             text,
    warnings          jsonb DEFAULT '[]'::jsonb,
    status            text NOT NULL DEFAULT 'DRAFT' CHECK (status IN ('DRAFT', 'SUBMITTED', 'APPROVED', 'REJECTED', 'PRINTED')),
    created_at        timestamptz NOT NULL DEFAULT now(),
    created_by        integer NOT NULL REFERENCES public.users(auto_id),
    submitted_at      timestamptz,
    submitted_by      integer REFERENCES public.users(auto_id),
    approved_at       timestamptz,
    approved_by       integer REFERENCES public.users(auto_id),
    CONSTRAINT unique_precorte UNIQUE (terminal_id, cashier_user_id, from_ts, to_ts, status)
);
CREATE TABLE pc_precorte_cash_count (
    id          bigserial PRIMARY KEY,
    precorte_id bigint NOT NULL REFERENCES pc_precorte(id) ON DELETE CASCADE,
    denom       numeric(8,2) NOT NULL,
    qty         integer NOT NULL,
    subtotal    numeric(12,2) ,
    other_denom numeric(8,2),
    other_desc  text
);
CREATE TABLE pc_precorte_payments (
    id           bigserial PRIMARY KEY,
    precorte_id  bigint NOT NULL REFERENCES pc_precorte(id) ON DELETE CASCADE,
    method       text NOT NULL CHECK (method IN ('CASH', 'DEBIT_CARD', 'CREDIT_CARD', 'GIFT_CARD', 'TRANSFER', 'OTHER')),
    brand        text CHECK (brand IN ('VISA', 'MASTERCARD', 'AMEX', 'OTHER', NULL)),
    terminal_ext text,
    amount       numeric(12,2) NOT NULL
);
CREATE TABLE pc_precorte_adjustments (
    id           bigserial PRIMARY KEY,
    precorte_id  bigint NOT NULL REFERENCES pc_precorte(id) ON DELETE CASCADE,
    kind         text NOT NULL CHECK (kind IN ('FALTANTE', 'SOBRANTE', 'ERROR', 'MERMAS', 'PAYOUT', 'DROP', 'NOSALE')),
    description  text,
    amount       numeric(12,2) NOT NULL DEFAULT 0
);
CREATE TABLE pc_precorte_audit (
    id           bigserial PRIMARY KEY,
    precorte_id  bigint NOT NULL REFERENCES pc_precorte(id) ON DELETE CASCADE,
    at           timestamptz NOT NULL DEFAULT now(),
    actor_user   integer NOT NULL REFERENCES public.users(auto_id),
    action       text NOT NULL CHECK (action IN ('CREATE', 'UPDATE', 'SUBMIT', 'APPROVE', 'REJECT', 'PRINT')),
    details      jsonb
);
-- Ãndices recomendados
CREATE INDEX idx_pc_precorte_terminal ON pc_precorte (terminal_id, from_ts, to_ts);
CREATE INDEX idx_pc_precorte_cashier ON pc_precorte (cashier_user_id, from_ts, to_ts);
CREATE INDEX idx_pc_precorte_warnings ON pc_precorte USING GIN (warnings);
-- Vistas SQL adaptadas al esquema del dump
CREATE VIEW vw_precorte_sales AS
SELECT
    t.terminal_id,
    t.owner_id AS cashier_user_id,
    t.branch_key AS terminal_location,
    SUM(t.total_amount) AS total_sales,
    SUM(t.discount) AS total_discounts,
    SUM(t.tip_amount) AS total_tips,
    COUNT(*) FILTER (WHERE t.voided = true) AS voids_cnt,
    COUNT(*) FILTER (WHERE t.total_amount < 0 OR t.ticket_type = 'REFUND') AS refunds_cnt,
    COUNT(*) FILTER (WHERE t.closed = false OR t.paid = false) AS open_tickets_cnt
FROM public.ticket t
WHERE t.create_date AT TIME ZONE 'America/Mexico_City' >= $1
    AND t.create_date AT TIME ZONE 'America/Mexico_City' < $2
    AND (t.voided = false OR t.voided IS NULL)
GROUP BY t.terminal_id, t.owner_id, t.branch_key;
CREATE VIEW vw_precorte_payments AS
SELECT
    tr.terminal_id,
    tr.user_id AS cashier_user_id,
    t.branch_key AS terminal_location,
    tr.transaction_type AS method,
    tr.card_type AS brand,
    SUM(tr.amount) AS amount,
    SUM(CASE WHEN tr.transaction_type = 'CASH' THEN tr.tip_amount ELSE 0 END) AS tips_cash,
    SUM(CASE WHEN tr.transaction_type IN ('CREDIT_CARD', 'DEBIT_CARD') THEN tr.tip_amount ELSE 0 END) AS tips_card
FROM public.transactions tr
JOIN public.ticket t ON t.id = tr.ticket_id
WHERE t.create_date AT TIME ZONE 'America/Mexico_City' >= $1
    AND t.create_date AT TIME ZONE 'America/Mexico_City' < $2
    AND (t.voided = false OR t.voided IS NULL)
GROUP BY tr.terminal_id, tr.user_id, t.branch_key, tr.transaction_type, tr.card_type;
CREATE VIEW vw_precorte_discounts AS
SELECT
    t.terminal_id,
    t.owner_id AS cashier_user_id,
    t.branch_key AS terminal_location,
    COUNT(*) AS discounts_cnt,
    SUM(ti.discount_amount) AS discounts_amount
FROM public.ticket_item ti
JOIN public.ticket t ON t.id = ti.ticket_id
WHERE t.create_date AT TIME ZONE 'America/Mexico_City' >= $1
    AND t.create_date AT TIME ZONE 'America/Mexico_City' < $2
    AND (t.voided = false OR t.voided IS NULL)
    AND ti.discount_amount > 0
GROUP BY t.terminal_id, t.owner_id, t.branch_key;
CREATE VIEW vw_precorte_voids AS
SELECT
    t.terminal_id,
    t.owner_id AS cashier_user_id,
    t.branch_key AS terminal_location,
    COUNT(*) AS voids_cnt,
    SUM(ti.unit_price * ti.item_count) AS voids_amount
FROM public.ticket_item ti
JOIN public.ticket t ON t.id = ti.ticket_id
WHERE t.create_date AT TIME ZONE 'America/Mexico_City' >= $1
    AND t.create_date AT TIME ZONE 'America/Mexico_City' < $2
    AND (t.voided = false OR t.voided IS NULL)
    AND ti.voided = true
GROUP BY t.terminal_id, t.owner_id, t.branch_key;
\n-- END precorte.sql\n
\n-- BEGIN Triger_corte_final.sql\n
-- ===========================================
--  SELEM POS â€” Despliegue auxiliar (v0.1)
--  Compatibilidad: PostgreSQL 9.5+
--  Objetivo: conciliaciÃ³n por sesiÃ³n de cajÃ³n
--  Autor: Tavo+ChatGPT
-- ===========================================

-- ===========================================
-- 0) DIAGNÃ“STICO (opcional pero recomendado)
--    Esto NO crea objetos;
imprime cÃ³mo se llaman
--    las columnas relevantes para alinear mapeos.
-- ===========================================
DO $diag$
DECLARE
  tx_time_col TEXT;
tx_amt_col  TEXT;
tx_pay_col  TEXT;
tx_type_col TEXT;
tk_close_col TEXT;
dah_assign_col TEXT;
dah_release_col TEXT;
term_balance_col TEXT;
BEGIN
  RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (transactions) ===';
SELECT column_name INTO tx_time_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('tx_time','transaction_time','created','date','time','paid_time')
   ORDER BY CASE column_name
              WHEN 'tx_time' THEN 1
              WHEN 'transaction_time' THEN 2
              WHEN 'created' THEN 3
              WHEN 'date' THEN 4
              WHEN 'time' THEN 5
              WHEN 'paid_time' THEN 6
            END
   LIMIT 1;
SELECT column_name INTO tx_amt_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('amount','total','value','amt')
   LIMIT 1;
SELECT column_name INTO tx_pay_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('payment_type','tender_type','pay_type','method','payment_code')
   LIMIT 1;
SELECT column_name INTO tx_type_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('transaction_type','type','txn_type')
   LIMIT 1;
RAISE NOTICE 'transactions: tiempo=% , monto=% , payment=% , txn_type=%',
               COALESCE(tx_time_col,'(NO ENCONTRADO)'),
               COALESCE(tx_amt_col,'(NO ENCONTRADO)'),
               COALESCE(tx_pay_col,'(NO ENCONTRADO)'),
               COALESCE(tx_type_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (ticket) ===';
SELECT column_name INTO tk_close_col
    FROM information_schema.columns
   WHERE table_name='ticket'
     AND column_name IN ('closed_time','close_time','paid_time','modified_time','update_time')
   LIMIT 1;
RAISE NOTICE 'ticket: closed_time=%', COALESCE(tk_close_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (drawer_assigned_history) ===';
SELECT column_name INTO dah_assign_col
    FROM information_schema.columns
   WHERE table_name='drawer_assigned_history'
     AND column_name IN ('assigned_time','assigned_at','created','start_time')
   LIMIT 1;
SELECT column_name INTO dah_release_col
    FROM information_schema.columns
   WHERE table_name='drawer_assigned_history'
     AND column_name IN ('released_time','released_at','end_time','closed')
   LIMIT 1;
RAISE NOTICE 'drawer_assigned_history: assigned=% , released=%',
               COALESCE(dah_assign_col,'(NO ENCONTRADO)'),
               COALESCE(dah_release_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (terminal) ===';
SELECT column_name INTO term_balance_col
    FROM information_schema.columns
   WHERE table_name='terminal'
     AND column_name IN ('current_balance','opening_balance','balance')
   LIMIT 1;
RAISE NOTICE 'terminal: current_balance=%', COALESCE(term_balance_col,'(NO ENCONTRADO)');
END
$diag$;
-- ===========================================
-- 1) PARÃMETROS (ajusta SOLO si tu esquema difiere)
--    Si el diagnÃ³stico anterior te dio otros nombres,
--    cÃ¡mbialos aquÃ­ para que todo funcione.
-- ===========================================
DO $params$
BEGIN
  -- Mapa de columnas de transactions
  PERFORM set_config('selempos.tx_time_col',  'tx_time',            true);
PERFORM set_config('selempos.tx_amount_col','amount',             true);
PERFORM set_config('selempos.tx_pay_col',   'payment_type',       true);
PERFORM set_config('selempos.tx_type_col',  'transaction_type',   true);
-- ticket cerrado
  PERFORM set_config('selempos.ticket_closed_col','closed_time',    true);
-- drawer_assigned_history tiempos
  PERFORM set_config('selempos.dah_assigned_col','assigned_time',   true);
PERFORM set_config('selempos.dah_released_col','released_time',   true);
-- terminal balance
  PERFORM set_config('selempos.terminal_balance_col','current_balance', true);
END
$params$;
-- Helper para referenciar columnas configuradas
CREATE OR REPLACE FUNCTION selempos_col(name TEXT)
RETURNS TEXT LANGUAGE sql IMMUTABLE AS $$
  SELECT current_setting(name,true)
$$;
-- ===========================================
-- 2) ESQUEMA AUXILIAR
-- ===========================================
CREATE SCHEMA IF NOT EXISTS selempos;
-- SesiÃ³n de cajÃ³n (ventana de tiempo + snapshot opening_float)
CREATE TABLE IF NOT EXISTS selempos.selempos_drawer_session (
  id BIGSERIAL PRIMARY KEY,
  terminal_id INTEGER NOT NULL,
  cashier_user_id INTEGER NOT NULL,
  drawer_assigned_history_id BIGINT,
  opened_at TIMESTAMPTZ NOT NULL,
  closed_at TIMESTAMPTZ,
  status TEXT NOT NULL CHECK (status IN ('ACTIVE','READY_FOR_CUT','CUT_DONE','POSTCUT_DONE')) DEFAULT 'ACTIVE',
  opening_float NUMERIC(12,2) NOT NULL DEFAULT 0,
  notes TEXT,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  created_by INTEGER,
  CONSTRAINT ux_selempos_session UNIQUE (terminal_id, cashier_user_id, opened_at)
);
CREATE INDEX IF NOT EXISTS ix_selempos_session_terminal ON selempos.selempos_drawer_session(terminal_id, opened_at);
CREATE INDEX IF NOT EXISTS ix_selempos_session_cashier  ON selempos.selempos_drawer_session(cashier_user_id, opened_at);
-- Precorte (declarado)
CREATE TABLE IF NOT EXISTS selempos.selempos_precorte (
  id BIGSERIAL PRIMARY KEY,
  session_id BIGINT NOT NULL REFERENCES selempos.selempos_drawer_session(id) ON DELETE CASCADE,
  declared_cash NUMERIC(12,2) NOT NULL DEFAULT 0,
  declared_other NUMERIC(12,2) NOT NULL DEFAULT 0,
  status TEXT NOT NULL CHECK (status IN ('PENDING','SUBMITTED','APPROVED','REJECTED')) DEFAULT 'PENDING',
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  created_by INTEGER,
  client_ip INET
);
-- Detalle de efectivo por denominaciÃ³n (opcional)
CREATE TABLE IF NOT EXISTS selempos.selempos_precorte_cash (
  id BIGSERIAL PRIMARY KEY,
  precorte_id BIGINT NOT NULL REFERENCES selempos.selempos_precorte(id) ON DELETE CASCADE,
  denom NUMERIC(12,2) NOT NULL,
  qty   INTEGER NOT NULL,
  subtotal NUMERIC(12,2) 
);
-- Postcorte (conciliaciÃ³n final)
CREATE TABLE IF NOT EXISTS selempos.selempos_postcorte (
  id BIGSERIAL PRIMARY KEY,
  session_id BIGINT NOT NULL REFERENCES selempos.selempos_drawer_session(id) ON DELETE CASCADE,
  declared_cash_final  NUMERIC(12,2) NOT NULL DEFAULT 0,
  declared_cards_final NUMERIC(12,2) NOT NULL DEFAULT 0,
  system_cash          NUMERIC(12,2) NOT NULL DEFAULT 0,
  system_cards         NUMERIC(12,2) NOT NULL DEFAULT 0,
  diff_cash            NUMERIC(12,2) NOT NULL DEFAULT 0,
  diff_cards           NUMERIC(12,2) NOT NULL DEFAULT 0,
  closed_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  created_by INTEGER
);
-- Mapa de formas de pago (ajustable a tu transactions)
CREATE TABLE IF NOT EXISTS selempos.selempos_payment_map (
  code TEXT PRIMARY KEY,     -- 'CASH','DEBIT','CREDIT','TRANSFER'
  match_expr TEXT NOT NULL   -- valor en transactions.(payment_type o transaction_type)
);
INSERT INTO selempos.selempos_payment_map(code, match_expr) VALUES
('CASH','CASH'),
('DEBIT','DEBIT'),
('CREDIT','CREDIT'),
('TRANSFER','TRANSFER')
ON CONFLICT DO NOTHING;
-- AuditorÃ­a simple
CREATE TABLE IF NOT EXISTS selempos.selempos_audit (
  id BIGSERIAL PRIMARY KEY,
  who INTEGER,
  what TEXT,
  payload JSONB,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now()
);
-- ===========================================
-- 3) VISTAS DE TOTALES POR SESIÃ“N
-- ===========================================
-- 3.1 ventas por forma de pago en ventana de sesiÃ³n
CREATE OR REPLACE VIEW selempos.selempos_vw_session_sales AS
WITH base AS (
  SELECT
    s.id AS session_id,
    t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC AS amount,
    pm.code AS payment_code
  FROM selempos.selempos_drawer_session s
  JOIN transactions t
    ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
   AND t.(SELECT selempos_col('selempos.tx_time_col')) < COALESCE(s.closed_at, now())
   AND t.terminal_id = s.terminal_id
   AND t.user_id     = s.cashier_user_id
  JOIN selempos.selempos_payment_map pm
    ON (t.(SELECT selempos_col('selempos.tx_pay_col'))  = pm.match_expr
     OR  t.(SELECT selempos_col('selempos.tx_type_col')) = pm.match_expr)
)
SELECT session_id, payment_code, SUM(amount) AS amount
FROM base
GROUP BY session_id, payment_code;
-- 3.2 descuentos (ajusta si tus descuentos estÃ¡n en otras tablas)
-- Si tus descuentos viven en ticket_discount/ticket_item_discount con timestamp y user/terminal:
CREATE OR REPLACE VIEW selempos.selempos_vw_session_discounts AS
SELECT s.id AS session_id, COALESCE(SUM(d.amount),0) AS discounts
FROM selempos.selempos_drawer_session s
LEFT JOIN ticket_discount d
  ON d.created_at >= s.opened_at
 AND d.created_at <  COALESCE(s.closed_at, now())
 AND d.terminal_id = s.terminal_id
 AND d.user_id     = s.cashier_user_id
GROUP BY s.id;
-- 3.3 anulaciones/devoluciones (VOID/REFUND) sobre ticket
CREATE OR REPLACE VIEW selempos.selempos_vw_session_voids AS
SELECT s.id AS session_id,
       COALESCE(SUM(CASE WHEN tk.status IN ('VOID','REFUND') THEN tk.total ELSE 0 END),0) AS void_total
FROM selempos.selempos_drawer_session s
LEFT JOIN ticket tk
  ON tk.(SELECT selempos_col('selempos.ticket_closed_col')) >= s.opened_at
 AND tk.(SELECT selempos_col('selempos.ticket_closed_col')) <  COALESCE(s.closed_at, now())
 AND tk.terminal_id = s.terminal_id
 AND tk.owner_id    = s.cashier_user_id
GROUP BY s.id;
-- 3.4 retiros/egresos (payouts/expenses) en ventana
CREATE OR REPLACE VIEW selempos.selempos_vw_session_payouts AS
SELECT s.id AS session_id, COALESCE(SUM(t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC),0) AS payouts
FROM selempos.selempos_drawer_session s
JOIN transactions t
  ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
 AND t.(SELECT selempos_col('selempos.tx_time_col')) <  COALESCE(s.closed_at, now())
 AND t.terminal_id = s.terminal_id
 AND t.user_id     = s.cashier_user_id
WHERE t.(SELECT selempos_col('selempos.tx_type_col')) IN ('PAYOUT','EXPENSE')
GROUP BY s.id;
-- 3.5 devoluciones EN EFECTIVO (si aplica)
CREATE OR REPLACE VIEW selempos.selempos_vw_session_cash_refunds AS
SELECT s.id AS session_id,
       COALESCE(SUM(t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC),0) AS cash_refunds
FROM selempos.selempos_drawer_session s
JOIN transactions t
  ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
 AND t.(SELECT selempos_col('selempos.tx_time_col')) <  COALESCE(s.closed_at, now())
 AND t.terminal_id = s.terminal_id
 AND t.user_id     = s.cashier_user_id
WHERE (t.(SELECT selempos_col('selempos.tx_type_col')) IN ('REFUND','RETURN') OR t.status='REFUND')
  AND (t.(SELECT selempos_col('selempos.tx_pay_col')) = 'CASH' OR t.(SELECT selempos_col('selempos.tx_type_col')) = 'CASH')
GROUP BY s.id;
-- 3.6 balance sintetizado con esperado en caja
CREATE OR REPLACE VIEW selempos.selempos_vw_session_balance AS
SELECT
  s.id AS session_id,
  s.terminal_id,
  s.cashier_user_id,
  s.opened_at,
  s.closed_at,
  s.status,
  s.opening_float,
  COALESCE(SUM(CASE WHEN sales.payment_code='CASH' THEN sales.amount END),0) AS sys_cash,
  COALESCE(SUM(CASE WHEN sales.payment_code IN ('DEBIT','CREDIT','TRANSFER') THEN sales.amount END),0) AS sys_non_cash,
  COALESCE(vd.discounts,0)  AS sys_discounts,
  COALESCE(vv.void_total,0) AS sys_voids,
  COALESCE(vp.payouts,0)    AS sys_payouts,
  COALESCE(vcr.cash_refunds,0) AS sys_cash_refunds,
  ( s.opening_float
    + COALESCE(SUM(CASE WHEN sales.payment_code='CASH' THEN sales.amount END),0)
    - COALESCE(vp.payouts,0)
    - COALESCE(vcr.cash_refunds,0)
  ) AS sys_expected_cash
FROM selempos.selempos_drawer_session s
LEFT JOIN selempos.selempos_vw_session_sales       sales ON sales.session_id = s.id
LEFT JOIN selempos.selempos_vw_session_discounts   vd    ON vd.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_voids       vv    ON vv.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_payouts     vp    ON vp.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_cash_refunds vcr  ON vcr.session_id   = s.id
GROUP BY s.id, s.terminal_id, s.cashier_user_id, s.opened_at, s.closed_at, s.status,
         s.opening_float, vd.discounts, vv.void_total, vp.payouts, vcr.cash_refunds;
-- ===========================================
-- 4) TRIGGERS DE SINCRONIZACIÃ“N CON ASIGNACIÃ“N DE CAJÃ“N
--    Al asignar: crea sesiÃ³n y toma snapshot de terminal.current_balance
--    Al liberar: cierra ventana y avanza estado
-- ===========================================
CREATE OR REPLACE FUNCTION selempos.selempos_fn_on_drawer_assigned_ins()
RETURNS TRIGGER LANGUAGE plpgsql AS
$$
DECLARE
  v_opening NUMERIC(12,2) := 0;
v_exists  BIGINT;
v_assigned_col TEXT := current_setting('selempos.dah_assigned_col', true);
v_bal_col      TEXT := current_setting('selempos.terminal_balance_col', true);
v_assigned_ts  TIMESTAMPTZ;
v_sql TEXT;
BEGIN
  -- obtener assigned_time (columna parametrizada)
  v_sql := format('SELECT ($1).%I::timestamptz', v_assigned_col);
EXECUTE v_sql USING NEW INTO v_assigned_ts;
-- snapshot del fondo en terminal.current_balance (columna parametrizada)
  v_sql := format('SELECT COALESCE(%I,0)::numeric FROM terminal WHERE id = $1', v_bal_col);
EXECUTE v_sql INTO v_opening USING NEW.terminal_id;
-- evitar duplicados por reintentos
  SELECT s.id INTO v_exists
  FROM selempos.selempos_drawer_session s
  WHERE s.terminal_id      = NEW.terminal_id
    AND s.cashier_user_id  = NEW.user_id
    AND s.opened_at        = COALESCE(v_assigned_ts, now());
IF v_exists IS NULL THEN
    INSERT INTO selempos.selempos_drawer_session(
      terminal_id, cashier_user_id, drawer_assigned_history_id,
      opened_at, status, opening_float, created_by
    )
    VALUES (
      NEW.terminal_id, NEW.user_id, NEW.id,
      COALESCE(v_assigned_ts, now()), 'ACTIVE', v_opening, NEW.user_id
    );
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_selempos_drawer_assigned_ins ON drawer_assigned_history;
CREATE TRIGGER trg_selempos_drawer_assigned_ins
AFTER INSERT ON drawer_assigned_history
FOR EACH ROW EXECUTE FUNCTION selempos.selempos_fn_on_drawer_assigned_ins();
-- Cierre de sesiÃ³n al liberar cajÃ³n
CREATE OR REPLACE FUNCTION selempos.selempos_fn_on_drawer_assigned_upd()
RETURNS TRIGGER LANGUAGE plpgsql AS
$$
DECLARE
  v_released_col TEXT := current_setting('selempos.dah_released_col', true);
v_released_ts  TIMESTAMPTZ;
v_sql TEXT;
BEGIN
  IF NEW IS DISTINCT FROM OLD THEN
    v_sql := format('SELECT ($1).%I::timestamptz', v_released_col);
EXECUTE v_sql USING NEW INTO v_released_ts;
IF v_released_ts IS NOT NULL THEN
      UPDATE selempos.selempos_drawer_session s
      SET closed_at = v_released_ts,
          status = CASE WHEN s.status='ACTIVE' THEN 'READY_FOR_CUT' ELSE s.status END
      WHERE s.drawer_assigned_history_id = NEW.id
        AND s.closed_at IS NULL;
END IF;
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_selempos_drawer_assigned_upd ON drawer_assigned_history;
CREATE TRIGGER trg_selempos_drawer_assigned_upd
AFTER UPDATE ON drawer_assigned_history
FOR EACH ROW EXECUTE FUNCTION selempos.selempos_fn_on_drawer_assigned_upd();
-- ===========================================
-- 5) COMPROBACIONES RÃPIDAS
-- ===========================================
-- Â¿Sesiones activas?
-- SELECT * FROM selempos.selempos_drawer_session ORDER BY id DESC LIMIT 20;
-- Â¿Balance por sesiÃ³n?
-- SELECT * FROM selempos.selempos_vw_session_balance ORDER BY session_id DESC LIMIT 20;
-- ===========================================
-- FIN
-- ===========================================

\n-- END Triger_corte_final.sql\n
\n-- BEGIN triger_KDS.sql\n
-- Canal: kds_event
-- Requiere PostgreSQL >= 9.4 (usas 9.5, OK)

-- 1) FunciÃ³n de notificaciÃ³n
CREATE OR REPLACE FUNCTION public.kds_notify()
RETURNS trigger AS
$$
DECLARE
  v_ticket_id INT;
v_pg_id     INT;
v_item_id   INT;
v_status    TEXT;
v_total     INT;
v_ready     INT;
v_done      INT;
v_type      TEXT;
BEGIN
  /*
    Esta funciÃ³n se dispara desde:
    - kitchen_ticket_item (insert/update status)
    - ticket_item        (insert/update status)
  */

  IF TG_TABLE_NAME = 'kitchen_ticket_item' THEN
    -- Cambios en cocina
    v_item_id := COALESCE(NEW.ticket_item_id, NEW.id);
SELECT ti.ticket_id, ti.pg_id
      INTO v_ticket_id, v_pg_id
    FROM ticket_item ti
    WHERE ti.id = v_item_id;
v_status := UPPER(COALESCE(NEW.status,''));
v_type   := CASE WHEN TG_OP = 'INSERT' THEN 'item_upsert' ELSE 'item_status' END;
PERFORM pg_notify(
      'kds_event',
      json_build_object(
        'type',      v_type,
        'ticket_id', v_ticket_id,
        'pg',        v_pg_id,
        'item_id',   v_item_id,
        'status',    v_status,
        'ts',        now()
      )::text
    );
ELSIF TG_TABLE_NAME = 'ticket_item' THEN
    -- Nuevos Ã­tems o actualizaciones de estado en ticket_item
    v_item_id   := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id     := NEW.pg_id;
v_status    := UPPER(COALESCE(NEW.status,''));
IF TG_OP = 'INSERT' THEN
      v_type := 'item_insert';
ELSE
      v_type := 'item_status';
END IF;
PERFORM pg_notify(
      'kds_event',
      json_build_object(
        'type',      v_type,
        'ticket_id', v_ticket_id,
        'pg',        v_pg_id,
        'item_id',   v_item_id,
        'status',    v_status,
        'ts',        now()
      )::text
    );
END IF;
-- Si tenemos contexto de ticket y Ã¡rea (pg), verificamos agregados
  IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
    SELECT
      COUNT(*) AS total,
      COUNT(*) FILTER (
        WHERE UPPER(COALESCE(kti.status, ti.status, '')) IN ('READY','DONE')
      ) AS ready,
      COUNT(*) FILTER (
        WHERE UPPER(COALESCE(kti.status, ti.status, '')) = 'DONE'
      ) AS done
    INTO v_total, v_ready, v_done
    FROM ticket_item ti
    LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
    WHERE ti.ticket_id = v_ticket_id
      AND ti.pg_id     = v_pg_id;
-- Todos listos (READY o DONE)
    IF v_total > 0 AND v_total = v_ready THEN
      PERFORM pg_notify(
        'kds_event',
        json_build_object(
          'type',      'ticket_all_ready',
          'ticket_id', v_ticket_id,
          'pg',        v_pg_id,
          'ts',        now()
        )::text
      );
END IF;
-- Todos terminados (DONE) -> usado por voz-events.php
    IF v_total > 0 AND v_total = v_done THEN
      PERFORM pg_notify(
        'kds_event',
        json_build_object(
          'type',      'ticket_all_done',
          'ticket_id', v_ticket_id,
          'pg',        v_pg_id,
          'ts',        now()
        )::text
      );
END IF;
END IF;
RETURN NEW;
END;
$$ LANGUAGE plpgsql;
-- 2) Triggers (se rehacen por si existen)

-- kitchen_ticket_item: insert + update de status
DROP TRIGGER IF EXISTS trg_kds_notify_kti ON public.kitchen_ticket_item;
CREATE TRIGGER trg_kds_notify_kti
AFTER INSERT OR UPDATE OF status ON public.kitchen_ticket_item
FOR EACH ROW
EXECUTE PROCEDURE public.kds_notify();
-- ticket_item: insert (aparecer al instante en KDS) + update de status (por si Floreant escribe ahÃ­)
DROP TRIGGER IF EXISTS trg_kds_notify_ti ON public.ticket_item;
CREATE TRIGGER trg_kds_notify_ti
AFTER INSERT OR UPDATE OF status ON public.ticket_item
FOR EACH ROW
EXECUTE PROCEDURE public.kds_notify();
-- 1) Tablas faltantes (si no existen)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='alert_cfg'
  ) THEN
    EXECUTE $SQL$
      CREATE TABLE selemti.alert_cfg (
        id BIGSERIAL PRIMARY KEY,
        metric_key TEXT NOT NULL,
        defaults JSONB NOT NULL,
        scope JSONB
      );
    $SQL$;
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='merma_policy'
  ) THEN
    EXECUTE $SQL$
      CREATE TABLE selemti.merma_policy (
        id           BIGSERIAL PRIMARY KEY,
        sucursal_id  INT NULL REFERENCES public.inventory_location(id),
        categoria    selemti.merma_categoria NOT NULL,
        th_warn      NUMERIC(14,2) NOT NULL DEFAULT 0,
        th_block     NUMERIC(14,2) NOT NULL DEFAULT 0,
        aut_req      selemti.nivel_aut NOT NULL DEFAULT 'SUPERVISOR',
        enabled      BOOLEAN NOT NULL DEFAULT TRUE
      );
    $SQL$;
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='ui_prefs'
  ) THEN
    EXECUTE $SQL$
      CREATE TABLE selemti.ui_prefs (
        id           BIGSERIAL PRIMARY KEY,
        sucursal_id  INT NULL REFERENCES public.inventory_location(id),
        key          TEXT NOT NULL,
        value_json   JSONB NOT NULL
      );
    $SQL$;
  END IF;
END $$;
-- 2) Ãndices Ãºnicos parciales (sustituyen constraints no soportadas)
-- alert_cfg
DO $$
BEGIN
  CREATE UNIQUE INDEX IF NOT EXISTS uq_alert_cfg_metric_null_scope
    ON selemti.alert_cfg(metric_key)
    WHERE scope IS NULL;

  CREATE UNIQUE INDEX IF NOT EXISTS uq_alert_cfg_metric_scope
    ON selemti.alert_cfg(metric_key, scope)
    WHERE scope IS NOT NULL;
END $$;
-- merma_policy
DO $$
BEGIN
  CREATE UNIQUE INDEX IF NOT EXISTS uq_merma_policy_categoria_global
    ON selemti.merma_policy(categoria)
    WHERE sucursal_id IS NULL;

  CREATE UNIQUE INDEX IF NOT EXISTS uq_merma_policy_sucursal_categoria
    ON selemti.merma_policy(sucursal_id, categoria)
    WHERE sucursal_id IS NOT NULL;
END $$;
-- ui_prefs
DO $$
BEGIN
  CREATE UNIQUE INDEX IF NOT EXISTS uq_ui_prefs_key_global
    ON selemti.ui_prefs(key)
    WHERE sucursal_id IS NULL;

  CREATE UNIQUE INDEX IF NOT EXISTS uq_ui_prefs_sucursal_key
    ON selemti.ui_prefs(sucursal_id, key)
    WHERE sucursal_id IS NOT NULL;
END $$;
-- 3) Vistas (drop + create para evitar conflictos de tipo en PG 9.5)
-- 3.1 vw_bom_menu_item
DO $$
BEGIN
  IF EXISTS (SELECT 1 FROM information_schema.views WHERE table_schema='selemti' AND table_name='vw_bom_menu_item') THEN
    EXECUTE 'DROP VIEW selemti.vw_bom_menu_item';
  END IF;

  IF EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace WHERE n.nspname='public' AND c.relname='menu_item')
     AND EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace WHERE n.nspname='public' AND c.relname='recepie')
     AND EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace WHERE n.nspname='public' AND c.relname='recepie_item') THEN
    EXECUTE $SQL$
      CREATE VIEW selemti.vw_bom_menu_item AS
      SELECT
        mi.id               AS menu_item_id,
        mi.name::TEXT       AS menu_item_name,
        r.id                AS recepie_id,
        ri.inventory_item   AS inventory_item_id,
        ri.percentage::NUMERIC(14,6) AS percentage
      FROM public.menu_item mi
      JOIN public.recepie r       ON r.id = mi.recepie
      JOIN public.recepie_item ri ON ri.recepie_id = r.id;
    $SQL$;
  ELSE
    -- Si no existen tablas pÃºblicas, dejar vista vacÃ­a compatible
    EXECUTE $SQL$
      CREATE VIEW selemti.vw_bom_menu_item AS
      SELECT NULL::INT AS menu_item_id, NULL::TEXT AS menu_item_name,
             NULL::INT AS recepie_id, NULL::INT AS inventory_item_id,
             NULL::NUMERIC(14,6) AS percentage
      WHERE FALSE;
    $SQL$;
  END IF;
END $$;
-- 3.2 vw_conversion_sugerida â€” corregir ORDER BY para DISTINCT ON
DROP VIEW IF EXISTS selemti.vw_conversion_sugerida;
CREATE VIEW selemti.vw_conversion_sugerida AS
SELECT DISTINCT ON (ct.item_id, COALESCE(ct.vendor_id,-1), ct.presentacion)
  ct.item_id, ct.vendor_id, ct.presentacion,
  ct.unidad_presentacion_id, ct.unidad_canonica, ct.factor_a_canonica, ct.preferred
FROM selemti.conversion_template ct
WHERE ct.activo = TRUE
ORDER BY ct.item_id, COALESCE(ct.vendor_id,-1), ct.presentacion, ct.preferred DESC, ct.id DESC;
-- 4) Trigger recepcion_det (por si fallÃ³ antes)
DO $$
BEGIN
  IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='recepcion_det') THEN
    DROP TRIGGER IF EXISTS trg_recepcion_det_check ON selemti.recepcion_det;
    CREATE TRIGGER trg_recepcion_det_check
    BEFORE INSERT OR UPDATE ON selemti.recepcion_det
    FOR EACH ROW EXECUTE PROCEDURE selemti.trg_recepcion_det_check();
  END IF;
END $$;
-- =====================================================================
--  FIN HOTFIX v2
-- =====================================================================

\n-- END selemti_hotfix_pg95_v2.sql\n
\n-- BEGIN selemti_post_hotfix_checks_v2.sql\n

-- Checks v2
SELECT 'alert_cfg_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='alert_cfg'
) AS ok;
SELECT 'merma_policy_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='merma_policy'
) AS ok;
SELECT 'ui_prefs_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='ui_prefs'
) AS ok;
SELECT 'vw_bom_menu_item_ok' AS check, pg_get_viewdef('selemti.vw_bom_menu_item'::regclass) ILIKE '%name::text%' 
  AND pg_get_viewdef('selemti.vw_bom_menu_item'::regclass) ILIKE '%percentage::numeric%' AS ok;
SELECT 'vw_conv_ok_order' AS check, pg_get_viewdef('selemti.vw_conversion_sugerida'::regclass) ILIKE '%ORDER BY ct.item_id, COALESCE(ct.vendor_id,-1), ct.presentacion, ct.preferred DESC, ct.id DESC%' AS ok;
-- Unique partials present
SELECT 'uq_alert_cfg_metric_null_scope' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_alert_cfg_metric_null_scope'
) AS ok;
SELECT 'uq_merma_policy_sucursal_categoria' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_merma_policy_sucursal_categoria'
) AS ok;
SELECT 'uq_ui_prefs_sucursal_key' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_ui_prefs_sucursal_key'
) AS ok;
\n-- END selemti_post_hotfix_checks_v2.sql\n

-- Compat PG95: trigger para subtotal en pc_precorte_cash_count
DO $$ BEGIN
IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema='public' AND table_name='pc_precorte_cash_count') THEN
  EXECUTE $$
    CREATE OR REPLACE FUNCTION public.pc_precorte_cash_count_biu() RETURNS trigger AS $$
    BEGIN NEW.subtotal := NEW.denom * NEW.qty; RETURN NEW; END; $$ LANGUAGE plpgsql;
  $$;
EXECUTE $$
    DO $$ BEGIN
    BEGIN CREATE TRIGGER pc_precorte_cash_count_biu BEFORE INSERT OR UPDATE ON public.pc_precorte_cash_count
      FOR EACH ROW EXECUTE FUNCTION public.pc_precorte_cash_count_biu();
    EXCEPTION WHEN duplicate_object THEN NULL; END; END $$;
$$;
END IF;
END $$;
\n-- END DEPLOY_CONSOLIDADO_PG95-20251017-0949.sql\n
\n-- BEGIN Floreant_Insight_corte_15_09_2025.sql\n
--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.0
-- Dumped by pg_dump version 9.5.0

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
SET search_path = public, pg_catalog;
--
-- Data for Name: cash_drawer_reset_history;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY cash_drawer_reset_history (id, reset_time, user_id) FROM stdin;
30	2025-09-15 03:23:15.067	1
31	2025-09-15 03:50:51.958	1
32	2025-09-15 04:44:41.19	7
33	2025-09-15 04:49:33.073	1
34	2025-09-15 05:14:59.653	7
35	2025-09-15 07:11:57.932	1
36	2025-09-15 16:31:37.598	1
37	2025-09-15 20:24:21.418	1
38	2025-09-15 21:48:02.085	1
\.


--
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('cash_drawer_reset_history_id_seq', 38, true);
--
-- Data for Name: custom_payment;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY custom_payment (id, name, required_ref_number, ref_number_field_name) FROM stdin;
1	Tranferencia	t	Nombre
\.


--
-- Name: custom_payment_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('custom_payment_id_seq', 1, true);
--
-- Data for Name: drawer_assigned_history;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY drawer_assigned_history (id, "time", operation, a_user) FROM stdin;
1	2025-08-15 06:00:50.176	ASIGNAR	1
2	2025-08-15 12:21:24.808	ASIGNAR	7
3	2025-08-15 12:55:56.962	CERRAR	7
4	2025-08-15 12:57:34.556	CERRAR	1
5	2025-08-15 13:04:45.032	ASIGNAR	6
6	2025-08-15 13:04:51.516	CERRAR	6
7	2025-08-15 13:33:57.629	ASIGNAR	6
8	2025-08-15 13:40:42.266	CERRAR	6
9	2025-08-15 13:40:59.187	ASIGNAR	6
10	2025-08-15 14:06:24.506	ASIGNAR	6
11	2025-08-15 18:54:46.848	CERRAR	6
12	2025-08-16 08:31:01.765	CERRAR	6
13	2025-08-16 09:30:40.619	ASIGNAR	6
14	2025-08-16 09:43:10.427	ASIGNAR	7
15	2025-08-16 16:58:24.067	CERRAR	6
16	2025-08-16 17:15:10.01	CERRAR	7
17	2025-08-16 17:22:52.894	ASIGNAR	1
18	2025-08-18 08:24:07.202	ASIGNAR	6
19	2025-08-18 08:25:00.513	ASIGNAR	7
20	2025-08-18 18:27:24.265	CERRAR	7
21	2025-08-18 18:46:15.361	CERRAR	6
22	2025-08-19 09:05:22.407	ASIGNAR	6
23	2025-08-19 10:42:04.823	ASIGNAR	8
24	2025-08-19 18:42:43.713	CERRAR	6
25	2025-08-19 18:47:00.868	CERRAR	8
26	2025-08-20 09:10:26.782	ASIGNAR	6
27	2025-08-20 10:39:52.787	ASIGNAR	8
28	2025-08-20 19:11:36.357	CERRAR	6
29	2025-08-20 19:24:21.261	CERRAR	8
30	2025-09-06 12:00:13.49	CERRAR	1
31	2025-09-06 12:00:23.439	ASIGNAR	1
32	2025-09-06 12:02:11.03	CERRAR	1
33	2025-09-06 12:41:25.871	ASIGNAR	1
34	2025-09-08 09:48:29.382	CERRAR	1
35	2025-09-08 09:48:40.857	ASIGNAR	1
36	2025-09-10 12:06:59.291	CERRAR	1
37	2025-09-10 12:07:32.624	ASIGNAR	1
38	2025-09-11 00:26:49.689	CERRAR	1
39	2025-09-11 00:28:52.636	ASIGNAR	1
40	2025-09-12 04:59:12.848	CERRAR	1
41	2025-09-12 04:59:49.617	ASIGNAR	1
42	2025-09-12 19:53:01.416	CERRAR	1
43	2025-09-12 19:53:58.175	ASIGNAR	1
44	2025-09-13 01:43:02.907	CERRAR	1
45	2025-09-13 01:43:23.001	ASIGNAR	1
46	2025-09-14 18:40:29.403	CERRAR	1
47	2025-09-14 20:47:33.978	ASIGNAR	1
48	2025-09-14 20:52:25.525	CERRAR	1
49	2025-09-14 21:01:07.943	ASIGNAR	1
50	2025-09-14 22:39:52.953	CERRAR	1
51	2025-09-14 22:41:33.358	ASIGNAR	1
52	2025-09-14 22:47:21.021	CERRAR	1
53	2025-09-14 23:27:26.917	ASIGNAR	1
54	2025-09-15 02:59:54.308	CERRAR	1
55	2025-09-15 03:00:35.213	ASIGNAR	6
56	2025-09-15 03:05:46.307	CERRAR	6
57	2025-09-15 03:06:45.012	ASIGNAR	1
58	2025-09-15 03:08:07.505	CERRAR	1
59	2025-09-15 03:18:41.726	ASIGNAR	1
60	2025-09-15 03:23:15.124	CERRAR	1
61	2025-09-15 03:37:23.224	ASIGNAR	1
62	2025-09-15 03:50:52.011	CERRAR	1
63	2025-09-15 04:01:12.026	ASIGNAR	7
64	2025-09-15 04:44:41.197	CERRAR	7
65	2025-09-15 04:45:36.901	ASIGNAR	1
66	2025-09-15 04:49:33.073	CERRAR	1
67	2025-09-15 05:06:32.731	ASIGNAR	7
68	2025-09-15 05:14:59.657	CERRAR	7
69	2025-09-15 05:25:22.001	ASIGNAR	1
70	2025-09-15 07:11:57.936	CERRAR	1
71	2025-09-15 16:31:04.476	ASIGNAR	1
72	2025-09-15 16:31:37.598	CERRAR	1
73	2025-09-15 19:51:08.171	ASIGNAR	1
74	2025-09-15 20:24:21.418	CERRAR	1
75	2025-09-15 21:44:00.823	ASIGNAR	1
76	2025-09-15 21:48:02.091	CERRAR	1
\.


--
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('drawer_assigned_history_id_seq', 76, true);
--
-- Data for Name: drawer_pull_report;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY drawer_pull_report (id, report_time, reg, ticket_count, begin_cash, net_sales, sales_tax, cash_tax, total_revenue, gross_receipts, giftcertreturncount, giftcertreturnamount, giftcertchangeamount, cash_receipt_no, cash_receipt_amount, credit_card_receipt_no, credit_card_receipt_amount, debit_card_receipt_no, debit_card_receipt_amount, refund_receipt_count, refund_amount, receipt_differential, cash_back, cash_tips, charged_tips, tips_paid, tips_differential, pay_out_no, pay_out_amount, drawer_bleed_no, drawer_bleed_amount, drawer_accountable, cash_to_deposit, variance, delivery_charge, totalvoidwst, totalvoid, totaldiscountcount, totaldiscountamount, totaldiscountsales, totaldiscountguest, totaldiscountpartysize, totaldiscountchecksize, totaldiscountpercentage, totaldiscountratio, user_id, terminal_id) FROM stdin;
30	2025-09-15 03:23:14.957	\N	1	1500	135	0	0	135	135	0	0	0	1	135	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1635	635	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
31	2025-09-15 03:50:51.847	\N	1	0	130	0	0	130	130	0	0	0	1	130	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	130	630	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
32	2025-09-15 04:44:41.096	\N	1	0	180	0	0	180	180	0	0	0	1	180	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	180	680	0	0	0	0	0	0	0	0	0	0	0	0	7	9939
33	2025-09-15 04:49:32.92	\N	4	0	280	0	0	280	280	0	0	0	1	200	1	20	1	35	0	0	25	0	0	0	0	0	0	0	0	0	200	700	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
34	2025-09-15 05:14:59.463	\N	4	0	189	0	0	189	189	0	0	0	1	124	1	10	1	20	0	0	35	0	0	0	0	0	0	0	0	0	124	224	0	0	0	0	0	0	0	0	0	0	0	0	7	9939
35	2025-09-15 07:11:57.763	\N	3	0	158	0	0	158	158	0	0	0	1	55	1	25	1	78	0	0	0	0	0	0	0	0	1	20	1	10	25	525	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
36	2025-09-15 16:31:37.529	\N	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	500	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
37	2025-09-15 20:24:21.208	\N	6	0	445	0	0	445	445	0	0	0	2	115	1	50	1	75	0	0	205	0	0	0	0	0	0	0	0	0	115	315	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
38	2025-09-15 21:48:01.881	\N	5	0	792	0	0	792	792	0	0	0	2	342	1	100	1	150	0	0	200	0	0	0	0	0	0	0	0	0	342	1542	0	0	0	0	1	100	0	1	1	1	0	0	1	9939
\.


--
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('drawer_pull_report_id_seq', 38, true);
--
-- Data for Name: drawer_pull_report_voidtickets;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY drawer_pull_report_voidtickets (dpreport_id, code, reason, hast, quantity, amount) FROM stdin;
\.


--
-- Data for Name: menu_item;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY menu_item (id, name, description, unit_name, translated_name, barcode, buy_price, stock_amount, price, discount_rate, visible, disable_when_stock_amount_is_zero, sort_order, btn_color, text_color, image, show_image_only, fractional_unit, pizza_type, default_sell_portion, group_id, tax_group_id, recepie, pg_id, tax_id) FROM stdin;
66	Agua de Sabor			Agua de Sabor		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
60	Agua Embotellada 1 L			Agua Embotellada 1 L		0	0	15	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
61	Agua Embotellada 500 ML			Agua Embotellada 500 ML		0	0	10	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
43	Americano			Americano		0	0	30	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
21	Boneless 10 pz			Boneless 10 pz		0	0	110	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	6	\N	\N	1	\N
22	Boneless 17 pz			Boneless 17 pz		0	0	158	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	6	\N	\N	1	\N
20	Boneless 5 pz			Boneless 5 pz		0	0	68	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	6	\N	\N	1	\N
87	CACAHUATE HORNEADO			CACAHUATE HORNEADO		12	0	18	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
44	Capuchino			Capuchino		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
50	CHAI LATTE			CHAI LATTE		0	0	55	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
69	Cheesecake Frambuesa			Cheesecake Frambuesa		0	0	40	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
70	Cheesecake Tortuga			Cheesecake Tortuga		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
33	Chilaquiles			Chilaquiles		0	0	50	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	9	\N	\N	1	\N
34	Chilaquiles Terrena			Chilaquiles Terrena		0	0	85	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	9	\N	\N	1	\N
71	Chocoflan			Chocoflan		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
51	Chocolatito			Chocolatito		0	0	40	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	16	\N	\N	2	\N
59	Chocomilk			Chocomilk		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	20	\N	\N	1	\N
25	Club SÃ¡ndwich			Club SÃ¡ndwich		0	0	60	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	7	\N	\N	1	\N
40	CÃ“CTEL DE FRUTAS			CÃ“CTEL DE FRUTAS		0	0	28	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	12	\N	\N	1	\N
41	CÃ“CTEL PREPARADO			CÃ“CTEL PREPARADO		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	12	\N	\N	1	\N
26	Cuernito JamÃ³n con Queso			Cuernito JamÃ³n/Queso		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	7	\N	\N	1	\N
65	Electrolit			Electrolit		0	0	30	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
6	Empanada			Empanada		0	0	16	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
9	Enchiladas			Enchiladas		0	0	50	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	2	\N	\N	1	\N
10	Enchiladas Terrena			Enchiladas Terrena		0	0	85	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	2	\N	\N	1	\N
35	Enfrijoladas			Enfrijoladas		0	0	50	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	10	\N	\N	1	\N
11	Enmoladas			Enmoladas		0	0	55	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	2	\N	\N	1	\N
17	Ensalada AtÃºn			Ensalada AtÃºn		0	0	95	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	3	\N	\N	1	\N
18	Ensalada Dulce			Ensalada Dulce		0	0	88	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	3	\N	\N	1	\N
19	Ensalada Pollo			Ensalada Pollo		0	0	95	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	3	\N	\N	1	\N
45	Espresso			Espresso		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
46	Espresso Cortado			Espresso Cortado		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
72	Galleta Chispas			Galleta Chispas		0	0	13	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
73	Gelatina con Yogurt			Gelatina con Yogurt		0	0	16	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
85	GREEN MOUNTAIN BARRA			GREEN MOUNTAIN BARRA		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
83	Halls			Halls		15	0	15	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	67	\N	\N	\N	\N
38	Hot Cakes			Hot Cakes		0	0	42	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	11	\N	\N	1	\N
39	Hot Cakes Terrena			Hot Cakes Terrena		0	0	58	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	11	\N	\N	1	\N
29	Huevos al Gusto			Huevos al Gusto		0	0	63	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
32	Huevos Divorciados			Huevos Divorciados		0	0	65	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
31	Huevos Rancheros			Huevos Rancheros		0	0	65	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
28	Huevos Sencillos			Huevos Sencillos		0	0	50	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
30	Huevos Tirados			Huevos Tirados		0	0	65	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
54	Jugo Naranja			Jugo Naranja		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	19	\N	\N	1	\N
56	Jugo Verde			Jugo Verde		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	19	\N	\N	1	\N
55	Jugo Zanahoria			Jugo Zanahoria		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	19	\N	\N	1	\N
84	KIRLAND BARRA PROTEINA			KIRLAND BARRA PROTEINA		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
47	Latte			Latte		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
48	Latte Sabor			Latte Sabor		0	0	55	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
58	Licuado			Licuado		0	0	38	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	20	\N	\N	1	\N
67	Limonada			Limonada		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
78	Limonada Mineral			Limonada Mineral		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	2	\N
80	MALANGA			MALANGA		0	0	28	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
57	Malteada			Malteada		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	20	\N	\N	1	\N
49	Matcha Latte			Matcha Latte		0	0	55	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
86	MENU DEL DIA 			MENU DEL DIA 		0	0	65	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	4	\N	\N	1	\N
62	Mineral 600 ml			Mineral 600 ml		0	0	22	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
63	Mineral Twist 600 ml			Mineral Twist 600 ml		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
23	Mollete			Mollete		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	7	\N	\N	1	\N
74	Muffin			Muffin		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
68	Naranjada			Naranjada		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
79	Naranjada Mineral			Naranjada Mineral		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	2	\N
37	Omelette Espinacas & ChampiÃ±Ã³n			Omelette Espinacas & ChampiÃ±Ã³n		0	0	85	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
36	Omelette Jamon & Tocino			Omelette Jamon & Tocino		0	0	82	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
81	Papas			Papas		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
15	Pasta BoloÃ±esa			Pasta BoloÃ±esa		0	0	82	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	4	\N	\N	1	\N
16	Pasta Pomodoro			Pasta Pomodoro		0	0	78	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	4	\N	\N	1	\N
75	Pastel Chocolate Matilda			Pastel Chocolate Matilda		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
76	Pastel Zanahoria			Pastel Zanahoria		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
77	Pay LimÃ³n			Pay LimÃ³n		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
2	Picada			Picada		0	0	38	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
8	Picada Terrena			Picada Terrena		0	0	68	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
82	Platanos			Platanos		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
13	Puchero de Pollo			Puchero de Pollo		0	0	50	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	4	\N	\N	1	\N
5	Quesadilla			Quesadilla		0	0	22	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
24	SÃ¡ndwich			SÃ¡ndwich		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	7	\N	\N	1	\N
14	Sopa Azteca			Sopa Azteca		0	0	52	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	4	\N	\N	1	\N
7	Taco de Guisado			Taco de Guisado		0	0	19	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
3	Taco Dorado			Taco Dorado		0	0	15	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	13	\N	\N	1	\N
42	Tacos de Guisado			Tacos de Guisado		0	0	19	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	13	\N	\N	1	\N
12	TampiqueÃ±a			TampiqueÃ±a		0	0	90	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	2	\N	\N	1	\N
53	TÃ© (Sabores)			TÃ© (Sabores)		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	16	\N	\N	2	\N
52	TÃ© Manzana con Especias			TÃ© Manzana con Especias		0	0	30	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	16	\N	\N	2	\N
64	Topo Chico 600 ml			Topo Chico 600 ml		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
27	Torta			Torta		0	0	38	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	7	\N	\N	1	\N
4	Tostadas			Tostadas		0	0	33	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
\.


--
-- Name: menu_item_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('menu_item_id_seq', 87, true);
--
-- Data for Name: menu_modifier;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY menu_modifier (id, name, translated_name, price, extra_price, sort_order, btn_color, text_color, enable, fixed_price, print_to_kitchen, section_wise_pricing, pizza_modifier, group_id, tax_id) FROM stdin;
1	Pollo	Pollo	0	0	9999	-1250856	-16777216	f	f	t	f	f	3	2
6	Pollo	Pollo	0	0	9999	-1250856	-16777216	f	f	t	f	f	5	2
7	JamÃ³n	JamÃ³n	0	0	9999	-1250856	-16777216	f	f	t	f	f	5	2
2	Picadillo	Picadillo	0	0	9999	-1250856	-16777216	f	f	t	f	f	3	2
3	Queso	Queso	0	0	9999	-1250856	-16777216	f	f	t	f	f	3	2
4	Pollo	Pollo	0	0	9999	-1250856	-16777216	f	f	t	f	f	4	2
5	Papa	Papa	0	0	9999	-1250856	-16777216	f	f	t	f	f	4	2
8	MaÃ­z	MaÃ­z	0	0	9999	-1250856	-16777216	f	f	t	f	f	6	2
9	Harina	Harina	0	0	9999	-1250856	-16777216	f	f	t	f	f	6	2
10	JamÃ³n	JamÃ³n	0	0	9999	-1250856	-16777216	f	f	t	f	f	7	2
11	Chorizo	Chorizo	3	0	9999	-1250856	-16777216	f	f	t	f	f	7	2
12	Pastor	Pastor	13	0	9999	-1250856	-16777216	f	f	t	f	f	7	2
13	ChampiÃ±ones	ChampiÃ±ones	13	0	9999	-1250856	-16777216	f	f	t	f	f	7	2
67	Lechera	Lechera	0	0	9999	-1250856	-16777216	f	f	t	f	f	30	2
14	Verde	Verde	0	0	9999	-1250856	-16777216	f	f	t	f	f	8	2
15	Roja	Roja	0	0	9999	-1250856	-16777216	f	f	t	f	f	8	2
16	Chileseco	Chileseco	0	0	9999	-1250856	-16777216	f	f	t	f	f	8	2
17	Frijoles	Frijoles	0	0	9999	-1250856	-16777216	f	f	t	f	f	8	2
18	Sencilla	Sencilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	9	2
19	Huevo	Huevo	17	0	9999	-1250856	-16777216	f	f	t	f	f	9	2
20	Pollo	Pollo	20	0	9999	-1250856	-16777216	f	f	t	f	f	9	2
21	Chorizo	Chorizo	20	0	9999	-1250856	-16777216	f	f	t	f	f	9	2
27	Roja	Roja	0	0	9999	-1250856	-16777216	f	f	t	f	f	11	2
28	Verde	Verde	0	0	9999	-1250856	-16777216	f	f	t	f	f	11	2
29	Sencillas	Sencillas	0	0	9999	-1250856	-16777216	f	f	t	f	f	12	2
30	Pollo	Pollo	15	0	9999	-1250856	-16777216	f	f	t	f	f	12	2
31	Huevo	Huevo	15	0	9999	-1250856	-16777216	f	f	t	f	f	12	2
32	JamÃ³n	JamÃ³n	18	0	9999	-1250856	-16777216	f	f	t	f	f	12	2
33	Queso de Hebra	Queso de Hebra	18	0	9999	-1250856	-16777216	f	f	t	f	f	12	2
34	Milanesa	Milanesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	13	2
35	Pechuga	Pechuga	0	0	9999	-1250856	-16777216	f	f	t	f	f	13	2
36	Cecina	Cecina	10	0	9999	-1250856	-16777216	f	f	t	f	f	13	2
37	Arrachera	Arrachera	13	0	9999	-1250856	-16777216	f	f	t	f	f	13	2
42	Pechuga	Pechuga	0	0	9999	-1250856	-16777216	f	f	t	f	f	16	2
43	Cecina	Cecina	20	0	9999	-1250856	-16777216	f	f	t	f	f	16	2
44	Arrachera	Arrachera	30	0	9999	-1250856	-16777216	f	f	t	f	f	16	2
45	Milanesa	Milanesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	16	2
46	Estrellado	Estrellado	0	0	9999	-1250856	-16777216	f	f	t	f	f	17	2
47	Revuelto	Revuelto	0	0	9999	-1250856	-16777216	f	f	t	f	f	17	2
50	Cocido	Cocido	0	0	9999	-1250856	-16777216	f	f	t	f	f	18	2
48	Tierno	Tierno	0	0	9999	-1250856	-16777216	f	f	t	f	f	18	2
49	Medio	Medio	0	0	9999	-1250856	-16777216	f	f	t	f	f	18	2
51	Sencillas	Sencillas	0	0	9999	-1250856	-16777216	f	f	t	f	f	19	2
52	Pollo	Pollo	18	0	9999	-1250856	-16777216	f	f	t	f	f	19	2
53	Chorizo	Chorizo	18	0	9999	-1250856	-16777216	f	f	t	f	f	19	2
54	Huevo	Huevo	15	0	9999	-1250856	-16777216	f	f	t	f	f	19	2
55	Roja	Roja	0	0	9999	-1250856	-16777216	f	f	t	f	f	20	2
56	Verde	Verde	0	0	9999	-1250856	-16777216	f	f	t	f	f	20	2
57	Mole	Mole	0	0	9999	-1250856	-16777216	f	f	t	f	f	20	2
58	Huevo	Huevo	15	0	9999	-1250856	-16777216	f	f	t	f	f	21	2
59	Pollo	Pollo	15	0	9999	-1250856	-16777216	f	f	t	f	f	21	2
60	JamÃ³n	JamÃ³n	18	0	9999	-1250856	-16777216	f	f	t	f	f	21	2
61	Queso de Hebra	Queso de Hebra	18	0	9999	-1250856	-16777216	f	f	t	f	f	21	2
62	Milanesa	Milanesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	22	2
63	Pechuga	Pechuga	0	0	9999	-1250856	-16777216	f	f	t	f	f	22	2
64	Pastor	Pastor	0	0	9999	-1250856	-16777216	f	f	t	f	f	22	2
65	Cecina	Cecina	10	0	9999	-1250856	-16777216	f	f	t	f	f	22	2
66	Arrachera	Arrachera	13	0	9999	-1250856	-16777216	f	f	t	f	f	22	2
68	Cajeta	Cajeta	0	0	9999	-1250856	-16777216	f	f	t	f	f	30	2
69	Maple	Maple	0	0	9999	-1250856	-16777216	f	f	t	f	f	30	2
70	Mermelada de Fresa	Mermelada de Fresa	0	0	9999	-1250856	-16777216	f	f	t	f	f	30	2
71	Sencillo	Sencillo	0	0	9999	-1250856	-16777216	f	f	t	f	f	23	2
72	Chorizo	Chorizo	7	0	9999	-1250856	-16777216	f	f	t	f	f	23	2
73	JamÃ³n y Queso	JamÃ³n y Queso	7	0	9999	-1250856	-16777216	f	f	t	f	f	23	2
74	JamÃ³n y Queso	JamÃ³n y Queso	0	0	9999	-1250856	-16777216	f	f	t	f	f	24	2
75	Pollo	Pollo	2	0	9999	-1250856	-16777216	f	f	t	f	f	24	2
76	Pierna	Pierna	5	0	9999	-1250856	-16777216	f	f	t	f	f	24	2
77	AtÃºn	AtÃºn	5	0	9999	-1250856	-16777216	f	f	t	f	f	24	2
81	Pollo	Pollo	0	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
80	JamÃ³n y Queso	JamÃ³n y Queso	0	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
82	Choriqueso	Choriqueso	0	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
83	Huevo	Huevo	0	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
84	Chilaquiles	Chilaquiles	0	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
87	Carga extra CafÃ©	Carga extra CafÃ©	5	0	9999	-1250856	-16777216	f	f	t	f	f	26	2
39	Huevo	Huevo	13	0	9999	-1250856	-16777216	f	f	t	f	f	14	2
40	JamÃ³n	JamÃ³n	15	0	9999	-1250856	-16777216	f	f	t	f	f	14	2
38	Pollo	Pollo	13	0	9999	-1250856	-16777216	f	f	t	f	f	14	2
88	Chocolate	Chocolate	0	0	9999	-1250856	-16777216	f	f	t	f	f	27	2
79	Pierna	Pierna	7	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
78	Milanesa	Milanesa	7	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
89	Vainilla	Vainilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	27	2
90	Choco-PlÃ¡tano	Choco-PlÃ¡tano	0	0	9999	-1250856	-16777216	f	f	t	f	f	28	2
91	PlÃ¡tano	PlÃ¡tano	0	0	9999	-1250856	-16777216	f	f	t	f	f	28	2
92	Fresa	Fresa	0	0	9999	-1250856	-16777216	f	f	t	f	f	28	2
93	Frutos rojos	Frutos rojos	4	0	9999	-1250856	-16777216	f	f	t	f	f	28	2
94	Chocolate	Chocolate	0	0	9999	-1250856	-16777216	f	f	t	f	f	29	2
95	Vainilla	Vainilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	29	2
96	2 Picadas	2 Picadas	0	0	9999	-1250856	-16777216	f	f	t	f	f	15	2
97	2 Enchiladas	2 Enchiladas	0	0	9999	-1250856	-16777216	f	f	t	f	f	15	2
98	2 Enmoladas	2 Enmoladas	0	0	9999	-1250856	-16777216	f	f	t	f	f	15	2
99	JamÃ³n	JamÃ³n	0	0	9999	-1250856	-16777216	f	f	t	f	f	31	2
100	Chorizo	Chorizo	0	0	9999	-1250856	-16777216	f	f	t	f	f	31	2
101	A la Mexicana	A la Mexicana	0	0	9999	-1250856	-16777216	f	f	t	f	f	31	2
102	Tocino	Tocino	0	0	9999	-1250856	-16777216	f	f	t	f	f	31	2
103	Ensalada	Ensalada	0	0	9999	-1250856	-16777216	f	f	t	f	f	32	2
104	Verduras	Verduras	0	0	9999	-1250856	-16777216	f	f	t	f	f	32	2
105	Fruta	Fruta	0	0	9999	-1250856	-16777216	f	f	t	f	f	32	2
106	Frijoles	Frijoles	0	0	9999	-1250856	-16777216	f	f	t	f	f	32	2
107	Papa con Chorizo	Papa con Chorizo	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
108	Milanesa	Milanesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
109	Pastor	Pastor	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
110	Pollo	Pollo	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
111	Mexicana	Mexicana	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
112	Molida	Molida	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
113	Costilla	Costilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
114	Huevo con Jamon	Huevo con Jamon	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
115	Huevo con Chorizo	Huevo con Chorizo	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
116	Rajas	Rajas	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
117	Salchicha	Salchicha	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
118	Carnitas	Carnitas	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
119	Chuleta	Chuleta	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
120	Huevo en Salsa	Huevo en Salsa	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
121	Chicharron	Chicharron	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
25	Chorizo	Chorizo	0	0	9999	-1250856	-16777216	f	f	t	f	f	10	2
26	Arrachera	Arrachera	0	0	9999	-1250856	-16777216	f	f	t	f	f	10	2
23	Cecina	Cecina	0	0	9999	-1250856	-16777216	f	f	t	f	f	10	2
24	Pechuga	Pechuga	0	0	9999	-1250856	-16777216	f	f	t	f	f	10	2
22	Milanesa	Milanesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	10	2
122	Sencilla	Sencilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	14	2
41	Queso de Hebra	Queso de Hebra	15	0	9999	-1250856	-16777216	f	f	t	f	f	14	2
123	Caramelo	Caramelo	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
124	Cookies & Cream	Cookies & Cream	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
125	Crema de Avellana	Crema de Avellana	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
126	Crema Irlandesa	Crema Irlandesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
127	Moka	Moka	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
128	Vainilla	Vainilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
129	Vainilla	Vainilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	40	2
130	Negro	Negro	0	0	9999	-1250856	-16777216	f	f	t	f	f	40	2
131	Verde	Verde	0	0	9999	-1250856	-16777216	f	f	t	f	f	40	2
132	Natrural	Natural	0	0	9999	-1250856	-16777216	f	f	t	f	f	41	2
133	Mineral	Mineral	5	0	9999	-1250856	-16777216	f	f	t	f	f	41	2
134	BBQ	BBQ	0	0	9999	-1250856	-16777216	f	f	t	f	f	34	2
135	BÃºfalo	BÃºfalo	0	0	9999	-1250856	-16777216	f	f	t	f	f	34	2
136	Mango-Habanero	Mango-Habanero	0	0	9999	-1250856	-16777216	f	f	t	f	f	34	2
137	Parmesano	Parmesano	0	0	9999	-1250856	-16777216	f	f	t	f	f	34	2
138	Habanero		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
139	Chipotle		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
140	Fuego		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
141	JalapeÃ±o		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
142	Especias		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
143	Adobadas		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
144	Mora azul		0	0	9999	-1250856	-16777216	f	f	t	f	f	\N	2
145	Fresa kiwi		0	0	9999	-1250856	-16777216	f	f	t	f	f	\N	2
146	Naranja mandarina		0	0	9999	-1250856	-16777216	f	f	t	f	f	\N	2
147	Ponche de frutas		0	0	9999	-1250856	-16777216	f	f	t	f	f	\N	2
148	Uva		0	0	9999	-1250856	-16777216	f	f	t	f	f	\N	2
150	Sencillos	Sencillos	0	0	9999	-1250856	-16777216	f	f	t	f	f	21	2
151	Fresa-Kiwi	Fresa-Kiwi	0	0	9999	-1250856	-16777216	f	f	t	f	f	43	2
153	Ponche de Frutas	Ponche de Frutas	0	0	9999	-1250856	-16777216	f	f	t	f	f	43	2
154	Fresa	Fresa	0	0	9999	-1250856	-16777216	f	f	t	f	f	43	2
155	Mora-Azul	Mora-Azul	0	0	9999	-1250856	-16777216	f	f	t	f	f	43	2
152	Naranja-Mandarina	Naranja-Mandarina	0	0	9999	-1250856	-16777216	f	f	t	f	f	43	2
156	C SALADO	C SALADO	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
157	C NATURAL	C NATURAL	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
158	C SAL Y LIMON	C SAL Y LIMON	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
159	C JALAPEÃ‘O	C JALAPEÃ‘O	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
160	C QUEXO	C QUEXO	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
163	C TOREADOS 	C TOREADOS 	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
164	C AJO CON CHILE 	C AJO CON CHILE 	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
165	C AL AJO 	C AL AJO 	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
161	C HABANERO AMARILLO	C HABANERO AMARILLO	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
162	C HABANERO VERDE 	C HABANERO VERDE	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
\.


--
-- Data for Name: menu_modifier_group;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY menu_modifier_group (id, name, translated_name, enabled, exclusived, required) FROM stdin;
3	Relleno Empanada		f	f	f
4	Relleno Taco Dorado		f	f	f
5	Topping Tostada		f	f	f
6	Tortilla Quesadilla		f	f	f
7	ProteÃ­na Quesadilla		f	f	f
8	Salsa Picada		f	f	f
9	ProteÃ­na Picada		f	f	f
11	Salsa Enchiladas		f	f	f
12	ProteÃ­na Enchiladas Rellenas		f	f	f
13	ProteÃ­na Enchiladas Terrena		f	f	f
14	ProteÃ­na Enmoladas Rellenas		f	f	f
15	OpciÃ³n TampiqueÃ±a		f	f	f
16	ProteÃ­na TampiqueÃ±a		f	f	f
17	Huevos â€“ Tipo		f	f	f
18	Huevos â€“ TÃ©rmino		f	f	f
19	ProteÃ­na Enfrijoladas		f	f	f
20	Salsa Chilaquiles		f	f	f
21	ProteÃ­na Chilaquiles		f	f	f
22	ProteÃ­na Chilaquiles Terrena		f	f	f
23	ProteÃ­na Mollete		f	f	f
24	ProteÃ­na SÃ¡ndwich		f	f	f
25	ProteÃ­na Torta		f	f	f
26	Carga extra CafÃ©		f	f	f
27	Sabor Malteada		f	f	f
28	Sabor Licuado		f	f	f
29	Sabor Muffin		f	f	f
30	Topping Hot Cakes	Topping Hot Cakes	f	f	f
31	ProteÃ­na Huevo	ProteÃ­na Huevo	f	f	f
32	GuarniciÃ³n Omelette	GuarniciÃ³n Omelette	f	f	f
33	Tacos de Guisado	Tacos de Guisado	f	f	f
10	ProteÃ­na Picada Terrena	ProteÃ­na Picada Terrena	f	f	f
34	Salsas Boneless	Salsas Boneless	f	f	f
35	ProteÃ­na Enchilada	ProteÃ­na Enchilada	f	f	f
36	Complemento Huevo	Complemento Huevo	f	f	f
37	Extra Hot Cakes	Extra Hot Cakes	f	f	f
38	Relleno Taco MaÃ±anero	Relleno Taco MaÃ±anero	f	f	f
39	Sabor Latte	Sabor Latte	f	f	f
40	Sabor Chai Latte	Sabor Chai Latte	f	f	f
41	OpciÃ³n Limonada / Naranjada	OpciÃ³n Limonada / Naranjada	f	f	f
42	Sabor malanga		f	f	f
44	Sabor cacahuate		f	f	f
45	Sabor proteina		f	f	f
46	Sabor halls	Sabor halls	f	f	f
43	Sabor electrolit	Sabor electrolit	f	f	f
47	CACAHUATES HORNEADOS 		f	f	f
\.


--
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('menu_modifier_group_id_seq', 47, true);
--
-- Name: menu_modifier_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('menu_modifier_id_seq', 165, true);
--
-- Data for Name: payout_reasons;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY payout_reasons (id, reason) FROM stdin;
\.


--
-- Name: payout_reasons_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('payout_reasons_id_seq', 1, false);
--
-- Data for Name: payout_recepients;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY payout_recepients (id, name) FROM stdin;
\.


--
-- Name: payout_recepients_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('payout_recepients_id_seq', 1, false);
--
-- Data for Name: terminal;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY terminal (id, name, terminal_key, opening_balance, current_balance, has_cash_drawer, in_use, active, location, floor_id, assigned_user) FROM stdin;
301	301	bbd1d074-edf2-413f-bffc-20445966ff98	0	0	t	f	f	\N	0	\N
1090	Terminal 1090	f3b8703b-219e-4043-b8ee-20a4f3befe70	0	0	t	f	f	\N	0	\N
1091	Terminal 1091	d7dc0821-bdb4-468f-8b35-56f595a1affb	0	0	t	f	f	\N	0	\N
101	101	4e8a4290-b76c-444c-a37d-efe85b38968e	0	0	t	f	f	Principal	0	\N
102	102	dd332e72-2063-4355-9eaf-f17e1993b11c	0	0	t	f	f	Principal	0	\N
9939	Terminal 9939	073e81ee-ee1f-4de4-808f-498bee09fc1f	0	0	t	f	f	SelemTI	0	\N
\.


--
-- Data for Name: ticket_discount;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY ticket_discount (id, discount_id, name, type, auto_apply, minimum_amount, value, ticket_id) FROM stdin;
10	6	Rector	1	f	100	100	1020
\.


--
-- Name: ticket_discount_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('ticket_discount_id_seq', 10, true);
--
-- Data for Name: ticket_item;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY ticket_item (id, item_id, item_count, item_quantity, item_name, item_unit_name, group_name, category_name, item_price, item_tax_rate, sub_total, sub_total_without_modifiers, discount, tax_amount, tax_amount_without_modifiers, total_price, total_price_without_modifiers, beverage, inventory_handled, print_to_kitchen, treat_as_seat, seat_number, fractional_unit, has_modiiers, printed_to_kitchen, status, stock_amount_adjusted, pizza_type, size_modifier_id, ticket_id, pg_id, pizza_section_mode) FROM stdin;
1736	61	1	0	Agua Embotellada 500 ML	\N	REFRESCANTES	BEBIDAS FRÃAS	10	0	10	10	0	0	0	10	10	t	f	f	f	0	f	f	f	\N	t	f	\N	1005	\N	0
1726	48	1	0	Latte Sabor	\N	CAFÃ‰	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	999	2	0
1727	60	9	0	Agua Embotellada 1 L	\N	REFRESCANTES	BEBIDAS FRÃAS	15	0	135	135	0	0	0	135	135	t	f	f	f	0	f	f	f	\N	t	f	\N	999	\N	0
1715	50	1	0	CHAI LATTE	\N	CAFÃ‰	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	996	2	0
1745	81	1	0	Papas	\N	SNACKS	OTROS	25	0	25	25	0	0	0	25	25	f	f	t	f	0	f	f	t	Ready	t	f	\N	1009	\N	0
1746	82	1	0	Platanos	\N	SNACKS	OTROS	25	0	25	25	0	0	0	25	25	f	f	t	f	0	f	f	t	Ready	t	f	\N	1009	\N	0
1717	46	1	0	Espresso Cortado	\N	CAFÃ‰	BEBIDAS CALIENTES	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	t	f	\N	t	f	\N	997	2	0
1718	49	1	0	Matcha Latte	\N	CAFÃ‰	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	f	\N	t	f	\N	997	2	0
1719	46	1	0	Espresso Cortado	\N	CAFÃ‰	BEBIDAS CALIENTES	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	t	f	\N	t	f	\N	997	2	0
1720	46	1	0	Espresso Cortado	\N	CAFÃ‰	BEBIDAS CALIENTES	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	t	f	\N	t	f	\N	997	2	0
1728	61	1	0	Agua Embotellada 500 ML	\N	REFRESCANTES	BEBIDAS FRÃAS	10	0	10	10	0	0	0	10	10	t	f	f	f	0	f	f	f	\N	t	f	\N	999	\N	0
1729	68	1	0	Naranjada	\N	REFRESCANTES	BEBIDAS FRÃAS	20	0	20	20	0	0	0	20	20	t	f	f	f	0	f	f	f	\N	t	f	\N	1000	\N	0
1721	50	1	0	CHAI LATTE	\N	CAFÃ‰	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	998	2	0
1722	48	1	0	Latte Sabor	\N	CAFÃ‰	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	998	2	0
1723	66	1	0	Agua de Sabor	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	998	\N	0
1724	68	1	0	Naranjada	\N	REFRESCANTES	BEBIDAS FRÃAS	20	0	20	20	0	0	0	20	20	t	f	f	f	0	f	f	f	\N	t	f	\N	998	\N	0
1725	63	1	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	998	\N	0
1730	68	1	0	Naranjada	\N	REFRESCANTES	BEBIDAS FRÃAS	20	0	20	20	0	0	0	20	20	t	f	f	f	0	f	f	f	\N	t	f	\N	1001	\N	0
1731	60	1	0	Agua Embotellada 1 L	\N	REFRESCANTES	BEBIDAS FRÃAS	15	0	15	15	0	0	0	15	15	t	f	f	f	0	f	f	f	\N	t	f	\N	1001	\N	0
1732	63	1	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	1002	\N	0
1733	61	1	0	Agua Embotellada 500 ML	\N	REFRESCANTES	BEBIDAS FRÃAS	10	0	10	10	0	0	0	10	10	t	f	f	f	0	f	f	f	\N	t	f	\N	1003	\N	0
1734	68	1	0	Naranjada	\N	REFRESCANTES	BEBIDAS FRÃAS	20	0	20	20	0	0	0	20	20	t	f	f	f	0	f	f	f	\N	t	f	\N	1004	\N	0
1735	78	1	0	Limonada Mineral	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	1005	2	0
1743	50	1	0	CHAI LATTE	\N	CAFÃ‰	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	1007	2	0
1748	66	4	0	Agua de Sabor	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	100	100	0	0	0	100	100	t	f	f	f	0	f	f	f	\N	t	f	\N	1010	\N	0
1747	80	1	0	MALANGA	\N	SNACKS	OTROS	28	0	28	28	0	0	0	28	28	f	f	t	f	0	f	f	t	Ready	t	f	\N	1009	\N	0
1737	60	1	0	Agua Embotellada 1 L	\N	REFRESCANTES	BEBIDAS FRÃAS	15	0	15	15	0	0	0	15	15	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1738	68	1	0	Naranjada	\N	REFRESCANTES	BEBIDAS FRÃAS	20	0	20	20	8	0	0	12	12	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1739	66	1	0	Agua de Sabor	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1740	63	1	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1741	64	1	0	Topo Chico 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1742	62	1	0	Mineral 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	22	0	22	22	0	0	0	22	22	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1744	81	1	0	Papas	\N	SNACKS	OTROS	25	0	25	25	0	0	0	25	25	f	f	t	f	0	f	f	t	Ready	t	f	\N	1008	\N	0
1714	47	1	0	Latte	\N	CAFÃ‰	BEBIDAS CALIENTES	45	0	45	45	0	0	0	45	45	t	f	f	f	0	f	f	f	\N	t	f	\N	996	2	0
1716	77	1	0	Pay LimÃ³n	\N	POSTRES	POSTRES	35	0	35	35	0	0	0	35	35	f	f	t	f	0	f	f	t	Ready	t	f	\N	996	\N	0
1749	64	2	0	Topo Chico 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	50	50	0	0	0	50	50	t	f	f	f	0	f	f	f	\N	t	f	\N	1011	\N	0
1750	63	3	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	75	75	0	0	0	75	75	t	f	f	f	0	f	f	f	\N	t	f	\N	1012	\N	0
1751	63	1	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	25	25	10	0	0	15	15	t	f	f	f	0	f	f	f	\N	t	f	\N	1013	\N	0
1752	63	5	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	125	125	0	0	0	125	125	t	f	f	f	0	f	f	f	\N	t	f	\N	1014	\N	0
1753	46	1	0	Espresso Cortado	\N	CAFÃ‰	BEBIDAS CALIENTES	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	t	t	\N	t	f	\N	1015	2	0
1754	48	1	0	Latte Sabor	\N	CAFÃ‰	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	1015	2	0
1755	60	7	0	Agua Embotellada 1 L	\N	REFRESCANTES	BEBIDAS FRÃAS	15	0	105	105	0	0	0	105	105	t	f	f	f	0	f	f	f	\N	t	f	\N	1016	\N	0
1756	63	4	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	100	100	0	0	0	100	100	t	f	f	f	0	f	f	f	\N	t	f	\N	1017	\N	0
1757	64	6	0	Topo Chico 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	150	150	0	0	0	150	150	t	f	f	f	0	f	f	f	\N	t	f	\N	1018	\N	0
1758	64	8	0	Topo Chico 600 ml	\N	REFRESCANTES	BEBIDAS FRÃAS	25	0	200	200	0	0	0	200	200	t	f	f	f	0	f	f	f	\N	t	f	\N	1019	\N	0
1759	80	5	0	MALANGA	\N	SNACKS	OTROS	28	0	140	140	0	0	0	140	140	f	f	t	f	0	f	f	t	\N	t	f	\N	1020	\N	0
1760	81	1	0	Papas	\N	SNACKS	OTROS	25	0	25	25	0	0	0	25	25	f	f	t	f	0	f	f	t	\N	t	f	\N	1020	\N	0
1761	82	9	0	Platanos	\N	SNACKS	OTROS	25	0	225	225	0	0	0	225	225	f	f	t	f	0	f	f	t	\N	t	f	\N	1021	\N	0
1762	85	1	0	GREEN MOUNTAIN BARRA	\N	SNACKS	OTROS	20	0	20	20	8	0	0	12	12	f	f	t	f	0	f	f	t	\N	t	f	\N	1021	\N	0
\.


--
-- Name: ticket_item_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('ticket_item_id_seq', 1762, true);
--
-- Data for Name: transactions;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY transactions (id, payment_type, global_id, transaction_time, amount, tips_amount, tips_exceed_amount, tender_amount, transaction_type, custom_payment_name, custom_payment_ref, custom_payment_field_name, payment_sub_type, captured, voided, authorizable, card_holder_name, card_number, card_auth_code, card_type, card_transaction_id, card_merchant_gateway, card_reader, card_aid, card_arqc, card_ext_data, gift_cert_number, gift_cert_face_value, gift_cert_paid_amount, gift_cert_cash_back_amount, drawer_resetted, note, terminal_id, ticket_id, user_id, payout_reason_id, payout_recepient_id) FROM stdin;
979	CASH	gjy1758621025705	2025-09-15 03:37:49.171	130	0	0	200	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	997	1	\N	\N
980	CASH	quq1758878292542	2025-09-15 04:01:40.532	180	0	0	180	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	998	7	\N	\N
984	CUSTOM_PAYMENT	kzz1759176928268	2025-09-15 04:47:23.011	25	0	0	25	CREDIT	Tranferencia	333	Nombre	CUSTOM PAYMENT	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1002	7	\N	\N
983	DEBIT_CARD	rny1754955660247	2025-09-15 04:47:11.88	35	0	0	35	CREDIT	\N	\N	\N	VISA	t	f	t	\N	\N	34	VISA	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1001	7	\N	\N
982	CREDIT_CARD	sof1756674630612	2025-09-15 04:46:44.339	20	0	0	20	CREDIT	\N	\N	\N	MASTER CARD	t	f	t	\N	\N	3	MASTER CARD	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1000	7	\N	\N
981	CASH	dfl1759651155964	2025-09-15 04:46:20.343	200	0	0	200	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	999	7	\N	\N
988	CASH	rwt1757305379851	2025-09-15 05:09:03.621	124	0	0	124	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1006	7	\N	\N
987	CUSTOM_PAYMENT	kpd1758119119567	2025-09-15 05:07:38.341	35	0	0	35	CREDIT	Tranferencia	4444	Nombre	CUSTOM PAYMENT	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1005	7	\N	\N
986	DEBIT_CARD	tii1759568030646	2025-09-15 05:07:22.853	20	0	0	20	CREDIT	\N	\N	\N	VISA	t	f	t	\N	\N	y	VISA	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1004	7	\N	\N
985	CREDIT_CARD	lnq1759180703154	2025-09-15 05:07:14.56	10	0	0	10	CREDIT	\N	\N	\N	AMEX	t	f	t	\N	\N	4	AMEX	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1003	7	\N	\N
993	DEBIT_CARD	npy1759095390939	2025-09-15 05:26:57.37	78	0	0	78	CREDIT	\N	\N	\N	VISA	t	f	t	\N	\N	7	VISA	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1009	1	\N	\N
992	CREDIT_CARD	ogj1758517995549	2025-09-15 05:26:33.415	25	0	0	25	CREDIT	\N	\N	\N	MASTER CARD	t	f	t	\N	\N	4	MASTER CARD	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1008	1	\N	\N
978	CASH	irs1756615382813	2025-09-15 03:18:47.314	135	0	0	135	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	996	1	\N	\N
991	PAY_OUT	vdq1758004100789	2025-09-15 05:25:59.288	20	0	0	0	DEBIT	\N	\N	\N	CASH	f	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t		9939	\N	1	\N	\N
990	CASH_DROP	uju1760493785106	2025-09-15 05:25:43.944	10	0	0	0	CREDIT	\N	\N	\N	CASH	f	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	\N	1	\N	\N
989	CASH	rho1755764039518	2025-09-15 05:25:30.591	55	0	0	55	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1007	1	\N	\N
1004	CASH	xsm1763397376836	2025-09-15 21:45:18.856	0	0	0	0	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1020	1	\N	\N
1005	CASH	nku1760255851474	2025-09-15 21:45:51.764	237	0	0	237	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1021	1	\N	\N
1000	CASH	ara1760093059342	2025-09-15 21:44:23.163	105	0	0	105	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1016	1	\N	\N
994	CASH	lhk1759187772455	2025-09-15 19:57:33.464	100	0	0	100	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1010	1	\N	\N
995	CREDIT_CARD	gvv1757208108996	2025-09-15 19:57:45.826	50	0	0	50	CREDIT	\N	\N	\N	AMEX	t	f	t	\N	\N	50	AMEX	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1011	1	\N	\N
996	DEBIT_CARD	mkt1759522180891	2025-09-15 19:58:13.452	75	0	0	75	CREDIT	\N	\N	\N	VISA	t	f	t	\N	\N	yy	VISA	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1012	1	\N	\N
997	CASH	wck1758619161633	2025-09-15 19:58:36.336	15	0	0	15	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1013	1	\N	\N
998	CUSTOM_PAYMENT	xoi1761621612033	2025-09-15 19:58:53.434	125	0	0	125	CREDIT	Tranferencia	tavo	Nombre	CUSTOM PAYMENT	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1014	1	\N	\N
999	CUSTOM_PAYMENT	jhk1757993670627	2025-09-15 19:59:56.766	80	0	0	80	CREDIT	Tranferencia	4	Nombre	CUSTOM PAYMENT	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1015	1	\N	\N
1001	CREDIT_CARD	euj1756880644760	2025-09-15 21:44:36.675	100	0	0	100	CREDIT	\N	\N	\N	AMEX	t	f	t	\N	\N	44	AMEX	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1017	1	\N	\N
1002	DEBIT_CARD	gth1758129400597	2025-09-15 21:44:47.202	150	0	0	150	CREDIT	\N	\N	\N	VISA	t	f	t	\N	\N	777	VISA	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1018	1	\N	\N
1003	CUSTOM_PAYMENT	lhn1755030494363	2025-09-15 21:45:02.429	200	0	0	200	CREDIT	Tranferencia	ttt	Nombre	CUSTOM PAYMENT	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1019	1	\N	\N
\.


--
-- Name: transactions_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('transactions_id_seq', 1005, true);
--
-- Data for Name: users;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY users (auto_id, user_id, user_pass, first_name, last_name, ssn, cost_per_hour, clocked_in, last_clock_in_time, last_clock_out_time, phone_no, is_driver, available_for_delivery, active, shift_id, currentterminal, n_user_type) FROM stdin;
9	20101	1988	Isabella	FernÃ¡ndez RomÃ¡n 		0	f	\N	\N		f	f	t	\N	\N	3
11	30101	230519	juan david	marinez tejeda		0	f	\N	\N		f	f	t	\N	\N	3
8	10100	2334	JOSE	HUESCA		0	t	2025-08-15 10:23:30.265	\N		f	f	t	1	102	2
7	10102	2222	Aldo Abraham 	Martinez Tejeda		0	t	2025-08-15 10:24:29.199	\N		f	f	t	1	102	3
10	20102	268405	Alexis Manuel	Ramirez Grajales		0	t	2025-08-15 12:33:16.846	\N		f	f	t	1	102	3
1	123	1111	Admin	System	123	0	t	2025-08-15 12:40:32.601	\N	\N	f	f	t	1	101	1
6	10101	211920	Jose Eumir 	Rodriguez Rranco		0	t	2025-08-15 10:58:16.273	\N		f	f	t	1	102	2
\.


--
-- Name: users_auto_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('users_auto_id_seq', 11, true);
--
-- Data for Name: void_reasons;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY void_reasons (id, reason_text) FROM stdin;
1	rr
\.


--
-- Name: void_reasons_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('void_reasons_id_seq', 1, true);
SET search_path = selemti, pg_catalog;
--
-- Data for Name: postcorte;
Type: TABLE DATA;
Schema: selemti;
Owner: postgres
--

COPY postcorte (id, sesion_id, sistema_efectivo_esperado, declarado_efectivo, diferencia_efectivo, veredicto_efectivo, sistema_tarjetas, declarado_tarjetas, diferencia_tarjetas, veredicto_tarjetas, creado_en, creado_por, notas) FROM stdin;
1	28	0.00	1500.00	1500.00	A_FAVOR	0.00	2.00	2.00	A_FAVOR	2025-09-15 19:49:37.527543-05	1	
2	29	0.00	315.00	315.00	A_FAVOR	0.00	125.00	125.00	A_FAVOR	2025-09-15 20:24:50.069671-05	1	
3	28	0.00	1500.00	1500.00	A_FAVOR	0.00	2.00	2.00	A_FAVOR	2025-09-15 20:30:09.694346-05	1	
4	28	0.00	1500.00	1500.00	A_FAVOR	0.00	2.00	2.00	A_FAVOR	2025-09-15 20:53:56.50664-05	1	
5	28	0.00	1500.00	1500.00	A_FAVOR	0.00	2.00	2.00	A_FAVOR	2025-09-15 20:54:13.141123-05	1	
6	30	0.00	1542.00	1542.00	A_FAVOR	0.00	250.00	250.00	A_FAVOR	2025-09-15 21:48:59.372951-05	1	
\.


--
-- Name: postcorte_id_seq;
Type: SEQUENCE SET;
Schema: selemti;
Owner: postgres
--

SELECT pg_catalog.setval('postcorte_id_seq', 6, true);
--
-- Data for Name: precorte;
Type: TABLE DATA;
Schema: selemti;
Owner: postgres
--

COPY precorte (id, sesion_id, declarado_efectivo, declarado_otros, estatus, creado_en, creado_por, ip_cliente, notas) FROM stdin;
14	22	0.00	0.00	ENVIADO	2025-09-15 03:23:17.715304-05	\N	\N	\N
15	23	0.00	0.00	ENVIADO	2025-09-15 03:37:28.341676-05	\N	\N	\N
16	24	0.00	0.00	ENVIADO	2025-09-15 04:01:17.388065-05	\N	\N	\N
17	25	0.00	0.00	ENVIADO	2025-09-15 04:45:42.429012-05	\N	\N	\N
18	26	0.00	0.00	ENVIADO	2025-09-15 05:08:08.522708-05	\N	\N	\N
19	27	188.00	103.00	ENVIADO	2025-09-15 05:49:08.979568-05	\N	\N	Prueba
20	28	1500.00	3.00	ENVIADO	2025-09-15 16:31:08.394322-05	\N	\N	\N
21	29	315.00	330.00	ENVIADO	2025-09-15 19:51:13.139291-05	\N	\N	\N
22	30	1542.00	450.00	ENVIADO	2025-09-15 21:46:24.518123-05	\N	\N	\N
\.


--
-- Data for Name: precorte_efectivo;
Type: TABLE DATA;
Schema: selemti;
Owner: postgres
--

COPY precorte_efectivo (id, precorte_id, denominacion, cantidad, subtotal) FROM stdin;
41	14	1000.00	1	1000.00
42	14	500.00	1	500.00
43	15	1000.00	2	2000.00
44	15	200.00	2	400.00
45	16	500.00	1	500.00
46	16	100.00	1	100.00
47	16	20.00	1	20.00
48	16	10.00	1	10.00
49	16	50.00	1	50.00
50	17	500.00	1	500.00
51	17	200.00	1	200.00
52	18	100.00	1	100.00
53	18	50.00	2	100.00
54	18	20.00	1	20.00
55	18	2.00	2	4.00
84	19	100.00	1	100.00
85	19	50.00	1	50.00
86	19	20.00	1	20.00
87	19	10.00	1	10.00
88	19	2.00	1	2.00
89	19	5.00	1	5.00
90	19	1.00	1	1.00
91	20	1000.00	1	1000.00
92	20	500.00	1	500.00
93	21	200.00	1	200.00
94	21	100.00	1	100.00
95	21	10.00	1	10.00
96	21	5.00	1	5.00
97	22	1000.00	1	1000.00
98	22	500.00	1	500.00
99	22	20.00	2	40.00
100	22	2.00	1	2.00
\.


--
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE SET;
Schema: selemti;
Owner: postgres
--

SELECT pg_catalog.setval('precorte_efectivo_id_seq', 100, true);
--
-- Name: precorte_id_seq;
Type: SEQUENCE SET;
Schema: selemti;
Owner: postgres
--

SELECT pg_catalog.setval('precorte_id_seq', 22, true);
--
-- Data for Name: precorte_otros;
Type: TABLE DATA;
Schema: selemti;
Owner: postgres
--

COPY precorte_otros (id, precorte_id, tipo, monto, referencia, evidencia_url, notas, creado_en) FROM stdin;
34	14	CREDITO	0.00	\N	\N	\N	2025-09-15 03:23:34.135319-05
35	14	DEBITO	0.00	\N	\N	\N	2025-09-15 03:23:34.135319-05
36	14	TRANSFER	0.00	\N	\N	\N	2025-09-15 03:23:34.135319-05
37	15	CREDITO	0.00	\N	\N	\N	2025-09-15 03:38:23.376297-05
38	15	DEBITO	0.00	\N	\N	\N	2025-09-15 03:38:23.376297-05
39	15	TRANSFER	0.00	\N	\N	\N	2025-09-15 03:38:23.376297-05
40	16	CREDITO	0.00	\N	\N	\N	2025-09-15 04:02:21.933151-05
41	16	DEBITO	0.00	\N	\N	\N	2025-09-15 04:02:21.933151-05
42	16	TRANSFER	0.00	\N	\N	\N	2025-09-15 04:02:21.933151-05
43	17	CREDITO	20.00	\N	\N	\N	2025-09-15 04:49:23.782207-05
44	17	DEBITO	35.00	\N	\N	\N	2025-09-15 04:49:23.782207-05
45	17	TRANSFER	25.00	\N	\N	\N	2025-09-15 04:49:23.782207-05
46	18	CREDITO	10.00	\N	\N	\N	2025-09-15 05:12:35.908008-05
47	18	DEBITO	20.00	\N	\N	\N	2025-09-15 05:12:35.908008-05
48	18	TRANSFER	35.00	\N	\N	\N	2025-09-15 05:12:35.908008-05
57	19	CREDITO	25.00	\N	\N	Prueba	2025-09-15 07:08:29.172838-05
58	19	DEBITO	78.00	\N	\N	Prueba	2025-09-15 07:08:29.172838-05
59	20	CREDITO	1.00	\N	\N		2025-09-15 16:31:23.200203-05
60	20	DEBITO	1.00	\N	\N		2025-09-15 16:31:23.200203-05
61	20	TRANSFER	1.00	\N	\N		2025-09-15 16:31:23.200203-05
62	21	CREDITO	50.00	\N	\N		2025-09-15 20:01:47.781826-05
63	21	DEBITO	75.00	\N	\N		2025-09-15 20:01:47.781826-05
64	21	TRANSFER	205.00	\N	\N		2025-09-15 20:01:47.781826-05
65	22	CREDITO	100.00	\N	\N		2025-09-15 21:47:44.57108-05
66	22	DEBITO	150.00	\N	\N		2025-09-15 21:47:44.57108-05
67	22	TRANSFER	200.00	\N	\N		2025-09-15 21:47:44.57108-05
\.


--
-- Name: precorte_otros_id_seq;
Type: SEQUENCE SET;
Schema: selemti;
Owner: postgres
--

SELECT pg_catalog.setval('precorte_otros_id_seq', 67, true);
--
-- Data for Name: sesion_cajon;
Type: TABLE DATA;
Schema: selemti;
Owner: postgres
--

COPY sesion_cajon (id, sucursal, terminal_id, terminal_nombre, cajero_usuario_id, apertura_ts, cierre_ts, estatus, opening_float, closing_float, dah_evento_id) FROM stdin;
22	SelemTI	9939	Terminal 9939	1	2025-09-15 03:18:41.728633-05	2025-09-15 03:23:15.124-05	LISTO_PARA_CORTE	500.00	635.00	60
23	SelemTI	9939	Terminal 9939	1	2025-09-15 03:37:23.228183-05	2025-09-15 03:50:52.011-05	LISTO_PARA_CORTE	500.00	630.00	62
24	SelemTI	9939	Terminal 9939	7	2025-09-15 04:01:12.032433-05	2025-09-15 04:44:41.197-05	LISTO_PARA_CORTE	500.00	680.00	64
25	SelemTI	9939	Terminal 9939	1	2025-09-15 04:45:36.902844-05	2025-09-15 04:49:33.073-05	LISTO_PARA_CORTE	500.00	700.00	66
26	SelemTI	9939	Terminal 9939	7	2025-09-15 05:06:32.732674-05	2025-09-15 05:14:59.657-05	LISTO_PARA_CORTE	100.00	224.00	68
27	SelemTI	9939	Terminal 9939	1	2025-09-15 05:25:22.002894-05	2025-09-15 07:11:57.936-05	LISTO_PARA_CORTE	500.00	525.00	70
28	SelemTI	9939	Terminal 9939	1	2025-09-15 16:31:04.478021-05	2025-09-15 16:31:37.598-05	LISTO_PARA_CORTE	500.00	500.00	72
29	SelemTI	9939	Terminal 9939	1	2025-09-15 19:51:08.172155-05	2025-09-15 20:24:21.418-05	LISTO_PARA_CORTE	200.00	315.00	74
30	SelemTI	9939	Terminal 9939	1	2025-09-15 21:44:00.824475-05	2025-09-15 21:48:02.091-05	LISTO_PARA_CORTE	1200.00	1542.00	76
\.


--
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE SET;
Schema: selemti;
Owner: postgres
--

SELECT pg_catalog.setval('sesion_cajon_id_seq', 30, true);
--
-- PostgreSQL database dump complete
--


\n-- END Floreant_Insight_corte_15_09_2025.sql\n
\n-- BEGIN folio_diario_floreant_optimizado_final_v6_OK_txt.sql\n
BEGIN;
-- =========================================
-- FASE 0: VerificaciÃ³n previa para evitar errores
-- =========================================
DO $$
BEGIN
    IF EXISTS (
        SELECT 1
        FROM public.kitchen_ticket_item
        WHERE ticket_item_id IS NULL
        LIMIT 1
    ) THEN
        RAISE EXCEPTION 'Existen filas con ticket_item_id NULL en kitchen_ticket_item. Corrija antes de continuar.';
    END IF;
END $$;
-- =========================================
-- FASE 1.A) Tabla contador por dÃ­a y sucursal
-- =========================================
CREATE TABLE IF NOT EXISTS public.daily_folio_counter (
    folio_date   DATE    NOT NULL,
    branch_key   TEXT    NOT NULL,
    last_value   INTEGER NOT NULL DEFAULT 0,
    PRIMARY KEY (folio_date, branch_key)
);
ALTER TABLE public.daily_folio_counter OWNER TO floreant;
-- =========================================
-- FASE 1.B) Columnas nuevas en ticket (idempotente para PG 9.5)
-- =========================================
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1
        FROM information_schema.columns
        WHERE table_schema = 'public'
        AND table_name = 'ticket'
        AND column_name = 'folio_date'
    ) THEN
        ALTER TABLE public.ticket ADD COLUMN folio_date DATE;
    END IF;
    IF NOT EXISTS (
        SELECT 1
        FROM information_schema.columns
        WHERE table_schema = 'public'
        AND table_name = 'ticket'
        AND column_name = 'branch_key'
    ) THEN
        ALTER TABLE public.ticket ADD COLUMN branch_key TEXT;
    END IF;
    IF NOT EXISTS (
        SELECT 1
        FROM information_schema.columns
        WHERE table_schema = 'public'
        AND table_name = 'ticket'
        AND column_name = 'daily_folio'
    ) THEN
        ALTER TABLE public.ticket ADD COLUMN daily_folio INTEGER;
    END IF;
END $$;
-- Constraint para daily_folio positivo (idempotente)
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1
        FROM pg_constraint
        WHERE conname = 'ck_ticket_daily_folio_positive'
        AND conrelid = 'public.ticket'::regclass
    ) THEN
        ALTER TABLE public.ticket
        ADD CONSTRAINT ck_ticket_daily_folio_positive
        CHECK (daily_folio IS NULL OR daily_folio > 0);
    END IF;
END $$;
-- Ãndices no-Ãºnicos para consultas rÃ¡pidas
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_indexes
        WHERE schemaname = 'public' AND indexname = 'ix_ticket_folio_date'
    ) THEN
        CREATE INDEX ix_ticket_folio_date ON public.ticket (folio_date);
    END IF;
    IF NOT EXISTS (
        SELECT 1 FROM pg_indexes
        WHERE schemaname = 'public' AND indexname = 'ix_ticket_branch_key'
    ) THEN
        CREATE INDEX ix_ticket_branch_key ON public.ticket (branch_key);
    END IF;
    IF NOT EXISTS (
        SELECT 1 FROM pg_indexes
        WHERE schemaname = 'public' AND indexname = 'ix_ticket_item_ticket_pg'
    ) THEN
        CREATE INDEX ix_ticket_item_ticket_pg ON public.ticket_item (ticket_id, pg_id);
    END IF;
    IF NOT EXISTS (
        SELECT 1 FROM pg_indexes
        WHERE schemaname = 'public' AND indexname = 'ix_kitchen_ticket_item_item_id'
    ) THEN
        CREATE INDEX ix_kitchen_ticket_item_item_id ON public.kitchen_ticket_item (ticket_item_id);
    END IF;
    IF NOT EXISTS (
        SELECT 1 FROM pg_indexes
        WHERE schemaname = 'public' AND indexname = 'ix_kitchen_ticket_ticket_id'
    ) THEN
        CREATE INDEX ix_kitchen_ticket_ticket_id ON public.kitchen_ticket (ticket_id);
    END IF;
END $$;
-- Constraint para ticket_item_id NOT NULL en kitchen_ticket_item
ALTER TABLE public.kitchen_ticket_item
    ALTER COLUMN ticket_item_id SET NOT NULL;
-- =========================================
-- FASE 1.C) FunciÃ³n trigger con normalizaciÃ³n consistente
-- =========================================
CREATE OR REPLACE FUNCTION public.assign_daily_folio()
RETURNS TRIGGER AS $$
DECLARE
    v_branch   TEXT;
v_date     DATE;
v_next     INTEGER;
BEGIN
    IF NEW.terminal_id IS NULL THEN
        RAISE EXCEPTION 'No se puede crear ticket sin terminal_id';
END IF;
IF NEW.create_date IS NULL THEN
        NEW.create_date := NOW();
END IF;
v_date := (NEW.create_date AT TIME ZONE 'America/Mexico_City')::DATE;
SELECT COALESCE(NULLIF(UPPER(BTRIM(t.location)), ''), '') INTO v_branch
    FROM public.terminal t
    WHERE t.id = NEW.terminal_id;
IF NOT FOUND THEN
        RAISE EXCEPTION 'Terminal % no existe en la base de datos', NEW.terminal_id;
END IF;
IF NEW.daily_folio IS NOT NULL AND NEW.folio_date IS NOT NULL AND NEW.branch_key IS NOT NULL THEN
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE folio_date = NEW.folio_date
            AND branch_key = NEW.branch_key
            AND daily_folio = NEW.daily_folio
            AND id != NEW.id
        ) THEN
            RAISE EXCEPTION 'Folio % ya existe para % en %', NEW.daily_folio, NEW.branch_key, NEW.folio_date;
END IF;
RETURN NEW;
END IF;
WITH up AS (
        INSERT INTO public.daily_folio_counter (folio_date, branch_key, last_value)
        VALUES (v_date, v_branch, 1)
        ON CONFLICT (folio_date, branch_key)
        DO UPDATE SET last_value = public.daily_folio_counter.last_value + 1
        RETURNING last_value
    )
    SELECT last_value INTO v_next FROM up;
NEW.folio_date := v_date;
NEW.branch_key := v_branch;
NEW.daily_folio := v_next;
RETURN NEW;
END
$$ LANGUAGE plpgsql;
ALTER FUNCTION public.assign_daily_folio() OWNER TO floreant;
-- Trigger (PG 9.5 => EXECUTE PROCEDURE)
DROP TRIGGER IF EXISTS trg_assign_daily_folio ON public.ticket;
CREATE TRIGGER trg_assign_daily_folio
BEFORE INSERT ON public.ticket
FOR EACH ROW EXECUTE PROCEDURE public.assign_daily_folio();
-- =========================================
-- FASE 1.E) kds_notify para notificaciones KDS/voceo
-- =========================================
CREATE OR REPLACE FUNCTION public.kds_notify() RETURNS TRIGGER
LANGUAGE plpgsql
AS $$
DECLARE
    v_ticket_id   INT;
v_pg_id       INT;
v_item_id     INT;
v_status      TEXT;
v_total       INT;
v_ready       INT;
v_done        INT;
v_type        TEXT;
v_daily_folio INT;
v_branch_key  TEXT;
v_folio_fmt   TEXT;
BEGIN
    IF TG_TABLE_NAME = 'kitchen_ticket_item' THEN
        IF NEW.ticket_item_id IS NULL THEN
            RAISE EXCEPTION 'ticket_item_id no puede ser NULL en kitchen_ticket_item';
END IF;
v_item_id := NEW.ticket_item_id;
SELECT ti.ticket_id, ti.pg_id INTO v_ticket_id, v_pg_id
        FROM ticket_item ti WHERE ti.id = v_item_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket_item % no existe', v_item_id;
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket % no existe', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, '0');
v_status := UPPER(COALESCE(NEW.status, ''));
v_type := CASE WHEN TG_OP = 'INSERT' THEN 'item_upsert' ELSE 'item_status' END;
PERFORM pg_notify(
            'kds_event',
            json_build_object(
                'type',        v_type,
                'ticket_id',   v_ticket_id,
                'pg',          v_pg_id,
                'item_id',     v_item_id,
                'status',      v_status,
                'daily_folio', v_daily_folio,
                'branch_key',  v_branch_key,
                'folio_fmt',   v_folio_fmt,
                'ts',          NOW()
            )::TEXT
        );
ELSIF TG_TABLE_NAME = 'ticket_item' THEN
        v_item_id := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id := NEW.pg_id;
IF v_ticket_id IS NULL THEN
            RAISE EXCEPTION 'ticket_id no puede ser NULL en ticket_item';
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket % no existe', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, '0');
v_status := UPPER(COALESCE(NEW.status, ''));
v_type := CASE WHEN TG_OP = 'INSERT' THEN 'item_insert' ELSE 'item_status' END;
PERFORM pg_notify(
            'kds_event',
            json_build_object(
                'type',        v_type,
                'ticket_id',   v_ticket_id,
                'pg',          v_pg_id,
                'item_id',     v_item_id,
                'status',      v_status,
                'daily_folio', v_daily_folio,
                'branch_key',  v_branch_key,
                'folio_fmt',   v_folio_fmt,
                'ts',          NOW()
            )::TEXT
        );
END IF;
IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
        WITH s AS (
            SELECT
                ti.id AS item_id,
                UPPER(COALESCE(kti.status, ti.status, '')) AS st
            FROM ticket_item ti
            LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
            WHERE ti.ticket_id = v_ticket_id AND ti.pg_id = v_pg_id
            GROUP BY ti.id, st
        )
        SELECT
            COUNT(DISTINCT item_id) AS total,
            COUNT(DISTINCT item_id) FILTER (WHERE st IN ('READY', 'DONE')) AS ready,
            COUNT(DISTINCT item_id) FILTER (WHERE st = 'DONE') AS done
        INTO v_total, v_ready, v_done
        FROM s;
IF v_total > 0 AND v_total = v_ready THEN
            PERFORM pg_notify(
                'kds_event',
                json_build_object(
                    'type',        'ticket_all_ready',
                    'ticket_id',   v_ticket_id,
                    'pg',          v_pg_id,
                    'daily_folio', v_daily_folio,
                    'branch_key',  v_branch_key,
                    'folio_fmt',   v_folio_fmt,
                    'ts',          NOW()
                )::TEXT
            );
END IF;
IF v_total > 0 AND v_total = v_done THEN
            PERFORM pg_notify(
                'kds_event',
                json_build_object(
                    'type',        'ticket_all_done',
                    'ticket_id',   v_ticket_id,
                    'pg',          v_pg_id,
                    'daily_folio', v_daily_folio,
                    'branch_key',  v_branch_key,
                    'folio_fmt',   v_folio_fmt,
                    'ts',          NOW()
                )::TEXT
            );
END IF;
END IF;
RETURN NEW;
END;
$$;
ALTER FUNCTION public.kds_notify() OWNER TO floreant;
-- Triggers para kds_notify (PG 9.5 => EXECUTE PROCEDURE)
DROP TRIGGER IF EXISTS trg_kds_notify_ti ON public.ticket_item;
DROP TRIGGER IF EXISTS trg_kds_notify_kti ON public.kitchen_ticket_item;
-- =========================================
-- FASE 1.F) Vista KDS con prioridad voceo
-- =========================================
CREATE OR REPLACE VIEW public.kds_orders_enhanced AS
SELECT
    kt.id AS kitchen_ticket_id,
    kt.ticket_id,
    kt.create_date AS kds_created_at,
    kt.sequence_number,
    t.daily_folio,
    t.folio_date,
    t.branch_key,
    LPAD(t.daily_folio::TEXT, 4, '0') AS folio_display,
    t.number_of_guests,
    t.ticket_type,
    term.name AS terminal_name,
    CASE
        WHEN t.daily_folio BETWEEN 1 AND 20 THEN 'PRIORITARIO'
        WHEN t.daily_folio BETWEEN 21 AND 50 THEN 'NORMAL'
        ELSE 'ALTO_VOLUMEN'
    END AS prioridad_voceo
FROM public.kitchen_ticket kt
JOIN public.ticket t ON t.id = kt.ticket_id
LEFT JOIN public.terminal term ON t.terminal_id = term.id;
ALTER VIEW public.kds_orders_enhanced OWNER TO floreant;
-- =========================================
-- FASE 1.G) Vista para reportes/inventarios
-- =========================================
CREATE OR REPLACE VIEW public.ticket_folio_complete AS
SELECT
    t.id,
    t.daily_folio,
    t.folio_date,
    t.branch_key,
    t.total_price,
    t.paid_amount,
    t.create_date,
    TO_CHAR(t.folio_date, 'DD/MM/YYYY') AS folio_date_txt,
    LPAD(t.daily_folio::TEXT, 4, '0') AS folio_display,
    COALESCE(term.location, 'DEFAULT') AS sucursal_completa,
    term.name AS terminal_name,
    TO_CHAR(t.folio_date, 'YYYY-MM') AS periodo_mes,
    EXTRACT(HOUR FROM t.create_date) AS hora_venta, -- Asume que create_date estÃ¡ en hora local
    -- Si necesitas forzar zona (e.g., BD en UTC), usa: EXTRACT(HOUR FROM t.create_date AT TIME ZONE 'America/Mexico_City')
    EXTRACT(DOW FROM t.folio_date) AS dia_semana,
    CASE
        WHEN t.voided THEN 'CANCELADO'
        WHEN t.paid_amount > 0 THEN 'PAGADO'
        ELSE 'PENDIENTE'
    END AS status_simple
FROM public.ticket t
LEFT JOIN public.terminal term ON t.terminal_id = term.id;
ALTER VIEW public.ticket_folio_complete OWNER TO floreant;
-- =========================================
-- FASE 1.H) FunciÃ³n helper para Java/Jaspersoft
-- =========================================
CREATE OR REPLACE FUNCTION public.get_ticket_folio_info(p_ticket_id INTEGER)
RETURNS TABLE(
    daily_folio INTEGER,
    folio_date DATE,
    branch_key TEXT,
    folio_date_txt TEXT,
    folio_display TEXT,
    sucursal_completa TEXT,
    terminal_name TEXT
)
LANGUAGE SQL STABLE
AS $$
    SELECT
        t.daily_folio,
        t.folio_date,
        t.branch_key,
        TO_CHAR(t.folio_date, 'DD/MM/YYYY') AS folio_date_txt,
        LPAD(t.daily_folio::TEXT, 4, '0') AS folio_display,
        COALESCE(term.location, 'DEFAULT') AS sucursal_completa,
        term.name AS terminal_name
    FROM public.ticket t
    LEFT JOIN public.terminal term ON t.terminal_id = term.id
    WHERE t.id = p_ticket_id;
$$;
ALTER FUNCTION public.get_ticket_folio_info(integer) OWNER TO floreant;
-- =========================================
-- FASE 1.I) Stats diarias para inventarios
-- =========================================
CREATE OR REPLACE FUNCTION public.get_daily_stats(p_date DATE DEFAULT CURRENT_DATE)
RETURNS TABLE(
    sucursal TEXT,
    total_ordenes INTEGER,
    total_ventas NUMERIC,
    primer_orden TIME,
    ultima_orden TIME,
    promedio_por_hora NUMERIC
)
LANGUAGE SQL STABLE
AS $$
    SELECT
        tfc.branch_key,
        COUNT(*)::INTEGER AS total_ordenes,
        SUM(tfc.total_price)::NUMERIC AS total_ventas,
        MIN(tfc.create_date::TIME) AS primer_orden,
        MAX(tfc.create_date::TIME) AS ultima_orden,
        ROUND(
            (COUNT(*)::NUMERIC /
            GREATEST(EXTRACT(EPOCH FROM (MAX(tfc.create_date) - MIN(tfc.create_date))) / 3600.0, 1))::NUMERIC,
            2
        ) AS promedio_por_hora
    FROM public.ticket_folio_complete tfc
    WHERE tfc.folio_date = p_date
    AND tfc.status_simple != 'CANCELADO'
    GROUP BY tfc.branch_key
    ORDER BY tfc.branch_key;
$$;
ALTER FUNCTION public.get_daily_stats(date) OWNER TO floreant;
-- =========================================
-- FASE 2.A) Backfill histÃ³rico (determinista, opcional)
-- =========================================
-- COMENTADO: Ejecutar manualmente despuÃ©s si es necesario, para evitar fallos
/*
WITH sub AS (
    SELECT
        t.id,
        COALESCE(UPPER(BTRIM(term.location)), 'DEFAULT') AS branch_key,
        DATE(t.create_date AT TIME ZONE 'America/Mexico_City') AS folio_date,
        ROW_NUMBER() OVER (
            PARTITION BY COALESCE(UPPER(BTRIM(term.location)), 'DEFAULT'),
                         DATE(t.create_date AT TIME ZONE 'America/Mexico_City')
            ORDER BY t.create_date ASC, t.id ASC
        ) AS row_num
    FROM public.ticket t
    LEFT JOIN public.terminal term ON t.terminal_id = term.id
    WHERE t.daily_folio IS NULL
)
UPDATE public.ticket t
SET
    folio_date = sub.folio_date,
    branch_key = sub.branch_key,
    daily_folio = sub.row_num
FROM sub
WHERE t.id = sub.id;
*/

-- =========================================
-- FASE 2.B) Reset smart multi-sucursal
-- =========================================
CREATE OR REPLACE FUNCTION public.reset_daily_folio_smart(p_branch TEXT DEFAULT NULL)
RETURNS TABLE(branch_reset TEXT, tickets_affected INTEGER)
LANGUAGE plpgsql
AS $$
DECLARE
    v_current_date DATE := CURRENT_DATE;
v_branch TEXT;
v_has_rows BOOLEAN;
BEGIN
    SELECT EXISTS (
        SELECT 1 FROM public.daily_folio_counter
        WHERE folio_date = v_current_date
        AND (p_branch IS NULL OR branch_key = UPPER(BTRIM(p_branch)))
    ) INTO v_has_rows;
IF NOT v_has_rows THEN
        branch_reset := 'none';
tickets_affected := 0;
RETURN NEXT;
RETURN;
END IF;
FOR v_branch IN
        SELECT DISTINCT
            CASE
                WHEN p_branch IS NULL THEN dfc.branch_key
                ELSE UPPER(BTRIM(p_branch))
            END
        FROM public.daily_folio_counter dfc
        WHERE dfc.folio_date = v_current_date
        AND (p_branch IS NULL OR dfc.branch_key = UPPER(BTRIM(p_branch)))
    LOOP
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE branch_key = v_branch
            AND folio_date = v_current_date
        ) THEN
            RAISE NOTICE 'ADVERTENCIA: Sucursal % ya tiene % tickets hoy - NO reseteable',
                v_branch,
                (SELECT COUNT(*) FROM public.ticket WHERE branch_key = v_branch AND folio_date = v_current_date);
CONTINUE;
END IF;
DELETE FROM public.daily_folio_counter
        WHERE branch_key = v_branch AND folio_date = v_current_date;
branch_reset := v_branch;
tickets_affected := 0;
RETURN NEXT;
END LOOP;
RETURN;
END
$$;
ALTER FUNCTION public.reset_daily_folio_smart(text) OWNER TO floreant;
-- =========================================
-- FASE 3) Ãndice Ãºnico parcial post-backfill
-- =========================================
DO $$
BEGIN
    DROP INDEX IF EXISTS public.ux_ticket_dailyfolio;
    CREATE UNIQUE INDEX ux_ticket_dailyfolio
    ON public.ticket (folio_date, branch_key, daily_folio)
    WHERE daily_folio IS NOT NULL;
END $$;
-- =========================================
-- Permisos
-- =========================================
GRANT SELECT, INSERT, UPDATE, DELETE ON public.daily_folio_counter TO floreant;
GRANT SELECT ON public.ticket_folio_complete, public.kds_orders_enhanced TO floreant;
GRANT EXECUTE ON FUNCTION public.assign_daily_folio() TO floreant;
GRANT EXECUTE ON FUNCTION public.get_daily_stats(date) TO floreant;
GRANT EXECUTE ON FUNCTION public.get_ticket_folio_info(integer) TO floreant;
GRANT EXECUTE ON FUNCTION public.reset_daily_folio_smart(text) TO floreant;
COMMIT;
-- =========================================
-- Post-Deploy: Normalizar branch_key
-- =========================================
UPDATE public.terminal SET location = UPPER(BTRIM(location)) WHERE location IS NOT NULL;
UPDATE public.ticket SET branch_key = UPPER(BTRIM(branch_key)) WHERE branch_key IS NOT NULL;
-- =========================================
-- Backfill Manual (Ejecutar si es necesario)
-- =========================================
/*
-- Ejecutar en batches si hay muchos tickets, e.g., por mes
WITH sub AS (
    SELECT
        t.id,
        COALESCE(UPPER(BTRIM(term.location)), 'DEFAULT') AS branch_key,
        DATE(t.create_date AT TIME ZONE 'America/Mexico_City') AS folio_date,
        ROW_NUMBER() OVER (
            PARTITION BY COALESCE(UPPER(BTRIM(term.location)), 'DEFAULT'),
                         DATE(t.create_date AT TIME ZONE 'America/Mexico_City')
            ORDER BY t.create_date ASC, t.id ASC
        ) AS row_num
    FROM public.ticket t
    LEFT JOIN public.terminal term ON t.terminal_id = term.id
    WHERE t.daily_folio IS NULL
    AND t.create_date BETWEEN '2025-01-01' AND '2025-01-31'
)
UPDATE public.ticket t
SET
    folio_date = sub.folio_date,
    branch_key = sub.branch_key,
    daily_folio = sub.row_num
FROM sub
WHERE t.id = sub.id;
-- 2. CREAR USUARIO DEDICADO
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'selemti_user') THEN
        CREATE USER selemti_user WITH PASSWORD 'selemti_password_2024';
        RAISE NOTICE 'Usuario selemti_user creado exitosamente';
    ELSE
        RAISE NOTICE 'Usuario selemti_user ya existe';
    END IF;
END
$$;
-- 3. OTORGAR PERMISOS
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT CREATE ON SCHEMA selemti TO selemti_user;
-- 4. PERMISOS DE LECTURA ENTRE ESQUEMAS
GRANT USAGE ON SCHEMA public TO selemti_user;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO selemti_user;
-- 5. CONFIGURAR SEARCH PATH
ALTER USER selemti_user SET search_path = 'selemti, public';
RAISE NOTICE 'Script 00 ejecutado exitosamente';
-- =====================================================
-- SCRIPT 01: TABLAS MAESTRAS BASE
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
COMMENT ON TABLE selemti.users IS 'Usuarios del sistema con sus credenciales y estado';
COMMENT ON TABLE selemti.user_roles IS 'AsignaciÃ³n de roles a usuarios (RBAC)';
COMMENT ON TABLE selemti.items IS 'Maestro de todos los Ã­tems del sistema (insumos, productos terminados, categorÃ­as, ubicaciones)';
COMMENT ON TABLE selemti.inventory_batch IS 'Control de lotes para trazabilidad APPCC';
COMMENT ON TABLE selemti.mov_inv IS 'Kardex - Libro mayor de inventario. Cada movimiento genera un registro aquÃ­';
COMMENT ON TABLE selemti.audit_log IS 'Registro completo de auditorÃ­a para cumplimiento APPCC y seguridad';
-- INSERTAR CÃ“DIGOS DE ERROR ESTÃNDAR
INSERT INTO selemti.error_codes VALUES 
('INV-001', 'BUSINESS', 'HIGH', 'Stock insuficiente para el Ã­tem %s. Stock actual: %s, requerido: %s', 'Intento de movimiento que causarÃ­a stock negativo', 'Verificar inventario fÃ­sico o recibir mercancÃ­a'),
('INV-002', 'BUSINESS', 'CRITICAL', 'Lote %s estÃ¡ bloqueado por motivo: %s', 'Intento de usar lote con estado BLOQUEADO o RECALL', 'Contactar al auditor APPCC para liberar el lote'),
('SEC-001', 'SECURITY', 'HIGH', 'Intento de acceso no autorizado al recurso %s por usuario %s', 'ViolaciÃ³n de control de acceso RBAC', 'Verificar asignaciÃ³n de roles y permisos');
RAISE NOTICE 'Script 01 (Tablas maestras) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 02: MÃ“DULO DE INVENTARIO (8 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA INVENTARIO
CREATE SEQUENCE selemti.recepcion_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.traspaso_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.ajuste_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.conteo_daily_seq START WITH 1 INCREMENT BY 1;
RAISE NOTICE 'Script 02 (MÃ³dulo Inventario - 8 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 03: MÃ“DULO DE RECETAS/PRODUCCIÃ“N (6 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA RECETAS/PRODUCCIÃ“N
CREATE SEQUENCE selemti.op_daily_seq START WITH 1 INCREMENT BY 1;
COMMENT ON TABLE selemti.receta_cab IS 'Maestro de recetas/platos del menÃº del restaurante';
COMMENT ON TABLE selemti.receta_det IS 'Detalle de ingredientes y sub-recetas que componen una receta';
RAISE NOTICE 'Script 03 (MÃ³dulo Recetas - 6 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 04: MÃ“DULO DE VENTAS/KDS (5 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR ESTACIONES POR DEFECTO
INSERT INTO selemti.kds_estaciones VALUES 
('COCINA_CALIENTE', 'Cocina Caliente', 'PreparaciÃ³n de platos que requieren cocciÃ³n', 'Ãrea principal cocina', NULL, 10, 15, true, NULL, NOW(), NOW()),
('COCINA_FRIA', 'Cocina FrÃ­a', 'PreparaciÃ³n de ensaladas y entradas frÃ­as', 'Ãrea refrigerada cocina', NULL, 8, 10, true, NULL, NOW(), NOW()),
('BARRA', 'Barra', 'PreparaciÃ³n de bebidas y cocteles', 'Barra principal', NULL, 12, 8, true, NULL, NOW(), NOW()),
('POSTRES', 'Postres', 'PreparaciÃ³n de postres y dulces', 'Ãrea postres', NULL, 6, 12, true, NULL, NOW(), NOW()),
('PANADERIA', 'PanaderÃ­a', 'PreparaciÃ³n de pan y reposterÃ­a', 'Ãrea hornos', NULL, 5, 20, true, NULL, NOW(), NOW());
RAISE NOTICE 'Script 04 (MÃ³dulo Ventas/KDS - 5 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 05: MÃ“DULO DE CAJA (3 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
RAISE NOTICE 'Script 05 (MÃ³dulo Caja - 3 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 06: MÃ“DULO APPCC (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR PUNTOS DE CONTROL APPCC BÃSICOS
INSERT INTO selemti.appcc_puntos_control VALUES 
(1, 'PCC-RECEP-001', 'RecepciÃ³n Productos Perecederos', 'RECEPCION', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control de temperatura', 'Temperatura <= 4Â°C para productos refrigerados', 'CADA LOTE', 'Personal AlmacÃ©n', 'Rechazar lote y notificar al proveedor', true, 1, NOW(), NULL, NOW(), NOW()),
(2, 'PCC-ALM-001', 'Almacenamiento Refrigerado', 'ALMACENAMIENTO', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control temperatura neveras', 'Temperatura entre 0Â°C y 4Â°C', 'CADA 4 HORAS', 'Personal Cocina', 'Ajustar temperatura y verificar productos', true, 1, NOW(), NULL, NOW(), NOW()),
(3, 'PCC-COC-001', 'CocciÃ³n de Alimentos', 'COCCION', 'Supervivencia de microorganismos', 'BIOLOGICO', 'Control temperatura interna', 'Temperatura interna >= 75Â°C por 2 minutos', 'CADA BATCH', 'Chef', 'Extender tiempo de cocciÃ³n', true, 1, NOW(), NULL, NOW(), NOW());
RAISE NOTICE 'Script 06 (MÃ³dulo APPCC - 4 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 07: MÃ“DULO DE CONFIGURACIÃ“N (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR PARÃMETROS CRÃTICOS DEL SISTEMA
INSERT INTO selemti.parametros_sistema VALUES 
(1, 'INV_TOLERANCIA_DIFERENCIA', 'Tolerancia para diferencias de inventario', '0.05', 'NUMERICO', 'INVENTARIO', 'Tolerancia permitida para diferencias en conteos fÃ­sicos (5%)', '0.05', true, false, NULL, NOW(), NOW()),
(2, 'CAJA_TOLERANCIA_EFECTIVO', 'Tolerancia para diferencias de efectivo', '50.00', 'NUMERICO', 'CAJA', 'Tolerancia en pesos para diferencias de caja sin requerir aprobaciÃ³n', '50.00', true, false, NULL, NOW(), NOW()),
(3, 'APPCC_FRECUENCIA_MONITOREO', 'Frecuencia de monitoreo APPCC', '4', 'NUMERICO', 'APPCC', 'Horas entre monitoreos de puntos crÃ­ticos', '4', true, true, NULL, NOW(), NOW()),
(4, 'KDS_TIEMPO_MAX_PREPARACION', 'Tiempo mÃ¡ximo de preparaciÃ³n', '30', 'NUMERICO', 'VENTAS', 'Tiempo mÃ¡ximo en minutos para preparaciÃ³n de platos', '30', true, false, NULL, NOW(), NOW()),
(5, 'SISTEMA_MODO_MANTENIMIENTO', 'Modo mantenimiento del sistema', 'false', 'BOOLEANO', 'GENERAL', 'Activa el modo mantenimiento del sistema', 'false', true, true, NULL, NOW(), NOW()),
(6, 'INV_POLITICA_CONSUMO', 'PolÃ­tica de consumo de inventario', 'FEFO', 'TEXTO', 'INVENTARIO', 'PolÃ­tica por defecto para consumo de inventario (FEFO/PEPS)', 'FEFO', true, false, NULL, NOW(), NOW());
-- INSERTAR UBICACIONES BÃSICAS
INSERT INTO selemti.ubicaciones VALUES 
('UBIC-BODEGA1', 'Bodega Principal', 'BODEGA', 'SUR', 18.0, 1000.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-REFRIG1', 'Refrigerador Carnes', 'REFRIGERADOR', 'SUR', 4.0, 200.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-CONGEL1', 'Congelador Pescados', 'CONGELADOR', 'SUR', -18.0, 150.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-BARRA', 'Barra Principal', 'BARRA', 'SUR', 8.0, 50.0, NULL, true, NULL, NOW(), Now());
-- INSERTAR CATEGORÃAS BÃSICAS
INSERT INTO selemti.categorias_items VALUES 
('CAT-PROTEINA', 'ProteÃ­nas', 'Carnes, pescados, aves', 'INSUMO', NULL, '1101', 5.0, 7, true, NOW(), NOW()),
('CAT-LACTEO', 'LÃ¡cteos', 'Leche, queso, yogurt', 'INSUMO', NULL, '1102', 3.0, 10, true, NOW(), NOW()),
('CAT-VERDURA', 'Verduras', 'Verduras frescas', 'INSUMO', NULL, '1103', 8.0, 5, true, NOW(), NOW()),
('CAT-BEBIDA', 'Bebidas', 'Refrescos, jugos, agua', 'INSUMO', NULL, '1104', 1.0, 30, true, NOW(), NOW()),
('CAT-MENU', 'Platos del MenÃº', 'Productos terminados para venta', 'PRODUCTO_TERMINADO', NULL, '2101', 2.0, 1, true, NOW(), NOW());
RAISE NOTICE 'Script 07 (MÃ³dulo ConfiguraciÃ³n - 4 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 08: DATOS INICIALES DEL SISTEMA
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- 1. CREAR USUARIO ADMINISTRADOR INICIAL
INSERT INTO selemti.users (username, password_hash, email, nombre_completo, sucursal_id, activo) VALUES 
('admin', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'admin@restaurante.com', 'Administrador del Sistema', 'SUR', true);
-- 2. ASIGNAR ROLES AL ADMINISTRADOR
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(1, 'GERENTE', 1),
(1, 'CHEF', 1),
(1, 'ALMACEN', 1),
(1, 'CAJERO', 1),
(1, 'AUDITOR', 1);
-- 3. CREAR USUARIOS DE EJEMPLO POR ROL
INSERT INTO selemti.users (username, password_hash, nombre_completo, sucursal_id, activo) VALUES 
('chef.juan', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Juan PÃ©rez - Chef', 'SUR', true),
('almacen.maria', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'MarÃ­a GarcÃ­a - AlmacÃ©n', 'SUR', true),
('caja.carlos', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Carlos LÃ³pez - Cajero', 'SUR', true);
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(2, 'CHEF', 1),
(3, 'ALMACEN', 1),
(4, 'CAJERO', 1);
-- 4. INSERTAR ÃTEMS DE EJEMPLO (MATERIAS PRIMAS)
INSERT INTO selemti.items (id, nombre, categoria_id, unidad_medida, perishable, temperatura_min, temperatura_max) VALUES 
('PROT-POLLO-PECHUGA-1KG', 'Pechuga de Pollo', 'CAT-PROTEINA', 'KG', true, 0, 4),
('PROT-SALMON-FRESCO-1KG', 'SalmÃ³n Fresco', 'CAT-PROTEINA', 'KG', true, -2, 2),
('VERD-LECHUGA-ROMA-1KG', 'Lechuga Romana', 'CAT-VERDURA', 'KG', true, 1, 4),
('VERD-TOMATE-ROJO-1KG', 'Tomate Rojo', 'CAT-VERDURA', 'KG', true, 10, 15),
('LACT-QUESO-MOZZARELLA-1KG', 'Queso Mozzarella', 'CAT-LACTEO', 'KG', true, 2, 6),
('BEBID-AGUA-1LT', 'Agua Purificada', 'CAT-BEBIDA', 'LT', false, NULL, NULL);
-- 5. INSERTAR RECETAS DE EJEMPLO
INSERT INTO selemti.receta_cab (id, codigo_plato_pos, nombre_plato, categoria_cocina, tipo_preparacion, tiempo_preparacion_min, rendimiento_porciones, nivel_dificultad, activo, usuario_creador, costo_standard_porcion, precio_venta_sugerido) VALUES 
('REC-CEVICHE-CLASICO', 'CEV-001', 'Ceviche ClÃ¡sico', 'PLATO_FUERTE', 'FRIA', 20, 4, 'MEDIA', true, 1, 45.00, 180.00),
('REC-ENSALADA-CESAR', 'ENS-001', 'Ensalada CÃ©sar', 'ENTRADA', 'FRIA', 15, 2, 'BAJA', true, 1, 35.00, 120.00);
-- 6. INSERTAR DETALLES DE RECETAS
INSERT INTO selemti.receta_det (receta_id, item_id, tipo_componente, cantidad_bruta, porcentaje_merma, cantidad_neta, orden_mezcla, tipo_medida) VALUES 
('REC-CEVICHE-CLASICO', 'PROT-SALMON-FRESCO-1KG', 'INGREDIENTE', 0.500, 10.00, 0.450, 1, 'PESO'),
('REC-CEVICHE-CLASICO', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.200, 5.00, 0.190, 2, 'PESO'),
('REC-ENSALADA-CESAR', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.300, 5.00, 0.285, 1, 'PESO'),
('REC-ENSALADA-CESAR', 'LACT-QUESO-MOZZARELLA-1KG', 'INGREDIENTE', 0.100, 2.00, 0.098, 2, 'PESO');
-- 7. ACTUALIZAR FOREIGN KEYS PENDIENTES
-- Actualizar recepcion_cab con referencia a proveedores
UPDATE selemti.recepcion_cab SET proveedor_id = 'PROV-CARNICOS-LA-PALMA' WHERE proveedor_id IS NOT NULL;
-- 8. CREAR PROVEEDORES DE EJEMPLO
INSERT INTO selemti.proveedores (codigo, nombre, tipo_proveedor, categoria_calidad, activo) VALUES 
('PROV-CARNICOS-LA-PALMA', 'CÃ¡rnicos La Palma', 'ALIMENTOS', 'A', true),
('PROV-PESCADOS-FRESCOS', 'Pescados Frescos del PacÃ­fico', 'ALIMENTOS', 'A', true),
('PROV-HORTALIZAS-ORGANICAS', 'Hortalizas OrgÃ¡nicas', 'ALIMENTOS', 'B', true);
RAISE NOTICE 'Script 08 (Datos iniciales) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 09: ÃNDICES DE OPTIMIZACIÃ“N
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- VISTAS PARA CONSULTAS FRECUENTES
CREATE OR REPLACE VIEW selemti.v_stock_actual AS
SELECT 
    item_id,
    ubicacion_id,
    SUM(CASE WHEN tipo_movimiento = 'E' THEN cantidad ELSE -cantidad END) as stock_actual
FROM selemti.mov_inv
GROUP BY item_id, ubicacion_id;
CREATE OR REPLACE VIEW selemti.v_stock_por_lote_fefo AS
SELECT 
    b.item_id,
    b.id as batch_id,
    b.lote_proveedor,
    b.fecha_caducidad,
    b.ubicacion_id,
    b.cantidad_actual as stock_lote,
    b.estado
FROM selemti.inventory_batch b
WHERE b.estado = 'ACTIVO' 
AND b.cantidad_actual > 0
ORDER BY b.fecha_caducidad ASC;
RAISE NOTICE 'Script 09 (Ãndices de optimizaciÃ³n) ejecutado exitosamente';
RAISE NOTICE 'âœ… ESQUEMA SELETI COMPLETADO - 30 TABLAS CREADAS';
\n-- END Full_Recetas.sql\n
\n-- BEGIN Full_Recetas_V2.sql\n
-- =====================================================================
-- Script Fusionado: Full_Recetas.sql + RediseÃ±o Trazabilidad/Reprocesamiento
-- Fecha: September 25, 2025
-- Base: PostgreSQL 9.5+ (compatible con migraciÃ³n a 16)
-- Idempotente: SÃ­
-- Ejecutar en orden;
-- 2. CREAR USUARIO DEDICADO
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'selemti_user') THEN
        CREATE USER selemti_user WITH PASSWORD 'selemti_password_2024';
        RAISE NOTICE 'Usuario selemti_user creado exitosamente';
    ELSE
        RAISE NOTICE 'Usuario selemti_user ya existe';
    END IF;
END
$$;
-- 3. OTORGAR PERMISOS
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT CREATE ON SCHEMA selemti TO selemti_user;
-- 4. PERMISOS DE LECTURA ENTRE ESQUEMAS
GRANT USAGE ON SCHEMA public TO selemti_user;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO selemti_user;
-- 5. CONFIGURAR SEARCH PATH
ALTER USER selemti_user SET search_path = 'selemti, public';
RAISE NOTICE 'Script 00 ejecutado exitosamente';
-- =====================================================
-- SCRIPT 01: TABLAS MAESTRAS BASE
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
COMMENT ON TABLE selemti.users IS 'Usuarios del sistema con sus credenciales y estado';
COMMENT ON TABLE selemti.user_roles IS 'AsignaciÃ³n de roles a usuarios (RBAC)';
COMMENT ON TABLE selemti.items IS 'Maestro de todos los Ã­tems del sistema (insumos, productos terminados, categorÃ­as, ubicaciones)';
COMMENT ON TABLE selemti.inventory_batch IS 'Lotes de inventario con trazabilidad completa';
CREATE OR REPLACE VIEW selemti.v_stock_actual AS
-- ... (resto de vistas)

RAISE NOTICE 'Full_Recetas.sql ejecutado exitosamente';
INSERT INTO selemti.unidades_medida (codigo, nombre, tipo, categoria, es_base, factor_conversion_base, decimales)
VALUES 
('GR', 'Gramo', 'PESO', 'METRICO', true, 1.0, 2),
('KG', 'Kilogramo', 'PESO', 'METRICO', false, 1000.0, 2),
('ML', 'Mililitro', 'VOLUMEN', 'METRICO', true, 1.0, 2),
('LT', 'Litro', 'VOLUMEN', 'METRICO', false, 1000.0, 2),
('PZ', 'Pieza', 'UNIDAD', 'CULINARIO', true, 1.0, 0),
('OZ', 'Onza', 'PESO', 'IMPERIAL', false, 28.3495, 2),
('LB', 'Libra', 'PESO', 'IMPERIAL', false, 453.592, 2)
ON CONFLICT (codigo) DO NOTHING;
-- MigraciÃ³n para Items (de UOM antigua VARCHAR a nueva ID)
ALTER TABLE selemti.items 
ADD COLUMN IF NOT EXISTS unidad_medida_id INTEGER REFERENCES selemti.unidades_medida(id),
ADD COLUMN IF NOT EXISTS factor_conversion NUMERIC(12,6) DEFAULT 1.0,
ADD COLUMN IF NOT EXISTS unidad_compra_id INTEGER REFERENCES selemti.unidades_medida(id),
ADD COLUMN IF NOT EXISTS factor_compra NUMERIC(12,6) DEFAULT 1.0;
-- Ejemplo migraciÃ³n datos existentes (ejecutar manualmente si aplica)
-- UPDATE selemti.items SET unidad_medida_id = (SELECT id FROM selemti.unidades_medida WHERE codigo = UPPER(unidad_medida)) WHERE unidad_medida_id IS NULL;
CREATE OR REPLACE VIEW selemti.v_items_con_unidades AS
SELECT 
    i.*,
    um.codigo as unidad_codigo,
    um.nombre as unidad_nombre,
    um.tipo as unidad_tipo,
    uc.codigo as unidad_compra_codigo,
    (i.factor_compra / i.factor_conversion) as factor_compra_a_uso
FROM selemti.items i
LEFT JOIN selemti.unidades_medida um ON i.unidad_medida_id = um.id
LEFT JOIN selemti.unidades_medida uc ON i.unidad_compra_id = uc.id;
CREATE INDEX IF NOT EXISTS idx_historial_costos_version ON selemti.historial_costos_item(version_datos);
ALTER TABLE selemti.ticket_venta_det 
ADD COLUMN IF NOT EXISTS receta_shadow_id INTEGER REFERENCES selemti.receta_shadow(id),
ADD COLUMN IF NOT EXISTS reprocesado BOOLEAN DEFAULT FALSE,
ADD COLUMN IF NOT EXISTS version_reproceso INTEGER DEFAULT 1;
ALTER TABLE selemti.ticket_venta_det ADD COLUMN IF NOT EXISTS modificadores_aplicados JSONB;
-- 8) Funciones de Reprocesamiento
CREATE OR REPLACE FUNCTION selemti.reprocesar_costos_historicos(
    p_fecha_desde DATE,
    p_fecha_hasta DATE DEFAULT NULL,
    p_algoritmo VARCHAR(10) DEFAULT 'WAC',
    p_usuario_id INTEGER DEFAULT 1
) RETURNS INTEGER AS $$
DECLARE
    v_lote_id INTEGER;
v_total_actualizados INTEGER := 0;
v_item_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
INSERT INTO selemti.job_recalc_queue (
        scope_type, scope_from, scope_to, reason, status
    ) VALUES (
        'PERIODO', p_fecha_desde, p_fecha_hasta, 'Reproceso costos ' || p_algoritmo, 'RUNNING'
    ) RETURNING id INTO v_lote_id;
FOR v_item_record IN 
        SELECT DISTINCT item_id 
        FROM selemti.mov_inv 
        WHERE ts BETWEEN p_fecha_desde AND p_fecha_hasta
    LOOP
        UPDATE selemti.historial_costos_item
        SET costo_wac = (SELECT AVG(costo_unit * qty_canonica) / SUM(qty_canonica) 
                         FROM selemti.mov_inv 
                         WHERE item_id = v_item_record.item_id AND ts BETWEEN p_fecha_desde AND p_fecha_hasta AND tipo IN ('COMPRA', 'RECEPCION'))
        WHERE item_id = v_item_record.item_id AND fecha_efectiva BETWEEN p_fecha_desde AND p_fecha_hasta;
v_total_actualizados := v_total_actualizados + 1;
END LOOP;
UPDATE selemti.job_recalc_queue 
    SET status = 'DONE', result = jsonb_build_object('actualizados', v_total_actualizados)
    WHERE id = v_lote_id;
RETURN v_total_actualizados;
EXCEPTION
    WHEN OTHERS THEN
        UPDATE selemti.job_recalc_queue SET status = 'FAILED', result = jsonb_build_object('error', SQLERRM) WHERE id = v_lote_id;
RAISE;
END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION selemti.inferir_recetas_de_ventas(
    p_fecha_desde DATE,
    p_fecha_hasta DATE DEFAULT NULL
) RETURNS INTEGER AS $$
DECLARE
    v_recetas_inferidas INTEGER := 0;
v_plato_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
FOR v_plato_record IN 
        SELECT DISTINCT td.item_id, COUNT(*) as total_ventas
        FROM selemti.ticket_venta_det td
        JOIN selemti.ticket_venta_cab tc ON td.ticket_id = tc.id
        WHERE tc.fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta
          AND td.receta_shadow_id IS NULL
        GROUP BY td.item_id
        HAVING COUNT(*) >= 5
    LOOP
        INSERT INTO selemti.receta_shadow (codigo_plato_pos, nombre_plato, total_ventas_analizadas, fecha_primer_venta, fecha_ultima_venta)
        VALUES (v_plato_record.item_id, 'Inferida_' || v_plato_record.item_id, v_plato_record.total_ventas, p_fecha_desde, p_fecha_hasta)
        RETURNING id INTO v_recetas_inferidas;
UPDATE selemti.ticket_venta_det
        SET receta_shadow_id = v_recetas_inferidas, reprocesado = TRUE, version_reproceso = 1
        WHERE item_id = v_plato_record.item_id
          AND ticket_id IN (SELECT id FROM selemti.ticket_venta_cab WHERE fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta);
v_recetas_inferidas := v_recetas_inferidas + 1;
END LOOP;
RETURN v_recetas_inferidas;
END;
$$ LANGUAGE plpgsql;
-- 9) Vistas para IngenierÃ­a de MenÃº
CREATE OR REPLACE VIEW selemti.v_ingenieria_menu_completa AS
SELECT 
    rc.id as receta_id,
    rc.nombre_plato,
    rc.codigo_plato_pos,
    rc.precio_venta_sugerido,
    rc.costo_standard_porcion as costo_actual,
    (rc.precio_venta_sugerido - rc.costo_standard_porcion) as margen_actual,
    (SELECT AVG(hcr.costo_porcion) 
     FROM selemti.historial_costos_receta hcr
     WHERE hcr.receta_version_id = rv.id
     AND hcr.fecha_calculo >= CURRENT_DATE - INTERVAL '30 days') as costo_promedio_30d,
    (SELECT COUNT(*) 
     FROM selemti.ticket_venta_det td
     JOIN selemti.ticket_venta_cab tc ON td.ticket_id = tc.id
     WHERE td.item_id = rc.id
     AND tc.fecha_venta >= CURRENT_DATE - INTERVAL '30 days') as ventas_ultimos_30d,
    CASE WHEN rc.precio_venta_sugerido > 0 THEN 
        (rc.precio_venta_sugerido - rc.costo_standard_porcion) / rc.precio_venta_sugerido * 100 ELSE 0 END as porcentaje_margen,
    rc.costo_standard_porcion > (rc.precio_venta_sugerido * 0.4) as alerta_costo_alto,
    (SELECT COUNT(*) FROM selemti.ticket_venta_det td WHERE td.item_id = rc.id) = 0 as alerta_sin_ventas
FROM selemti.receta_cab rc
JOIN selemti.receta_version rv ON rc.id = rv.receta_id AND rv.version_publicada = true
WHERE rc.activo = true;
-- Fin del Script Fusionado. Ejecuta y verifica con SELECT * FROM pg_tables WHERE schemaname = 'selemti';
RAISE NOTICE 'Script fusionado ejecutado exitosamente';
\n-- END Full_Recetas_V2.sql\n
\n-- BEGIN Local_Recetas_25_09_2025.sql\n
--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.0
-- Dumped by pg_dump version 9.5.0

-- Started on 2025-09-26 03:31:50

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
DROP DATABASE pos;
--
-- TOC entry 4145 (class 1262 OID 67811)
-- Name: pos;
Type: DATABASE;
Schema: -;
Owner: floreant
--

CREATE DATABASE pos WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'Spanish_Mexico.1252' LC_CTYPE = 'Spanish_Mexico.1252';
ALTER DATABASE pos OWNER TO floreant;
\connect pos

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
--
-- TOC entry 7 (class 2615 OID 2200)
-- Name: public;
Type: SCHEMA;
Schema: -;
Owner: postgres
--

CREATE SCHEMA public;
ALTER SCHEMA public OWNER TO postgres;
--
-- TOC entry 4146 (class 0 OID 0)
-- Dependencies: 7
-- Name: SCHEMA public;
Type: COMMENT;
Schema: -;
Owner: postgres
--

COMMENT ON SCHEMA public IS 'standard public schema';
--
-- TOC entry 6 (class 2615 OID 67812)
-- Name: selemti;
Type: SCHEMA;
Schema: -;
ALTER SCHEMA selemti OWNER TO floreant;
--
-- TOC entry 455 (class 3079 OID 12355)
-- Name: plpgsql;
Type: EXTENSION;
Schema: -;
Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;
--
-- TOC entry 4149 (class 0 OID 0)
-- Dependencies: 455
-- Name: EXTENSION plpgsql;
Type: COMMENT;
Schema: -;
Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';
SET search_path = selemti, pg_catalog;
--
-- TOC entry 1474 (class 1247 OID 77525)
-- Name: consumo_policy;
Type: TYPE;
Schema: selemti;
Owner: postgres
--

CREATE TYPE consumo_policy AS ENUM (
    'FEFO',
    'PEPS'
);
ALTER TYPE consumo_policy OWNER TO postgres;
--
-- TOC entry 1492 (class 1247 OID 77583)
-- Name: merma_clase;
Type: TYPE;
Schema: selemti;
Owner: postgres
--

CREATE TYPE merma_clase AS ENUM (
    'MERMA',
    'DESPERDICIO'
);
ALTER TYPE merma_clase OWNER TO postgres;
--
-- TOC entry 1471 (class 1247 OID 77513)
-- Name: producto_tipo;
Type: TYPE;
Schema: selemti;
Owner: postgres
--

CREATE TYPE producto_tipo AS ENUM (
    'MATERIA_PRIMA',
    'ELABORADO',
    'ENVASADO'
);
ALTER TYPE producto_tipo OWNER TO postgres;
SET search_path = public, pg_catalog;
--
-- TOC entry 456 (class 1255 OID 67813)
-- Name: _last_assign_window(integer, integer, timestamp with time zone);
Type: FUNCTION;
Schema: public;
Owner: postgres
--

CREATE FUNCTION _last_assign_window(_terminal_id integer, _user_id integer, _ref_time timestamp with time zone) RETURNS TABLE(from_ts timestamp with time zone, to_ts timestamp with time zone)
    LANGUAGE sql STABLE
    AS '
WITH ev AS (
    SELECT
        dah."time" AS event_time,
        dah.operation AS action,
        LAG(dah."time") OVER (PARTITION BY dah.a_user ORDER BY dah."time") AS prev_event
    FROM public.drawer_assigned_history dah
    WHERE dah.a_user = _user_id
      AND dah."time" <= _ref_time
)
SELECT
    COALESCE(prev_event, _ref_time - INTERVAL ''24 hours'')::timestamptz AS from_ts,
    event_time::timestamptz AS to_ts
FROM ev
WHERE action IN (''ASIGNAR'',''ASSIGN'',''OPEN'',''CERRAR'',''CLOSE'',''LIBERAR'',''UNASSIGN'')
ORDER BY event_time DESC
LIMIT 1;
';
ALTER FUNCTION public._last_assign_window(_terminal_id integer, _user_id integer, _ref_time timestamp with time zone) OWNER TO postgres;
--
-- TOC entry 470 (class 1255 OID 67814)
-- Name: assign_daily_folio();
Type: FUNCTION;
Schema: public;
Owner: floreant
--

CREATE FUNCTION assign_daily_folio() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
    v_branch   TEXT;
v_date     DATE;
v_next     INTEGER;
BEGIN
    IF NEW.terminal_id IS NULL THEN
        RAISE EXCEPTION ''No se puede crear ticket sin terminal_id'';
END IF;
IF NEW.create_date IS NULL THEN
        NEW.create_date := NOW();
END IF;
v_date := (NEW.create_date AT TIME ZONE ''America/Mexico_City'')::DATE;
SELECT COALESCE(NULLIF(UPPER(BTRIM(t.location)), ''''), '''') INTO v_branch
    FROM public.terminal t
    WHERE t.id = NEW.terminal_id;
IF NOT FOUND THEN
        RAISE EXCEPTION ''Terminal % no existe en la base de datos'', NEW.terminal_id;
END IF;
IF NEW.daily_folio IS NOT NULL AND NEW.folio_date IS NOT NULL AND NEW.branch_key IS NOT NULL THEN
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE folio_date = NEW.folio_date
            AND branch_key = NEW.branch_key
            AND daily_folio = NEW.daily_folio
            AND id != NEW.id
        ) THEN
            RAISE EXCEPTION ''Folio % ya existe para % en %'', NEW.daily_folio, NEW.branch_key, NEW.folio_date;
END IF;
RETURN NEW;
END IF;
WITH up AS (
        INSERT INTO public.daily_folio_counter (folio_date, branch_key, last_value)
        VALUES (v_date, v_branch, 1)
        ON CONFLICT (folio_date, branch_key)
        DO UPDATE SET last_value = public.daily_folio_counter.last_value + 1
        RETURNING last_value
    )
    SELECT last_value INTO v_next FROM up;
NEW.folio_date := v_date;
NEW.branch_key := v_branch;
NEW.daily_folio := v_next;
RETURN NEW;
END
';
ALTER FUNCTION public.assign_daily_folio() OWNER TO floreant;
--
-- TOC entry 482 (class 1255 OID 69478)
-- Name: fn_correct_drawer_report(date);
Type: FUNCTION;
Schema: public;
Owner: postgres
--

CREATE FUNCTION fn_correct_drawer_report(report_date date) RETURNS TABLE(terminal_id integer, original_total_revenue numeric, corrected_neto_tickets numeric, adjustment numeric)
    LANGUAGE plpgsql
    AS '
BEGIN
  RETURN QUERY
  SELECT 
    dr.terminal_id,
    dr.total_revenue::numeric(12,2) AS original_total_revenue,
    SUM(t.total_price - t.total_discount)::numeric(12,2) AS corrected_neto_tickets,
    (SUM(t.total_price - t.total_discount) - dr.total_revenue)::numeric(12,2) AS adjustment
  FROM public.drawer_pull_report dr
  JOIN public.ticket t
    ON t.terminal_id = dr.terminal_id
   AND t.closing_date::date = dr.report_time::date
  WHERE dr.report_time::date = report_date
    AND t.paid=TRUE AND t.voided=FALSE
  GROUP BY dr.terminal_id, dr.total_revenue;
END';
ALTER FUNCTION public.fn_correct_drawer_report(report_date date) OWNER TO postgres;
--
-- TOC entry 483 (class 1255 OID 69476)
-- Name: fn_daily_reconciliation(date);
Type: FUNCTION;
Schema: public;
Owner: postgres
--

CREATE FUNCTION fn_daily_reconciliation(report_date date) RETURNS TABLE(terminal_id integer, tickets_count integer, transactions_count integer, ticket_net_total numeric, transactions_total numeric, difference numeric, status text)
    LANGUAGE plpgsql
    AS '
BEGIN
  RETURN QUERY
  SELECT 
    t.terminal_id,
    COUNT(DISTINCT t.id) AS tickets_count,
    COUNT(tx.id) FILTER (
      WHERE tx.voided=FALSE 
        AND tx.transaction_type=''CREDIT''
        AND tx.payment_type NOT IN (''REFUND'',''VOID_TRANS'')
    ) AS transactions_count,
    SUM(t.total_price - t.total_discount)::numeric(12,2) AS ticket_net_total,
    SUM(CASE 
          WHEN tx.voided=FALSE 
           AND tx.transaction_type=''CREDIT''
           AND tx.payment_type NOT IN (''REFUND'',''VOID_TRANS'')
          THEN tx.amount ELSE 0 END
    )::numeric(12,2) AS transactions_total,
    (SUM(CASE 
           WHEN tx.voided=FALSE 
            AND tx.transaction_type=''CREDIT''
            AND tx.payment_type NOT IN (''REFUND'',''VOID_TRANS'')
           THEN tx.amount ELSE 0 END
     ) - SUM(t.total_price - t.total_discount)
    )::numeric(12,2) AS difference,
    CASE 
      WHEN SUM(CASE 
                 WHEN tx.voided=FALSE 
                  AND tx.transaction_type=''CREDIT''
                  AND tx.payment_type NOT IN (''REFUND'',''VOID_TRANS'')
                 THEN tx.amount ELSE 0 END
           ) = SUM(t.total_price - t.total_discount)
      THEN ''OK'' ELSE ''DISCREPANCY'' END AS status
  FROM public.ticket t
  LEFT JOIN public.transactions tx ON tx.ticket_id = t.id
  WHERE t.closing_date::date = report_date
    AND t.paid = TRUE
    AND t.voided = FALSE
  GROUP BY t.terminal_id;
END';
ALTER FUNCTION public.fn_daily_reconciliation(report_date date) OWNER TO postgres;
--
-- TOC entry 481 (class 1255 OID 69477)
-- Name: fn_reconciliation_detail(date);
Type: FUNCTION;
Schema: public;
Owner: postgres
--

CREATE FUNCTION fn_reconciliation_detail(report_date date) RETURNS TABLE(ticket_id integer, terminal_id integer, ticket_number integer, ticket_total numeric, ticket_discount numeric, ticket_neto numeric, transactions_sum numeric, discrepancy numeric, discrepancy_type text)
    LANGUAGE plpgsql
    AS '
BEGIN
  RETURN QUERY
  SELECT 
    t.id,
    t.terminal_id,
    t.daily_folio,
    t.total_price::numeric(12,2),
    t.total_discount::numeric(12,2),
    (t.total_price - t.total_discount)::numeric(12,2) AS ticket_neto,
    COALESCE(SUM(CASE 
                   WHEN tx.voided=FALSE 
                    AND tx.transaction_type=''CREDIT'' 
                    AND tx.payment_type NOT IN (''REFUND'',''VOID_TRANS'')
                   THEN tx.amount END),0)::numeric(12,2) AS transactions_sum,
    (COALESCE(SUM(CASE 
                    WHEN tx.voided=FALSE 
                     AND tx.transaction_type=''CREDIT'' 
                     AND tx.payment_type NOT IN (''REFUND'',''VOID_TRANS'')
                    THEN tx.amount END),0)
     - (t.total_price - t.total_discount)
    )::numeric(12,2) AS discrepancy,
    CASE 
      WHEN COALESCE(SUM(CASE 
                          WHEN tx.voided=FALSE 
                           AND tx.transaction_type=''CREDIT'' 
                           AND tx.payment_type NOT IN (''REFUND'',''VOID_TRANS'')
                          THEN tx.amount END),0) 
           > (t.total_price - t.total_discount) THEN ''OVERSTATED''
      WHEN COALESCE(SUM(CASE 
                          WHEN tx.voided=FALSE 
                           AND tx.transaction_type=''CREDIT'' 
                           AND tx.payment_type NOT IN (''REFUND'',''VOID_TRANS'')
                          THEN tx.amount END),0) 
           < (t.total_price - t.total_discount) THEN ''UNDERSTATED''
      ELSE ''OK'' END AS discrepancy_type
  FROM public.ticket t
  LEFT JOIN public.transactions tx ON tx.ticket_id = t.id
  WHERE t.closing_date::date = report_date
    AND t.paid=TRUE AND t.voided=FALSE
  GROUP BY t.id, t.terminal_id, t.daily_folio, t.total_price, t.total_discount
  HAVING COALESCE(SUM(CASE 
                        WHEN tx.voided=FALSE 
                         AND tx.transaction_type=''CREDIT'' 
                         AND tx.payment_type NOT IN (''REFUND'',''VOID_TRANS'')
                        THEN tx.amount END),0) 
         <> (t.total_price - t.total_discount)
  ORDER BY ABS(
    COALESCE(SUM(CASE 
                   WHEN tx.voided=FALSE 
                    AND tx.transaction_type=''CREDIT'' 
                    AND tx.payment_type NOT IN (''REFUND'',''VOID_TRANS'')
                   THEN tx.amount END),0) 
    - (t.total_price - t.total_discount)
  ) DESC;
END';
ALTER FUNCTION public.fn_reconciliation_detail(report_date date) OWNER TO postgres;
--
-- TOC entry 471 (class 1255 OID 67815)
-- Name: get_daily_stats(date);
Type: FUNCTION;
Schema: public;
Owner: floreant
--

CREATE FUNCTION get_daily_stats(p_date date DEFAULT ('now'::text)::date) RETURNS TABLE(sucursal text, total_ordenes integer, total_ventas numeric, primer_orden time without time zone, ultima_orden time without time zone, promedio_por_hora numeric)
    LANGUAGE sql STABLE
    AS '
    SELECT
        tfc.branch_key,
        COUNT(*)::INTEGER AS total_ordenes,
        SUM(tfc.total_price)::NUMERIC AS total_ventas,
        MIN(tfc.create_date::TIME) AS primer_orden,
        MAX(tfc.create_date::TIME) AS ultima_orden,
        ROUND(
            (COUNT(*)::NUMERIC /
            GREATEST(EXTRACT(EPOCH FROM (MAX(tfc.create_date) - MIN(tfc.create_date))) / 3600.0, 1))::NUMERIC,
            2
        ) AS promedio_por_hora
    FROM public.ticket_folio_complete tfc
    WHERE tfc.folio_date = p_date
    AND tfc.status_simple != ''CANCELADO''
    GROUP BY tfc.branch_key
    ORDER BY tfc.branch_key;
';
ALTER FUNCTION public.get_daily_stats(p_date date) OWNER TO floreant;
--
-- TOC entry 472 (class 1255 OID 67816)
-- Name: get_ticket_folio_info(integer);
Type: FUNCTION;
Schema: public;
Owner: floreant
--

CREATE FUNCTION get_ticket_folio_info(p_ticket_id integer) RETURNS TABLE(daily_folio integer, folio_date date, branch_key text, folio_date_txt text, folio_display text, sucursal_completa text, terminal_name text)
    LANGUAGE sql STABLE
    AS '
    SELECT
        t.daily_folio,
        t.folio_date,
        t.branch_key,
        TO_CHAR(t.folio_date, ''DD/MM/YYYY'') AS folio_date_txt,
        LPAD(t.daily_folio::TEXT, 4, ''0'') AS folio_display,
        COALESCE(term.location, ''DEFAULT'') AS sucursal_completa,
        term.name AS terminal_name
    FROM public.ticket t
    LEFT JOIN public.terminal term ON t.terminal_id = term.id
    WHERE t.id = p_ticket_id;
';
ALTER FUNCTION public.get_ticket_folio_info(p_ticket_id integer) OWNER TO floreant;
--
-- TOC entry 473 (class 1255 OID 67817)
-- Name: kds_notify();
Type: FUNCTION;
Schema: public;
Owner: floreant
--

CREATE FUNCTION kds_notify() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
    v_ticket_id   INT;
v_pg_id       INT;
v_item_id     INT;
v_status      TEXT;
v_total       INT;
v_ready       INT;
v_done        INT;
v_type        TEXT;
v_daily_folio INT;
v_branch_key  TEXT;
v_folio_fmt   TEXT;
BEGIN
    IF TG_TABLE_NAME = ''kitchen_ticket_item'' THEN
        IF NEW.ticket_item_id IS NULL THEN
            RAISE EXCEPTION ''ticket_item_id no puede ser NULL en kitchen_ticket_item'';
END IF;
v_item_id := NEW.ticket_item_id;
SELECT ti.ticket_id, ti.pg_id INTO v_ticket_id, v_pg_id
        FROM ticket_item ti WHERE ti.id = v_item_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket_item % no existe'', v_item_id;
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket % no existe'', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, ''0'');
v_status := UPPER(COALESCE(NEW.status, ''''));
v_type := CASE WHEN TG_OP = ''INSERT'' THEN ''item_upsert'' ELSE ''item_status'' END;
PERFORM pg_notify(
            ''kds_event'',
            json_build_object(
                ''type'',        v_type,
                ''ticket_id'',   v_ticket_id,
                ''pg'',          v_pg_id,
                ''item_id'',     v_item_id,
                ''status'',      v_status,
                ''daily_folio'', v_daily_folio,
                ''branch_key'',  v_branch_key,
                ''folio_fmt'',   v_folio_fmt,
                ''ts'',          NOW()
            )::TEXT
        );
ELSIF TG_TABLE_NAME = ''ticket_item'' THEN
        v_item_id := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id := NEW.pg_id;
IF v_ticket_id IS NULL THEN
            RAISE EXCEPTION ''ticket_id no puede ser NULL en ticket_item'';
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket % no existe'', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, ''0'');
v_status := UPPER(COALESCE(NEW.status, ''''));
v_type := CASE WHEN TG_OP = ''INSERT'' THEN ''item_insert'' ELSE ''item_status'' END;
PERFORM pg_notify(
            ''kds_event'',
            json_build_object(
                ''type'',        v_type,
                ''ticket_id'',   v_ticket_id,
                ''pg'',          v_pg_id,
                ''item_id'',     v_item_id,
                ''status'',      v_status,
                ''daily_folio'', v_daily_folio,
                ''branch_key'',  v_branch_key,
                ''folio_fmt'',   v_folio_fmt,
                ''ts'',          NOW()
            )::TEXT
        );
END IF;
IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
        WITH s AS (
            SELECT
                ti.id AS item_id,
                UPPER(COALESCE(kti.status, ti.status, '''')) AS st
            FROM ticket_item ti
            LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
            WHERE ti.ticket_id = v_ticket_id AND ti.pg_id = v_pg_id
            GROUP BY ti.id, st
        )
        SELECT
            COUNT(DISTINCT item_id) AS total,
            COUNT(DISTINCT item_id) FILTER (WHERE st IN (''READY'', ''DONE'')) AS ready,
            COUNT(DISTINCT item_id) FILTER (WHERE st = ''DONE'') AS done
        INTO v_total, v_ready, v_done
        FROM s;
IF v_total > 0 AND v_total = v_ready THEN
            PERFORM pg_notify(
                ''kds_event'',
                json_build_object(
                    ''type'',        ''ticket_all_ready'',
                    ''ticket_id'',   v_ticket_id,
                    ''pg'',          v_pg_id,
                    ''daily_folio'', v_daily_folio,
                    ''branch_key'',  v_branch_key,
                    ''folio_fmt'',   v_folio_fmt,
                    ''ts'',          NOW()
                )::TEXT
            );
END IF;
IF v_total > 0 AND v_total = v_done THEN
            PERFORM pg_notify(
                ''kds_event'',
                json_build_object(
                    ''type'',        ''ticket_all_done'',
                    ''ticket_id'',   v_ticket_id,
                    ''pg'',          v_pg_id,
                    ''daily_folio'', v_daily_folio,
                    ''branch_key'',  v_branch_key,
                    ''folio_fmt'',   v_folio_fmt,
                    ''ts'',          NOW()
                )::TEXT
            );
END IF;
END IF;
RETURN NEW;
END;
';
ALTER FUNCTION public.kds_notify() OWNER TO floreant;
--
-- TOC entry 474 (class 1255 OID 67818)
-- Name: reset_daily_folio_smart(text);
Type: FUNCTION;
Schema: public;
Owner: floreant
--

CREATE FUNCTION reset_daily_folio_smart(p_branch text DEFAULT NULL::text) RETURNS TABLE(branch_reset text, tickets_affected integer)
    LANGUAGE plpgsql
    AS '
DECLARE
    v_current_date DATE := CURRENT_DATE;
v_branch TEXT;
v_has_rows BOOLEAN;
BEGIN
    SELECT EXISTS (
        SELECT 1 FROM public.daily_folio_counter
        WHERE folio_date = v_current_date
        AND (p_branch IS NULL OR branch_key = UPPER(BTRIM(p_branch)))
    ) INTO v_has_rows;
IF NOT v_has_rows THEN
        branch_reset := ''none'';
tickets_affected := 0;
RETURN NEXT;
RETURN;
END IF;
FOR v_branch IN
        SELECT DISTINCT
            CASE
                WHEN p_branch IS NULL THEN dfc.branch_key
                ELSE UPPER(BTRIM(p_branch))
            END
        FROM public.daily_folio_counter dfc
        WHERE dfc.folio_date = v_current_date
        AND (p_branch IS NULL OR dfc.branch_key = UPPER(BTRIM(p_branch)))
    LOOP
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE branch_key = v_branch
            AND folio_date = v_current_date
        ) THEN
            RAISE NOTICE ''ADVERTENCIA: Sucursal % ya tiene % tickets hoy - NO reseteable'',
                v_branch,
                (SELECT COUNT(*) FROM public.ticket WHERE branch_key = v_branch AND folio_date = v_current_date);
CONTINUE;
END IF;
DELETE FROM public.daily_folio_counter
        WHERE branch_key = v_branch AND folio_date = v_current_date;
branch_reset := v_branch;
tickets_affected := 0;
RETURN NEXT;
END LOOP;
RETURN;
END
';
ALTER FUNCTION public.reset_daily_folio_smart(p_branch text) OWNER TO floreant;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 486 (class 1255 OID 77664)
-- Name: cerrar_lote_preparado(bigint, merma_clase, text, integer, integer);
Type: FUNCTION;
Schema: selemti;
Owner: postgres
--

CREATE FUNCTION cerrar_lote_preparado(p_lote_id bigint, p_clase merma_clase, p_motivo text, p_usuario_id integer DEFAULT NULL::integer, p_uom_id integer DEFAULT NULL::integer) RETURNS bigint
    LANGUAGE plpgsql
    AS '
DECLARE
    v_item_id TEXT;
v_qty_disponible NUMERIC(14,6);
v_mov_id BIGINT;
BEGIN
    SELECT b.item_id, b.cantidad_actual
    INTO v_item_id, v_qty_disponible
    FROM selemti.inventory_batch b
    WHERE b.id = p_lote_id;
IF v_item_id IS NULL THEN
        RAISE EXCEPTION ''Lote % no existe'', p_lote_id;
END IF;
IF v_qty_disponible IS NULL OR v_qty_disponible <= 0 THEN
        RETURN 0;
END IF;
INSERT INTO selemti.mov_inv (ts, item_id, lote_id, cantidad, tipo, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, 0 - v_qty_disponible, ''MERMA'', ''CIERRE_PREP'', p_lote_id)
    RETURNING id INTO v_mov_id;
INSERT INTO selemti.perdida_log (ts, item_id, lote_id, clase, motivo, qty_canonica, usuario_id, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, p_clase, p_motivo, v_qty_disponible, p_usuario_id, ''CIERRE_PREP'', v_mov_id);
RETURN v_mov_id;
END;
';
ALTER FUNCTION selemti.cerrar_lote_preparado(p_lote_id bigint, p_clase merma_clase, p_motivo text, p_usuario_id integer, p_uom_id integer) OWNER TO postgres;
--
-- TOC entry 475 (class 1255 OID 67819)
-- Name: fn_dah_after_insert();
Type: FUNCTION;
Schema: selemti;
Owner: floreant
--

CREATE FUNCTION fn_dah_after_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE v_term RECORD;
BEGIN
  IF NEW.operation = ''ASIGNAR'' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
IF v_term IS NULL THEN
      INSERT INTO selemti.auditoria(quien,que,payload)
      VALUES(NEW.a_user,''NO_SE_PUDO_RESOLVER_TERMINAL'',
             jsonb_build_object(''dah_id'',NEW.id,''operation'',NEW.operation,''time'',NEW."time"));
RETURN NEW;
END IF;
INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id
    ) VALUES (
      v_term.id, COALESCE(v_term.name,''Terminal ''||v_term.id), COALESCE(v_term.location,''''),
      NEW.a_user, COALESCE(NEW."time", now()), ''ACTIVA'', COALESCE(v_term.current_balance,0), NEW.id
    );
ELSIF NEW.operation = ''CERRAR'' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
UPDATE selemti.sesion_cajon
       SET cierre_ts     = COALESCE(NEW."time", now()),
           estatus       = ''LISTO_PARA_CORTE'',
           closing_float = COALESCE(v_term.current_balance,0),
           dah_evento_id = COALESCE(dah_evento_id, NEW.id)
     WHERE terminal_id = COALESCE(v_term.id, terminal_id)
       AND cajero_usuario_id = NEW.a_user
       AND cierre_ts IS NULL;
END IF;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_dah_after_insert() OWNER TO floreant;
--
-- TOC entry 476 (class 1255 OID 67820)
-- Name: fn_normalizar_forma_pago(text, text, text, text);
Type: FUNCTION;
Schema: selemti;
Owner: floreant
--

CREATE FUNCTION fn_normalizar_forma_pago(p_payment_type text, p_transaction_type text, p_payment_sub_type text, p_custom_name text) RETURNS text
    LANGUAGE plpgsql
    AS '
DECLARE pt TEXT := upper(coalesce(p_payment_type,''''));
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN (''CASH'',''CREDIT'',''DEBIT'',''TRANSFER'') THEN
    RETURN pt;
ELSIF pt = ''CUSTOM_PAYMENT'' THEN
    IF cn IS NOT NULL THEN RETURN ''CUSTOM:''||cn;
ELSE RETURN ''CUSTOM'';
END IF;
ELSIF pt IN (''REFUND'',''PAY_OUT'',''CASH_DROP'') THEN
    RETURN pt;
-- egresos/ajustes estandarizados
  ELSE
    RETURN pt;
END IF;
END ';
ALTER FUNCTION selemti.fn_normalizar_forma_pago(p_payment_type text, p_transaction_type text, p_payment_sub_type text, p_custom_name text) OWNER TO floreant;
--
-- TOC entry 469 (class 1255 OID 67821)
-- Name: fn_precorte_efectivo_bi();
Type: FUNCTION;
Schema: selemti;
Owner: floreant
--

CREATE FUNCTION fn_precorte_efectivo_bi() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  NEW.subtotal := COALESCE(NEW.denominacion,0) * COALESCE(NEW.cantidad,0);
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_precorte_efectivo_bi() OWNER TO floreant;
--
-- TOC entry 477 (class 1255 OID 67822)
-- Name: fn_reparar_sesion_apertura(integer, integer);
Type: FUNCTION;
Schema: selemti;
Owner: floreant
--

CREATE FUNCTION fn_reparar_sesion_apertura(p_terminal_id integer, p_usuario integer) RETURNS text
    LANGUAGE plpgsql
    AS '
DECLARE v_term RECORD;
BEGIN
  IF EXISTS (
    SELECT 1 FROM selemti.sesion_cajon
    WHERE terminal_id=p_terminal_id AND cajero_usuario_id=p_usuario AND cierre_ts IS NULL
  ) THEN
    RETURN ''YA_EXISTE_SESION_ABIERTA'';
END IF;
SELECT * INTO v_term FROM public.terminal WHERE id=p_terminal_id;
IF v_term IS NULL THEN RETURN ''TERMINAL_NO_ENCONTRADA'';
END IF;
INSERT INTO selemti.sesion_cajon(
    terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
    apertura_ts, estatus, opening_float
  ) VALUES (
    p_terminal_id, COALESCE(v_term.name,''Terminal ''||p_terminal_id), COALESCE(v_term.location,''''),
    p_usuario, now(), ''ACTIVA'', COALESCE(v_term.current_balance,0)
  );
RETURN ''CREADA'';
END ';
ALTER FUNCTION selemti.fn_reparar_sesion_apertura(p_terminal_id integer, p_usuario integer) OWNER TO floreant;
--
-- TOC entry 478 (class 1255 OID 67823)
-- Name: fn_slug(text);
Type: FUNCTION;
Schema: selemti;
Owner: floreant
--

CREATE FUNCTION fn_slug(in_text text) RETURNS text
    LANGUAGE plpgsql
    AS '
DECLARE s TEXT := lower(coalesce(in_text,''''));
BEGIN
  s := translate(s, ''ÃÃ‰ÃÃ“ÃšÃœÃ‘Ã¡Ã©Ã­Ã³ÃºÃ¼Ã±'', ''AEIOUUNaeiouun'');
s := regexp_replace(s, ''[^a-z0-9]+'', ''-'', ''g'');
s := regexp_replace(s, ''(^-|-$)'', '''', ''g'');
IF s = '''' THEN RETURN NULL;
END IF;
RETURN s;
END ';
ALTER FUNCTION selemti.fn_slug(in_text text) OWNER TO floreant;
--
-- TOC entry 479 (class 1255 OID 67824)
-- Name: fn_terminal_bu_snapshot_cierre();
Type: FUNCTION;
Schema: selemti;
Owner: floreant
--

CREATE FUNCTION fn_terminal_bu_snapshot_cierre() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  v_has_old boolean := (OLD.assigned_user IS NOT NULL);
v_has_new boolean := (NEW.assigned_user IS NOT NULL);
BEGIN
  /* CIERRE: habÃ­a cajero y ahora ya no */
  IF (v_has_old AND NOT v_has_new) THEN
    UPDATE selemti.sesion_cajon AS sc
       SET cierre_ts      = now(),
           estatus        = ''LISTO_PARA_CORTE'',
           closing_float  = COALESCE(OLD.current_balance, 0),
           -- bandera: true si NO hubo precorte para esta sesiÃ³n
           skipped_precorte = NOT EXISTS (
             SELECT 1
             FROM selemti.precorte p
             WHERE p.sesion_id = sc.id
           )
     WHERE sc.terminal_id       = OLD.id
       AND sc.cajero_usuario_id = OLD.assigned_user
       AND sc.cierre_ts         IS NULL;
END IF;
/* APERTURA: no habÃ­a cajero y ahora sÃ­ */
  IF (NOT v_has_old AND v_has_new) THEN
    INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id, skipped_precorte
    )
    VALUES(
      NEW.id,
      COALESCE(NEW.name, ''Terminal ''||NEW.id),
      COALESCE(NEW.location, ''''),
      NEW.assigned_user,
      now(),
      ''ACTIVA'',
      COALESCE(NEW.current_balance, 0),
      NULL,
      FALSE  -- por defecto, en apertura no estÃ¡ saltado
    );
END IF;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_terminal_bu_snapshot_cierre() OWNER TO floreant;
--
-- TOC entry 480 (class 1255 OID 67825)
-- Name: fn_tx_after_insert_forma_pago();
Type: FUNCTION;
Schema: selemti;
Owner: floreant
--

CREATE FUNCTION fn_tx_after_insert_forma_pago() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE v_codigo TEXT;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
    NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name
  );
INSERT INTO selemti.formas_pago(
    codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref
  )
  VALUES (
    v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref
  )
  ON CONFLICT DO NOTHING;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_tx_after_insert_forma_pago() OWNER TO floreant;
--
-- TOC entry 485 (class 1255 OID 77663)
-- Name: inferir_recetas_de_ventas(date, date);
Type: FUNCTION;
Schema: selemti;
Owner: postgres
--

CREATE FUNCTION inferir_recetas_de_ventas(p_fecha_desde date, p_fecha_hasta date DEFAULT NULL::date) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
    v_recetas_inferidas INTEGER := 0;
v_plato_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
FOR v_plato_record IN 
        SELECT DISTINCT td.item_id, COUNT(*) as total_ventas
        FROM selemti.ticket_venta_det td
        JOIN selemti.ticket_venta_cab tc ON td.ticket_id = tc.id
        WHERE tc.fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta
          AND td.receta_shadow_id IS NULL
        GROUP BY td.item_id
        HAVING COUNT(*) >= 5
    LOOP
        INSERT INTO selemti.receta_shadow (codigo_plato_pos, nombre_plato, total_ventas_analizadas, fecha_primer_venta, fecha_ultima_venta)
        VALUES (v_plato_record.item_id, ''Inferida_'' || v_plato_record.item_id, v_plato_record.total_ventas, p_fecha_desde, p_fecha_hasta);
UPDATE selemti.ticket_venta_det
        SET receta_shadow_id = currval(''selemti.receta_shadow_id_seq''), reprocesado = TRUE, version_reproceso = 1
        WHERE item_id = v_plato_record.item_id
          AND ticket_id IN (SELECT id FROM selemti.ticket_venta_cab WHERE fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta);
v_recetas_inferidas := v_recetas_inferidas + 1;
END LOOP;
RETURN v_recetas_inferidas;
END;
';
ALTER FUNCTION selemti.inferir_recetas_de_ventas(p_fecha_desde date, p_fecha_hasta date) OWNER TO postgres;
--
-- TOC entry 484 (class 1255 OID 77662)
-- Name: reprocesar_costos_historicos(date, date, character varying, integer);
Type: FUNCTION;
Schema: selemti;
Owner: postgres
--

CREATE FUNCTION reprocesar_costos_historicos(p_fecha_desde date, p_fecha_hasta date DEFAULT NULL::date, p_algoritmo character varying DEFAULT 'WAC'::character varying, p_usuario_id integer DEFAULT 1) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
    v_lote_id INTEGER;
v_total_actualizados INTEGER := 0;
v_item_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
INSERT INTO selemti.job_recalc_queue (scope_type, scope_from, scope_to, reason, status)
    VALUES (''PERIODO'', p_fecha_desde, p_fecha_hasta, ''Reproceso costos '' || p_algoritmo, ''RUNNING'')
    RETURNING id INTO v_lote_id;
FOR v_item_record IN 
        SELECT DISTINCT item_id 
        FROM selemti.mov_inv 
        WHERE ts BETWEEN p_fecha_desde AND p_fecha_hasta
    LOOP
        UPDATE selemti.historial_costos_item
        SET costo_wac = (
            SELECT AVG(costo_unit * cantidad) / NULLIF(SUM(cantidad), 0)
            FROM selemti.mov_inv 
            WHERE item_id = v_item_record.item_id 
            AND ts BETWEEN p_fecha_desde AND p_fecha_hasta 
            AND tipo IN (''COMPRA'', ''RECEPCION'')
        )
        WHERE item_id = v_item_record.item_id AND fecha_efectiva BETWEEN p_fecha_desde AND p_fecha_hasta;
v_total_actualizados := v_total_actualizados + 1;
END LOOP;
UPDATE selemti.job_recalc_queue 
    SET status = ''DONE'', 
        result = (''{"actualizados": '' || v_total_actualizados || ''}'')::json
    WHERE id = v_lote_id;
RETURN v_total_actualizados;
EXCEPTION
    WHEN OTHERS THEN
        UPDATE selemti.job_recalc_queue 
        SET status = ''FAILED'', 
            result = (''{"error": "'' || REPLACE(SQLERRM, ''"'', ''\"'') || ''"}'')::json
        WHERE id = v_lote_id;
RAISE;
END;
';
ALTER FUNCTION selemti.reprocesar_costos_historicos(p_fecha_desde date, p_fecha_hasta date, p_algoritmo character varying, p_usuario_id integer) OWNER TO postgres;
SET search_path = public, pg_catalog;
SET default_tablespace = '';
SET default_with_oids = false;
--
-- TOC entry 181 (class 1259 OID 67826)
-- Name: action_history;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE action_history (
    id integer NOT NULL,
    action_time timestamp without time zone,
    action_name character varying(255),
    description character varying(255),
    user_id integer
);
ALTER TABLE action_history OWNER TO floreant;
--
-- TOC entry 182 (class 1259 OID 67832)
-- Name: action_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE action_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE action_history_id_seq OWNER TO floreant;
--
-- TOC entry 4151 (class 0 OID 0)
-- Dependencies: 182
-- Name: action_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE action_history_id_seq OWNED BY action_history.id;
--
-- TOC entry 183 (class 1259 OID 67834)
-- Name: attendence_history;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE attendence_history (
    id integer NOT NULL,
    clock_in_time timestamp without time zone,
    clock_out_time timestamp without time zone,
    clock_in_hour smallint,
    clock_out_hour smallint,
    clocked_out boolean,
    user_id integer,
    shift_id integer,
    terminal_id integer
);
ALTER TABLE attendence_history OWNER TO floreant;
--
-- TOC entry 184 (class 1259 OID 67837)
-- Name: attendence_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE attendence_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE attendence_history_id_seq OWNER TO floreant;
--
-- TOC entry 4153 (class 0 OID 0)
-- Dependencies: 184
-- Name: attendence_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE attendence_history_id_seq OWNED BY attendence_history.id;
--
-- TOC entry 185 (class 1259 OID 67839)
-- Name: cash_drawer;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE cash_drawer (
    id integer NOT NULL,
    terminal_id integer
);
ALTER TABLE cash_drawer OWNER TO floreant;
--
-- TOC entry 186 (class 1259 OID 67842)
-- Name: cash_drawer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_id_seq OWNER TO floreant;
--
-- TOC entry 4155 (class 0 OID 0)
-- Dependencies: 186
-- Name: cash_drawer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_id_seq OWNED BY cash_drawer.id;
--
-- TOC entry 187 (class 1259 OID 67844)
-- Name: cash_drawer_reset_history;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE cash_drawer_reset_history (
    id integer NOT NULL,
    reset_time timestamp without time zone,
    user_id integer
);
ALTER TABLE cash_drawer_reset_history OWNER TO floreant;
--
-- TOC entry 188 (class 1259 OID 67847)
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_reset_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_reset_history_id_seq OWNER TO floreant;
--
-- TOC entry 4157 (class 0 OID 0)
-- Dependencies: 188
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_reset_history_id_seq OWNED BY cash_drawer_reset_history.id;
--
-- TOC entry 189 (class 1259 OID 67849)
-- Name: cooking_instruction;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE cooking_instruction (
    id integer NOT NULL,
    description character varying(60)
);
ALTER TABLE cooking_instruction OWNER TO floreant;
--
-- TOC entry 190 (class 1259 OID 67852)
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cooking_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cooking_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 4159 (class 0 OID 0)
-- Dependencies: 190
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cooking_instruction_id_seq OWNED BY cooking_instruction.id;
--
-- TOC entry 191 (class 1259 OID 67854)
-- Name: coupon_and_discount;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE coupon_and_discount (
    id integer NOT NULL,
    name character varying(120),
    type integer,
    barcode character varying(120),
    qualification_type integer,
    apply_to_all boolean,
    minimum_buy integer,
    maximum_off integer,
    value double precision,
    expiry_date timestamp without time zone,
    enabled boolean,
    auto_apply boolean,
    modifiable boolean,
    never_expire boolean,
    uuid character varying(36)
);
ALTER TABLE coupon_and_discount OWNER TO floreant;
--
-- TOC entry 192 (class 1259 OID 67857)
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE coupon_and_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE coupon_and_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4161 (class 0 OID 0)
-- Dependencies: 192
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE coupon_and_discount_id_seq OWNED BY coupon_and_discount.id;
--
-- TOC entry 193 (class 1259 OID 67859)
-- Name: currency;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE currency (
    id integer NOT NULL,
    code character varying(20),
    name character varying(30),
    symbol character varying(10),
    exchange_rate double precision,
    decimal_places integer,
    tolerance double precision,
    buy_price double precision,
    sales_price double precision,
    main boolean
);
ALTER TABLE currency OWNER TO floreant;
--
-- TOC entry 194 (class 1259 OID 67862)
-- Name: currency_balance;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE currency_balance (
    id integer NOT NULL,
    balance double precision,
    currency_id integer,
    cash_drawer_id integer,
    dpr_id integer
);
ALTER TABLE currency_balance OWNER TO floreant;
--
-- TOC entry 195 (class 1259 OID 67865)
-- Name: currency_balance_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_balance_id_seq OWNER TO floreant;
--
-- TOC entry 4164 (class 0 OID 0)
-- Dependencies: 195
-- Name: currency_balance_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_balance_id_seq OWNED BY currency_balance.id;
--
-- TOC entry 196 (class 1259 OID 67867)
-- Name: currency_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_id_seq OWNER TO floreant;
--
-- TOC entry 4165 (class 0 OID 0)
-- Dependencies: 196
-- Name: currency_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_id_seq OWNED BY currency.id;
--
-- TOC entry 197 (class 1259 OID 67869)
-- Name: custom_payment;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE custom_payment (
    id integer NOT NULL,
    name character varying(60),
    required_ref_number boolean,
    ref_number_field_name character varying(60)
);
ALTER TABLE custom_payment OWNER TO floreant;
--
-- TOC entry 198 (class 1259 OID 67872)
-- Name: custom_payment_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE custom_payment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE custom_payment_id_seq OWNER TO floreant;
--
-- TOC entry 4167 (class 0 OID 0)
-- Dependencies: 198
-- Name: custom_payment_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE custom_payment_id_seq OWNED BY custom_payment.id;
--
-- TOC entry 199 (class 1259 OID 67874)
-- Name: customer;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE customer (
    auto_id integer NOT NULL,
    loyalty_no character varying(30),
    loyalty_point integer,
    social_security_number character varying(60),
    picture bytea,
    homephone_no character varying(30),
    mobile_no character varying(30),
    workphone_no character varying(30),
    email character varying(40),
    salutation character varying(60),
    first_name character varying(60),
    last_name character varying(60),
    name character varying(120),
    dob character varying(16),
    ssn character varying(30),
    address character varying(220),
    city character varying(30),
    state character varying(30),
    zip_code character varying(10),
    country character varying(30),
    vip boolean,
    credit_limit double precision,
    credit_spent double precision,
    credit_card_no character varying(30),
    note character varying(255)
);
ALTER TABLE customer OWNER TO floreant;
--
-- TOC entry 200 (class 1259 OID 67880)
-- Name: customer_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE customer_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE customer_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4169 (class 0 OID 0)
-- Dependencies: 200
-- Name: customer_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE customer_auto_id_seq OWNED BY customer.auto_id;
--
-- TOC entry 201 (class 1259 OID 67882)
-- Name: customer_properties;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE customer_properties (
    id integer NOT NULL,
    property_value character varying(255),
    property_name character varying(255) NOT NULL
);
ALTER TABLE customer_properties OWNER TO floreant;
--
-- TOC entry 202 (class 1259 OID 67888)
-- Name: daily_folio_counter;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE daily_folio_counter (
    folio_date date NOT NULL,
    branch_key text NOT NULL,
    last_value integer DEFAULT 0 NOT NULL
);
ALTER TABLE daily_folio_counter OWNER TO floreant;
--
-- TOC entry 203 (class 1259 OID 67895)
-- Name: data_update_info;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE data_update_info (
    id integer NOT NULL,
    last_update_time timestamp without time zone
);
ALTER TABLE data_update_info OWNER TO floreant;
--
-- TOC entry 204 (class 1259 OID 67898)
-- Name: data_update_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE data_update_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE data_update_info_id_seq OWNER TO floreant;
--
-- TOC entry 4173 (class 0 OID 0)
-- Dependencies: 204
-- Name: data_update_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE data_update_info_id_seq OWNED BY data_update_info.id;
--
-- TOC entry 205 (class 1259 OID 67900)
-- Name: delivery_address;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE delivery_address (
    id integer NOT NULL,
    address character varying(320),
    phone_extension character varying(10),
    room_no character varying(30),
    distance double precision,
    customer_id integer
);
ALTER TABLE delivery_address OWNER TO floreant;
--
-- TOC entry 206 (class 1259 OID 67903)
-- Name: delivery_address_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_address_id_seq OWNER TO floreant;
--
-- TOC entry 4175 (class 0 OID 0)
-- Dependencies: 206
-- Name: delivery_address_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_address_id_seq OWNED BY delivery_address.id;
--
-- TOC entry 207 (class 1259 OID 67905)
-- Name: delivery_charge;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE delivery_charge (
    id integer NOT NULL,
    name character varying(220),
    zip_code character varying(20),
    start_range double precision,
    end_range double precision,
    charge_amount double precision
);
ALTER TABLE delivery_charge OWNER TO floreant;
--
-- TOC entry 208 (class 1259 OID 67908)
-- Name: delivery_charge_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_charge_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_charge_id_seq OWNER TO floreant;
--
-- TOC entry 4177 (class 0 OID 0)
-- Dependencies: 208
-- Name: delivery_charge_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_charge_id_seq OWNED BY delivery_charge.id;
--
-- TOC entry 209 (class 1259 OID 67910)
-- Name: delivery_configuration;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE delivery_configuration (
    id integer NOT NULL,
    unit_name character varying(20),
    unit_symbol character varying(8),
    charge_by_zip_code boolean
);
ALTER TABLE delivery_configuration OWNER TO floreant;
--
-- TOC entry 210 (class 1259 OID 67913)
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_configuration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_configuration_id_seq OWNER TO floreant;
--
-- TOC entry 4179 (class 0 OID 0)
-- Dependencies: 210
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_configuration_id_seq OWNED BY delivery_configuration.id;
--
-- TOC entry 211 (class 1259 OID 67915)
-- Name: delivery_instruction;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE delivery_instruction (
    id integer NOT NULL,
    notes character varying(220),
    customer_no integer
);
ALTER TABLE delivery_instruction OWNER TO floreant;
--
-- TOC entry 212 (class 1259 OID 67918)
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 4181 (class 0 OID 0)
-- Dependencies: 212
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_instruction_id_seq OWNED BY delivery_instruction.id;
--
-- TOC entry 213 (class 1259 OID 67920)
-- Name: drawer_assigned_history;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE drawer_assigned_history (
    id integer NOT NULL,
    "time" timestamp without time zone,
    operation character varying(60),
    a_user integer
);
ALTER TABLE drawer_assigned_history OWNER TO floreant;
--
-- TOC entry 214 (class 1259 OID 67923)
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_assigned_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_assigned_history_id_seq OWNER TO floreant;
--
-- TOC entry 4183 (class 0 OID 0)
-- Dependencies: 214
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_assigned_history_id_seq OWNED BY drawer_assigned_history.id;
--
-- TOC entry 215 (class 1259 OID 67925)
-- Name: drawer_pull_report;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE drawer_pull_report (
    id integer NOT NULL,
    report_time timestamp without time zone,
    reg character varying(15),
    ticket_count integer,
    begin_cash double precision,
    net_sales double precision,
    sales_tax double precision,
    cash_tax double precision,
    total_revenue double precision,
    gross_receipts double precision,
    giftcertreturncount integer,
    giftcertreturnamount double precision,
    giftcertchangeamount double precision,
    cash_receipt_no integer,
    cash_receipt_amount double precision,
    credit_card_receipt_no integer,
    credit_card_receipt_amount double precision,
    debit_card_receipt_no integer,
    debit_card_receipt_amount double precision,
    refund_receipt_count integer,
    refund_amount double precision,
    receipt_differential double precision,
    cash_back double precision,
    cash_tips double precision,
    charged_tips double precision,
    tips_paid double precision,
    tips_differential double precision,
    pay_out_no integer,
    pay_out_amount double precision,
    drawer_bleed_no integer,
    drawer_bleed_amount double precision,
    drawer_accountable double precision,
    cash_to_deposit double precision,
    variance double precision,
    delivery_charge double precision,
    totalvoidwst double precision,
    totalvoid double precision,
    totaldiscountcount integer,
    totaldiscountamount double precision,
    totaldiscountsales double precision,
    totaldiscountguest integer,
    totaldiscountpartysize integer,
    totaldiscountchecksize integer,
    totaldiscountpercentage double precision,
    totaldiscountratio double precision,
    user_id integer,
    terminal_id integer
);
ALTER TABLE drawer_pull_report OWNER TO floreant;
--
-- TOC entry 216 (class 1259 OID 67928)
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_pull_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_pull_report_id_seq OWNER TO floreant;
--
-- TOC entry 4185 (class 0 OID 0)
-- Dependencies: 216
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_pull_report_id_seq OWNED BY drawer_pull_report.id;
--
-- TOC entry 217 (class 1259 OID 67930)
-- Name: drawer_pull_report_voidtickets;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE drawer_pull_report_voidtickets (
    dpreport_id integer NOT NULL,
    code integer,
    reason character varying(255),
    hast character varying(255),
    quantity integer,
    amount double precision
);
ALTER TABLE drawer_pull_report_voidtickets OWNER TO floreant;
--
-- TOC entry 218 (class 1259 OID 67936)
-- Name: employee_in_out_history;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE employee_in_out_history (
    id integer NOT NULL,
    out_time timestamp without time zone,
    in_time timestamp without time zone,
    out_hour smallint,
    in_hour smallint,
    clock_out boolean,
    user_id integer,
    shift_id integer,
    terminal_id integer
);
ALTER TABLE employee_in_out_history OWNER TO floreant;
--
-- TOC entry 219 (class 1259 OID 67939)
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE employee_in_out_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE employee_in_out_history_id_seq OWNER TO floreant;
--
-- TOC entry 4188 (class 0 OID 0)
-- Dependencies: 219
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE employee_in_out_history_id_seq OWNED BY employee_in_out_history.id;
--
-- TOC entry 220 (class 1259 OID 67941)
-- Name: global_config;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE global_config (
    id integer NOT NULL,
    pos_key character varying(60),
    pos_value character varying(220)
);
ALTER TABLE global_config OWNER TO floreant;
--
-- TOC entry 221 (class 1259 OID 67944)
-- Name: global_config_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE global_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE global_config_id_seq OWNER TO floreant;
--
-- TOC entry 4190 (class 0 OID 0)
-- Dependencies: 221
-- Name: global_config_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE global_config_id_seq OWNED BY global_config.id;
--
-- TOC entry 222 (class 1259 OID 67946)
-- Name: gratuity;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE gratuity (
    id integer NOT NULL,
    amount double precision,
    paid boolean,
    refunded boolean,
    ticket_id integer,
    owner_id integer,
    terminal_id integer
);
ALTER TABLE gratuity OWNER TO floreant;
--
-- TOC entry 223 (class 1259 OID 67949)
-- Name: gratuity_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE gratuity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE gratuity_id_seq OWNER TO floreant;
--
-- TOC entry 4192 (class 0 OID 0)
-- Dependencies: 223
-- Name: gratuity_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE gratuity_id_seq OWNED BY gratuity.id;
--
-- TOC entry 224 (class 1259 OID 67951)
-- Name: group_taxes;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE group_taxes (
    group_id character varying(128) NOT NULL,
    elt integer NOT NULL
);
ALTER TABLE group_taxes OWNER TO floreant;
--
-- TOC entry 225 (class 1259 OID 67954)
-- Name: guest_check_print;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE guest_check_print (
    id integer NOT NULL,
    ticket_id integer,
    table_no character varying(255),
    ticket_total double precision,
    print_time timestamp without time zone,
    user_id integer
);
ALTER TABLE guest_check_print OWNER TO floreant;
--
-- TOC entry 226 (class 1259 OID 67957)
-- Name: guest_check_print_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE guest_check_print_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE guest_check_print_id_seq OWNER TO floreant;
--
-- TOC entry 4195 (class 0 OID 0)
-- Dependencies: 226
-- Name: guest_check_print_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE guest_check_print_id_seq OWNED BY guest_check_print.id;
--
-- TOC entry 227 (class 1259 OID 67959)
-- Name: inventory_group;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE inventory_group (
    id integer NOT NULL,
    name character varying(60) NOT NULL,
    visible boolean
);
ALTER TABLE inventory_group OWNER TO floreant;
--
-- TOC entry 228 (class 1259 OID 67962)
-- Name: inventory_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_group_id_seq OWNER TO floreant;
--
-- TOC entry 4197 (class 0 OID 0)
-- Dependencies: 228
-- Name: inventory_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_group_id_seq OWNED BY inventory_group.id;
--
-- TOC entry 229 (class 1259 OID 67964)
-- Name: inventory_item;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE inventory_item (
    id integer NOT NULL,
    create_time timestamp without time zone,
    last_update_date timestamp without time zone,
    name character varying(60),
    package_barcode character varying(30),
    unit_barcode character varying(30),
    unit_per_package double precision,
    sort_order integer,
    package_reorder_level integer,
    package_replenish_level integer,
    description character varying(255),
    average_package_price double precision,
    total_unit_packages double precision,
    total_recepie_units double precision,
    unit_purchase_price double precision,
    unit_selling_price double precision,
    visible boolean,
    punit_id integer,
    recipe_unit_id integer,
    item_group_id integer,
    item_location_id integer,
    item_vendor_id integer,
    total_packages integer
);
ALTER TABLE inventory_item OWNER TO floreant;
--
-- TOC entry 230 (class 1259 OID 67967)
-- Name: inventory_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_item_id_seq OWNER TO floreant;
--
-- TOC entry 4199 (class 0 OID 0)
-- Dependencies: 230
-- Name: inventory_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_item_id_seq OWNED BY inventory_item.id;
--
-- TOC entry 231 (class 1259 OID 67969)
-- Name: inventory_location;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE inventory_location (
    id integer NOT NULL,
    name character varying(60) NOT NULL,
    sort_order integer,
    visible boolean,
    warehouse_id integer
);
ALTER TABLE inventory_location OWNER TO floreant;
--
-- TOC entry 232 (class 1259 OID 67972)
-- Name: inventory_location_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_location_id_seq OWNER TO floreant;
--
-- TOC entry 4201 (class 0 OID 0)
-- Dependencies: 232
-- Name: inventory_location_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_location_id_seq OWNED BY inventory_location.id;
--
-- TOC entry 233 (class 1259 OID 67974)
-- Name: inventory_meta_code;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE inventory_meta_code (
    id integer NOT NULL,
    type character varying(255),
    code_text character varying(255),
    code_no integer,
    description character varying(255)
);
ALTER TABLE inventory_meta_code OWNER TO floreant;
--
-- TOC entry 234 (class 1259 OID 67980)
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_meta_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_meta_code_id_seq OWNER TO floreant;
--
-- TOC entry 4203 (class 0 OID 0)
-- Dependencies: 234
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_meta_code_id_seq OWNED BY inventory_meta_code.id;
--
-- TOC entry 235 (class 1259 OID 67982)
-- Name: inventory_transaction;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE inventory_transaction (
    id integer NOT NULL,
    transaction_date timestamp without time zone,
    unit_quantity double precision,
    unit_price double precision,
    remark character varying(255),
    tran_type integer,
    reference_id integer,
    item_id integer,
    vendor_id integer,
    from_warehouse_id integer,
    to_warehouse_id integer,
    quantity integer
);
ALTER TABLE inventory_transaction OWNER TO floreant;
--
-- TOC entry 236 (class 1259 OID 67985)
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_transaction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_transaction_id_seq OWNER TO floreant;
--
-- TOC entry 4205 (class 0 OID 0)
-- Dependencies: 236
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_transaction_id_seq OWNED BY inventory_transaction.id;
--
-- TOC entry 237 (class 1259 OID 67987)
-- Name: inventory_unit;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE inventory_unit (
    id integer NOT NULL,
    short_name character varying(255),
    long_name character varying(255),
    alt_name character varying(255),
    conv_factor1 character varying(255),
    conv_factor2 character varying(255),
    conv_factor3 character varying(255)
);
ALTER TABLE inventory_unit OWNER TO floreant;
--
-- TOC entry 238 (class 1259 OID 67993)
-- Name: inventory_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_unit_id_seq OWNER TO floreant;
--
-- TOC entry 4207 (class 0 OID 0)
-- Dependencies: 238
-- Name: inventory_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_unit_id_seq OWNED BY inventory_unit.id;
--
-- TOC entry 239 (class 1259 OID 67995)
-- Name: inventory_vendor;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE inventory_vendor (
    id integer NOT NULL,
    name character varying(60) NOT NULL,
    visible boolean,
    address character varying(120) NOT NULL,
    city character varying(60) NOT NULL,
    state character varying(60) NOT NULL,
    zip character varying(60) NOT NULL,
    country character varying(60) NOT NULL,
    email character varying(60) NOT NULL,
    phone character varying(60) NOT NULL,
    fax character varying(60)
);
ALTER TABLE inventory_vendor OWNER TO floreant;
--
-- TOC entry 240 (class 1259 OID 68001)
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_vendor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_vendor_id_seq OWNER TO floreant;
--
-- TOC entry 4209 (class 0 OID 0)
-- Dependencies: 240
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_vendor_id_seq OWNED BY inventory_vendor.id;
--
-- TOC entry 241 (class 1259 OID 68003)
-- Name: inventory_warehouse;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE inventory_warehouse (
    id integer NOT NULL,
    name character varying(60) NOT NULL,
    visible boolean
);
ALTER TABLE inventory_warehouse OWNER TO floreant;
--
-- TOC entry 242 (class 1259 OID 68006)
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_warehouse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_warehouse_id_seq OWNER TO floreant;
--
-- TOC entry 4211 (class 0 OID 0)
-- Dependencies: 242
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_warehouse_id_seq OWNED BY inventory_warehouse.id;
--
-- TOC entry 243 (class 1259 OID 68008)
-- Name: item_order_type;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE item_order_type (
    menu_item_id integer NOT NULL,
    order_type_id integer NOT NULL
);
ALTER TABLE item_order_type OWNER TO floreant;
--
-- TOC entry 244 (class 1259 OID 68011)
-- Name: kitchen_ticket;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE kitchen_ticket (
    id integer NOT NULL,
    ticket_id integer,
    create_date timestamp without time zone,
    close_date timestamp without time zone,
    voided boolean,
    sequence_number integer,
    status character varying(30),
    server_name character varying(30),
    ticket_type character varying(20),
    pg_id integer
);
ALTER TABLE kitchen_ticket OWNER TO floreant;
--
-- TOC entry 245 (class 1259 OID 68014)
-- Name: terminal;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE terminal (
    id integer NOT NULL,
    name character varying(60),
    terminal_key character varying(120),
    opening_balance double precision,
    current_balance double precision,
    has_cash_drawer boolean,
    in_use boolean,
    active boolean,
    location character varying(320),
    floor_id integer,
    assigned_user integer
);
ALTER TABLE terminal OWNER TO floreant;
--
-- TOC entry 246 (class 1259 OID 68020)
-- Name: ticket;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE ticket (
    id integer NOT NULL,
    global_id character varying(16),
    create_date timestamp without time zone,
    closing_date timestamp without time zone,
    active_date timestamp without time zone,
    deliveery_date timestamp without time zone,
    creation_hour integer,
    paid boolean,
    voided boolean,
    void_reason character varying(255),
    wasted boolean,
    refunded boolean,
    settled boolean,
    drawer_resetted boolean,
    sub_total double precision,
    total_discount double precision,
    total_tax double precision,
    total_price double precision,
    paid_amount double precision,
    due_amount double precision,
    advance_amount double precision,
    adjustment_amount double precision,
    number_of_guests integer,
    status character varying(30),
    bar_tab boolean,
    is_tax_exempt boolean,
    is_re_opened boolean,
    service_charge double precision,
    delivery_charge double precision,
    customer_id integer,
    delivery_address character varying(120),
    customer_pickeup boolean,
    delivery_extra_info character varying(255),
    ticket_type character varying(20),
    shift_id integer,
    owner_id integer,
    driver_id integer,
    gratuity_id integer,
    void_by_user integer,
    terminal_id integer,
    folio_date date,
    branch_key text,
    daily_folio integer,
    CONSTRAINT ck_ticket_daily_folio_positive CHECK (((daily_folio IS NULL) OR (daily_folio > 0)))
);
ALTER TABLE ticket OWNER TO floreant;
--
-- TOC entry 247 (class 1259 OID 68027)
-- Name: kds_orders_enhanced;
Type: VIEW;
Schema: public;
Owner: floreant
--

CREATE VIEW kds_orders_enhanced AS
 SELECT kt.id AS kitchen_ticket_id,
    kt.ticket_id,
    kt.create_date AS kds_created_at,
    kt.sequence_number,
    t.daily_folio,
    t.folio_date,
    t.branch_key,
    lpad((t.daily_folio)::text, 4, '0'::text) AS folio_display,
    t.number_of_guests,
    t.ticket_type,
    term.name AS terminal_name,
        CASE
            WHEN ((t.daily_folio >= 1) AND (t.daily_folio <= 20)) THEN 'PRIORITARIO'::text
            WHEN ((t.daily_folio >= 21) AND (t.daily_folio <= 50)) THEN 'NORMAL'::text
            ELSE 'ALTO_VOLUMEN'::text
        END AS prioridad_voceo
   FROM ((kitchen_ticket kt
     JOIN ticket t ON ((t.id = kt.ticket_id)))
     LEFT JOIN terminal term ON ((t.terminal_id = term.id)));
ALTER TABLE kds_orders_enhanced OWNER TO floreant;
--
-- TOC entry 248 (class 1259 OID 68032)
-- Name: kds_ready_log;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE kds_ready_log (
    ticket_id integer NOT NULL,
    notified_at timestamp without time zone DEFAULT now() NOT NULL
);
ALTER TABLE kds_ready_log OWNER TO floreant;
--
-- TOC entry 249 (class 1259 OID 68036)
-- Name: kit_ticket_table_num;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE kit_ticket_table_num (
    kit_ticket_id integer NOT NULL,
    table_id integer
);
ALTER TABLE kit_ticket_table_num OWNER TO floreant;
--
-- TOC entry 250 (class 1259 OID 68039)
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_id_seq OWNER TO floreant;
--
-- TOC entry 4219 (class 0 OID 0)
-- Dependencies: 250
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_id_seq OWNED BY kitchen_ticket.id;
--
-- TOC entry 251 (class 1259 OID 68041)
-- Name: kitchen_ticket_item;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE kitchen_ticket_item (
    id integer NOT NULL,
    cookable boolean,
    ticket_item_id integer NOT NULL,
    ticket_item_modifier_id integer,
    menu_item_code character varying(255),
    menu_item_name character varying(120),
    menu_item_group_id integer,
    menu_item_group_name character varying(120),
    quantity integer,
    fractional_quantity double precision,
    fractional_unit boolean,
    unit_name character varying(20),
    sort_order integer,
    voided boolean,
    status character varying(30),
    kithen_ticket_id integer,
    item_order integer
);
ALTER TABLE kitchen_ticket_item OWNER TO floreant;
--
-- TOC entry 252 (class 1259 OID 68047)
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 4221 (class 0 OID 0)
-- Dependencies: 252
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_item_id_seq OWNED BY kitchen_ticket_item.id;
--
-- TOC entry 253 (class 1259 OID 68049)
-- Name: menu_category;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menu_category (
    id integer NOT NULL,
    name character varying(120) NOT NULL,
    translated_name character varying(120),
    visible boolean,
    beverage boolean,
    sort_order integer,
    btn_color integer,
    text_color integer
);
ALTER TABLE menu_category OWNER TO floreant;
--
-- TOC entry 254 (class 1259 OID 68052)
-- Name: menu_category_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_category_id_seq OWNER TO floreant;
--
-- TOC entry 4223 (class 0 OID 0)
-- Dependencies: 254
-- Name: menu_category_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_category_id_seq OWNED BY menu_category.id;
--
-- TOC entry 255 (class 1259 OID 68054)
-- Name: menu_group;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menu_group (
    id integer NOT NULL,
    name character varying(120) NOT NULL,
    translated_name character varying(120),
    visible boolean,
    sort_order integer,
    btn_color integer,
    text_color integer,
    category_id integer
);
ALTER TABLE menu_group OWNER TO floreant;
--
-- TOC entry 256 (class 1259 OID 68057)
-- Name: menu_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_group_id_seq OWNER TO floreant;
--
-- TOC entry 4225 (class 0 OID 0)
-- Dependencies: 256
-- Name: menu_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_group_id_seq OWNED BY menu_group.id;
--
-- TOC entry 257 (class 1259 OID 68059)
-- Name: menu_item;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menu_item (
    id integer NOT NULL,
    name character varying(120) NOT NULL,
    description character varying(255),
    unit_name character varying(20),
    translated_name character varying(120),
    barcode character varying(120),
    buy_price double precision NOT NULL,
    stock_amount double precision,
    price double precision NOT NULL,
    discount_rate double precision,
    visible boolean,
    disable_when_stock_amount_is_zero boolean,
    sort_order integer,
    btn_color integer,
    text_color integer,
    image bytea,
    show_image_only boolean,
    fractional_unit boolean,
    pizza_type boolean,
    default_sell_portion integer,
    group_id integer,
    tax_group_id character varying(128),
    recepie integer,
    pg_id integer,
    tax_id integer
);
ALTER TABLE menu_item OWNER TO floreant;
--
-- TOC entry 258 (class 1259 OID 68065)
-- Name: menu_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_id_seq OWNER TO floreant;
--
-- TOC entry 4227 (class 0 OID 0)
-- Dependencies: 258
-- Name: menu_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_id_seq OWNED BY menu_item.id;
--
-- TOC entry 259 (class 1259 OID 68067)
-- Name: menu_item_properties;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menu_item_properties (
    menu_item_id integer NOT NULL,
    property_value character varying(100),
    property_name character varying(255) NOT NULL
);
ALTER TABLE menu_item_properties OWNER TO floreant;
--
-- TOC entry 260 (class 1259 OID 68070)
-- Name: menu_item_size;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menu_item_size (
    id integer NOT NULL,
    name character varying(60),
    translated_name character varying(60),
    description character varying(120),
    sort_order integer,
    size_in_inch double precision,
    default_size boolean
);
ALTER TABLE menu_item_size OWNER TO floreant;
--
-- TOC entry 261 (class 1259 OID 68073)
-- Name: menu_item_size_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_size_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_size_id_seq OWNER TO floreant;
--
-- TOC entry 4230 (class 0 OID 0)
-- Dependencies: 261
-- Name: menu_item_size_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_size_id_seq OWNED BY menu_item_size.id;
--
-- TOC entry 262 (class 1259 OID 68075)
-- Name: menu_item_terminal_ref;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menu_item_terminal_ref (
    menu_item_id integer NOT NULL,
    terminal_id integer NOT NULL
);
ALTER TABLE menu_item_terminal_ref OWNER TO floreant;
--
-- TOC entry 263 (class 1259 OID 68078)
-- Name: menu_modifier;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menu_modifier (
    id integer NOT NULL,
    name character varying(120),
    translated_name character varying(120),
    price double precision,
    extra_price double precision,
    sort_order integer,
    btn_color integer,
    text_color integer,
    enable boolean,
    fixed_price boolean,
    print_to_kitchen boolean,
    section_wise_pricing boolean,
    pizza_modifier boolean,
    group_id integer,
    tax_id integer
);
ALTER TABLE menu_modifier OWNER TO floreant;
--
-- TOC entry 264 (class 1259 OID 68081)
-- Name: menu_modifier_group;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menu_modifier_group (
    id integer NOT NULL,
    name character varying(60),
    translated_name character varying(60),
    enabled boolean,
    exclusived boolean,
    required boolean
);
ALTER TABLE menu_modifier_group OWNER TO floreant;
--
-- TOC entry 265 (class 1259 OID 68084)
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_group_id_seq OWNER TO floreant;
--
-- TOC entry 4234 (class 0 OID 0)
-- Dependencies: 265
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_group_id_seq OWNED BY menu_modifier_group.id;
--
-- TOC entry 266 (class 1259 OID 68086)
-- Name: menu_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 4235 (class 0 OID 0)
-- Dependencies: 266
-- Name: menu_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_id_seq OWNED BY menu_modifier.id;
--
-- TOC entry 267 (class 1259 OID 68088)
-- Name: menu_modifier_properties;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menu_modifier_properties (
    menu_modifier_id integer NOT NULL,
    property_value character varying(100),
    property_name character varying(255) NOT NULL
);
ALTER TABLE menu_modifier_properties OWNER TO floreant;
--
-- TOC entry 268 (class 1259 OID 68091)
-- Name: menucategory_discount;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menucategory_discount (
    discount_id integer NOT NULL,
    menucategory_id integer NOT NULL
);
ALTER TABLE menucategory_discount OWNER TO floreant;
--
-- TOC entry 269 (class 1259 OID 68094)
-- Name: menugroup_discount;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menugroup_discount (
    discount_id integer NOT NULL,
    menugroup_id integer NOT NULL
);
ALTER TABLE menugroup_discount OWNER TO floreant;
--
-- TOC entry 270 (class 1259 OID 68097)
-- Name: menuitem_discount;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menuitem_discount (
    discount_id integer NOT NULL,
    menuitem_id integer NOT NULL
);
ALTER TABLE menuitem_discount OWNER TO floreant;
--
-- TOC entry 271 (class 1259 OID 68100)
-- Name: menuitem_modifiergroup;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menuitem_modifiergroup (
    id integer NOT NULL,
    min_quantity integer,
    max_quantity integer,
    sort_order integer,
    modifier_group integer,
    menuitem_modifiergroup_id integer
);
ALTER TABLE menuitem_modifiergroup OWNER TO floreant;
--
-- TOC entry 272 (class 1259 OID 68103)
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_modifiergroup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_modifiergroup_id_seq OWNER TO floreant;
--
-- TOC entry 4241 (class 0 OID 0)
-- Dependencies: 272
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_modifiergroup_id_seq OWNED BY menuitem_modifiergroup.id;
--
-- TOC entry 273 (class 1259 OID 68105)
-- Name: menuitem_pizzapirce;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menuitem_pizzapirce (
    menu_item_id integer NOT NULL,
    pizza_price_id integer NOT NULL
);
ALTER TABLE menuitem_pizzapirce OWNER TO floreant;
--
-- TOC entry 274 (class 1259 OID 68108)
-- Name: menuitem_shift;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menuitem_shift (
    id integer NOT NULL,
    shift_price double precision,
    shift_id integer,
    menuitem_id integer
);
ALTER TABLE menuitem_shift OWNER TO floreant;
--
-- TOC entry 275 (class 1259 OID 68111)
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_shift_id_seq OWNER TO floreant;
--
-- TOC entry 4244 (class 0 OID 0)
-- Dependencies: 275
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_shift_id_seq OWNED BY menuitem_shift.id;
--
-- TOC entry 276 (class 1259 OID 68113)
-- Name: menumodifier_pizzamodifierprice;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE menumodifier_pizzamodifierprice (
    menumodifier_id integer NOT NULL,
    pizzamodifierprice_id integer NOT NULL
);
ALTER TABLE menumodifier_pizzamodifierprice OWNER TO floreant;
--
-- TOC entry 389 (class 1259 OID 73602)
-- Name: migrations;
Type: TABLE;
Schema: public;
Owner: postgres
--

CREATE TABLE migrations (
    id integer NOT NULL,
    migration character varying(255) NOT NULL,
    batch integer NOT NULL
);
ALTER TABLE migrations OWNER TO postgres;
--
-- TOC entry 388 (class 1259 OID 73600)
-- Name: migrations_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: postgres
--

CREATE SEQUENCE migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE migrations_id_seq OWNER TO postgres;
--
-- TOC entry 4247 (class 0 OID 0)
-- Dependencies: 388
-- Name: migrations_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: postgres
--

ALTER SEQUENCE migrations_id_seq OWNED BY migrations.id;
--
-- TOC entry 277 (class 1259 OID 68116)
-- Name: modifier_multiplier_price;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE modifier_multiplier_price (
    id integer NOT NULL,
    price double precision,
    multiplier_id character varying(20),
    menumodifier_id integer,
    pizza_modifier_price_id integer
);
ALTER TABLE modifier_multiplier_price OWNER TO floreant;
--
-- TOC entry 278 (class 1259 OID 68119)
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE modifier_multiplier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE modifier_multiplier_price_id_seq OWNER TO floreant;
--
-- TOC entry 4249 (class 0 OID 0)
-- Dependencies: 278
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE modifier_multiplier_price_id_seq OWNED BY modifier_multiplier_price.id;
--
-- TOC entry 279 (class 1259 OID 68121)
-- Name: multiplier;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE multiplier (
    name character varying(20) NOT NULL,
    ticket_prefix character varying(20),
    rate double precision,
    sort_order integer,
    default_multiplier boolean,
    main boolean,
    btn_color integer,
    text_color integer
);
ALTER TABLE multiplier OWNER TO floreant;
--
-- TOC entry 280 (class 1259 OID 68124)
-- Name: order_type;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE order_type (
    id integer NOT NULL,
    name character varying(120) NOT NULL,
    enabled boolean,
    show_table_selection boolean,
    show_guest_selection boolean,
    should_print_to_kitchen boolean,
    prepaid boolean,
    close_on_paid boolean,
    required_customer_data boolean,
    delivery boolean,
    show_item_barcode boolean,
    show_in_login_screen boolean,
    consolidate_tiems_in_receipt boolean,
    allow_seat_based_order boolean,
    hide_item_with_empty_inventory boolean,
    has_forhere_and_togo boolean,
    pre_auth_credit_card boolean,
    bar_tab boolean,
    retail_order boolean,
    show_price_on_button boolean,
    show_stock_count_on_button boolean,
    show_unit_price_in_ticket_grid boolean,
    properties text
);
ALTER TABLE order_type OWNER TO floreant;
--
-- TOC entry 281 (class 1259 OID 68130)
-- Name: order_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE order_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE order_type_id_seq OWNER TO floreant;
--
-- TOC entry 4252 (class 0 OID 0)
-- Dependencies: 281
-- Name: order_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE order_type_id_seq OWNED BY order_type.id;
--
-- TOC entry 282 (class 1259 OID 68132)
-- Name: packaging_unit;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE packaging_unit (
    id integer NOT NULL,
    name character varying(30),
    short_name character varying(10),
    factor double precision,
    baseunit boolean,
    dimension character varying(30)
);
ALTER TABLE packaging_unit OWNER TO floreant;
--
-- TOC entry 283 (class 1259 OID 68135)
-- Name: packaging_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE packaging_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE packaging_unit_id_seq OWNER TO floreant;
--
-- TOC entry 4254 (class 0 OID 0)
-- Dependencies: 283
-- Name: packaging_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE packaging_unit_id_seq OWNED BY packaging_unit.id;
--
-- TOC entry 284 (class 1259 OID 68137)
-- Name: payout_reasons;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE payout_reasons (
    id integer NOT NULL,
    reason character varying(255)
);
ALTER TABLE payout_reasons OWNER TO floreant;
--
-- TOC entry 285 (class 1259 OID 68140)
-- Name: payout_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 4256 (class 0 OID 0)
-- Dependencies: 285
-- Name: payout_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_reasons_id_seq OWNED BY payout_reasons.id;
--
-- TOC entry 286 (class 1259 OID 68142)
-- Name: payout_recepients;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE payout_recepients (
    id integer NOT NULL,
    name character varying(255)
);
ALTER TABLE payout_recepients OWNER TO floreant;
--
-- TOC entry 287 (class 1259 OID 68145)
-- Name: payout_recepients_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_recepients_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_recepients_id_seq OWNER TO floreant;
--
-- TOC entry 4258 (class 0 OID 0)
-- Dependencies: 287
-- Name: payout_recepients_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_recepients_id_seq OWNED BY payout_recepients.id;
--
-- TOC entry 288 (class 1259 OID 68147)
-- Name: pizza_crust;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE pizza_crust (
    id integer NOT NULL,
    name character varying(60),
    translated_name character varying(60),
    description character varying(120),
    sort_order integer,
    default_crust boolean
);
ALTER TABLE pizza_crust OWNER TO floreant;
--
-- TOC entry 289 (class 1259 OID 68150)
-- Name: pizza_crust_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_crust_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_crust_id_seq OWNER TO floreant;
--
-- TOC entry 4260 (class 0 OID 0)
-- Dependencies: 289
-- Name: pizza_crust_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_crust_id_seq OWNED BY pizza_crust.id;
--
-- TOC entry 290 (class 1259 OID 68152)
-- Name: pizza_modifier_price;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE pizza_modifier_price (
    id integer NOT NULL,
    item_size integer
);
ALTER TABLE pizza_modifier_price OWNER TO floreant;
--
-- TOC entry 291 (class 1259 OID 68155)
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_modifier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_modifier_price_id_seq OWNER TO floreant;
--
-- TOC entry 4262 (class 0 OID 0)
-- Dependencies: 291
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_modifier_price_id_seq OWNED BY pizza_modifier_price.id;
--
-- TOC entry 292 (class 1259 OID 68157)
-- Name: pizza_price;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE pizza_price (
    id integer NOT NULL,
    price double precision,
    menu_item_size integer,
    crust integer,
    order_type integer
);
ALTER TABLE pizza_price OWNER TO floreant;
--
-- TOC entry 293 (class 1259 OID 68160)
-- Name: pizza_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_price_id_seq OWNER TO floreant;
--
-- TOC entry 4264 (class 0 OID 0)
-- Dependencies: 293
-- Name: pizza_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_price_id_seq OWNED BY pizza_price.id;
--
-- TOC entry 294 (class 1259 OID 68162)
-- Name: printer_configuration;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE printer_configuration (
    id integer NOT NULL,
    receipt_printer character varying(255),
    kitchen_printer character varying(255),
    prwts boolean,
    prwtp boolean,
    pkwts boolean,
    pkwtp boolean,
    unpft boolean,
    unpfk boolean
);
ALTER TABLE printer_configuration OWNER TO floreant;
--
-- TOC entry 295 (class 1259 OID 68168)
-- Name: printer_group;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE printer_group (
    id integer NOT NULL,
    name character varying(60) NOT NULL,
    is_default boolean
);
ALTER TABLE printer_group OWNER TO floreant;
--
-- TOC entry 296 (class 1259 OID 68171)
-- Name: printer_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE printer_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE printer_group_id_seq OWNER TO floreant;
--
-- TOC entry 4267 (class 0 OID 0)
-- Dependencies: 296
-- Name: printer_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE printer_group_id_seq OWNED BY printer_group.id;
--
-- TOC entry 297 (class 1259 OID 68173)
-- Name: printer_group_printers;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE printer_group_printers (
    printer_id integer NOT NULL,
    printer_name character varying(255)
);
ALTER TABLE printer_group_printers OWNER TO floreant;
--
-- TOC entry 298 (class 1259 OID 68176)
-- Name: purchase_order;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE purchase_order (
    id integer NOT NULL,
    order_id character varying(30),
    name character varying(30)
);
ALTER TABLE purchase_order OWNER TO floreant;
--
-- TOC entry 299 (class 1259 OID 68179)
-- Name: purchase_order_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE purchase_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE purchase_order_id_seq OWNER TO floreant;
--
-- TOC entry 4270 (class 0 OID 0)
-- Dependencies: 299
-- Name: purchase_order_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE purchase_order_id_seq OWNED BY purchase_order.id;
--
-- TOC entry 300 (class 1259 OID 68181)
-- Name: recepie;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE recepie (
    id integer NOT NULL,
    menu_item integer
);
ALTER TABLE recepie OWNER TO floreant;
--
-- TOC entry 301 (class 1259 OID 68184)
-- Name: recepie_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_id_seq OWNER TO floreant;
--
-- TOC entry 4272 (class 0 OID 0)
-- Dependencies: 301
-- Name: recepie_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_id_seq OWNED BY recepie.id;
--
-- TOC entry 302 (class 1259 OID 68186)
-- Name: recepie_item;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE recepie_item (
    id integer NOT NULL,
    percentage double precision,
    inventory_deductable boolean,
    inventory_item integer,
    recepie_id integer
);
ALTER TABLE recepie_item OWNER TO floreant;
--
-- TOC entry 303 (class 1259 OID 68189)
-- Name: recepie_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_item_id_seq OWNER TO floreant;
--
-- TOC entry 4274 (class 0 OID 0)
-- Dependencies: 303
-- Name: recepie_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_item_id_seq OWNED BY recepie_item.id;
--
-- TOC entry 304 (class 1259 OID 68191)
-- Name: restaurant;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE restaurant (
    id integer NOT NULL,
    unique_id integer,
    name character varying(120),
    address_line1 character varying(60),
    address_line2 character varying(60),
    address_line3 character varying(60),
    zip_code character varying(10),
    telephone character varying(16),
    capacity integer,
    tables integer,
    cname character varying(20),
    csymbol character varying(10),
    sc_percentage double precision,
    gratuity_percentage double precision,
    ticket_footer character varying(60),
    price_includes_tax boolean,
    allow_modifier_max_exceed boolean
);
ALTER TABLE restaurant OWNER TO floreant;
--
-- TOC entry 305 (class 1259 OID 68194)
-- Name: restaurant_properties;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE restaurant_properties (
    id integer NOT NULL,
    property_value character varying(1000),
    property_name character varying(255) NOT NULL
);
ALTER TABLE restaurant_properties OWNER TO floreant;
--
-- TOC entry 306 (class 1259 OID 68200)
-- Name: shift;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE shift (
    id integer NOT NULL,
    name character varying(60) NOT NULL,
    start_time timestamp without time zone,
    end_time timestamp without time zone,
    shift_len bigint
);
ALTER TABLE shift OWNER TO floreant;
--
-- TOC entry 307 (class 1259 OID 68203)
-- Name: shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shift_id_seq OWNER TO floreant;
--
-- TOC entry 4278 (class 0 OID 0)
-- Dependencies: 307
-- Name: shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shift_id_seq OWNED BY shift.id;
--
-- TOC entry 308 (class 1259 OID 68205)
-- Name: shop_floor;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE shop_floor (
    id integer NOT NULL,
    name character varying(60),
    occupied boolean,
    image oid
);
ALTER TABLE shop_floor OWNER TO floreant;
--
-- TOC entry 309 (class 1259 OID 68208)
-- Name: shop_floor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_id_seq OWNER TO floreant;
--
-- TOC entry 4280 (class 0 OID 0)
-- Dependencies: 309
-- Name: shop_floor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_id_seq OWNED BY shop_floor.id;
--
-- TOC entry 310 (class 1259 OID 68210)
-- Name: shop_floor_template;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE shop_floor_template (
    id integer NOT NULL,
    name character varying(60),
    default_floor boolean,
    main boolean,
    floor_id integer
);
ALTER TABLE shop_floor_template OWNER TO floreant;
--
-- TOC entry 311 (class 1259 OID 68213)
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_template_id_seq OWNER TO floreant;
--
-- TOC entry 4282 (class 0 OID 0)
-- Dependencies: 311
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_template_id_seq OWNED BY shop_floor_template.id;
--
-- TOC entry 312 (class 1259 OID 68215)
-- Name: shop_floor_template_properties;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE shop_floor_template_properties (
    id integer NOT NULL,
    property_value character varying(60),
    property_name character varying(255) NOT NULL
);
ALTER TABLE shop_floor_template_properties OWNER TO floreant;
--
-- TOC entry 313 (class 1259 OID 68218)
-- Name: shop_table;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE shop_table (
    id integer NOT NULL,
    name character varying(20),
    description character varying(60),
    capacity integer,
    x integer,
    y integer,
    floor_id integer,
    free boolean,
    serving boolean,
    booked boolean,
    dirty boolean,
    disable boolean
);
ALTER TABLE shop_table OWNER TO floreant;
--
-- TOC entry 314 (class 1259 OID 68221)
-- Name: shop_table_status;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE shop_table_status (
    id integer NOT NULL,
    table_status integer
);
ALTER TABLE shop_table_status OWNER TO floreant;
--
-- TOC entry 315 (class 1259 OID 68224)
-- Name: shop_table_type;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE shop_table_type (
    id integer NOT NULL,
    description character varying(120),
    name character varying(40)
);
ALTER TABLE shop_table_type OWNER TO floreant;
--
-- TOC entry 316 (class 1259 OID 68227)
-- Name: shop_table_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_table_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_table_type_id_seq OWNER TO floreant;
--
-- TOC entry 4287 (class 0 OID 0)
-- Dependencies: 316
-- Name: shop_table_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_table_type_id_seq OWNED BY shop_table_type.id;
--
-- TOC entry 317 (class 1259 OID 68229)
-- Name: table_booking_info;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE table_booking_info (
    id integer NOT NULL,
    from_date timestamp without time zone,
    to_date timestamp without time zone,
    guest_count integer,
    status character varying(30),
    payment_status character varying(30),
    booking_confirm character varying(30),
    booking_charge double precision,
    remaining_balance double precision,
    paid_amount double precision,
    booking_id character varying(30),
    booking_type character varying(30),
    user_id integer,
    customer_id integer
);
ALTER TABLE table_booking_info OWNER TO floreant;
--
-- TOC entry 318 (class 1259 OID 68232)
-- Name: table_booking_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE table_booking_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE table_booking_info_id_seq OWNER TO floreant;
--
-- TOC entry 4289 (class 0 OID 0)
-- Dependencies: 318
-- Name: table_booking_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE table_booking_info_id_seq OWNED BY table_booking_info.id;
--
-- TOC entry 319 (class 1259 OID 68234)
-- Name: table_booking_mapping;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE table_booking_mapping (
    booking_id integer NOT NULL,
    table_id integer NOT NULL
);
ALTER TABLE table_booking_mapping OWNER TO floreant;
--
-- TOC entry 320 (class 1259 OID 68237)
-- Name: table_ticket_num;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE table_ticket_num (
    shop_table_status_id integer NOT NULL,
    ticket_id integer,
    user_id integer,
    user_name character varying(30)
);
ALTER TABLE table_ticket_num OWNER TO floreant;
--
-- TOC entry 321 (class 1259 OID 68240)
-- Name: table_type_relation;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE table_type_relation (
    table_id integer NOT NULL,
    type_id integer NOT NULL
);
ALTER TABLE table_type_relation OWNER TO floreant;
--
-- TOC entry 322 (class 1259 OID 68243)
-- Name: tax;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE tax (
    id integer NOT NULL,
    name character varying(20) NOT NULL,
    rate double precision
);
ALTER TABLE tax OWNER TO floreant;
--
-- TOC entry 323 (class 1259 OID 68246)
-- Name: tax_group;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE tax_group (
    id character varying(128) NOT NULL,
    name character varying(20) NOT NULL
);
ALTER TABLE tax_group OWNER TO floreant;
--
-- TOC entry 324 (class 1259 OID 68249)
-- Name: tax_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE tax_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE tax_id_seq OWNER TO floreant;
--
-- TOC entry 4295 (class 0 OID 0)
-- Dependencies: 324
-- Name: tax_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE tax_id_seq OWNED BY tax.id;
--
-- TOC entry 325 (class 1259 OID 68251)
-- Name: terminal_printers;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE terminal_printers (
    id integer NOT NULL,
    terminal_id integer,
    printer_name character varying(60),
    virtual_printer_id integer
);
ALTER TABLE terminal_printers OWNER TO floreant;
--
-- TOC entry 326 (class 1259 OID 68254)
-- Name: terminal_printers_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE terminal_printers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE terminal_printers_id_seq OWNER TO floreant;
--
-- TOC entry 4297 (class 0 OID 0)
-- Dependencies: 326
-- Name: terminal_printers_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE terminal_printers_id_seq OWNED BY terminal_printers.id;
--
-- TOC entry 327 (class 1259 OID 68256)
-- Name: terminal_properties;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE terminal_properties (
    id integer NOT NULL,
    property_value character varying(255),
    property_name character varying(255) NOT NULL
);
ALTER TABLE terminal_properties OWNER TO floreant;
--
-- TOC entry 328 (class 1259 OID 68262)
-- Name: ticket_discount;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE ticket_discount (
    id integer NOT NULL,
    discount_id integer,
    name character varying(30),
    type integer,
    auto_apply boolean,
    minimum_amount integer,
    value double precision,
    ticket_id integer
);
ALTER TABLE ticket_discount OWNER TO floreant;
--
-- TOC entry 329 (class 1259 OID 68265)
-- Name: ticket_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4300 (class 0 OID 0)
-- Dependencies: 329
-- Name: ticket_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_discount_id_seq OWNED BY ticket_discount.id;
--
-- TOC entry 330 (class 1259 OID 68267)
-- Name: ticket_folio_complete;
Type: VIEW;
Schema: public;
Owner: floreant
--

CREATE VIEW ticket_folio_complete AS
 SELECT t.id,
    t.daily_folio,
    t.folio_date,
    t.branch_key,
    t.total_price,
    t.paid_amount,
    t.create_date,
    to_char((t.folio_date)::timestamp with time zone, 'DD/MM/YYYY'::text) AS folio_date_txt,
    lpad((t.daily_folio)::text, 4, '0'::text) AS folio_display,
    COALESCE(term.location, 'DEFAULT'::character varying) AS sucursal_completa,
    term.name AS terminal_name,
    to_char((t.folio_date)::timestamp with time zone, 'YYYY-MM'::text) AS periodo_mes,
    date_part('hour'::text, t.create_date) AS hora_venta,
    date_part('dow'::text, t.folio_date) AS dia_semana,
        CASE
            WHEN t.voided THEN 'CANCELADO'::text
            WHEN (t.paid_amount > (0)::double precision) THEN 'PAGADO'::text
            ELSE 'PENDIENTE'::text
        END AS status_simple
   FROM (ticket t
     LEFT JOIN terminal term ON ((t.terminal_id = term.id)));
ALTER TABLE ticket_folio_complete OWNER TO floreant;
--
-- TOC entry 331 (class 1259 OID 68272)
-- Name: ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_id_seq OWNER TO floreant;
--
-- TOC entry 4302 (class 0 OID 0)
-- Dependencies: 331
-- Name: ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_id_seq OWNED BY ticket.id;
--
-- TOC entry 332 (class 1259 OID 68274)
-- Name: ticket_item;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE ticket_item (
    id integer NOT NULL,
    item_id integer,
    item_count integer,
    item_quantity double precision,
    item_name character varying(120),
    item_unit_name character varying(20),
    group_name character varying(120),
    category_name character varying(120),
    item_price double precision,
    item_tax_rate double precision,
    sub_total double precision,
    sub_total_without_modifiers double precision,
    discount double precision,
    tax_amount double precision,
    tax_amount_without_modifiers double precision,
    total_price double precision,
    total_price_without_modifiers double precision,
    beverage boolean,
    inventory_handled boolean,
    print_to_kitchen boolean,
    treat_as_seat boolean,
    seat_number integer,
    fractional_unit boolean,
    has_modiiers boolean,
    printed_to_kitchen boolean,
    status character varying(255),
    stock_amount_adjusted boolean,
    pizza_type boolean,
    size_modifier_id integer,
    ticket_id integer,
    pg_id integer,
    pizza_section_mode integer
);
ALTER TABLE ticket_item OWNER TO floreant;
--
-- TOC entry 333 (class 1259 OID 68280)
-- Name: ticket_item_addon_relation;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE ticket_item_addon_relation (
    ticket_item_id integer NOT NULL,
    modifier_id integer NOT NULL,
    list_order integer NOT NULL
);
ALTER TABLE ticket_item_addon_relation OWNER TO floreant;
--
-- TOC entry 334 (class 1259 OID 68283)
-- Name: ticket_item_cooking_instruction;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE ticket_item_cooking_instruction (
    ticket_item_id integer NOT NULL,
    description character varying(60),
    printedtokitchen boolean,
    item_order integer NOT NULL
);
ALTER TABLE ticket_item_cooking_instruction OWNER TO floreant;
--
-- TOC entry 335 (class 1259 OID 68286)
-- Name: ticket_item_discount;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE ticket_item_discount (
    id integer NOT NULL,
    discount_id integer,
    name character varying(30),
    type integer,
    auto_apply boolean,
    minimum_quantity integer,
    value double precision,
    amount double precision,
    ticket_itemid integer
);
ALTER TABLE ticket_item_discount OWNER TO floreant;
--
-- TOC entry 336 (class 1259 OID 68289)
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4307 (class 0 OID 0)
-- Dependencies: 336
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_discount_id_seq OWNED BY ticket_item_discount.id;
--
-- TOC entry 337 (class 1259 OID 68291)
-- Name: ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 4308 (class 0 OID 0)
-- Dependencies: 337
-- Name: ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_id_seq OWNED BY ticket_item.id;
--
-- TOC entry 338 (class 1259 OID 68293)
-- Name: ticket_item_modifier;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE ticket_item_modifier (
    id integer NOT NULL,
    item_id integer,
    group_id integer,
    item_count integer,
    modifier_name character varying(120),
    modifier_price double precision,
    modifier_tax_rate double precision,
    modifier_type integer,
    subtotal_price double precision,
    total_price double precision,
    tax_amount double precision,
    info_only boolean,
    section_name character varying(20),
    multiplier_name character varying(20),
    print_to_kitchen boolean,
    section_wise_pricing boolean,
    status character varying(10),
    printed_to_kitchen boolean,
    ticket_item_id integer
);
ALTER TABLE ticket_item_modifier OWNER TO floreant;
--
-- TOC entry 339 (class 1259 OID 68296)
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 4310 (class 0 OID 0)
-- Dependencies: 339
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_modifier_id_seq OWNED BY ticket_item_modifier.id;
--
-- TOC entry 340 (class 1259 OID 68298)
-- Name: ticket_item_modifier_relation;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE ticket_item_modifier_relation (
    ticket_item_id integer NOT NULL,
    modifier_id integer NOT NULL,
    list_order integer NOT NULL
);
ALTER TABLE ticket_item_modifier_relation OWNER TO floreant;
--
-- TOC entry 341 (class 1259 OID 68301)
-- Name: ticket_properties;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE ticket_properties (
    id integer NOT NULL,
    property_value character varying(1000),
    property_name character varying(255) NOT NULL
);
ALTER TABLE ticket_properties OWNER TO floreant;
--
-- TOC entry 342 (class 1259 OID 68307)
-- Name: ticket_table_num;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE ticket_table_num (
    ticket_id integer NOT NULL,
    table_id integer
);
ALTER TABLE ticket_table_num OWNER TO floreant;
--
-- TOC entry 343 (class 1259 OID 68310)
-- Name: transaction_properties;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE transaction_properties (
    id integer NOT NULL,
    property_value character varying(255),
    property_name character varying(255) NOT NULL
);
ALTER TABLE transaction_properties OWNER TO floreant;
--
-- TOC entry 344 (class 1259 OID 68316)
-- Name: transactions;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE transactions (
    id integer NOT NULL,
    payment_type character varying(30) NOT NULL,
    global_id character varying(16),
    transaction_time timestamp without time zone,
    amount double precision,
    tips_amount double precision,
    tips_exceed_amount double precision,
    tender_amount double precision,
    transaction_type character varying(30) NOT NULL,
    custom_payment_name character varying(60),
    custom_payment_ref character varying(120),
    custom_payment_field_name character varying(60),
    payment_sub_type character varying(40) NOT NULL,
    captured boolean,
    voided boolean,
    authorizable boolean,
    card_holder_name character varying(60),
    card_number character varying(40),
    card_auth_code character varying(30),
    card_type character varying(20),
    card_transaction_id character varying(255),
    card_merchant_gateway character varying(60),
    card_reader character varying(30),
    card_aid character varying(120),
    card_arqc character varying(120),
    card_ext_data character varying(255),
    gift_cert_number character varying(64),
    gift_cert_face_value double precision,
    gift_cert_paid_amount double precision,
    gift_cert_cash_back_amount double precision,
    drawer_resetted boolean,
    note character varying(255),
    terminal_id integer,
    ticket_id integer,
    user_id integer,
    payout_reason_id integer,
    payout_recepient_id integer
);
ALTER TABLE transactions OWNER TO floreant;
--
-- TOC entry 345 (class 1259 OID 68322)
-- Name: transactions_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE transactions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE transactions_id_seq OWNER TO floreant;
--
-- TOC entry 4316 (class 0 OID 0)
-- Dependencies: 345
-- Name: transactions_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE transactions_id_seq OWNED BY transactions.id;
--
-- TOC entry 346 (class 1259 OID 68324)
-- Name: user_permission;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE user_permission (
    name character varying(40) NOT NULL
);
ALTER TABLE user_permission OWNER TO floreant;
--
-- TOC entry 347 (class 1259 OID 68327)
-- Name: user_type;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE user_type (
    id integer NOT NULL,
    p_name character varying(60)
);
ALTER TABLE user_type OWNER TO floreant;
--
-- TOC entry 348 (class 1259 OID 68330)
-- Name: user_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE user_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE user_type_id_seq OWNER TO floreant;
--
-- TOC entry 4319 (class 0 OID 0)
-- Dependencies: 348
-- Name: user_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE user_type_id_seq OWNED BY user_type.id;
--
-- TOC entry 349 (class 1259 OID 68332)
-- Name: user_user_permission;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE user_user_permission (
    permissionid integer NOT NULL,
    elt character varying(40) NOT NULL
);
ALTER TABLE user_user_permission OWNER TO floreant;
--
-- TOC entry 350 (class 1259 OID 68335)
-- Name: users;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE users (
    auto_id integer NOT NULL,
    user_id integer,
    user_pass character varying(16) NOT NULL,
    first_name character varying(30),
    last_name character varying(30),
    ssn character varying(30),
    cost_per_hour double precision,
    clocked_in boolean,
    last_clock_in_time timestamp without time zone,
    last_clock_out_time timestamp without time zone,
    phone_no character varying(20),
    is_driver boolean,
    available_for_delivery boolean,
    active boolean,
    shift_id integer,
    currentterminal integer,
    n_user_type integer
);
ALTER TABLE users OWNER TO floreant;
--
-- TOC entry 351 (class 1259 OID 68338)
-- Name: users_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE users_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE users_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4322 (class 0 OID 0)
-- Dependencies: 351
-- Name: users_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE users_auto_id_seq OWNED BY users.auto_id;
--
-- TOC entry 352 (class 1259 OID 68340)
-- Name: virtual_printer;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE virtual_printer (
    id integer NOT NULL,
    name character varying(60) NOT NULL,
    type integer,
    priority integer,
    enabled boolean
);
ALTER TABLE virtual_printer OWNER TO floreant;
--
-- TOC entry 353 (class 1259 OID 68343)
-- Name: virtual_printer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE virtual_printer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE virtual_printer_id_seq OWNER TO floreant;
--
-- TOC entry 4324 (class 0 OID 0)
-- Dependencies: 353
-- Name: virtual_printer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE virtual_printer_id_seq OWNED BY virtual_printer.id;
--
-- TOC entry 354 (class 1259 OID 68345)
-- Name: virtualprinter_order_type;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE virtualprinter_order_type (
    printer_id integer NOT NULL,
    order_type character varying(255)
);
ALTER TABLE virtualprinter_order_type OWNER TO floreant;
--
-- TOC entry 355 (class 1259 OID 68348)
-- Name: void_reasons;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE void_reasons (
    id integer NOT NULL,
    reason_text character varying(255)
);
ALTER TABLE void_reasons OWNER TO floreant;
--
-- TOC entry 356 (class 1259 OID 68351)
-- Name: void_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE void_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE void_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 4327 (class 0 OID 0)
-- Dependencies: 356
-- Name: void_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE void_reasons_id_seq OWNED BY void_reasons.id;
--
-- TOC entry 381 (class 1259 OID 69479)
-- Name: vw_reconciliation_status;
Type: VIEW;
Schema: public;
Owner: postgres
--

CREATE VIEW vw_reconciliation_status AS
 SELECT (t.closing_date)::date AS report_date,
    t.terminal_id,
    count(DISTINCT t.id) AS tickets_count,
    count(tx.id) FILTER (WHERE ((tx.voided = false) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND ((tx.payment_type)::text <> ALL ((ARRAY['REFUND'::character varying, 'VOID_TRANS'::character varying])::text[])))) AS transactions_count,
    (sum((t.total_price - t.total_discount)))::numeric(12,2) AS correct_total,
    (sum(
        CASE
            WHEN ((tx.voided = false) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND ((tx.payment_type)::text <> ALL ((ARRAY['REFUND'::character varying, 'VOID_TRANS'::character varying])::text[]))) THEN tx.amount
            ELSE (0)::double precision
        END))::numeric(12,2) AS current_system_total,
    ((sum(
        CASE
            WHEN ((tx.voided = false) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND ((tx.payment_type)::text <> ALL ((ARRAY['REFUND'::character varying, 'VOID_TRANS'::character varying])::text[]))) THEN tx.amount
            ELSE (0)::double precision
        END) - sum((t.total_price - t.total_discount))))::numeric(12,2) AS discrepancy,
        CASE
            WHEN (NULLIF(sum((t.total_price - t.total_discount)), (0)::double precision) IS NULL) THEN (0)::numeric
            ELSE round(((((sum(
            CASE
                WHEN ((tx.voided = false) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND ((tx.payment_type)::text <> ALL ((ARRAY['REFUND'::character varying, 'VOID_TRANS'::character varying])::text[]))) THEN tx.amount
                ELSE (0)::double precision
            END) - sum((t.total_price - t.total_discount))) / sum((t.total_price - t.total_discount))) * (100)::double precision))::numeric, 2)
        END AS discrepancy_percent
   FROM (ticket t
     LEFT JOIN transactions tx ON ((tx.ticket_id = t.id)))
  WHERE ((t.paid = true) AND (t.voided = false) AND ((t.closing_date)::date >= (('now'::text)::date - '7 days'::interval)))
  GROUP BY ((t.closing_date)::date), t.terminal_id;
ALTER TABLE vw_reconciliation_status OWNER TO postgres;
--
-- TOC entry 357 (class 1259 OID 68353)
-- Name: zip_code_vs_delivery_charge;
Type: TABLE;
Schema: public;
Owner: floreant
--

CREATE TABLE zip_code_vs_delivery_charge (
    auto_id integer NOT NULL,
    zip_code character varying(10) NOT NULL,
    delivery_charge double precision NOT NULL
);
ALTER TABLE zip_code_vs_delivery_charge OWNER TO floreant;
--
-- TOC entry 358 (class 1259 OID 68356)
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE zip_code_vs_delivery_charge_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE zip_code_vs_delivery_charge_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4330 (class 0 OID 0)
-- Dependencies: 358
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE zip_code_vs_delivery_charge_auto_id_seq OWNED BY zip_code_vs_delivery_charge.auto_id;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 359 (class 1259 OID 68358)
-- Name: auditoria;
Type: TABLE;
Schema: selemti;
Owner: floreant
--

CREATE TABLE auditoria (
    id bigint NOT NULL,
    quien integer,
    que text NOT NULL,
    payload jsonb,
    creado_en timestamp with time zone DEFAULT now() NOT NULL
);
ALTER TABLE auditoria OWNER TO floreant;
--
-- TOC entry 360 (class 1259 OID 68365)
-- Name: auditoria_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE auditoria_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE auditoria_id_seq OWNER TO floreant;
--
-- TOC entry 4331 (class 0 OID 0)
-- Dependencies: 360
-- Name: auditoria_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE auditoria_id_seq OWNED BY auditoria.id;
--
-- TOC entry 394 (class 1259 OID 73651)
-- Name: cache;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE cache (
    key character varying(255) NOT NULL,
    value text NOT NULL,
    expiration integer NOT NULL
);
ALTER TABLE cache OWNER TO postgres;
--
-- TOC entry 395 (class 1259 OID 73659)
-- Name: cache_locks;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE cache_locks (
    key character varying(255) NOT NULL,
    owner character varying(255) NOT NULL,
    expiration integer NOT NULL
);
ALTER TABLE cache_locks OWNER TO postgres;
--
-- TOC entry 402 (class 1259 OID 73704)
-- Name: cat_unidades;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE cat_unidades (
    id bigint NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone
);
ALTER TABLE cat_unidades OWNER TO postgres;
--
-- TOC entry 401 (class 1259 OID 73702)
-- Name: cat_unidades_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE cat_unidades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cat_unidades_id_seq OWNER TO postgres;
--
-- TOC entry 4332 (class 0 OID 0)
-- Dependencies: 401
-- Name: cat_unidades_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE cat_unidades_id_seq OWNED BY cat_unidades.id;
--
-- TOC entry 423 (class 1259 OID 77265)
-- Name: conversiones_unidad;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE conversiones_unidad (
    id integer NOT NULL,
    unidad_origen_id integer NOT NULL,
    unidad_destino_id integer NOT NULL,
    factor_conversion numeric(12,6) NOT NULL,
    formula_directa text,
    precision_estimada numeric(5,4) DEFAULT 1.0,
    activo boolean DEFAULT true,
    created_at timestamp without time zone DEFAULT now(),
    CONSTRAINT conversiones_unidad_check CHECK ((unidad_origen_id <> unidad_destino_id)),
    CONSTRAINT conversiones_unidad_factor_conversion_check CHECK ((factor_conversion > (0)::numeric))
);
ALTER TABLE conversiones_unidad OWNER TO postgres;
--
-- TOC entry 422 (class 1259 OID 77263)
-- Name: conversiones_unidad_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE conversiones_unidad_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE conversiones_unidad_id_seq OWNER TO postgres;
--
-- TOC entry 4333 (class 0 OID 0)
-- Dependencies: 422
-- Name: conversiones_unidad_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE conversiones_unidad_id_seq OWNED BY conversiones_unidad.id;
--
-- TOC entry 431 (class 1259 OID 77393)
-- Name: cost_layer;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE cost_layer (
    id bigint NOT NULL,
    item_id character varying(20) NOT NULL,
    batch_id bigint,
    ts_in timestamp without time zone NOT NULL,
    qty_in numeric(14,6) NOT NULL,
    qty_left numeric(14,6) NOT NULL,
    unit_cost numeric(14,6) NOT NULL,
    sucursal_id character varying(30),
    source_ref text,
    source_id bigint
);
ALTER TABLE cost_layer OWNER TO postgres;
--
-- TOC entry 430 (class 1259 OID 77391)
-- Name: cost_layer_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE cost_layer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cost_layer_id_seq OWNER TO postgres;
--
-- TOC entry 4334 (class 0 OID 0)
-- Dependencies: 430
-- Name: cost_layer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE cost_layer_id_seq OWNED BY cost_layer.id;
--
-- TOC entry 400 (class 1259 OID 73689)
-- Name: failed_jobs;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE failed_jobs (
    id bigint NOT NULL,
    uuid character varying(255) NOT NULL,
    connection text NOT NULL,
    queue text NOT NULL,
    payload text NOT NULL,
    exception text NOT NULL,
    failed_at timestamp(0) without time zone DEFAULT now() NOT NULL
);
ALTER TABLE failed_jobs OWNER TO postgres;
--
-- TOC entry 399 (class 1259 OID 73687)
-- Name: failed_jobs_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE failed_jobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE failed_jobs_id_seq OWNER TO postgres;
--
-- TOC entry 4335 (class 0 OID 0)
-- Dependencies: 399
-- Name: failed_jobs_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE failed_jobs_id_seq OWNED BY failed_jobs.id;
--
-- TOC entry 361 (class 1259 OID 68367)
-- Name: formas_pago;
Type: TABLE;
Schema: selemti;
Owner: floreant
--

CREATE TABLE formas_pago (
    id bigint NOT NULL,
    codigo text NOT NULL,
    payment_type text,
    transaction_type text,
    payment_sub_type text,
    custom_name text,
    custom_ref text,
    activo boolean DEFAULT true NOT NULL,
    prioridad integer DEFAULT 100 NOT NULL,
    creado_en timestamp with time zone DEFAULT now() NOT NULL
);
ALTER TABLE formas_pago OWNER TO floreant;
--
-- TOC entry 362 (class 1259 OID 68376)
-- Name: formas_pago_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE formas_pago_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE formas_pago_id_seq OWNER TO floreant;
--
-- TOC entry 4336 (class 0 OID 0)
-- Dependencies: 362
-- Name: formas_pago_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE formas_pago_id_seq OWNED BY formas_pago.id;
--
-- TOC entry 425 (class 1259 OID 77319)
-- Name: historial_costos_item;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE historial_costos_item (
    id integer NOT NULL,
    item_id character varying(20) NOT NULL,
    fecha_efectiva date NOT NULL,
    fecha_registro timestamp without time zone DEFAULT now(),
    costo_anterior numeric(10,2),
    costo_nuevo numeric(10,2),
    tipo_cambio character varying(20),
    referencia_id integer,
    referencia_tipo character varying(20),
    usuario_id integer,
    valid_from date NOT NULL,
    valid_to date,
    sys_from timestamp without time zone DEFAULT now() NOT NULL,
    sys_to timestamp without time zone,
    costo_wac numeric(12,4),
    costo_peps numeric(12,4),
    costo_ueps numeric(12,4),
    costo_estandar numeric(12,4),
    algoritmo_principal character varying(10) DEFAULT 'WAC'::character varying,
    version_datos integer DEFAULT 1,
    recalculado boolean DEFAULT false,
    fuente_datos character varying(20),
    metadata_calculo json,
    created_at timestamp without time zone DEFAULT now(),
    CONSTRAINT historial_costos_item_algoritmo_principal_check CHECK (((algoritmo_principal)::text = ANY ((ARRAY['WAC'::character varying, 'PEPS'::character varying, 'UEPS'::character varying, 'ESTANDAR'::character varying])::text[]))),
    CONSTRAINT historial_costos_item_fuente_datos_check CHECK (((fuente_datos)::text = ANY ((ARRAY['COMPRA'::character varying, 'AJUSTE'::character varying, 'REPROCESO'::character varying, 'IMPORTACION'::character varying])::text[]))),
    CONSTRAINT historial_costos_item_tipo_cambio_check CHECK (((tipo_cambio)::text = ANY ((ARRAY['COMPRA'::character varying, 'AJUSTE'::character varying, 'REPROCESO'::character varying])::text[])))
);
ALTER TABLE historial_costos_item OWNER TO postgres;
--
-- TOC entry 424 (class 1259 OID 77317)
-- Name: historial_costos_item_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE historial_costos_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE historial_costos_item_id_seq OWNER TO postgres;
--
-- TOC entry 4337 (class 0 OID 0)
-- Dependencies: 424
-- Name: historial_costos_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE historial_costos_item_id_seq OWNED BY historial_costos_item.id;
--
-- TOC entry 427 (class 1259 OID 77351)
-- Name: historial_costos_receta;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE historial_costos_receta (
    id integer NOT NULL,
    receta_version_id integer NOT NULL,
    fecha_calculo date NOT NULL,
    costo_total numeric(10,2),
    costo_porcion numeric(10,2),
    algoritmo_utilizado character varying(20),
    version_datos integer DEFAULT 1,
    metadata_calculo json,
    created_at timestamp without time zone DEFAULT now(),
    valid_from date NOT NULL,
    valid_to date,
    sys_from timestamp without time zone DEFAULT now() NOT NULL,
    sys_to timestamp without time zone
);
ALTER TABLE historial_costos_receta OWNER TO postgres;
--
-- TOC entry 426 (class 1259 OID 77349)
-- Name: historial_costos_receta_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE historial_costos_receta_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE historial_costos_receta_id_seq OWNER TO postgres;
--
-- TOC entry 4338 (class 0 OID 0)
-- Dependencies: 426
-- Name: historial_costos_receta_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE historial_costos_receta_id_seq OWNED BY historial_costos_receta.id;
--
-- TOC entry 406 (class 1259 OID 77073)
-- Name: inventory_batch;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE inventory_batch (
    id integer NOT NULL,
    item_id character varying(20) NOT NULL,
    lote_proveedor character varying(50) NOT NULL,
    fecha_recepcion date NOT NULL,
    fecha_caducidad date NOT NULL,
    temperatura_recepcion numeric(5,2),
    documento_url character varying(255),
    cantidad_original numeric(10,3) NOT NULL,
    cantidad_actual numeric(10,3) NOT NULL,
    estado character varying(20) DEFAULT 'ACTIVO'::character varying,
    ubicacion_id character varying(10) NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    CONSTRAINT inventory_batch_cantidad_actual_check CHECK ((cantidad_actual >= (0)::numeric)),
    CONSTRAINT inventory_batch_cantidad_original_check CHECK ((cantidad_original > (0)::numeric)),
    CONSTRAINT inventory_batch_check CHECK ((cantidad_actual <= cantidad_original)),
    CONSTRAINT inventory_batch_estado_check CHECK (((estado)::text = ANY ((ARRAY['ACTIVO'::character varying, 'BLOQUEADO'::character varying, 'RECALL'::character varying])::text[]))),
    CONSTRAINT inventory_batch_fecha_caducidad_check CHECK ((fecha_caducidad >= ('now'::text)::date)),
    CONSTRAINT inventory_batch_lote_proveedor_check CHECK (((length((lote_proveedor)::text) >= 1) AND (length((lote_proveedor)::text) <= 50))),
    CONSTRAINT inventory_batch_temperatura_recepcion_check CHECK (((temperatura_recepcion >= ('-30'::integer)::numeric) AND (temperatura_recepcion <= (60)::numeric))),
    CONSTRAINT inventory_batch_ubicacion_id_check CHECK (((ubicacion_id)::text ~~ 'UBIC-%'::text))
);
ALTER TABLE inventory_batch OWNER TO postgres;
--
-- TOC entry 4339 (class 0 OID 0)
-- Dependencies: 406
-- Name: TABLE inventory_batch;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE inventory_batch IS 'Lotes de inventario con trazabilidad completa';
--
-- TOC entry 405 (class 1259 OID 77071)
-- Name: inventory_batch_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE inventory_batch_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_batch_id_seq OWNER TO postgres;
--
-- TOC entry 4340 (class 0 OID 0)
-- Dependencies: 405
-- Name: inventory_batch_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE inventory_batch_id_seq OWNED BY inventory_batch.id;
--
-- TOC entry 439 (class 1259 OID 77489)
-- Name: item_vendor;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE item_vendor (
    item_id text NOT NULL,
    vendor_id text NOT NULL,
    presentacion text NOT NULL,
    unidad_presentacion_id integer NOT NULL,
    factor_a_canonica numeric(14,6) NOT NULL,
    costo_ultimo numeric(14,6) DEFAULT 0 NOT NULL,
    moneda text DEFAULT 'MXN'::text NOT NULL,
    lead_time_dias integer,
    codigo_proveedor text,
    activo boolean DEFAULT true NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    CONSTRAINT item_vendor_factor_a_canonica_check CHECK ((factor_a_canonica > (0)::numeric))
);
ALTER TABLE item_vendor OWNER TO postgres;
--
-- TOC entry 404 (class 1259 OID 77052)
-- Name: items;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE items (
    id character varying(20) NOT NULL,
    nombre character varying(100) NOT NULL,
    descripcion text,
    categoria_id character varying(10) NOT NULL,
    unidad_medida character varying(10) NOT NULL,
    perishable boolean DEFAULT false,
    temperatura_min integer,
    temperatura_max integer,
    costo_promedio numeric(10,2) DEFAULT 0.00,
    activo boolean DEFAULT true,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    unidad_medida_id integer,
    factor_conversion numeric(12,6) DEFAULT 1.0,
    unidad_compra_id integer,
    factor_compra numeric(12,6) DEFAULT 1.0,
    tipo producto_tipo,
    unidad_salida_id integer,
    CONSTRAINT items_categoria_id_check CHECK (((categoria_id)::text ~~ 'CAT-%'::text)),
    CONSTRAINT items_check CHECK (((temperatura_max IS NULL) OR (temperatura_min IS NULL) OR (temperatura_max >= temperatura_min))),
    CONSTRAINT items_costo_promedio_check CHECK ((costo_promedio >= (0)::numeric)),
    CONSTRAINT items_id_check CHECK (((id)::text ~ '^[A-Z0-9\-]{1,20}$'::text)),
    CONSTRAINT items_nombre_check CHECK ((length((nombre)::text) >= 2)),
    CONSTRAINT items_unidad_medida_check CHECK (((unidad_medida)::text = ANY ((ARRAY['KG'::character varying, 'LT'::character varying, 'PZ'::character varying, 'BULTO'::character varying, 'CAJA'::character varying])::text[])))
);
ALTER TABLE items OWNER TO postgres;
--
-- TOC entry 4341 (class 0 OID 0)
-- Dependencies: 404
-- Name: TABLE items;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE items IS 'Maestro de todos los Ã­tems del sistema';
--
-- TOC entry 398 (class 1259 OID 73679)
-- Name: job_batches;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE job_batches (
    id character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    total_jobs integer NOT NULL,
    pending_jobs integer NOT NULL,
    failed_jobs integer NOT NULL,
    failed_job_ids text NOT NULL,
    options text,
    cancelled_at integer,
    created_at integer NOT NULL,
    finished_at integer
);
ALTER TABLE job_batches OWNER TO postgres;
--
-- TOC entry 436 (class 1259 OID 77460)
-- Name: job_recalc_queue;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE job_recalc_queue (
    id bigint NOT NULL,
    scope_type text NOT NULL,
    scope_from date,
    scope_to date,
    item_id character varying(20),
    receta_id character varying(20),
    sucursal_id character varying(30),
    reason text,
    created_ts timestamp without time zone DEFAULT now() NOT NULL,
    status text DEFAULT 'PENDING'::text NOT NULL,
    result json,
    CONSTRAINT job_recalc_queue_scope_type_check CHECK ((scope_type = ANY (ARRAY['PERIODO'::text, 'ITEM'::text, 'RECETA'::text, 'SUCURSAL'::text]))),
    CONSTRAINT job_recalc_queue_status_check CHECK ((status = ANY (ARRAY['PENDING'::text, 'RUNNING'::text, 'DONE'::text, 'FAILED'::text])))
);
ALTER TABLE job_recalc_queue OWNER TO postgres;
--
-- TOC entry 435 (class 1259 OID 77458)
-- Name: job_recalc_queue_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE job_recalc_queue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE job_recalc_queue_id_seq OWNER TO postgres;
--
-- TOC entry 4342 (class 0 OID 0)
-- Dependencies: 435
-- Name: job_recalc_queue_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE job_recalc_queue_id_seq OWNED BY job_recalc_queue.id;
--
-- TOC entry 397 (class 1259 OID 73669)
-- Name: jobs;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE jobs (
    id bigint NOT NULL,
    queue character varying(255) NOT NULL,
    payload text NOT NULL,
    attempts smallint NOT NULL,
    reserved_at integer,
    available_at integer NOT NULL,
    created_at integer NOT NULL
);
ALTER TABLE jobs OWNER TO postgres;
--
-- TOC entry 396 (class 1259 OID 73667)
-- Name: jobs_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE jobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE jobs_id_seq OWNER TO postgres;
--
-- TOC entry 4343 (class 0 OID 0)
-- Dependencies: 396
-- Name: jobs_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE jobs_id_seq OWNED BY jobs.id;
--
-- TOC entry 391 (class 1259 OID 73614)
-- Name: migrations;
Type: TABLE;
Schema: selemti;
ALTER TABLE migrations OWNER TO postgres;
--
-- TOC entry 390 (class 1259 OID 73612)
-- Name: migrations_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE migrations_id_seq OWNER TO postgres;
--
-- TOC entry 4344 (class 0 OID 0)
-- Dependencies: 390
-- Name: migrations_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE migrations_id_seq OWNED BY migrations.id;
--
-- TOC entry 434 (class 1259 OID 77424)
-- Name: modificadores_pos;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE modificadores_pos (
    id integer NOT NULL,
    codigo_pos character varying(20) NOT NULL,
    nombre character varying(100) NOT NULL,
    tipo character varying(20),
    precio_extra numeric(10,2) DEFAULT 0,
    receta_modificador_id character varying(20),
    activo boolean DEFAULT true,
    CONSTRAINT modificadores_pos_tipo_check CHECK (((tipo)::text = ANY ((ARRAY['AGREGADO'::character varying, 'SUSTITUCION'::character varying, 'ELIMINACION'::character varying])::text[])))
);
ALTER TABLE modificadores_pos OWNER TO postgres;
--
-- TOC entry 433 (class 1259 OID 77422)
-- Name: modificadores_pos_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE modificadores_pos_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE modificadores_pos_id_seq OWNER TO postgres;
--
-- TOC entry 4345 (class 0 OID 0)
-- Dependencies: 433
-- Name: modificadores_pos_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE modificadores_pos_id_seq OWNED BY modificadores_pos.id;
--
-- TOC entry 408 (class 1259 OID 77097)
-- Name: mov_inv;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE mov_inv (
    id bigint NOT NULL,
    ts timestamp without time zone DEFAULT now() NOT NULL,
    item_id character varying(20) NOT NULL,
    lote_id integer,
    cantidad numeric(14,6) NOT NULL,
    qty_original numeric(14,6),
    uom_original_id integer,
    costo_unit numeric(14,6) DEFAULT 0,
    tipo character varying(20) NOT NULL,
    ref_tipo character varying(50),
    ref_id bigint,
    sucursal_id character varying(30),
    usuario_id integer,
    created_at timestamp without time zone DEFAULT now(),
    CONSTRAINT mov_inv_tipo_check CHECK (((tipo)::text = ANY ((ARRAY['ENTRADA'::character varying, 'SALIDA'::character varying, 'AJUSTE'::character varying, 'MERMA'::character varying, 'TRASPASO'::character varying])::text[])))
);
ALTER TABLE mov_inv OWNER TO postgres;
--
-- TOC entry 4346 (class 0 OID 0)
-- Dependencies: 408
-- Name: TABLE mov_inv;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE mov_inv IS 'Kardex completo de movimientos de inventario';
--
-- TOC entry 407 (class 1259 OID 77095)
-- Name: mov_inv_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE mov_inv_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE mov_inv_id_seq OWNER TO postgres;
--
-- TOC entry 4347 (class 0 OID 0)
-- Dependencies: 407
-- Name: mov_inv_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE mov_inv_id_seq OWNED BY mov_inv.id;
--
-- TOC entry 415 (class 1259 OID 77194)
-- Name: op_produccion_cab;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE op_produccion_cab (
    id integer NOT NULL,
    receta_version_id integer NOT NULL,
    cantidad_planeada numeric(10,3) NOT NULL,
    cantidad_real numeric(10,3),
    fecha_produccion date NOT NULL,
    estado character varying(20) DEFAULT 'PENDIENTE'::character varying,
    lote_resultado character varying(50),
    usuario_responsable integer,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    CONSTRAINT op_produccion_cab_cantidad_planeada_check CHECK ((cantidad_planeada > (0)::numeric)),
    CONSTRAINT op_produccion_cab_estado_check CHECK (((estado)::text = ANY ((ARRAY['PENDIENTE'::character varying, 'EN_PROCESO'::character varying, 'COMPLETADA'::character varying, 'CANCELADA'::character varying])::text[])))
);
ALTER TABLE op_produccion_cab OWNER TO postgres;
--
-- TOC entry 4348 (class 0 OID 0)
-- Dependencies: 415
-- Name: TABLE op_produccion_cab;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE op_produccion_cab IS 'Ã“rdenes de producciÃ³n para elaborados';
--
-- TOC entry 414 (class 1259 OID 77192)
-- Name: op_produccion_cab_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE op_produccion_cab_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE op_produccion_cab_id_seq OWNER TO postgres;
--
-- TOC entry 4349 (class 0 OID 0)
-- Dependencies: 414
-- Name: op_produccion_cab_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE op_produccion_cab_id_seq OWNED BY op_produccion_cab.id;
--
-- TOC entry 441 (class 1259 OID 77531)
-- Name: param_sucursal;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE param_sucursal (
    id integer NOT NULL,
    sucursal_id text NOT NULL,
    consumo consumo_policy DEFAULT 'FEFO'::consumo_policy NOT NULL,
    tolerancia_precorte_pct numeric(8,4) DEFAULT 0.02,
    tolerancia_corte_abs numeric(12,4) DEFAULT 50.0,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL
);
ALTER TABLE param_sucursal OWNER TO postgres;
--
-- TOC entry 440 (class 1259 OID 77529)
-- Name: param_sucursal_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE param_sucursal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE param_sucursal_id_seq OWNER TO postgres;
--
-- TOC entry 4350 (class 0 OID 0)
-- Dependencies: 440
-- Name: param_sucursal_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE param_sucursal_id_seq OWNED BY param_sucursal.id;
--
-- TOC entry 392 (class 1259 OID 73633)
-- Name: password_reset_tokens;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE password_reset_tokens (
    email character varying(255) NOT NULL,
    token character varying(255) NOT NULL,
    created_at timestamp(0) without time zone
);
ALTER TABLE password_reset_tokens OWNER TO postgres;
--
-- TOC entry 447 (class 1259 OID 77589)
-- Name: perdida_log;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE perdida_log (
    id bigint NOT NULL,
    ts timestamp without time zone DEFAULT now() NOT NULL,
    item_id text NOT NULL,
    lote_id bigint,
    sucursal_id text,
    clase merma_clase NOT NULL,
    motivo text,
    qty_canonica numeric(14,6) NOT NULL,
    qty_original numeric(14,6),
    uom_original_id integer,
    evidencia_url text,
    usuario_id integer,
    ref_tipo text,
    ref_id bigint,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    CONSTRAINT perdida_log_qty_canonica_check CHECK ((qty_canonica > (0)::numeric))
);
ALTER TABLE perdida_log OWNER TO postgres;
--
-- TOC entry 446 (class 1259 OID 77587)
-- Name: perdida_log_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE perdida_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE perdida_log_id_seq OWNER TO postgres;
--
-- TOC entry 4351 (class 0 OID 0)
-- Dependencies: 446
-- Name: perdida_log_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE perdida_log_id_seq OWNED BY perdida_log.id;
--
-- TOC entry 432 (class 1259 OID 77412)
-- Name: pos_map;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE pos_map (
    pos_system text NOT NULL,
    plu text NOT NULL,
    tipo text NOT NULL,
    receta_id text,
    receta_version_id integer,
    valid_from date NOT NULL,
    valid_to date,
    sys_from timestamp without time zone DEFAULT now() NOT NULL,
    sys_to timestamp without time zone,
    meta json,
    CONSTRAINT pos_map_tipo_check CHECK ((tipo = ANY (ARRAY['PLATO'::text, 'MODIFICADOR'::text, 'COMBO'::text])))
);
ALTER TABLE pos_map OWNER TO postgres;
--
-- TOC entry 363 (class 1259 OID 68378)
-- Name: postcorte;
Type: TABLE;
Schema: selemti;
Owner: floreant
--

CREATE TABLE postcorte (
    id bigint NOT NULL,
    sesion_id bigint NOT NULL,
    sistema_efectivo_esperado numeric(12,2) DEFAULT 0 NOT NULL,
    declarado_efectivo numeric(12,2) DEFAULT 0 NOT NULL,
    diferencia_efectivo numeric(12,2) DEFAULT 0 NOT NULL,
    veredicto_efectivo text DEFAULT 'CUADRA'::text NOT NULL,
    sistema_tarjetas numeric(12,2) DEFAULT 0 NOT NULL,
    declarado_tarjetas numeric(12,2) DEFAULT 0 NOT NULL,
    diferencia_tarjetas numeric(12,2) DEFAULT 0 NOT NULL,
    veredicto_tarjetas text DEFAULT 'CUADRA'::text NOT NULL,
    creado_en timestamp with time zone DEFAULT now() NOT NULL,
    creado_por integer,
    notas text,
    sistema_transferencias numeric(12,2) DEFAULT 0 NOT NULL,
    declarado_transferencias numeric(12,2) DEFAULT 0 NOT NULL,
    diferencia_transferencias numeric(12,2) DEFAULT 0 NOT NULL,
    veredicto_transferencias text DEFAULT 'CUADRA'::text NOT NULL,
    validado boolean DEFAULT false NOT NULL,
    validado_por integer,
    validado_en timestamp with time zone,
    CONSTRAINT postcorte_veredicto_efectivo_check CHECK ((veredicto_efectivo = ANY (ARRAY['CUADRA'::text, 'A_FAVOR'::text, 'EN_CONTRA'::text]))),
    CONSTRAINT postcorte_veredicto_tarjetas_check CHECK ((veredicto_tarjetas = ANY (ARRAY['CUADRA'::text, 'A_FAVOR'::text, 'EN_CONTRA'::text]))),
    CONSTRAINT postcorte_veredicto_transfer_check CHECK ((veredicto_transferencias = ANY (ARRAY['CUADRA'::text, 'A_FAVOR'::text, 'EN_CONTRA'::text])))
);
ALTER TABLE postcorte OWNER TO floreant;
--
-- TOC entry 4352 (class 0 OID 0)
-- Dependencies: 363
-- Name: COLUMN postcorte.validado;
Type: COMMENT;
Schema: selemti;
Owner: floreant
--

COMMENT ON COLUMN postcorte.validado IS 'TRUE cuando el supervisor valida/cierra el postcorte';
--
-- TOC entry 364 (class 1259 OID 68401)
-- Name: postcorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE postcorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE postcorte_id_seq OWNER TO floreant;
--
-- TOC entry 4353 (class 0 OID 0)
-- Dependencies: 364
-- Name: postcorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE postcorte_id_seq OWNED BY postcorte.id;
--
-- TOC entry 365 (class 1259 OID 68403)
-- Name: precorte;
Type: TABLE;
Schema: selemti;
Owner: floreant
--

CREATE TABLE precorte (
    id bigint NOT NULL,
    sesion_id bigint NOT NULL,
    declarado_efectivo numeric(12,2) DEFAULT 0 NOT NULL,
    declarado_otros numeric(12,2) DEFAULT 0 NOT NULL,
    estatus text DEFAULT 'PENDIENTE'::text NOT NULL,
    creado_en timestamp with time zone DEFAULT now() NOT NULL,
    creado_por integer,
    ip_cliente inet,
    notas text,
    CONSTRAINT precorte_estatus_check CHECK ((estatus = ANY (ARRAY['PENDIENTE'::text, 'ENVIADO'::text, 'APROBADO'::text, 'RECHAZADO'::text])))
);
ALTER TABLE precorte OWNER TO floreant;
--
-- TOC entry 366 (class 1259 OID 68414)
-- Name: precorte_efectivo;
Type: TABLE;
Schema: selemti;
Owner: floreant
--

CREATE TABLE precorte_efectivo (
    id bigint NOT NULL,
    precorte_id bigint NOT NULL,
    denominacion numeric(12,2) NOT NULL,
    cantidad integer NOT NULL,
    subtotal numeric(12,2) DEFAULT 0 NOT NULL
);
ALTER TABLE precorte_efectivo OWNER TO floreant;
--
-- TOC entry 367 (class 1259 OID 68418)
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_efectivo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_efectivo_id_seq OWNER TO floreant;
--
-- TOC entry 4354 (class 0 OID 0)
-- Dependencies: 367
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_efectivo_id_seq OWNED BY precorte_efectivo.id;
--
-- TOC entry 368 (class 1259 OID 68420)
-- Name: precorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_id_seq OWNER TO floreant;
--
-- TOC entry 4355 (class 0 OID 0)
-- Dependencies: 368
-- Name: precorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_id_seq OWNED BY precorte.id;
--
-- TOC entry 369 (class 1259 OID 68422)
-- Name: precorte_otros;
Type: TABLE;
Schema: selemti;
Owner: floreant
--

CREATE TABLE precorte_otros (
    id bigint NOT NULL,
    precorte_id bigint NOT NULL,
    tipo text NOT NULL,
    monto numeric(12,2) DEFAULT 0 NOT NULL,
    referencia text,
    evidencia_url text,
    notas text,
    creado_en timestamp with time zone DEFAULT now() NOT NULL
);
ALTER TABLE precorte_otros OWNER TO floreant;
--
-- TOC entry 370 (class 1259 OID 68430)
-- Name: precorte_otros_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_otros_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_otros_id_seq OWNER TO floreant;
--
-- TOC entry 4356 (class 0 OID 0)
-- Dependencies: 370
-- Name: precorte_otros_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_otros_id_seq OWNED BY precorte_otros.id;
--
-- TOC entry 438 (class 1259 OID 77475)
-- Name: recalc_log;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE recalc_log (
    id bigint NOT NULL,
    job_id bigint,
    step text,
    started_ts timestamp without time zone,
    ended_ts timestamp without time zone,
    ok boolean,
    details json
);
ALTER TABLE recalc_log OWNER TO postgres;
--
-- TOC entry 437 (class 1259 OID 77473)
-- Name: recalc_log_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE recalc_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recalc_log_id_seq OWNER TO postgres;
--
-- TOC entry 4357 (class 0 OID 0)
-- Dependencies: 437
-- Name: recalc_log_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE recalc_log_id_seq OWNED BY recalc_log.id;
--
-- TOC entry 409 (class 1259 OID 77122)
-- Name: receta_cab;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE receta_cab (
    id character varying(20) NOT NULL,
    nombre_plato character varying(100) NOT NULL,
    codigo_plato_pos character varying(20),
    categoria_plato character varying(50),
    porciones_standard integer DEFAULT 1,
    instrucciones_preparacion text,
    tiempo_preparacion_min integer,
    costo_standard_porcion numeric(10,2) DEFAULT 0,
    precio_venta_sugerido numeric(10,2) DEFAULT 0,
    activo boolean DEFAULT true,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    CONSTRAINT receta_cab_id_check CHECK (((id)::text ~ '^REC-[A-Z0-9\-]+$'::text)),
    CONSTRAINT receta_cab_porciones_standard_check CHECK ((porciones_standard > 0))
);
ALTER TABLE receta_cab OWNER TO postgres;
--
-- TOC entry 4358 (class 0 OID 0)
-- Dependencies: 409
-- Name: TABLE receta_cab;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_cab IS 'Cabecera de recetas y platos del menÃº';
--
-- TOC entry 413 (class 1259 OID 77168)
-- Name: receta_det;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE receta_det (
    id integer NOT NULL,
    receta_version_id integer NOT NULL,
    item_id character varying(20) NOT NULL,
    cantidad numeric(10,4) NOT NULL,
    unidad_medida character varying(10) NOT NULL,
    merma_porcentaje numeric(5,2) DEFAULT 0,
    instrucciones_especificas text,
    orden integer DEFAULT 1,
    created_at timestamp without time zone DEFAULT now(),
    CONSTRAINT receta_det_cantidad_check CHECK ((cantidad > (0)::numeric)),
    CONSTRAINT receta_det_merma_porcentaje_check CHECK (((merma_porcentaje >= (0)::numeric) AND (merma_porcentaje <= (100)::numeric)))
);
ALTER TABLE receta_det OWNER TO postgres;
--
-- TOC entry 4359 (class 0 OID 0)
-- Dependencies: 413
-- Name: TABLE receta_det;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_det IS 'Detalle de ingredientes por versiÃ³n de receta';
--
-- TOC entry 412 (class 1259 OID 77166)
-- Name: receta_det_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_det_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_det_id_seq OWNER TO postgres;
--
-- TOC entry 4360 (class 0 OID 0)
-- Dependencies: 412
-- Name: receta_det_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_det_id_seq OWNED BY receta_det.id;
--
-- TOC entry 429 (class 1259 OID 77370)
-- Name: receta_shadow;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE receta_shadow (
    id integer NOT NULL,
    codigo_plato_pos character varying(20) NOT NULL,
    nombre_plato character varying(100) NOT NULL,
    estado character varying(15) DEFAULT 'INFERIDA'::character varying,
    confianza numeric(5,4) DEFAULT 0.0,
    total_ventas_analizadas integer DEFAULT 0,
    fecha_primer_venta date,
    fecha_ultima_venta date,
    frecuencia_dias numeric(10,2),
    ingredientes_inferidos json,
    usuario_validador integer,
    fecha_validacion timestamp without time zone,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    CONSTRAINT receta_shadow_confianza_check CHECK (((confianza >= (0)::numeric) AND (confianza <= (1)::numeric))),
    CONSTRAINT receta_shadow_estado_check CHECK (((estado)::text = ANY ((ARRAY['INFERIDA'::character varying, 'VALIDADA'::character varying, 'DESCARTADA'::character varying])::text[])))
);
ALTER TABLE receta_shadow OWNER TO postgres;
--
-- TOC entry 428 (class 1259 OID 77368)
-- Name: receta_shadow_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_shadow_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_shadow_id_seq OWNER TO postgres;
--
-- TOC entry 4361 (class 0 OID 0)
-- Dependencies: 428
-- Name: receta_shadow_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_shadow_id_seq OWNED BY receta_shadow.id;
--
-- TOC entry 411 (class 1259 OID 77142)
-- Name: receta_version;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE receta_version (
    id integer NOT NULL,
    receta_id character varying(20) NOT NULL,
    version integer DEFAULT 1 NOT NULL,
    descripcion_cambios text,
    fecha_efectiva date NOT NULL,
    version_publicada boolean DEFAULT false,
    usuario_publicador integer,
    fecha_publicacion timestamp without time zone,
    created_at timestamp without time zone DEFAULT now()
);
ALTER TABLE receta_version OWNER TO postgres;
--
-- TOC entry 4362 (class 0 OID 0)
-- Dependencies: 411
-- Name: TABLE receta_version;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_version IS 'Control de versiones de recetas';
--
-- TOC entry 410 (class 1259 OID 77140)
-- Name: receta_version_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_version_id_seq OWNER TO postgres;
--
-- TOC entry 4363 (class 0 OID 0)
-- Dependencies: 410
-- Name: receta_version_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_version_id_seq OWNED BY receta_version.id;
--
-- TOC entry 371 (class 1259 OID 68432)
-- Name: sesion_cajon;
Type: TABLE;
Schema: selemti;
Owner: floreant
--

CREATE TABLE sesion_cajon (
    id bigint NOT NULL,
    sucursal text,
    terminal_id integer NOT NULL,
    terminal_nombre text,
    cajero_usuario_id integer NOT NULL,
    apertura_ts timestamp with time zone DEFAULT now() NOT NULL,
    cierre_ts timestamp with time zone,
    estatus text DEFAULT 'ACTIVA'::text NOT NULL,
    opening_float numeric(12,2) DEFAULT 0 NOT NULL,
    closing_float numeric(12,2),
    dah_evento_id integer,
    skipped_precorte boolean DEFAULT false NOT NULL,
    CONSTRAINT sesion_cajon_estatus_check CHECK ((estatus = ANY (ARRAY['ACTIVA'::text, 'LISTO_PARA_CORTE'::text, 'CERRADA'::text])))
);
ALTER TABLE sesion_cajon OWNER TO floreant;
--
-- TOC entry 372 (class 1259 OID 68443)
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE sesion_cajon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE sesion_cajon_id_seq OWNER TO floreant;
--
-- TOC entry 4364 (class 0 OID 0)
-- Dependencies: 372
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE sesion_cajon_id_seq OWNED BY sesion_cajon.id;
--
-- TOC entry 393 (class 1259 OID 73641)
-- Name: sessions;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE sessions (
    id character varying(255) NOT NULL,
    user_id bigint,
    ip_address character varying(45),
    user_agent text,
    payload text NOT NULL,
    last_activity integer NOT NULL
);
ALTER TABLE sessions OWNER TO postgres;
--
-- TOC entry 443 (class 1259 OID 77549)
-- Name: stock_policy;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE stock_policy (
    id bigint NOT NULL,
    item_id text NOT NULL,
    sucursal_id text NOT NULL,
    almacen_id text,
    min_qty numeric(14,6) DEFAULT 0 NOT NULL,
    max_qty numeric(14,6) DEFAULT 0 NOT NULL,
    reorder_lote numeric(14,6),
    activo boolean DEFAULT true NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);
ALTER TABLE stock_policy OWNER TO postgres;
--
-- TOC entry 442 (class 1259 OID 77547)
-- Name: stock_policy_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE stock_policy_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE stock_policy_id_seq OWNER TO postgres;
--
-- TOC entry 4365 (class 0 OID 0)
-- Dependencies: 442
-- Name: stock_policy_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE stock_policy_id_seq OWNED BY stock_policy.id;
--
-- TOC entry 445 (class 1259 OID 77570)
-- Name: sucursal_almacen_terminal;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE sucursal_almacen_terminal (
    id integer NOT NULL,
    sucursal_id text NOT NULL,
    almacen_id text NOT NULL,
    terminal_id integer,
    location text,
    descripcion text,
    activo boolean DEFAULT true NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);
ALTER TABLE sucursal_almacen_terminal OWNER TO postgres;
--
-- TOC entry 444 (class 1259 OID 77568)
-- Name: sucursal_almacen_terminal_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE sucursal_almacen_terminal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE sucursal_almacen_terminal_id_seq OWNER TO postgres;
--
-- TOC entry 4366 (class 0 OID 0)
-- Dependencies: 444
-- Name: sucursal_almacen_terminal_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE sucursal_almacen_terminal_id_seq OWNED BY sucursal_almacen_terminal.id;
--
-- TOC entry 449 (class 1259 OID 77623)
-- Name: ticket_det_consumo;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE ticket_det_consumo (
    id bigint NOT NULL,
    ticket_id bigint NOT NULL,
    ticket_det_id bigint NOT NULL,
    item_id text NOT NULL,
    lote_id bigint,
    qty_canonica numeric(14,6) NOT NULL,
    qty_original numeric(14,6),
    uom_original_id integer,
    sucursal_id text,
    ref_tipo text,
    ref_id bigint,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    CONSTRAINT ticket_det_consumo_qty_canonica_check CHECK ((qty_canonica > (0)::numeric))
);
ALTER TABLE ticket_det_consumo OWNER TO postgres;
--
-- TOC entry 448 (class 1259 OID 77621)
-- Name: ticket_det_consumo_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_det_consumo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_det_consumo_id_seq OWNER TO postgres;
--
-- TOC entry 4367 (class 0 OID 0)
-- Dependencies: 448
-- Name: ticket_det_consumo_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_det_consumo_id_seq OWNED BY ticket_det_consumo.id;
--
-- TOC entry 417 (class 1259 OID 77217)
-- Name: ticket_venta_cab;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE ticket_venta_cab (
    id bigint NOT NULL,
    numero_ticket character varying(50) NOT NULL,
    fecha_venta timestamp without time zone DEFAULT now() NOT NULL,
    sucursal_id character varying(10) NOT NULL,
    terminal_id integer,
    total_venta numeric(12,2) DEFAULT 0,
    estado character varying(20) DEFAULT 'ABIERTO'::character varying,
    created_at timestamp without time zone DEFAULT now(),
    CONSTRAINT ticket_venta_cab_estado_check CHECK (((estado)::text = ANY ((ARRAY['ABIERTO'::character varying, 'CERRADO'::character varying, 'ANULADO'::character varying])::text[])))
);
ALTER TABLE ticket_venta_cab OWNER TO postgres;
--
-- TOC entry 416 (class 1259 OID 77215)
-- Name: ticket_venta_cab_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_venta_cab_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_venta_cab_id_seq OWNER TO postgres;
--
-- TOC entry 4368 (class 0 OID 0)
-- Dependencies: 416
-- Name: ticket_venta_cab_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_venta_cab_id_seq OWNED BY ticket_venta_cab.id;
--
-- TOC entry 419 (class 1259 OID 77232)
-- Name: ticket_venta_det;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE ticket_venta_det (
    id bigint NOT NULL,
    ticket_id bigint NOT NULL,
    item_id character varying(20) NOT NULL,
    cantidad numeric(10,3) NOT NULL,
    precio_unitario numeric(10,2) NOT NULL,
    subtotal numeric(12,2) NOT NULL,
    receta_version_id integer,
    created_at timestamp without time zone DEFAULT now(),
    receta_shadow_id integer,
    reprocesado boolean DEFAULT false,
    version_reproceso integer DEFAULT 1,
    modificadores_aplicados json,
    CONSTRAINT ticket_venta_det_cantidad_check CHECK ((cantidad > (0)::numeric))
);
ALTER TABLE ticket_venta_det OWNER TO postgres;
--
-- TOC entry 418 (class 1259 OID 77230)
-- Name: ticket_venta_det_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_venta_det_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_venta_det_id_seq OWNER TO postgres;
--
-- TOC entry 4369 (class 0 OID 0)
-- Dependencies: 418
-- Name: ticket_venta_det_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_venta_det_id_seq OWNED BY ticket_venta_det.id;
--
-- TOC entry 421 (class 1259 OID 77247)
-- Name: unidades_medida;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE unidades_medida (
    id integer NOT NULL,
    codigo character varying(10) NOT NULL,
    nombre character varying(50) NOT NULL,
    tipo character varying(10) NOT NULL,
    categoria character varying(20),
    es_base boolean DEFAULT false,
    factor_conversion_base numeric(12,6) DEFAULT 1.0,
    decimales integer DEFAULT 2,
    created_at timestamp without time zone DEFAULT now(),
    CONSTRAINT unidades_medida_categoria_check CHECK (((categoria)::text = ANY ((ARRAY['METRICO'::character varying, 'IMPERIAL'::character varying, 'CULINARIO'::character varying])::text[]))),
    CONSTRAINT unidades_medida_codigo_check CHECK (((codigo)::text ~ '^[A-Z]{2,5}$'::text)),
    CONSTRAINT unidades_medida_decimales_check CHECK (((decimales >= 0) AND (decimales <= 6))),
    CONSTRAINT unidades_medida_tipo_check CHECK (((tipo)::text = ANY ((ARRAY['PESO'::character varying, 'VOLUMEN'::character varying, 'UNIDAD'::character varying, 'TIEMPO'::character varying])::text[])))
);
ALTER TABLE unidades_medida OWNER TO postgres;
--
-- TOC entry 420 (class 1259 OID 77245)
-- Name: unidades_medida_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE unidades_medida_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE unidades_medida_id_seq OWNER TO postgres;
--
-- TOC entry 4370 (class 0 OID 0)
-- Dependencies: 420
-- Name: unidades_medida_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE unidades_medida_id_seq OWNED BY unidades_medida.id;
--
-- TOC entry 403 (class 1259 OID 77035)
-- Name: user_roles;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE user_roles (
    user_id integer NOT NULL,
    role_id character varying(20) NOT NULL,
    assigned_at timestamp without time zone DEFAULT now(),
    assigned_by integer,
    CONSTRAINT user_roles_role_id_check CHECK (((role_id)::text = ANY ((ARRAY['GERENTE'::character varying, 'CHEF'::character varying, 'ALMACEN'::character varying, 'CAJERO'::character varying, 'AUDITOR'::character varying, 'SISTEMA'::character varying])::text[])))
);
ALTER TABLE user_roles OWNER TO postgres;
--
-- TOC entry 4371 (class 0 OID 0)
-- Dependencies: 403
-- Name: TABLE user_roles;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE user_roles IS 'AsignaciÃ³n de roles a usuarios (RBAC)';
--
-- TOC entry 454 (class 1259 OID 77685)
-- Name: users;
Type: TABLE;
Schema: selemti;
ALTER TABLE users OWNER TO postgres;
--
-- TOC entry 4372 (class 0 OID 0)
-- Dependencies: 454
-- Name: TABLE users;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE users IS 'Usuarios del sistema con sus credenciales y estado';
--
-- TOC entry 453 (class 1259 OID 77683)
-- Name: users_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE users_id_seq OWNER TO postgres;
--
-- TOC entry 4373 (class 0 OID 0)
-- Dependencies: 453
-- Name: users_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;
--
-- TOC entry 451 (class 1259 OID 77670)
-- Name: v_ingenieria_menu_completa;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW v_ingenieria_menu_completa AS
 SELECT rc.id AS receta_id,
    rc.nombre_plato,
    rc.codigo_plato_pos,
    rc.precio_venta_sugerido,
    rc.costo_standard_porcion AS costo_actual,
    (rc.precio_venta_sugerido - rc.costo_standard_porcion) AS margen_actual,
        CASE
            WHEN (rc.precio_venta_sugerido > (0)::numeric) THEN (((rc.precio_venta_sugerido - rc.costo_standard_porcion) / rc.precio_venta_sugerido) * (100)::numeric)
            ELSE (0)::numeric
        END AS porcentaje_margen,
    (rc.costo_standard_porcion > (rc.precio_venta_sugerido * 0.4)) AS alerta_costo_alto,
    (( SELECT count(*) AS count
           FROM ticket_venta_det td
          WHERE ((td.item_id)::text = (rc.id)::text)) = 0) AS alerta_sin_ventas
   FROM receta_cab rc
  WHERE (rc.activo = true);
ALTER TABLE v_ingenieria_menu_completa OWNER TO postgres;
--
-- TOC entry 452 (class 1259 OID 77675)
-- Name: v_merma_por_item;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW v_merma_por_item AS
 SELECT m.item_id,
    (date_trunc('week'::text, m.ts))::date AS semana,
    sum(
        CASE
            WHEN ((m.tipo)::text = 'MERMA'::text) THEN m.cantidad
            ELSE (0)::numeric
        END) AS qty_mermada,
    sum(
        CASE
            WHEN ((m.tipo)::text = ANY ((ARRAY['RECEPCION'::character varying, 'COMPRA'::character varying])::text[])) THEN m.cantidad
            ELSE (0)::numeric
        END) AS qty_recibida,
        CASE
            WHEN (sum(
            CASE
                WHEN ((m.tipo)::text = ANY ((ARRAY['RECEPCION'::character varying, 'COMPRA'::character varying])::text[])) THEN m.cantidad
                ELSE (0)::numeric
            END) > (0)::numeric) THEN round(((100.0 * sum(
            CASE
                WHEN ((m.tipo)::text = 'MERMA'::text) THEN m.cantidad
                ELSE (0)::numeric
            END)) / NULLIF(sum(
            CASE
                WHEN ((m.tipo)::text = ANY ((ARRAY['RECEPCION'::character varying, 'COMPRA'::character varying])::text[])) THEN m.cantidad
                ELSE (0)::numeric
            END), (0)::numeric)), 2)
            ELSE (0)::numeric
        END AS merma_pct
   FROM mov_inv m
  GROUP BY m.item_id, ((date_trunc('week'::text, m.ts))::date);
ALTER TABLE v_merma_por_item OWNER TO postgres;
--
-- TOC entry 450 (class 1259 OID 77665)
-- Name: v_stock_actual;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW v_stock_actual AS
 SELECT i.id AS item_id,
    i.nombre,
    COALESCE(sum(
        CASE
            WHEN ((m.tipo)::text = 'ENTRADA'::text) THEN m.cantidad
            WHEN ((m.tipo)::text = 'SALIDA'::text) THEN (- m.cantidad)
            ELSE (0)::numeric
        END), (0)::numeric) AS stock_actual
   FROM (items i
     LEFT JOIN mov_inv m ON (((i.id)::text = (m.item_id)::text)))
  GROUP BY i.id, i.nombre;
ALTER TABLE v_stock_actual OWNER TO postgres;
--
-- TOC entry 383 (class 1259 OID 69489)
-- Name: vw_anulaciones_por_terminal_dia;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW vw_anulaciones_por_terminal_dia AS
 SELECT tk.terminal_id,
    date(tx.transaction_time) AS fecha,
    (sum(
        CASE
            WHEN ((tx.payment_type)::text = ANY ((ARRAY['REFUND'::character varying, 'VOID_TRANS'::character varying])::text[])) THEN tx.amount
            ELSE (0)::double precision
        END))::numeric(12,2) AS anulaciones_total
   FROM (public.transactions tx
     JOIN public.ticket tk ON ((tk.id = tx.ticket_id)))
  GROUP BY tk.terminal_id, (date(tx.transaction_time));
ALTER TABLE vw_anulaciones_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 375 (class 1259 OID 68455)
-- Name: vw_sesion_reembolsos_efectivo;
Type: VIEW;
Schema: selemti;
Owner: floreant
--

CREATE VIEW vw_sesion_reembolsos_efectivo AS
 WITH tx AS (
         SELECT s.id AS sesion_id,
            t.payment_sub_type,
            COALESCE(fp.codigo, fn_normalizar_forma_pago((t.payment_type)::text, (t.transaction_type)::text, (t.payment_sub_type)::text, (t.custom_payment_name)::text)) AS codigo_fp,
            (t.amount)::numeric AS monto
           FROM ((sesion_cajon s
             JOIN public.transactions t ON (((t.transaction_time >= s.apertura_ts) AND (t.transaction_time < COALESCE(s.cierre_ts, now())) AND (t.terminal_id = s.terminal_id) AND (t.user_id = s.cajero_usuario_id))))
             LEFT JOIN formas_pago fp ON (((fp.payment_type = (t.payment_type)::text) AND (COALESCE(fp.transaction_type, ''::text) = (COALESCE(t.transaction_type, ''::character varying))::text) AND (COALESCE(fp.payment_sub_type, ''::text) = (COALESCE(t.payment_sub_type, ''::character varying))::text) AND (COALESCE(fp.custom_name, ''::text) = (COALESCE(t.custom_payment_name, ''::character varying))::text) AND (COALESCE(fp.custom_ref, ''::text) = (COALESCE(t.custom_payment_ref, ''::character varying))::text))))
        )
 SELECT tx.sesion_id,
    (sum(
        CASE
            WHEN ((tx.codigo_fp = 'REFUND'::text) AND (upper((COALESCE(tx.payment_sub_type, ''::character varying))::text) = 'CASH'::text)) THEN tx.monto
            ELSE (0)::numeric
        END))::numeric(12,2) AS reembolsos_efectivo
   FROM tx
  GROUP BY tx.sesion_id;
ALTER TABLE vw_sesion_reembolsos_efectivo OWNER TO floreant;
--
-- TOC entry 376 (class 1259 OID 68460)
-- Name: vw_sesion_retiros;
Type: VIEW;
Schema: selemti;
Owner: floreant
--

CREATE VIEW vw_sesion_retiros AS
 WITH tx AS (
         SELECT s.id AS sesion_id,
            COALESCE(fp.codigo, fn_normalizar_forma_pago((t.payment_type)::text, (t.transaction_type)::text, (t.payment_sub_type)::text, (t.custom_payment_name)::text)) AS codigo_fp,
            (t.amount)::numeric AS monto
           FROM ((sesion_cajon s
             JOIN public.transactions t ON (((t.transaction_time >= s.apertura_ts) AND (t.transaction_time < COALESCE(s.cierre_ts, now())) AND (t.terminal_id = s.terminal_id) AND (t.user_id = s.cajero_usuario_id))))
             LEFT JOIN formas_pago fp ON (((fp.payment_type = (t.payment_type)::text) AND (COALESCE(fp.transaction_type, ''::text) = (COALESCE(t.transaction_type, ''::character varying))::text) AND (COALESCE(fp.payment_sub_type, ''::text) = (COALESCE(t.payment_sub_type, ''::character varying))::text) AND (COALESCE(fp.custom_name, ''::text) = (COALESCE(t.custom_payment_name, ''::character varying))::text) AND (COALESCE(fp.custom_ref, ''::text) = (COALESCE(t.custom_payment_ref, ''::character varying))::text))))
        )
 SELECT tx.sesion_id,
    (sum(
        CASE
            WHEN (tx.codigo_fp = ANY (ARRAY['PAY_OUT'::text, 'CASH_DROP'::text])) THEN tx.monto
            ELSE (0)::numeric
        END))::numeric(12,2) AS retiros
   FROM tx
  GROUP BY tx.sesion_id;
ALTER TABLE vw_sesion_retiros OWNER TO floreant;
--
-- TOC entry 377 (class 1259 OID 68465)
-- Name: vw_sesion_ventas;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW vw_sesion_ventas AS
 WITH base AS (
         SELECT s.id AS sesion_id,
            (t.amount)::numeric AS monto,
            COALESCE(fp.codigo, fn_normalizar_forma_pago((t.payment_type)::text, (t.transaction_type)::text, (t.payment_sub_type)::text, (t.custom_payment_name)::text)) AS codigo_fp
           FROM ((sesion_cajon s
             JOIN public.transactions t ON (((t.transaction_time >= s.apertura_ts) AND (t.transaction_time < COALESCE(s.cierre_ts, now())) AND (t.terminal_id = s.terminal_id))))
             LEFT JOIN formas_pago fp ON (((fp.payment_type = (t.payment_type)::text) AND (COALESCE(fp.transaction_type, ''::text) = (COALESCE(t.transaction_type, ''::character varying))::text) AND (COALESCE(fp.payment_sub_type, ''::text) = (COALESCE(t.payment_sub_type, ''::character varying))::text) AND (COALESCE(fp.custom_name, ''::text) = (COALESCE(t.custom_payment_name, ''::character varying))::text) AND (COALESCE(fp.custom_ref, ''::text) = (COALESCE(t.custom_payment_ref, ''::character varying))::text))))
          WHERE ((COALESCE(t.voided, false) = false) AND ((t.transaction_type)::text = 'CREDIT'::text))
        )
 SELECT base.sesion_id,
    base.codigo_fp,
    (sum(base.monto))::numeric(12,2) AS monto
   FROM base
  GROUP BY base.sesion_id, base.codigo_fp;
ALTER TABLE vw_sesion_ventas OWNER TO postgres;
--
-- TOC entry 386 (class 1259 OID 69504)
-- Name: vw_conciliacion_efectivo;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW vw_conciliacion_efectivo AS
 WITH c AS (
         SELECT s.id AS sesion_id,
            s.opening_float,
            (sum(
                CASE
                    WHEN (v.codigo_fp = 'CASH'::text) THEN v.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_cash
           FROM (sesion_cajon s
             LEFT JOIN vw_sesion_ventas v ON ((v.sesion_id = s.id)))
          GROUP BY s.id, s.opening_float
        ), r AS (
         SELECT vw_sesion_retiros.sesion_id,
            vw_sesion_retiros.retiros
           FROM vw_sesion_retiros
        ), re AS (
         SELECT vw_sesion_reembolsos_efectivo.sesion_id,
            vw_sesion_reembolsos_efectivo.reembolsos_efectivo
           FROM vw_sesion_reembolsos_efectivo
        ), dc AS (
         SELECT p.sesion_id,
            (sum(pe.subtotal))::numeric(12,2) AS declarado_efectivo
           FROM (precorte p
             LEFT JOIN precorte_efectivo pe ON ((pe.precorte_id = p.id)))
          GROUP BY p.sesion_id
        )
 SELECT c.sesion_id,
    c.opening_float,
    c.sys_cash AS cash_in,
    (COALESCE(r.retiros, (0)::numeric))::numeric(12,2) AS cash_out,
    (COALESCE(re.reembolsos_efectivo, (0)::numeric))::numeric(12,2) AS cash_refund,
    ((((c.opening_float + c.sys_cash) - COALESCE(r.retiros, (0)::numeric)) - COALESCE(re.reembolsos_efectivo, (0)::numeric)))::numeric(12,2) AS sistema_efectivo_esperado,
    (COALESCE(dc.declarado_efectivo, (0)::numeric))::numeric(12,2) AS declarado_efectivo,
    ((COALESCE(dc.declarado_efectivo, (0)::numeric) - (((c.opening_float + c.sys_cash) - COALESCE(r.retiros, (0)::numeric)) - COALESCE(re.reembolsos_efectivo, (0)::numeric))))::numeric(12,2) AS diferencia_efectivo
   FROM (((c
     LEFT JOIN r USING (sesion_id))
     LEFT JOIN re USING (sesion_id))
     LEFT JOIN dc USING (sesion_id));
ALTER TABLE vw_conciliacion_efectivo OWNER TO postgres;
--
-- TOC entry 373 (class 1259 OID 68445)
-- Name: vw_sesion_descuentos;
Type: VIEW;
Schema: selemti;
Owner: floreant
--

CREATE VIEW vw_sesion_descuentos AS
 WITH tk_win AS (
         SELECT s.id AS sesion_id,
            tk.id AS ticket_id
           FROM (sesion_cajon s
             JOIN public.ticket tk ON (((tk.terminal_id = s.terminal_id) AND (tk.owner_id = s.cajero_usuario_id) AND (tk.create_date >= s.apertura_ts) AND (tk.create_date < COALESCE(s.cierre_ts, now())))))
        ), td_agg AS (
         SELECT td.ticket_id,
            (sum(COALESCE(td.value, (0)::double precision)))::numeric AS sum_td
           FROM public.ticket_discount td
          GROUP BY td.ticket_id
        ), tid_agg AS (
         SELECT ti.ticket_id,
            (sum(COALESCE(tid.amount, (0)::double precision)))::numeric AS sum_tid
           FROM (public.ticket_item_discount tid
             JOIN public.ticket_item ti ON ((ti.id = tid.ticket_itemid)))
          GROUP BY ti.ticket_id
        )
 SELECT tw.sesion_id,
    (COALESCE(sum(td_agg.sum_td), (0)::numeric) + COALESCE(sum(tid_agg.sum_tid), (0)::numeric)) AS descuentos
   FROM ((tk_win tw
     LEFT JOIN td_agg ON ((td_agg.ticket_id = tw.ticket_id)))
     LEFT JOIN tid_agg ON ((tid_agg.ticket_id = tw.ticket_id)))
  GROUP BY tw.sesion_id;
ALTER TABLE vw_sesion_descuentos OWNER TO floreant;
--
-- TOC entry 374 (class 1259 OID 68450)
-- Name: vw_sesion_dpr;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW vw_sesion_dpr AS
 WITH s AS (
         SELECT sesion_cajon.id,
            sesion_cajon.terminal_id,
            sesion_cajon.cajero_usuario_id,
            sesion_cajon.apertura_ts,
            COALESCE(sesion_cajon.cierre_ts, now()) AS fin_ts
           FROM sesion_cajon
        )
 SELECT s.id AS sesion_id,
    dpr.id,
    dpr.report_time,
    dpr.reg,
    dpr.ticket_count,
    dpr.begin_cash,
    dpr.net_sales,
    dpr.sales_tax,
    dpr.cash_tax,
    dpr.total_revenue,
    dpr.gross_receipts,
    dpr.giftcertreturncount,
    dpr.giftcertreturnamount,
    dpr.giftcertchangeamount,
    dpr.cash_receipt_no,
    dpr.cash_receipt_amount,
    dpr.credit_card_receipt_no,
    dpr.credit_card_receipt_amount,
    dpr.debit_card_receipt_no,
    dpr.debit_card_receipt_amount,
    dpr.refund_receipt_count,
    dpr.refund_amount,
    dpr.receipt_differential,
    dpr.cash_back,
    dpr.cash_tips,
    dpr.charged_tips,
    dpr.tips_paid,
    dpr.tips_differential,
    dpr.pay_out_no,
    dpr.pay_out_amount,
    dpr.drawer_bleed_no,
    dpr.drawer_bleed_amount,
    dpr.drawer_accountable,
    dpr.cash_to_deposit,
    dpr.variance,
    dpr.delivery_charge,
    dpr.totalvoidwst,
    dpr.totalvoid,
    dpr.totaldiscountcount,
    dpr.totaldiscountamount,
    dpr.totaldiscountsales,
    dpr.totaldiscountguest,
    dpr.totaldiscountpartysize,
    dpr.totaldiscountchecksize,
    dpr.totaldiscountpercentage,
    dpr.totaldiscountratio,
    dpr.user_id,
    dpr.terminal_id
   FROM (s
     JOIN public.drawer_pull_report dpr ON (((dpr.terminal_id = s.terminal_id) AND (dpr.report_time >= s.apertura_ts) AND (dpr.report_time < s.fin_ts))));
ALTER TABLE vw_sesion_dpr OWNER TO postgres;
--
-- TOC entry 378 (class 1259 OID 68470)
-- Name: vw_conciliacion_sesion;
Type: VIEW;
Schema: selemti;
Owner: floreant
--

CREATE VIEW vw_conciliacion_sesion AS
 WITH sys AS (
         SELECT s.id AS sesion_id,
            s.opening_float,
            (sum(
                CASE
                    WHEN (v.codigo_fp = 'CASH'::text) THEN v.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_cash,
            (sum(
                CASE
                    WHEN (v.codigo_fp = ANY (ARRAY['CREDIT'::text, 'CREDIT_CARD'::text])) THEN v.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_credito,
            (sum(
                CASE
                    WHEN (v.codigo_fp = ANY (ARRAY['DEBIT'::text, 'DEBIT_CARD'::text])) THEN v.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_debito,
            (sum(
                CASE
                    WHEN (v.codigo_fp ~~ 'CUSTOM:%'::text) THEN v.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_custom,
            (sum(
                CASE
                    WHEN (v.codigo_fp = 'TRANSFER'::text) THEN v.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_transfer,
            (sum(
                CASE
                    WHEN (v.codigo_fp = 'GIFT_CERT'::text) THEN v.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_gift
           FROM (sesion_cajon s
             LEFT JOIN vw_sesion_ventas v ON ((v.sesion_id = s.id)))
          GROUP BY s.id, s.opening_float
        ), re AS (
         SELECT vw_sesion_retiros.sesion_id,
            vw_sesion_retiros.retiros
           FROM vw_sesion_retiros
        ), cr AS (
         SELECT vw_sesion_reembolsos_efectivo.sesion_id,
            vw_sesion_reembolsos_efectivo.reembolsos_efectivo
           FROM vw_sesion_reembolsos_efectivo
        ), ds AS (
         SELECT vw_sesion_descuentos.sesion_id,
            vw_sesion_descuentos.descuentos
           FROM vw_sesion_descuentos
        ), decl_cash AS (
         SELECT p.sesion_id,
            (sum(pe.subtotal))::numeric(12,2) AS declarado_efectivo
           FROM (precorte p
             LEFT JOIN precorte_efectivo pe ON ((pe.precorte_id = p.id)))
          GROUP BY p.sesion_id
        ), decl_otros AS (
         SELECT p.sesion_id,
            (sum(
                CASE
                    WHEN (po.tipo = ANY (ARRAY['CREDITO'::text, 'CREDIT'::text, 'CREDIT_CARD'::text])) THEN po.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS decl_credito,
            (sum(
                CASE
                    WHEN (po.tipo = ANY (ARRAY['DEBITO'::text, 'DEBIT'::text, 'DEBIT_CARD'::text])) THEN po.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS decl_debito,
            (sum(
                CASE
                    WHEN (po.tipo = 'TRANSFER'::text) THEN po.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS decl_transfer,
            (sum(
                CASE
                    WHEN (po.tipo ~~ 'CUSTOM:%'::text) THEN po.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS decl_custom,
            (sum(
                CASE
                    WHEN (po.tipo = 'GIFT_CERT'::text) THEN po.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS decl_gift
           FROM (precorte p
             LEFT JOIN precorte_otros po ON ((po.precorte_id = p.id)))
          GROUP BY p.sesion_id
        ), eff AS (
         SELECT sys1.sesion_id,
            sys1.opening_float,
            (COALESCE(sys1.sys_cash, (0)::numeric))::numeric(12,2) AS cash_in,
            (COALESCE(re.retiros, (0)::numeric))::numeric(12,2) AS cash_out,
            (COALESCE(cr.reembolsos_efectivo, (0)::numeric))::numeric(12,2) AS cash_refund,
            ((((sys1.opening_float + COALESCE(sys1.sys_cash, (0)::numeric)) - COALESCE(re.retiros, (0)::numeric)) - COALESCE(cr.reembolsos_efectivo, (0)::numeric)))::numeric(12,2) AS sistema_efectivo_esperado
           FROM ((sys sys1
             LEFT JOIN re ON ((re.sesion_id = sys1.sesion_id)))
             LEFT JOIN cr ON ((cr.sesion_id = sys1.sesion_id)))
        ), tc AS (
         SELECT sys1.sesion_id,
            (((((COALESCE(sys1.sys_credito, (0)::numeric) + COALESCE(sys1.sys_debito, (0)::numeric)) + COALESCE(sys1.sys_transfer, (0)::numeric)) + COALESCE(sys1.sys_custom, (0)::numeric)) + COALESCE(sys1.sys_gift, (0)::numeric)))::numeric(12,2) AS sistema_no_efectivo
           FROM sys sys1
        )
 SELECT sys.sesion_id,
    eff.sistema_efectivo_esperado,
    (COALESCE(dc.declarado_efectivo, (0)::numeric))::numeric(12,2) AS declarado_efectivo,
    ((COALESCE(dc.declarado_efectivo, (0)::numeric) - eff.sistema_efectivo_esperado))::numeric(12,2) AS diferencia_efectivo,
        CASE
            WHEN (COALESCE(dc.declarado_efectivo, (0)::numeric) = eff.sistema_efectivo_esperado) THEN 'CUADRA'::text
            WHEN (COALESCE(dc.declarado_efectivo, (0)::numeric) > eff.sistema_efectivo_esperado) THEN 'A_FAVOR'::text
            ELSE 'EN_CONTRA'::text
        END AS veredicto_efectivo,
    sys.sys_credito,
    sys.sys_debito,
    sys.sys_transfer,
    sys.sys_custom,
    sys.sys_gift,
    dotros.decl_credito,
    dotros.decl_debito,
    dotros.decl_transfer,
    dotros.decl_custom,
    dotros.decl_gift,
    tc.sistema_no_efectivo,
    ds.descuentos AS total_descuentos,
    dpr.begin_cash,
    dpr.cash_receipt_amount,
    dpr.credit_card_receipt_amount,
    dpr.debit_card_receipt_amount,
    dpr.pay_out_amount,
    dpr.drawer_bleed_amount,
    dpr.refund_amount,
    dpr.totaldiscountamount,
    dpr.totalvoid,
    dpr.drawer_accountable,
    dpr.cash_to_deposit,
    dpr.variance,
    dpr.report_time,
    sys.sys_cash,
    tc.sistema_no_efectivo AS sys_total_tarjetas,
    (((((COALESCE(dotros.decl_credito, (0)::numeric) + COALESCE(dotros.decl_debito, (0)::numeric)) + COALESCE(dotros.decl_transfer, (0)::numeric)) + COALESCE(dotros.decl_custom, (0)::numeric)) + COALESCE(dotros.decl_gift, (0)::numeric)))::numeric(12,2) AS decl_total_tarjetas,
    ((((((COALESCE(dotros.decl_credito, (0)::numeric) + COALESCE(dotros.decl_debito, (0)::numeric)) + COALESCE(dotros.decl_transfer, (0)::numeric)) + COALESCE(dotros.decl_custom, (0)::numeric)) + COALESCE(dotros.decl_gift, (0)::numeric)) - COALESCE(tc.sistema_no_efectivo, (0)::numeric)))::numeric(12,2) AS diferencia_tarjetas
   FROM ((((((sys
     LEFT JOIN eff ON ((eff.sesion_id = sys.sesion_id)))
     LEFT JOIN decl_cash dc ON ((dc.sesion_id = sys.sesion_id)))
     LEFT JOIN decl_otros dotros ON ((dotros.sesion_id = sys.sesion_id)))
     LEFT JOIN tc ON ((tc.sesion_id = sys.sesion_id)))
     LEFT JOIN ds ON ((ds.sesion_id = sys.sesion_id)))
     LEFT JOIN vw_sesion_dpr dpr ON ((dpr.sesion_id = sys.sesion_id)))
  ORDER BY sys.sesion_id DESC;
ALTER TABLE vw_conciliacion_sesion OWNER TO floreant;
--
-- TOC entry 385 (class 1259 OID 69499)
-- Name: vw_conciliacion_tarjetas;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW vw_conciliacion_tarjetas AS
 WITH s AS (
         SELECT vw_sesion_ventas.sesion_id,
            (sum(
                CASE
                    WHEN (vw_sesion_ventas.codigo_fp = ANY (ARRAY['CREDIT'::text, 'CREDIT_CARD'::text])) THEN vw_sesion_ventas.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_credito,
            (sum(
                CASE
                    WHEN (vw_sesion_ventas.codigo_fp = ANY (ARRAY['DEBIT'::text, 'DEBIT_CARD'::text])) THEN vw_sesion_ventas.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_debito,
            (sum(
                CASE
                    WHEN (vw_sesion_ventas.codigo_fp = 'TRANSFER'::text) THEN vw_sesion_ventas.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_transfer,
            (sum(
                CASE
                    WHEN (vw_sesion_ventas.codigo_fp ~~ 'CUSTOM:%'::text) THEN vw_sesion_ventas.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_custom,
            (sum(
                CASE
                    WHEN (vw_sesion_ventas.codigo_fp = 'GIFT_CERT'::text) THEN vw_sesion_ventas.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS sys_gift
           FROM vw_sesion_ventas
          GROUP BY vw_sesion_ventas.sesion_id
        ), d AS (
         SELECT p.sesion_id,
            (sum(
                CASE
                    WHEN (po.tipo = ANY (ARRAY['CREDITO'::text, 'CREDIT'::text, 'CREDIT_CARD'::text])) THEN po.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS decl_credito,
            (sum(
                CASE
                    WHEN (po.tipo = ANY (ARRAY['DEBITO'::text, 'DEBIT'::text, 'DEBIT_CARD'::text])) THEN po.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS decl_debito,
            (sum(
                CASE
                    WHEN (po.tipo = 'TRANSFER'::text) THEN po.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS decl_transfer,
            (sum(
                CASE
                    WHEN (po.tipo ~~ 'CUSTOM:%'::text) THEN po.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS decl_custom,
            (sum(
                CASE
                    WHEN (po.tipo = 'GIFT_CERT'::text) THEN po.monto
                    ELSE (0)::numeric
                END))::numeric(12,2) AS decl_gift
           FROM (precorte p
             LEFT JOIN precorte_otros po ON ((po.precorte_id = p.id)))
          GROUP BY p.sesion_id
        )
 SELECT s.sesion_id,
    s.sys_credito,
    s.sys_debito,
    s.sys_transfer,
    s.sys_custom,
    s.sys_gift,
    (((((COALESCE(s.sys_credito, (0)::numeric) + COALESCE(s.sys_debito, (0)::numeric)) + COALESCE(s.sys_transfer, (0)::numeric)) + COALESCE(s.sys_custom, (0)::numeric)) + COALESCE(s.sys_gift, (0)::numeric)))::numeric(12,2) AS sys_total_tarjetas,
    d.decl_credito,
    d.decl_debito,
    d.decl_transfer,
    d.decl_custom,
    d.decl_gift,
    (((((COALESCE(d.decl_credito, (0)::numeric) + COALESCE(d.decl_debito, (0)::numeric)) + COALESCE(d.decl_transfer, (0)::numeric)) + COALESCE(d.decl_custom, (0)::numeric)) + COALESCE(d.decl_gift, (0)::numeric)))::numeric(12,2) AS decl_total_tarjetas,
    ((((((COALESCE(d.decl_credito, (0)::numeric) + COALESCE(d.decl_debito, (0)::numeric)) + COALESCE(d.decl_transfer, (0)::numeric)) + COALESCE(d.decl_custom, (0)::numeric)) + COALESCE(d.decl_gift, (0)::numeric)) - ((((COALESCE(s.sys_credito, (0)::numeric) + COALESCE(s.sys_debito, (0)::numeric)) + COALESCE(s.sys_transfer, (0)::numeric)) + COALESCE(s.sys_custom, (0)::numeric)) + COALESCE(s.sys_gift, (0)::numeric))))::numeric(12,2) AS diferencia_tarjetas
   FROM (s
     LEFT JOIN d USING (sesion_id));
ALTER TABLE vw_conciliacion_tarjetas OWNER TO postgres;
--
-- TOC entry 382 (class 1259 OID 69484)
-- Name: vw_descuentos_por_terminal_dia;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW vw_descuentos_por_terminal_dia AS
 SELECT tk.terminal_id,
    date(tk.closing_date) AS fecha,
    (sum(COALESCE(td.value, (0)::double precision)))::numeric(12,2) AS descuentos_ticket,
    (sum(COALESCE(tid.amount, (0)::double precision)))::numeric(12,2) AS descuentos_items,
    (sum(
        CASE
            WHEN (COALESCE(tk.total_price, (0)::double precision) <= COALESCE(tk.total_discount, (0)::double precision)) THEN LEAST(tk.total_discount, tk.total_price)
            ELSE (0)::double precision
        END))::numeric(12,2) AS descuentos_100,
    (GREATEST(((sum(COALESCE(td.value, (0)::double precision)) + sum(COALESCE(tid.amount, (0)::double precision))) - sum(
        CASE
            WHEN (COALESCE(tk.total_price, (0)::double precision) <= COALESCE(tk.total_discount, (0)::double precision)) THEN LEAST(tk.total_discount, tk.total_price)
            ELSE (0)::double precision
        END)), (0)::double precision))::numeric(12,2) AS descuentos_parciales,
    ((sum(COALESCE(td.value, (0)::double precision)) + sum(COALESCE(tid.amount, (0)::double precision))))::numeric(12,2) AS total_descuentos
   FROM (((public.ticket tk
     LEFT JOIN public.ticket_discount td ON ((td.ticket_id = tk.id)))
     LEFT JOIN public.ticket_item ti ON ((ti.ticket_id = tk.id)))
     LEFT JOIN public.ticket_item_discount tid ON ((tid.ticket_itemid = ti.id)))
  WHERE ((tk.paid = true) AND (tk.voided = false))
  GROUP BY tk.terminal_id, (date(tk.closing_date));
ALTER TABLE vw_descuentos_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 379 (class 1259 OID 68475)
-- Name: vw_fast_tickets;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW vw_fast_tickets AS
 SELECT tk.id,
    tk.terminal_id,
    tk.owner_id,
    tk.create_date,
    tk.closing_date,
    tk.status,
    tk.total_discount,
    tk.total_price
   FROM public.ticket tk;
ALTER TABLE vw_fast_tickets OWNER TO postgres;
--
-- TOC entry 380 (class 1259 OID 68479)
-- Name: vw_fast_tx;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW vw_fast_tx AS
 SELECT t.terminal_id,
    t.user_id,
    t.transaction_time,
    t.payment_type,
    t.transaction_type,
    t.payment_sub_type,
    t.custom_payment_name,
    t.custom_payment_ref,
    t.amount,
    t.voided
   FROM public.transactions t;
ALTER TABLE vw_fast_tx OWNER TO postgres;
--
-- TOC entry 384 (class 1259 OID 69494)
-- Name: vw_pagos_por_terminal_dia;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW vw_pagos_por_terminal_dia AS
 SELECT tk.terminal_id,
    date(tx.transaction_time) AS fecha,
    (sum(
        CASE
            WHEN (((tx.payment_type)::text = 'CASH'::text) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND (tx.voided = false)) THEN tx.amount
            ELSE (0)::double precision
        END))::numeric(12,2) AS efectivo,
    (sum(
        CASE
            WHEN (((tx.payment_type)::text = 'CREDIT_CARD'::text) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND (tx.voided = false)) THEN tx.amount
            ELSE (0)::double precision
        END))::numeric(12,2) AS credito,
    (sum(
        CASE
            WHEN (((tx.payment_type)::text = 'DEBIT_CARD'::text) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND (tx.voided = false)) THEN tx.amount
            ELSE (0)::double precision
        END))::numeric(12,2) AS debito,
    (sum(
        CASE
            WHEN (((tx.payment_type)::text = 'CUSTOM_PAYMENT'::text) AND (upper((COALESCE(tx.custom_payment_name, ''::character varying))::text) = 'TRANSFER'::text) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND (tx.voided = false)) THEN tx.amount
            ELSE (0)::double precision
        END))::numeric(12,2) AS transfer,
    (sum(
        CASE
            WHEN (((tx.payment_type)::text = 'CUSTOM_PAYMENT'::text) AND (upper((COALESCE(tx.custom_payment_name, ''::character varying))::text) = 'GIFT_CERT'::text) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND (tx.voided = false)) THEN tx.amount
            ELSE (0)::double precision
        END))::numeric(12,2) AS gift,
    (sum(
        CASE
            WHEN (((tx.payment_type)::text = 'CUSTOM_PAYMENT'::text) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND (tx.voided = false) AND (upper((COALESCE(tx.custom_payment_name, ''::character varying))::text) <> ALL (ARRAY['TRANSFER'::text, 'GIFT_CERT'::text]))) THEN tx.amount
            ELSE (0)::double precision
        END))::numeric(12,2) AS custom,
    ((sum(
        CASE
            WHEN (((tx.payment_type)::text = ANY ((ARRAY['CREDIT_CARD'::character varying, 'DEBIT_CARD'::character varying])::text[])) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND (tx.voided = false)) THEN tx.amount
            ELSE (0)::double precision
        END) + sum(
        CASE
            WHEN (((tx.payment_type)::text = 'CUSTOM_PAYMENT'::text) AND ((tx.transaction_type)::text = 'CREDIT'::text) AND (tx.voided = false)) THEN tx.amount
            ELSE (0)::double precision
        END)))::numeric(12,2) AS total_tarjetas
   FROM (public.transactions tx
     JOIN public.ticket tk ON ((tk.id = tx.ticket_id)))
  GROUP BY tk.terminal_id, (date(tx.transaction_time));
ALTER TABLE vw_pagos_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 387 (class 1259 OID 69523)
-- Name: vw_resumen_conciliacion_terminal_dia;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW vw_resumen_conciliacion_terminal_dia AS
 WITH ventas AS (
         SELECT ticket.terminal_id,
            date(ticket.closing_date) AS fecha,
            (sum((ticket.total_price - ticket.total_discount)))::numeric(12,2) AS ventas_netas
           FROM public.ticket
          WHERE ((ticket.paid = true) AND (ticket.voided = false))
          GROUP BY ticket.terminal_id, (date(ticket.closing_date))
        ), pagos AS (
         SELECT vw_pagos_por_terminal_dia.terminal_id,
            vw_pagos_por_terminal_dia.fecha,
            (sum(vw_pagos_por_terminal_dia.efectivo))::numeric(12,2) AS efectivo,
            (sum(vw_pagos_por_terminal_dia.credito))::numeric(12,2) AS credito,
            (sum(vw_pagos_por_terminal_dia.debito))::numeric(12,2) AS debito,
            (sum(vw_pagos_por_terminal_dia.transfer))::numeric(12,2) AS transfer,
            (sum(vw_pagos_por_terminal_dia.custom))::numeric(12,2) AS custom,
            (sum(vw_pagos_por_terminal_dia.gift))::numeric(12,2) AS gift,
            (sum(vw_pagos_por_terminal_dia.total_tarjetas))::numeric(12,2) AS total_tarjetas
           FROM vw_pagos_por_terminal_dia
          GROUP BY vw_pagos_por_terminal_dia.terminal_id, vw_pagos_por_terminal_dia.fecha
        ), descuentos AS (
         SELECT vw_descuentos_por_terminal_dia.terminal_id,
            vw_descuentos_por_terminal_dia.fecha,
            vw_descuentos_por_terminal_dia.descuentos_ticket,
            vw_descuentos_por_terminal_dia.descuentos_items,
            vw_descuentos_por_terminal_dia.descuentos_100,
            vw_descuentos_por_terminal_dia.descuentos_parciales,
            vw_descuentos_por_terminal_dia.total_descuentos
           FROM vw_descuentos_por_terminal_dia
        ), anu AS (
         SELECT vw_anulaciones_por_terminal_dia.terminal_id,
            vw_anulaciones_por_terminal_dia.fecha,
            vw_anulaciones_por_terminal_dia.anulaciones_total
           FROM vw_anulaciones_por_terminal_dia
        )
 SELECT v.terminal_id,
    v.fecha,
    v.ventas_netas,
    p.efectivo,
    p.credito,
    p.debito,
    p.transfer,
    p.custom,
    p.gift,
    p.total_tarjetas,
    d.descuentos_ticket,
    d.descuentos_items,
    d.descuentos_100,
    d.descuentos_parciales,
    d.total_descuentos,
    a.anulaciones_total
   FROM (((ventas v
     LEFT JOIN pagos p USING (terminal_id, fecha))
     LEFT JOIN descuentos d USING (terminal_id, fecha))
     LEFT JOIN anu a USING (terminal_id, fecha));
ALTER TABLE vw_resumen_conciliacion_terminal_dia OWNER TO postgres;
SET search_path = public, pg_catalog;
--
-- TOC entry 2947 (class 2604 OID 68483)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history ALTER COLUMN id SET DEFAULT nextval('action_history_id_seq'::regclass);
--
-- TOC entry 2948 (class 2604 OID 68484)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history ALTER COLUMN id SET DEFAULT nextval('attendence_history_id_seq'::regclass);
--
-- TOC entry 2949 (class 2604 OID 68485)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer ALTER COLUMN id SET DEFAULT nextval('cash_drawer_id_seq'::regclass);
--
-- TOC entry 2950 (class 2604 OID 68486)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history ALTER COLUMN id SET DEFAULT nextval('cash_drawer_reset_history_id_seq'::regclass);
--
-- TOC entry 2951 (class 2604 OID 68487)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction ALTER COLUMN id SET DEFAULT nextval('cooking_instruction_id_seq'::regclass);
--
-- TOC entry 2952 (class 2604 OID 68488)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount ALTER COLUMN id SET DEFAULT nextval('coupon_and_discount_id_seq'::regclass);
--
-- TOC entry 2953 (class 2604 OID 68489)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency ALTER COLUMN id SET DEFAULT nextval('currency_id_seq'::regclass);
--
-- TOC entry 2954 (class 2604 OID 68490)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance ALTER COLUMN id SET DEFAULT nextval('currency_balance_id_seq'::regclass);
--
-- TOC entry 2955 (class 2604 OID 68491)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment ALTER COLUMN id SET DEFAULT nextval('custom_payment_id_seq'::regclass);
--
-- TOC entry 2956 (class 2604 OID 68492)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer ALTER COLUMN auto_id SET DEFAULT nextval('customer_auto_id_seq'::regclass);
--
-- TOC entry 2958 (class 2604 OID 68493)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info ALTER COLUMN id SET DEFAULT nextval('data_update_info_id_seq'::regclass);
--
-- TOC entry 2959 (class 2604 OID 68494)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address ALTER COLUMN id SET DEFAULT nextval('delivery_address_id_seq'::regclass);
--
-- TOC entry 2960 (class 2604 OID 68495)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge ALTER COLUMN id SET DEFAULT nextval('delivery_charge_id_seq'::regclass);
--
-- TOC entry 2961 (class 2604 OID 68496)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration ALTER COLUMN id SET DEFAULT nextval('delivery_configuration_id_seq'::regclass);
--
-- TOC entry 2962 (class 2604 OID 68497)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction ALTER COLUMN id SET DEFAULT nextval('delivery_instruction_id_seq'::regclass);
--
-- TOC entry 2963 (class 2604 OID 68498)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history ALTER COLUMN id SET DEFAULT nextval('drawer_assigned_history_id_seq'::regclass);
--
-- TOC entry 2964 (class 2604 OID 68499)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report ALTER COLUMN id SET DEFAULT nextval('drawer_pull_report_id_seq'::regclass);
--
-- TOC entry 2965 (class 2604 OID 68500)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history ALTER COLUMN id SET DEFAULT nextval('employee_in_out_history_id_seq'::regclass);
--
-- TOC entry 2966 (class 2604 OID 68501)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config ALTER COLUMN id SET DEFAULT nextval('global_config_id_seq'::regclass);
--
-- TOC entry 2967 (class 2604 OID 68502)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity ALTER COLUMN id SET DEFAULT nextval('gratuity_id_seq'::regclass);
--
-- TOC entry 2968 (class 2604 OID 68503)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print ALTER COLUMN id SET DEFAULT nextval('guest_check_print_id_seq'::regclass);
--
-- TOC entry 2969 (class 2604 OID 68504)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group ALTER COLUMN id SET DEFAULT nextval('inventory_group_id_seq'::regclass);
--
-- TOC entry 2970 (class 2604 OID 68505)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item ALTER COLUMN id SET DEFAULT nextval('inventory_item_id_seq'::regclass);
--
-- TOC entry 2971 (class 2604 OID 68506)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location ALTER COLUMN id SET DEFAULT nextval('inventory_location_id_seq'::regclass);
--
-- TOC entry 2972 (class 2604 OID 68507)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code ALTER COLUMN id SET DEFAULT nextval('inventory_meta_code_id_seq'::regclass);
--
-- TOC entry 2973 (class 2604 OID 68508)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction ALTER COLUMN id SET DEFAULT nextval('inventory_transaction_id_seq'::regclass);
--
-- TOC entry 2974 (class 2604 OID 68509)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit ALTER COLUMN id SET DEFAULT nextval('inventory_unit_id_seq'::regclass);
--
-- TOC entry 2975 (class 2604 OID 68510)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor ALTER COLUMN id SET DEFAULT nextval('inventory_vendor_id_seq'::regclass);
--
-- TOC entry 2976 (class 2604 OID 68511)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse ALTER COLUMN id SET DEFAULT nextval('inventory_warehouse_id_seq'::regclass);
--
-- TOC entry 2977 (class 2604 OID 68512)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_id_seq'::regclass);
--
-- TOC entry 2981 (class 2604 OID 68513)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_item_id_seq'::regclass);
--
-- TOC entry 2982 (class 2604 OID 68514)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category ALTER COLUMN id SET DEFAULT nextval('menu_category_id_seq'::regclass);
--
-- TOC entry 2983 (class 2604 OID 68515)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group ALTER COLUMN id SET DEFAULT nextval('menu_group_id_seq'::regclass);
--
-- TOC entry 2984 (class 2604 OID 68516)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item ALTER COLUMN id SET DEFAULT nextval('menu_item_id_seq'::regclass);
--
-- TOC entry 2985 (class 2604 OID 68517)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size ALTER COLUMN id SET DEFAULT nextval('menu_item_size_id_seq'::regclass);
--
-- TOC entry 2986 (class 2604 OID 68518)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier ALTER COLUMN id SET DEFAULT nextval('menu_modifier_id_seq'::regclass);
--
-- TOC entry 2987 (class 2604 OID 68519)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group ALTER COLUMN id SET DEFAULT nextval('menu_modifier_group_id_seq'::regclass);
--
-- TOC entry 2988 (class 2604 OID 68520)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup ALTER COLUMN id SET DEFAULT nextval('menuitem_modifiergroup_id_seq'::regclass);
--
-- TOC entry 2989 (class 2604 OID 68521)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift ALTER COLUMN id SET DEFAULT nextval('menuitem_shift_id_seq'::regclass);
--
-- TOC entry 3060 (class 2604 OID 73605)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: postgres
--

ALTER TABLE ONLY migrations ALTER COLUMN id SET DEFAULT nextval('migrations_id_seq'::regclass);
--
-- TOC entry 2990 (class 2604 OID 68522)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price ALTER COLUMN id SET DEFAULT nextval('modifier_multiplier_price_id_seq'::regclass);
--
-- TOC entry 2991 (class 2604 OID 68523)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type ALTER COLUMN id SET DEFAULT nextval('order_type_id_seq'::regclass);
--
-- TOC entry 2992 (class 2604 OID 68524)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit ALTER COLUMN id SET DEFAULT nextval('packaging_unit_id_seq'::regclass);
--
-- TOC entry 2993 (class 2604 OID 68525)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons ALTER COLUMN id SET DEFAULT nextval('payout_reasons_id_seq'::regclass);
--
-- TOC entry 2994 (class 2604 OID 68526)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients ALTER COLUMN id SET DEFAULT nextval('payout_recepients_id_seq'::regclass);
--
-- TOC entry 2995 (class 2604 OID 68527)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust ALTER COLUMN id SET DEFAULT nextval('pizza_crust_id_seq'::regclass);
--
-- TOC entry 2996 (class 2604 OID 68528)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price ALTER COLUMN id SET DEFAULT nextval('pizza_modifier_price_id_seq'::regclass);
--
-- TOC entry 2997 (class 2604 OID 68529)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price ALTER COLUMN id SET DEFAULT nextval('pizza_price_id_seq'::regclass);
--
-- TOC entry 2998 (class 2604 OID 68530)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group ALTER COLUMN id SET DEFAULT nextval('printer_group_id_seq'::regclass);
--
-- TOC entry 2999 (class 2604 OID 68531)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order ALTER COLUMN id SET DEFAULT nextval('purchase_order_id_seq'::regclass);
--
-- TOC entry 3000 (class 2604 OID 68532)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie ALTER COLUMN id SET DEFAULT nextval('recepie_id_seq'::regclass);
--
-- TOC entry 3001 (class 2604 OID 68533)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item ALTER COLUMN id SET DEFAULT nextval('recepie_item_id_seq'::regclass);
--
-- TOC entry 3002 (class 2604 OID 68534)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift ALTER COLUMN id SET DEFAULT nextval('shift_id_seq'::regclass);
--
-- TOC entry 3003 (class 2604 OID 68535)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor ALTER COLUMN id SET DEFAULT nextval('shop_floor_id_seq'::regclass);
--
-- TOC entry 3004 (class 2604 OID 68536)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template ALTER COLUMN id SET DEFAULT nextval('shop_floor_template_id_seq'::regclass);
--
-- TOC entry 3005 (class 2604 OID 68537)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type ALTER COLUMN id SET DEFAULT nextval('shop_table_type_id_seq'::regclass);
--
-- TOC entry 3006 (class 2604 OID 68538)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info ALTER COLUMN id SET DEFAULT nextval('table_booking_info_id_seq'::regclass);
--
-- TOC entry 3007 (class 2604 OID 68539)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax ALTER COLUMN id SET DEFAULT nextval('tax_id_seq'::regclass);
--
-- TOC entry 3008 (class 2604 OID 68540)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers ALTER COLUMN id SET DEFAULT nextval('terminal_printers_id_seq'::regclass);
--
-- TOC entry 2978 (class 2604 OID 68541)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket ALTER COLUMN id SET DEFAULT nextval('ticket_id_seq'::regclass);
--
-- TOC entry 3009 (class 2604 OID 68542)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount ALTER COLUMN id SET DEFAULT nextval('ticket_discount_id_seq'::regclass);
--
-- TOC entry 3010 (class 2604 OID 68543)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item ALTER COLUMN id SET DEFAULT nextval('ticket_item_id_seq'::regclass);
--
-- TOC entry 3011 (class 2604 OID 68544)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount ALTER COLUMN id SET DEFAULT nextval('ticket_item_discount_id_seq'::regclass);
--
-- TOC entry 3012 (class 2604 OID 68545)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier ALTER COLUMN id SET DEFAULT nextval('ticket_item_modifier_id_seq'::regclass);
--
-- TOC entry 3013 (class 2604 OID 68546)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions ALTER COLUMN id SET DEFAULT nextval('transactions_id_seq'::regclass);
--
-- TOC entry 3014 (class 2604 OID 68547)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type ALTER COLUMN id SET DEFAULT nextval('user_type_id_seq'::regclass);
--
-- TOC entry 3015 (class 2604 OID 68548)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users ALTER COLUMN auto_id SET DEFAULT nextval('users_auto_id_seq'::regclass);
--
-- TOC entry 3016 (class 2604 OID 68549)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer ALTER COLUMN id SET DEFAULT nextval('virtual_printer_id_seq'::regclass);
--
-- TOC entry 3017 (class 2604 OID 68550)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons ALTER COLUMN id SET DEFAULT nextval('void_reasons_id_seq'::regclass);
--
-- TOC entry 3018 (class 2604 OID 68551)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge ALTER COLUMN auto_id SET DEFAULT nextval('zip_code_vs_delivery_charge_auto_id_seq'::regclass);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3019 (class 2604 OID 68552)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria ALTER COLUMN id SET DEFAULT nextval('auditoria_id_seq'::regclass);
--
-- TOC entry 3065 (class 2604 OID 73707)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cat_unidades ALTER COLUMN id SET DEFAULT nextval('cat_unidades_id_seq'::regclass);
--
-- TOC entry 3142 (class 2604 OID 77268)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad ALTER COLUMN id SET DEFAULT nextval('conversiones_unidad_id_seq'::regclass);
--
-- TOC entry 3170 (class 2604 OID 77396)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer ALTER COLUMN id SET DEFAULT nextval('cost_layer_id_seq'::regclass);
--
-- TOC entry 3063 (class 2604 OID 73692)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs ALTER COLUMN id SET DEFAULT nextval('failed_jobs_id_seq'::regclass);
--
-- TOC entry 3024 (class 2604 OID 68553)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago ALTER COLUMN id SET DEFAULT nextval('formas_pago_id_seq'::regclass);
--
-- TOC entry 3150 (class 2604 OID 77322)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item ALTER COLUMN id SET DEFAULT nextval('historial_costos_item_id_seq'::regclass);
--
-- TOC entry 3158 (class 2604 OID 77354)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta ALTER COLUMN id SET DEFAULT nextval('historial_costos_receta_id_seq'::regclass);
--
-- TOC entry 3081 (class 2604 OID 77076)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch ALTER COLUMN id SET DEFAULT nextval('inventory_batch_id_seq'::regclass);
--
-- TOC entry 3177 (class 2604 OID 77463)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_recalc_queue ALTER COLUMN id SET DEFAULT nextval('job_recalc_queue_id_seq'::regclass);
--
-- TOC entry 3062 (class 2604 OID 73672)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY jobs ALTER COLUMN id SET DEFAULT nextval('jobs_id_seq'::regclass);
--
-- TOC entry 3061 (class 2604 OID 73617)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY migrations ALTER COLUMN id SET DEFAULT nextval('migrations_id_seq'::regclass);
--
-- TOC entry 3173 (class 2604 OID 77427)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos ALTER COLUMN id SET DEFAULT nextval('modificadores_pos_id_seq'::regclass);
--
-- TOC entry 3093 (class 2604 OID 77100)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv ALTER COLUMN id SET DEFAULT nextval('mov_inv_id_seq'::regclass);
--
-- TOC entry 3116 (class 2604 OID 77197)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab ALTER COLUMN id SET DEFAULT nextval('op_produccion_cab_id_seq'::regclass);
--
-- TOC entry 3188 (class 2604 OID 77534)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal ALTER COLUMN id SET DEFAULT nextval('param_sucursal_id_seq'::regclass);
--
-- TOC entry 3202 (class 2604 OID 77592)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log ALTER COLUMN id SET DEFAULT nextval('perdida_log_id_seq'::regclass);
--
-- TOC entry 3039 (class 2604 OID 68554)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte ALTER COLUMN id SET DEFAULT nextval('postcorte_id_seq'::regclass);
--
-- TOC entry 3047 (class 2604 OID 68555)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte ALTER COLUMN id SET DEFAULT nextval('precorte_id_seq'::regclass);
--
-- TOC entry 3049 (class 2604 OID 68556)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo ALTER COLUMN id SET DEFAULT nextval('precorte_efectivo_id_seq'::regclass);
--
-- TOC entry 3053 (class 2604 OID 68557)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros ALTER COLUMN id SET DEFAULT nextval('precorte_otros_id_seq'::regclass);
--
-- TOC entry 3182 (class 2604 OID 77478)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log ALTER COLUMN id SET DEFAULT nextval('recalc_log_id_seq'::regclass);
--
-- TOC entry 3110 (class 2604 OID 77171)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det ALTER COLUMN id SET DEFAULT nextval('receta_det_id_seq'::regclass);
--
-- TOC entry 3162 (class 2604 OID 77373)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_shadow ALTER COLUMN id SET DEFAULT nextval('receta_shadow_id_seq'::regclass);
--
-- TOC entry 3106 (class 2604 OID 77145)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version ALTER COLUMN id SET DEFAULT nextval('receta_version_id_seq'::regclass);
--
-- TOC entry 3058 (class 2604 OID 68558)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon ALTER COLUMN id SET DEFAULT nextval('sesion_cajon_id_seq'::regclass);
--
-- TOC entry 3194 (class 2604 OID 77552)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy ALTER COLUMN id SET DEFAULT nextval('stock_policy_id_seq'::regclass);
--
-- TOC entry 3199 (class 2604 OID 77573)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sucursal_almacen_terminal ALTER COLUMN id SET DEFAULT nextval('sucursal_almacen_terminal_id_seq'::regclass);
--
-- TOC entry 3206 (class 2604 OID 77626)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo ALTER COLUMN id SET DEFAULT nextval('ticket_det_consumo_id_seq'::regclass);
--
-- TOC entry 3122 (class 2604 OID 77220)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab ALTER COLUMN id SET DEFAULT nextval('ticket_venta_cab_id_seq'::regclass);
--
-- TOC entry 3128 (class 2604 OID 77235)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det ALTER COLUMN id SET DEFAULT nextval('ticket_venta_det_id_seq'::regclass);
--
-- TOC entry 3133 (class 2604 OID 77250)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida ALTER COLUMN id SET DEFAULT nextval('unidades_medida_id_seq'::regclass);
--
-- TOC entry 3209 (class 2604 OID 77688)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);
SET search_path = public, pg_catalog;
--
-- TOC entry 3221 (class 2606 OID 68562)
-- Name: action_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT action_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3223 (class 2606 OID 68564)
-- Name: attendence_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT attendence_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3225 (class 2606 OID 68566)
-- Name: cash_drawer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT cash_drawer_pkey PRIMARY KEY (id);
--
-- TOC entry 3227 (class 2606 OID 68568)
-- Name: cash_drawer_reset_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT cash_drawer_reset_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3229 (class 2606 OID 68570)
-- Name: cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction
    ADD CONSTRAINT cooking_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 3231 (class 2606 OID 68572)
-- Name: coupon_and_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3233 (class 2606 OID 68574)
-- Name: coupon_and_discount_uuid_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_uuid_key UNIQUE (uuid);
--
-- TOC entry 3237 (class 2606 OID 68576)
-- Name: currency_balance_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT currency_balance_pkey PRIMARY KEY (id);
--
-- TOC entry 3235 (class 2606 OID 68578)
-- Name: currency_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency
    ADD CONSTRAINT currency_pkey PRIMARY KEY (id);
--
-- TOC entry 3239 (class 2606 OID 68580)
-- Name: custom_payment_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment
    ADD CONSTRAINT custom_payment_pkey PRIMARY KEY (id);
--
-- TOC entry 3241 (class 2606 OID 68582)
-- Name: customer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer
    ADD CONSTRAINT customer_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 3243 (class 2606 OID 68584)
-- Name: customer_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT customer_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3245 (class 2606 OID 68586)
-- Name: daily_folio_counter_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY daily_folio_counter
    ADD CONSTRAINT daily_folio_counter_pkey PRIMARY KEY (folio_date, branch_key);
--
-- TOC entry 3247 (class 2606 OID 68588)
-- Name: data_update_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info
    ADD CONSTRAINT data_update_info_pkey PRIMARY KEY (id);
--
-- TOC entry 3249 (class 2606 OID 68590)
-- Name: delivery_address_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT delivery_address_pkey PRIMARY KEY (id);
--
-- TOC entry 3251 (class 2606 OID 68592)
-- Name: delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge
    ADD CONSTRAINT delivery_charge_pkey PRIMARY KEY (id);
--
-- TOC entry 3253 (class 2606 OID 68594)
-- Name: delivery_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration
    ADD CONSTRAINT delivery_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 3255 (class 2606 OID 68596)
-- Name: delivery_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT delivery_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 3257 (class 2606 OID 68598)
-- Name: drawer_assigned_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT drawer_assigned_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3261 (class 2606 OID 68600)
-- Name: drawer_pull_report_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT drawer_pull_report_pkey PRIMARY KEY (id);
--
-- TOC entry 3264 (class 2606 OID 68602)
-- Name: employee_in_out_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT employee_in_out_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3266 (class 2606 OID 68604)
-- Name: global_config_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pkey PRIMARY KEY (id);
--
-- TOC entry 3268 (class 2606 OID 68606)
-- Name: global_config_pos_key_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pos_key_key UNIQUE (pos_key);
--
-- TOC entry 3270 (class 2606 OID 68608)
-- Name: gratuity_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT gratuity_pkey PRIMARY KEY (id);
--
-- TOC entry 3272 (class 2606 OID 68610)
-- Name: guest_check_print_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT guest_check_print_pkey PRIMARY KEY (id);
--
-- TOC entry 3274 (class 2606 OID 68612)
-- Name: inventory_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group
    ADD CONSTRAINT inventory_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3276 (class 2606 OID 68614)
-- Name: inventory_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT inventory_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3278 (class 2606 OID 68616)
-- Name: inventory_location_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT inventory_location_pkey PRIMARY KEY (id);
--
-- TOC entry 3280 (class 2606 OID 68618)
-- Name: inventory_meta_code_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code
    ADD CONSTRAINT inventory_meta_code_pkey PRIMARY KEY (id);
--
-- TOC entry 3282 (class 2606 OID 68620)
-- Name: inventory_transaction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT inventory_transaction_pkey PRIMARY KEY (id);
--
-- TOC entry 3284 (class 2606 OID 68622)
-- Name: inventory_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit
    ADD CONSTRAINT inventory_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 3286 (class 2606 OID 68624)
-- Name: inventory_vendor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor
    ADD CONSTRAINT inventory_vendor_pkey PRIMARY KEY (id);
--
-- TOC entry 3288 (class 2606 OID 68626)
-- Name: inventory_warehouse_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse
    ADD CONSTRAINT inventory_warehouse_pkey PRIMARY KEY (id);
--
-- TOC entry 3312 (class 2606 OID 68628)
-- Name: kds_ready_log_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kds_ready_log
    ADD CONSTRAINT kds_ready_log_pkey PRIMARY KEY (ticket_id);
--
-- TOC entry 3315 (class 2606 OID 68630)
-- Name: kitchen_ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT kitchen_ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3291 (class 2606 OID 68632)
-- Name: kitchen_ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT kitchen_ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 3318 (class 2606 OID 68634)
-- Name: menu_category_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category
    ADD CONSTRAINT menu_category_pkey PRIMARY KEY (id);
--
-- TOC entry 3320 (class 2606 OID 68636)
-- Name: menu_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT menu_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3323 (class 2606 OID 68638)
-- Name: menu_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT menu_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3325 (class 2606 OID 68640)
-- Name: menu_item_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT menu_item_properties_pkey PRIMARY KEY (menu_item_id, property_name);
--
-- TOC entry 3327 (class 2606 OID 68642)
-- Name: menu_item_size_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size
    ADD CONSTRAINT menu_item_size_pkey PRIMARY KEY (id);
--
-- TOC entry 3332 (class 2606 OID 68644)
-- Name: menu_modifier_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group
    ADD CONSTRAINT menu_modifier_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3329 (class 2606 OID 68646)
-- Name: menu_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT menu_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 3335 (class 2606 OID 68648)
-- Name: menu_modifier_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT menu_modifier_properties_pkey PRIMARY KEY (menu_modifier_id, property_name);
--
-- TOC entry 3337 (class 2606 OID 68650)
-- Name: menuitem_modifiergroup_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT menuitem_modifiergroup_pkey PRIMARY KEY (id);
--
-- TOC entry 3339 (class 2606 OID 68652)
-- Name: menuitem_shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT menuitem_shift_pkey PRIMARY KEY (id);
--
-- TOC entry 3476 (class 2606 OID 73607)
-- Name: migrations_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: postgres
--

ALTER TABLE ONLY migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);
--
-- TOC entry 3341 (class 2606 OID 68654)
-- Name: modifier_multiplier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT modifier_multiplier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3343 (class 2606 OID 68656)
-- Name: multiplier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY multiplier
    ADD CONSTRAINT multiplier_pkey PRIMARY KEY (name);
--
-- TOC entry 3345 (class 2606 OID 68658)
-- Name: order_type_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_name_key UNIQUE (name);
--
-- TOC entry 3347 (class 2606 OID 68660)
-- Name: order_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3349 (class 2606 OID 68662)
-- Name: packaging_unit_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_name_key UNIQUE (name);
--
-- TOC entry 3351 (class 2606 OID 68664)
-- Name: packaging_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 3353 (class 2606 OID 68666)
-- Name: payout_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons
    ADD CONSTRAINT payout_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 3355 (class 2606 OID 68668)
-- Name: payout_recepients_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients
    ADD CONSTRAINT payout_recepients_pkey PRIMARY KEY (id);
--
-- TOC entry 3357 (class 2606 OID 68670)
-- Name: pizza_crust_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust
    ADD CONSTRAINT pizza_crust_pkey PRIMARY KEY (id);
--
-- TOC entry 3359 (class 2606 OID 68672)
-- Name: pizza_modifier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT pizza_modifier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3361 (class 2606 OID 68674)
-- Name: pizza_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT pizza_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3363 (class 2606 OID 68676)
-- Name: printer_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_configuration
    ADD CONSTRAINT printer_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 3365 (class 2606 OID 68678)
-- Name: printer_group_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_name_key UNIQUE (name);
--
-- TOC entry 3367 (class 2606 OID 68680)
-- Name: printer_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3369 (class 2606 OID 68682)
-- Name: purchase_order_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_pkey PRIMARY KEY (id);
--
-- TOC entry 3373 (class 2606 OID 68684)
-- Name: recepie_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT recepie_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3371 (class 2606 OID 68686)
-- Name: recepie_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT recepie_pkey PRIMARY KEY (id);
--
-- TOC entry 3375 (class 2606 OID 68688)
-- Name: restaurant_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant
    ADD CONSTRAINT restaurant_pkey PRIMARY KEY (id);
--
-- TOC entry 3377 (class 2606 OID 68690)
-- Name: restaurant_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT restaurant_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3379 (class 2606 OID 68692)
-- Name: shift_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_name_key UNIQUE (name);
--
-- TOC entry 3381 (class 2606 OID 68694)
-- Name: shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_pkey PRIMARY KEY (id);
--
-- TOC entry 3383 (class 2606 OID 68696)
-- Name: shop_floor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor
    ADD CONSTRAINT shop_floor_pkey PRIMARY KEY (id);
--
-- TOC entry 3385 (class 2606 OID 68698)
-- Name: shop_floor_template_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT shop_floor_template_pkey PRIMARY KEY (id);
--
-- TOC entry 3387 (class 2606 OID 68700)
-- Name: shop_floor_template_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT shop_floor_template_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3389 (class 2606 OID 68702)
-- Name: shop_table_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT shop_table_pkey PRIMARY KEY (id);
--
-- TOC entry 3391 (class 2606 OID 68704)
-- Name: shop_table_status_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_status
    ADD CONSTRAINT shop_table_status_pkey PRIMARY KEY (id);
--
-- TOC entry 3393 (class 2606 OID 68706)
-- Name: shop_table_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type
    ADD CONSTRAINT shop_table_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3396 (class 2606 OID 68708)
-- Name: table_booking_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT table_booking_info_pkey PRIMARY KEY (id);
--
-- TOC entry 3401 (class 2606 OID 68710)
-- Name: tax_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax_group
    ADD CONSTRAINT tax_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3399 (class 2606 OID 68712)
-- Name: tax_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax
    ADD CONSTRAINT tax_pkey PRIMARY KEY (id);
--
-- TOC entry 3293 (class 2606 OID 68714)
-- Name: terminal_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT terminal_pkey PRIMARY KEY (id);
--
-- TOC entry 3403 (class 2606 OID 68716)
-- Name: terminal_printers_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT terminal_printers_pkey PRIMARY KEY (id);
--
-- TOC entry 3405 (class 2606 OID 68718)
-- Name: terminal_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT terminal_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3407 (class 2606 OID 68720)
-- Name: ticket_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT ticket_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3301 (class 2606 OID 68722)
-- Name: ticket_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_global_id_key UNIQUE (global_id);
--
-- TOC entry 3412 (class 2606 OID 68724)
-- Name: ticket_item_addon_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT ticket_item_addon_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 3414 (class 2606 OID 68726)
-- Name: ticket_item_cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT ticket_item_cooking_instruction_pkey PRIMARY KEY (ticket_item_id, item_order);
--
-- TOC entry 3416 (class 2606 OID 68728)
-- Name: ticket_item_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT ticket_item_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3418 (class 2606 OID 68730)
-- Name: ticket_item_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT ticket_item_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 3420 (class 2606 OID 68732)
-- Name: ticket_item_modifier_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT ticket_item_modifier_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 3410 (class 2606 OID 68734)
-- Name: ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3303 (class 2606 OID 68736)
-- Name: ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 3422 (class 2606 OID 68738)
-- Name: ticket_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT ticket_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3424 (class 2606 OID 68740)
-- Name: transaction_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT transaction_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3428 (class 2606 OID 68742)
-- Name: transactions_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_global_id_key UNIQUE (global_id);
--
-- TOC entry 3430 (class 2606 OID 68744)
-- Name: transactions_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_pkey PRIMARY KEY (id);
--
-- TOC entry 3432 (class 2606 OID 68746)
-- Name: user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_permission
    ADD CONSTRAINT user_permission_pkey PRIMARY KEY (name);
--
-- TOC entry 3434 (class 2606 OID 68748)
-- Name: user_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type
    ADD CONSTRAINT user_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3436 (class 2606 OID 68750)
-- Name: user_user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT user_user_permission_pkey PRIMARY KEY (permissionid, elt);
--
-- TOC entry 3438 (class 2606 OID 68752)
-- Name: users_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 3440 (class 2606 OID 68754)
-- Name: users_user_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_id_key UNIQUE (user_id);
--
-- TOC entry 3442 (class 2606 OID 68756)
-- Name: users_user_pass_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_pass_key UNIQUE (user_pass);
--
-- TOC entry 3444 (class 2606 OID 68758)
-- Name: virtual_printer_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_name_key UNIQUE (name);
--
-- TOC entry 3446 (class 2606 OID 68760)
-- Name: virtual_printer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_pkey PRIMARY KEY (id);
--
-- TOC entry 3448 (class 2606 OID 68762)
-- Name: void_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons
    ADD CONSTRAINT void_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 3450 (class 2606 OID 68764)
-- Name: zip_code_vs_delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge
    ADD CONSTRAINT zip_code_vs_delivery_charge_pkey PRIMARY KEY (auto_id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3452 (class 2606 OID 68766)
-- Name: auditoria_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria
    ADD CONSTRAINT auditoria_pkey PRIMARY KEY (id);
--
-- TOC entry 3488 (class 2606 OID 73666)
-- Name: cache_locks_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cache_locks
    ADD CONSTRAINT cache_locks_pkey PRIMARY KEY (key);
--
-- TOC entry 3486 (class 2606 OID 73658)
-- Name: cache_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cache
    ADD CONSTRAINT cache_pkey PRIMARY KEY (key);
--
-- TOC entry 3499 (class 2606 OID 73709)
-- Name: cat_unidades_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cat_unidades
    ADD CONSTRAINT cat_unidades_pkey PRIMARY KEY (id);
--
-- TOC entry 3537 (class 2606 OID 77278)
-- Name: conversiones_unidad_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_pkey PRIMARY KEY (id);
--
-- TOC entry 3539 (class 2606 OID 77280)
-- Name: conversiones_unidad_unidad_origen_id_unidad_destino_id_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_origen_id_unidad_destino_id_key UNIQUE (unidad_origen_id, unidad_destino_id);
--
-- TOC entry 3550 (class 2606 OID 77401)
-- Name: cost_layer_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_pkey PRIMARY KEY (id);
--
-- TOC entry 3495 (class 2606 OID 73698)
-- Name: failed_jobs_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs
    ADD CONSTRAINT failed_jobs_pkey PRIMARY KEY (id);
--
-- TOC entry 3497 (class 2606 OID 73700)
-- Name: failed_jobs_uuid_unique;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs
    ADD CONSTRAINT failed_jobs_uuid_unique UNIQUE (uuid);
--
-- TOC entry 3454 (class 2606 OID 68768)
-- Name: formas_pago_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago
    ADD CONSTRAINT formas_pago_pkey PRIMARY KEY (id);
--
-- TOC entry 3541 (class 2606 OID 77338)
-- Name: historial_costos_item_item_id_fecha_efectiva_version_datos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_item_id_fecha_efectiva_version_datos_key UNIQUE (item_id, fecha_efectiva, version_datos);
--
-- TOC entry 3543 (class 2606 OID 77336)
-- Name: historial_costos_item_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3546 (class 2606 OID 77362)
-- Name: historial_costos_receta_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta
    ADD CONSTRAINT historial_costos_receta_pkey PRIMARY KEY (id);
--
-- TOC entry 3507 (class 2606 OID 77089)
-- Name: inventory_batch_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch
    ADD CONSTRAINT inventory_batch_pkey PRIMARY KEY (id);
--
-- TOC entry 3563 (class 2606 OID 77501)
-- Name: item_vendor_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_pkey PRIMARY KEY (item_id, vendor_id, presentacion);
--
-- TOC entry 3503 (class 2606 OID 77070)
-- Name: items_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_pkey PRIMARY KEY (id);
--
-- TOC entry 3493 (class 2606 OID 73686)
-- Name: job_batches_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_batches
    ADD CONSTRAINT job_batches_pkey PRIMARY KEY (id);
--
-- TOC entry 3559 (class 2606 OID 77472)
-- Name: job_recalc_queue_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_recalc_queue
    ADD CONSTRAINT job_recalc_queue_pkey PRIMARY KEY (id);
--
-- TOC entry 3490 (class 2606 OID 73677)
-- Name: jobs_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY jobs
    ADD CONSTRAINT jobs_pkey PRIMARY KEY (id);
--
-- TOC entry 3478 (class 2606 OID 73619)
-- Name: migrations_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);
--
-- TOC entry 3555 (class 2606 OID 77434)
-- Name: modificadores_pos_codigo_pos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_codigo_pos_key UNIQUE (codigo_pos);
--
-- TOC entry 3557 (class 2606 OID 77432)
-- Name: modificadores_pos_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_pkey PRIMARY KEY (id);
--
-- TOC entry 3511 (class 2606 OID 77106)
-- Name: mov_inv_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_pkey PRIMARY KEY (id);
--
-- TOC entry 3524 (class 2606 OID 77204)
-- Name: op_produccion_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab
    ADD CONSTRAINT op_produccion_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3565 (class 2606 OID 77544)
-- Name: param_sucursal_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal
    ADD CONSTRAINT param_sucursal_pkey PRIMARY KEY (id);
--
-- TOC entry 3567 (class 2606 OID 77546)
-- Name: param_sucursal_sucursal_id_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal
    ADD CONSTRAINT param_sucursal_sucursal_id_key UNIQUE (sucursal_id);
--
-- TOC entry 3480 (class 2606 OID 73640)
-- Name: password_reset_tokens_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY password_reset_tokens
    ADD CONSTRAINT password_reset_tokens_pkey PRIMARY KEY (email);
--
-- TOC entry 3577 (class 2606 OID 77600)
-- Name: perdida_log_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_pkey PRIMARY KEY (id);
--
-- TOC entry 3553 (class 2606 OID 77421)
-- Name: pos_map_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY pos_map
    ADD CONSTRAINT pos_map_pkey PRIMARY KEY (pos_system, plu, valid_from, sys_from);
--
-- TOC entry 3457 (class 2606 OID 68770)
-- Name: postcorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3465 (class 2606 OID 68772)
-- Name: precorte_efectivo_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_pkey PRIMARY KEY (id);
--
-- TOC entry 3468 (class 2606 OID 68774)
-- Name: precorte_otros_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_pkey PRIMARY KEY (id);
--
-- TOC entry 3462 (class 2606 OID 68776)
-- Name: precorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3561 (class 2606 OID 77483)
-- Name: recalc_log_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log
    ADD CONSTRAINT recalc_log_pkey PRIMARY KEY (id);
--
-- TOC entry 3513 (class 2606 OID 77139)
-- Name: receta_cab_codigo_plato_pos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_cab
    ADD CONSTRAINT receta_cab_codigo_plato_pos_key UNIQUE (codigo_plato_pos);
--
-- TOC entry 3515 (class 2606 OID 77137)
-- Name: receta_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_cab
    ADD CONSTRAINT receta_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3522 (class 2606 OID 77181)
-- Name: receta_det_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_pkey PRIMARY KEY (id);
--
-- TOC entry 3548 (class 2606 OID 77385)
-- Name: receta_shadow_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_shadow
    ADD CONSTRAINT receta_shadow_pkey PRIMARY KEY (id);
--
-- TOC entry 3518 (class 2606 OID 77153)
-- Name: receta_version_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_pkey PRIMARY KEY (id);
--
-- TOC entry 3520 (class 2606 OID 77155)
-- Name: receta_version_receta_id_version_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_receta_id_version_key UNIQUE (receta_id, version);
--
-- TOC entry 3472 (class 2606 OID 68778)
-- Name: sesion_cajon_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_pkey PRIMARY KEY (id);
--
-- TOC entry 3474 (class 2606 OID 68780)
-- Name: sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key UNIQUE (terminal_id, cajero_usuario_id, apertura_ts);
--
-- TOC entry 3483 (class 2606 OID 73648)
-- Name: sessions_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);
--
-- TOC entry 3571 (class 2606 OID 77561)
-- Name: stock_policy_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy
    ADD CONSTRAINT stock_policy_pkey PRIMARY KEY (id);
--
-- TOC entry 3574 (class 2606 OID 77580)
-- Name: sucursal_almacen_terminal_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sucursal_almacen_terminal
    ADD CONSTRAINT sucursal_almacen_terminal_pkey PRIMARY KEY (id);
--
-- TOC entry 3582 (class 2606 OID 77633)
-- Name: ticket_det_consumo_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_pkey PRIMARY KEY (id);
--
-- TOC entry 3527 (class 2606 OID 77229)
-- Name: ticket_venta_cab_numero_ticket_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab
    ADD CONSTRAINT ticket_venta_cab_numero_ticket_key UNIQUE (numero_ticket);
--
-- TOC entry 3529 (class 2606 OID 77227)
-- Name: ticket_venta_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab
    ADD CONSTRAINT ticket_venta_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3531 (class 2606 OID 77239)
-- Name: ticket_venta_det_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_pkey PRIMARY KEY (id);
--
-- TOC entry 3533 (class 2606 OID 77262)
-- Name: unidades_medida_codigo_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida
    ADD CONSTRAINT unidades_medida_codigo_key UNIQUE (codigo);
--
-- TOC entry 3535 (class 2606 OID 77260)
-- Name: unidades_medida_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida
    ADD CONSTRAINT unidades_medida_pkey PRIMARY KEY (id);
--
-- TOC entry 3459 (class 2606 OID 68782)
-- Name: uq_postcorte_sesion_id;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT uq_postcorte_sesion_id UNIQUE (sesion_id);
--
-- TOC entry 3501 (class 2606 OID 77041)
-- Name: user_roles_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY user_roles
    ADD CONSTRAINT user_roles_pkey PRIMARY KEY (user_id, role_id);
--
-- TOC entry 3584 (class 2606 OID 77703)
-- Name: users_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);
--
-- TOC entry 3586 (class 2606 OID 77705)
-- Name: users_username_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_username_key UNIQUE (username);
SET search_path = public, pg_catalog;
--
-- TOC entry 3294 (class 1259 OID 68783)
-- Name: creationhour;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX creationhour ON ticket USING btree (creation_hour);
--
-- TOC entry 3295 (class 1259 OID 68784)
-- Name: deliverydate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX deliverydate ON ticket USING btree (deliveery_date);
--
-- TOC entry 3262 (class 1259 OID 68785)
-- Name: drawer_report_time;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX drawer_report_time ON drawer_pull_report USING btree (report_time);
--
-- TOC entry 3296 (class 1259 OID 68786)
-- Name: drawerresetted;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX drawerresetted ON ticket USING btree (drawer_resetted);
--
-- TOC entry 3316 (class 1259 OID 68787)
-- Name: food_category_visible;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX food_category_visible ON menu_category USING btree (visible);
--
-- TOC entry 3394 (class 1259 OID 68788)
-- Name: fromdate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX fromdate ON table_booking_info USING btree (from_date);
--
-- TOC entry 3258 (class 1259 OID 68789)
-- Name: idx_dah_user_op_time;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX idx_dah_user_op_time ON drawer_assigned_history USING btree (a_user, operation, "time" DESC);
--
-- TOC entry 3259 (class 1259 OID 68790)
-- Name: idx_drawer_assigned_history_user_time;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX idx_drawer_assigned_history_user_time ON drawer_assigned_history USING btree (a_user, "time");
--
-- TOC entry 3297 (class 1259 OID 68791)
-- Name: idx_ticket_close_term_owner;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX idx_ticket_close_term_owner ON ticket USING btree (closing_date, terminal_id, owner_id);
--
-- TOC entry 3425 (class 1259 OID 68792)
-- Name: idx_tx_term_user_time;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX idx_tx_term_user_time ON transactions USING btree (terminal_id, user_id, transaction_time);
--
-- TOC entry 3313 (class 1259 OID 68793)
-- Name: ix_kitchen_ticket_item_item_id;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ix_kitchen_ticket_item_item_id ON kitchen_ticket_item USING btree (ticket_item_id);
--
-- TOC entry 3289 (class 1259 OID 68794)
-- Name: ix_kitchen_ticket_ticket_id;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ix_kitchen_ticket_ticket_id ON kitchen_ticket USING btree (ticket_id);
--
-- TOC entry 3298 (class 1259 OID 68795)
-- Name: ix_ticket_branch_key;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ix_ticket_branch_key ON ticket USING btree (branch_key);
--
-- TOC entry 3299 (class 1259 OID 68796)
-- Name: ix_ticket_folio_date;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ix_ticket_folio_date ON ticket USING btree (folio_date);
--
-- TOC entry 3408 (class 1259 OID 68797)
-- Name: ix_ticket_item_ticket_pg;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ix_ticket_item_ticket_pg ON ticket_item USING btree (ticket_id, pg_id);
--
-- TOC entry 3321 (class 1259 OID 68798)
-- Name: menugroupvisible;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX menugroupvisible ON menu_group USING btree (visible);
--
-- TOC entry 3333 (class 1259 OID 68799)
-- Name: mg_enable;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX mg_enable ON menu_modifier_group USING btree (enabled);
--
-- TOC entry 3330 (class 1259 OID 68800)
-- Name: modifierenabled;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX modifierenabled ON menu_modifier USING btree (enable);
--
-- TOC entry 3304 (class 1259 OID 68801)
-- Name: ticketactivedate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketactivedate ON ticket USING btree (active_date);
--
-- TOC entry 3305 (class 1259 OID 68802)
-- Name: ticketclosingdate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketclosingdate ON ticket USING btree (closing_date);
--
-- TOC entry 3306 (class 1259 OID 68803)
-- Name: ticketcreatedate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketcreatedate ON ticket USING btree (create_date);
--
-- TOC entry 3307 (class 1259 OID 68804)
-- Name: ticketpaid;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketpaid ON ticket USING btree (paid);
--
-- TOC entry 3308 (class 1259 OID 68805)
-- Name: ticketsettled;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketsettled ON ticket USING btree (settled);
--
-- TOC entry 3309 (class 1259 OID 68806)
-- Name: ticketvoided;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketvoided ON ticket USING btree (voided);
--
-- TOC entry 3397 (class 1259 OID 68807)
-- Name: todate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX todate ON table_booking_info USING btree (to_date);
--
-- TOC entry 3426 (class 1259 OID 68808)
-- Name: tran_drawer_resetted;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX tran_drawer_resetted ON transactions USING btree (drawer_resetted);
--
-- TOC entry 3310 (class 1259 OID 68809)
-- Name: ux_ticket_dailyfolio;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE UNIQUE INDEX ux_ticket_dailyfolio ON ticket USING btree (folio_date, branch_key, daily_folio) WHERE (daily_folio IS NOT NULL);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3544 (class 1259 OID 77656)
-- Name: idx_historial_costos_item_fecha;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX idx_historial_costos_item_fecha ON historial_costos_item USING btree (item_id, fecha_efectiva DESC);
--
-- TOC entry 3504 (class 1259 OID 77653)
-- Name: idx_inventory_batch_caducidad;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX idx_inventory_batch_caducidad ON inventory_batch USING btree (fecha_caducidad);
--
-- TOC entry 3505 (class 1259 OID 77652)
-- Name: idx_inventory_batch_item;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX idx_inventory_batch_item ON inventory_batch USING btree (item_id);
--
-- TOC entry 3508 (class 1259 OID 77651)
-- Name: idx_mov_inv_item_ts;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX idx_mov_inv_item_ts ON mov_inv USING btree (item_id, ts);
--
-- TOC entry 3509 (class 1259 OID 77650)
-- Name: idx_mov_inv_tipo_fecha;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX idx_mov_inv_tipo_fecha ON mov_inv USING btree (tipo, ts);
--
-- TOC entry 3575 (class 1259 OID 77658)
-- Name: idx_perdida_item_ts;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX idx_perdida_item_ts ON perdida_log USING btree (item_id, ts DESC);
--
-- TOC entry 3460 (class 1259 OID 68810)
-- Name: idx_precorte_sesion_id;
Type: INDEX;
Schema: selemti;
Owner: floreant
--

CREATE INDEX idx_precorte_sesion_id ON precorte USING btree (sesion_id);
--
-- TOC entry 3516 (class 1259 OID 77654)
-- Name: idx_receta_version_publicada;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX idx_receta_version_publicada ON receta_version USING btree (version_publicada);
--
-- TOC entry 3568 (class 1259 OID 77657)
-- Name: idx_stock_policy_item_suc;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX idx_stock_policy_item_suc ON stock_policy USING btree (item_id, sucursal_id);
--
-- TOC entry 3569 (class 1259 OID 77567)
-- Name: idx_stock_policy_unique;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE UNIQUE INDEX idx_stock_policy_unique ON stock_policy USING btree (item_id, sucursal_id, (COALESCE(almacen_id, '_'::text)));
--
-- TOC entry 3572 (class 1259 OID 77581)
-- Name: idx_suc_alm_term_unique;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE UNIQUE INDEX idx_suc_alm_term_unique ON sucursal_almacen_terminal USING btree (sucursal_id, almacen_id, (COALESCE(terminal_id, 0)));
--
-- TOC entry 3578 (class 1259 OID 77649)
-- Name: idx_tick_cons_unique;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE UNIQUE INDEX idx_tick_cons_unique ON ticket_det_consumo USING btree (ticket_det_id, item_id, lote_id, qty_canonica, (COALESCE(uom_original_id, 0)));
--
-- TOC entry 3579 (class 1259 OID 77660)
-- Name: idx_tickcons_lote;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX idx_tickcons_lote ON ticket_det_consumo USING btree (item_id, lote_id);
--
-- TOC entry 3580 (class 1259 OID 77659)
-- Name: idx_tickcons_ticket;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX idx_tickcons_ticket ON ticket_det_consumo USING btree (ticket_id, ticket_det_id);
--
-- TOC entry 3525 (class 1259 OID 77655)
-- Name: idx_ticket_venta_fecha;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX idx_ticket_venta_fecha ON ticket_venta_cab USING btree (fecha_venta);
--
-- TOC entry 3551 (class 1259 OID 77661)
-- Name: ix_layer_item_suc;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX ix_layer_item_suc ON cost_layer USING btree (item_id, sucursal_id);
--
-- TOC entry 3466 (class 1259 OID 68811)
-- Name: ix_precorte_otros_precorte;
Type: INDEX;
Schema: selemti;
Owner: floreant
--

CREATE INDEX ix_precorte_otros_precorte ON precorte_otros USING btree (precorte_id);
--
-- TOC entry 3469 (class 1259 OID 68812)
-- Name: ix_sesion_cajon_cajero;
Type: INDEX;
Schema: selemti;
Owner: floreant
--

CREATE INDEX ix_sesion_cajon_cajero ON sesion_cajon USING btree (cajero_usuario_id, apertura_ts);
--
-- TOC entry 3470 (class 1259 OID 68813)
-- Name: ix_sesion_cajon_terminal;
Type: INDEX;
Schema: selemti;
Owner: floreant
--

CREATE INDEX ix_sesion_cajon_terminal ON sesion_cajon USING btree (terminal_id, apertura_ts);
--
-- TOC entry 3491 (class 1259 OID 73678)
-- Name: jobs_queue_index;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX jobs_queue_index ON jobs USING btree (queue);
--
-- TOC entry 3463 (class 1259 OID 68814)
-- Name: precorte_sesion_id_idx;
Type: INDEX;
Schema: selemti;
Owner: floreant
--

CREATE INDEX precorte_sesion_id_idx ON precorte USING btree (sesion_id);
--
-- TOC entry 3481 (class 1259 OID 73650)
-- Name: sessions_last_activity_index;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX sessions_last_activity_index ON sessions USING btree (last_activity);
--
-- TOC entry 3484 (class 1259 OID 73649)
-- Name: sessions_user_id_index;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX sessions_user_id_index ON sessions USING btree (user_id);
--
-- TOC entry 3455 (class 1259 OID 68815)
-- Name: uq_fp_huella_expr;
Type: INDEX;
Schema: selemti;
Owner: floreant
--

CREATE UNIQUE INDEX uq_fp_huella_expr ON formas_pago USING btree (payment_type, (COALESCE(transaction_type, ''::text)), (COALESCE(payment_sub_type, ''::text)), (COALESCE(custom_name, ''::text)), (COALESCE(custom_ref, ''::text)));
SET search_path = public, pg_catalog;
--
-- TOC entry 3748 (class 2620 OID 68816)
-- Name: trg_assign_daily_folio;
Type: TRIGGER;
Schema: public;
Owner: floreant
--

CREATE TRIGGER trg_assign_daily_folio BEFORE INSERT ON ticket FOR EACH ROW EXECUTE PROCEDURE assign_daily_folio();
--
-- TOC entry 3749 (class 2620 OID 68817)
-- Name: trg_kds_notify_kti;
Type: TRIGGER;
Schema: public;
Owner: floreant
--

CREATE TRIGGER trg_kds_notify_kti AFTER INSERT OR UPDATE OF status ON kitchen_ticket_item FOR EACH ROW EXECUTE PROCEDURE kds_notify();
--
-- TOC entry 3750 (class 2620 OID 68818)
-- Name: trg_kds_notify_ti;
Type: TRIGGER;
Schema: public;
Owner: floreant
--

CREATE TRIGGER trg_kds_notify_ti AFTER INSERT OR UPDATE OF status ON ticket_item FOR EACH ROW EXECUTE PROCEDURE kds_notify();
--
-- TOC entry 3746 (class 2620 OID 68819)
-- Name: trg_selemti_dah_ai;
Type: TRIGGER;
Schema: public;
Owner: floreant
--

CREATE TRIGGER trg_selemti_dah_ai AFTER INSERT ON drawer_assigned_history FOR EACH ROW EXECUTE PROCEDURE selemti.fn_dah_after_insert();
--
-- TOC entry 3747 (class 2620 OID 68820)
-- Name: trg_selemti_terminal_bu_snapshot;
Type: TRIGGER;
Schema: public;
Owner: floreant
--

CREATE TRIGGER trg_selemti_terminal_bu_snapshot BEFORE UPDATE ON terminal FOR EACH ROW EXECUTE PROCEDURE selemti.fn_terminal_bu_snapshot_cierre();
--
-- TOC entry 3751 (class 2620 OID 68821)
-- Name: trg_selemti_tx_ai_forma_pago;
Type: TRIGGER;
Schema: public;
Owner: floreant
--

CREATE TRIGGER trg_selemti_tx_ai_forma_pago AFTER INSERT ON transactions FOR EACH ROW EXECUTE PROCEDURE selemti.fn_tx_after_insert_forma_pago();
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3752 (class 2620 OID 68822)
-- Name: trg_precorte_efectivo_bi;
Type: TRIGGER;
Schema: selemti;
Owner: floreant
--

CREATE TRIGGER trg_precorte_efectivo_bi BEFORE INSERT OR UPDATE ON precorte_efectivo FOR EACH ROW EXECUTE PROCEDURE fn_precorte_efectivo_bi();
SET search_path = public, pg_catalog;
--
-- TOC entry 3647 (class 2606 OID 68823)
-- Name: fk1273b4bbb79c6270;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT fk1273b4bbb79c6270 FOREIGN KEY (menu_modifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3634 (class 2606 OID 68828)
-- Name: fk1462f02bcb07faa3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT fk1462f02bcb07faa3 FOREIGN KEY (kithen_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3658 (class 2606 OID 68833)
-- Name: fk17bd51a089fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a089fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3657 (class 2606 OID 68838)
-- Name: fk17bd51a0ae5d580;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a0ae5d580 FOREIGN KEY (pizza_price_id) REFERENCES pizza_price(id);
--
-- TOC entry 3688 (class 2606 OID 68843)
-- Name: fk1fa465141df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT fk1fa465141df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3677 (class 2606 OID 68848)
-- Name: fk2458e9258979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT fk2458e9258979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3597 (class 2606 OID 68853)
-- Name: fk29aca6899e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT fk29aca6899e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3598 (class 2606 OID 68858)
-- Name: fk29d9ca39e1c3d97;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT fk29d9ca39e1c3d97 FOREIGN KEY (customer_no) REFERENCES customer(auto_id);
--
-- TOC entry 3595 (class 2606 OID 68863)
-- Name: fk2cc0e08e28dd6c11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e28dd6c11 FOREIGN KEY (currency_id) REFERENCES currency(id);
--
-- TOC entry 3594 (class 2606 OID 68868)
-- Name: fk2cc0e08e9006558;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e9006558 FOREIGN KEY (cash_drawer_id) REFERENCES cash_drawer(id);
--
-- TOC entry 3593 (class 2606 OID 68873)
-- Name: fk2cc0e08efb910735;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08efb910735 FOREIGN KEY (dpr_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3708 (class 2606 OID 68878)
-- Name: fk2dbeaa4f283ecc6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f283ecc6 FOREIGN KEY (permissionid) REFERENCES user_type(id);
--
-- TOC entry 3707 (class 2606 OID 68883)
-- Name: fk2dbeaa4f8f23f5e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f8f23f5e FOREIGN KEY (elt) REFERENCES user_permission(name);
--
-- TOC entry 3679 (class 2606 OID 68888)
-- Name: fk301c4de53e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de53e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3678 (class 2606 OID 68893)
-- Name: fk301c4de59e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de59e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3656 (class 2606 OID 68898)
-- Name: fk312b355b40fda3c9;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b40fda3c9 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3655 (class 2606 OID 68903)
-- Name: fk312b355b6e7b8b68;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b6e7b8b68 FOREIGN KEY (menuitem_modifiergroup_id) REFERENCES menu_item(id);
--
-- TOC entry 3654 (class 2606 OID 68908)
-- Name: fk312b355b7f2f368;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b7f2f368 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3625 (class 2606 OID 68913)
-- Name: fk341cbc275cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT fk341cbc275cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3608 (class 2606 OID 68918)
-- Name: fk34e4e3771df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3771df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3607 (class 2606 OID 68923)
-- Name: fk34e4e3772ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3772ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3606 (class 2606 OID 68928)
-- Name: fk34e4e377aa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e377aa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3694 (class 2606 OID 68933)
-- Name: fk3825f9d0dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT fk3825f9d0dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3695 (class 2606 OID 68938)
-- Name: fk3df5d4fab9276e77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT fk3df5d4fab9276e77 FOREIGN KEY (ticket_itemid) REFERENCES ticket_item(id);
--
-- TOC entry 3587 (class 2606 OID 68943)
-- Name: fk3f3af36b3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT fk3f3af36b3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3640 (class 2606 OID 68948)
-- Name: fk4cd5a1f35188aa24;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35188aa24 FOREIGN KEY (group_id) REFERENCES menu_group(id);
--
-- TOC entry 3639 (class 2606 OID 68953)
-- Name: fk4cd5a1f35cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3638 (class 2606 OID 68958)
-- Name: fk4cd5a1f35ee9f27a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35ee9f27a FOREIGN KEY (tax_group_id) REFERENCES tax_group(id);
--
-- TOC entry 3637 (class 2606 OID 68963)
-- Name: fk4cd5a1f3a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3636 (class 2606 OID 68968)
-- Name: fk4cd5a1f3f3b77c57;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3f3b77c57 FOREIGN KEY (recepie) REFERENCES recepie(id);
--
-- TOC entry 3711 (class 2606 OID 68973)
-- Name: fk4d495e87660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e87660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3710 (class 2606 OID 68978)
-- Name: fk4d495e8897b1e39;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8897b1e39 FOREIGN KEY (n_user_type) REFERENCES user_type(id);
--
-- TOC entry 3709 (class 2606 OID 68983)
-- Name: fk4d495e8d9409968;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8d9409968 FOREIGN KEY (currentterminal) REFERENCES terminal(id);
--
-- TOC entry 3635 (class 2606 OID 68988)
-- Name: fk4dc1ab7f2e347ff0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT fk4dc1ab7f2e347ff0 FOREIGN KEY (category_id) REFERENCES menu_category(id);
--
-- TOC entry 3649 (class 2606 OID 68993)
-- Name: fk4f8523e38d9ea931;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e38d9ea931 FOREIGN KEY (menucategory_id) REFERENCES menu_category(id);
--
-- TOC entry 3648 (class 2606 OID 68998)
-- Name: fk4f8523e3d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e3d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3633 (class 2606 OID 69003)
-- Name: fk5696584bb73e273e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kit_ticket_table_num
    ADD CONSTRAINT fk5696584bb73e273e FOREIGN KEY (kit_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3662 (class 2606 OID 69008)
-- Name: fk572726f374be2c71;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f374be2c71 FOREIGN KEY (pizzamodifierprice_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3661 (class 2606 OID 69013)
-- Name: fk572726f3ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f3ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3617 (class 2606 OID 69018)
-- Name: fk59073b58c46a9c15;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT fk59073b58c46a9c15 FOREIGN KEY (warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3646 (class 2606 OID 69023)
-- Name: fk59b6b1b72501cb2c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b72501cb2c FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3645 (class 2606 OID 69028)
-- Name: fk59b6b1b75e0c7b8d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b75e0c7b8d FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3644 (class 2606 OID 69033)
-- Name: fk59b6b1b7a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b7a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3599 (class 2606 OID 69038)
-- Name: fk5a823c91f1dd782b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT fk5a823c91f1dd782b FOREIGN KEY (a_user) REFERENCES users(auto_id);
--
-- TOC entry 3698 (class 2606 OID 69043)
-- Name: fk5d3f9acb6c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acb6c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3697 (class 2606 OID 69048)
-- Name: fk5d3f9acbdec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acbdec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3591 (class 2606 OID 69053)
-- Name: fk6221077d2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT fk6221077d2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3700 (class 2606 OID 69058)
-- Name: fk65af15e21df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_table_num
    ADD CONSTRAINT fk65af15e21df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3671 (class 2606 OID 69063)
-- Name: fk6b4e177764931efc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT fk6b4e177764931efc FOREIGN KEY (menu_item) REFERENCES menu_item(id);
--
-- TOC entry 3681 (class 2606 OID 69068)
-- Name: fk6bc51417160de3b1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417160de3b1 FOREIGN KEY (booking_id) REFERENCES table_booking_info(id);
--
-- TOC entry 3680 (class 2606 OID 69073)
-- Name: fk6bc51417dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3605 (class 2606 OID 69078)
-- Name: fk6d5db9fa2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3604 (class 2606 OID 69083)
-- Name: fk6d5db9fa3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3603 (class 2606 OID 69088)
-- Name: fk6d5db9fa7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3699 (class 2606 OID 69093)
-- Name: fk70ecd046223049de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT fk70ecd046223049de FOREIGN KEY (id) REFERENCES ticket(id);
--
-- TOC entry 3592 (class 2606 OID 69098)
-- Name: fk719418223e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT fk719418223e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3616 (class 2606 OID 69103)
-- Name: fk7dc968362cd583c1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968362cd583c1 FOREIGN KEY (item_group_id) REFERENCES inventory_group(id);
--
-- TOC entry 3615 (class 2606 OID 69108)
-- Name: fk7dc968363525e956;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968363525e956 FOREIGN KEY (punit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3614 (class 2606 OID 69113)
-- Name: fk7dc968366848d615;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968366848d615 FOREIGN KEY (recipe_unit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3613 (class 2606 OID 69118)
-- Name: fk7dc9683695e455d3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc9683695e455d3 FOREIGN KEY (item_location_id) REFERENCES inventory_location(id);
--
-- TOC entry 3612 (class 2606 OID 69123)
-- Name: fk7dc968369e60c333;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968369e60c333 FOREIGN KEY (item_vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3674 (class 2606 OID 69128)
-- Name: fk80ad9f75fc64768f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT fk80ad9f75fc64768f FOREIGN KEY (id) REFERENCES restaurant(id);
--
-- TOC entry 3673 (class 2606 OID 69133)
-- Name: fk855626db1682b10e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626db1682b10e FOREIGN KEY (inventory_item) REFERENCES inventory_item(id);
--
-- TOC entry 3672 (class 2606 OID 69138)
-- Name: fk855626dbcae89b83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626dbcae89b83 FOREIGN KEY (recepie_id) REFERENCES recepie(id);
--
-- TOC entry 3665 (class 2606 OID 69143)
-- Name: fk8a16099391d62c51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a16099391d62c51 FOREIGN KEY (multiplier_id) REFERENCES multiplier(name);
--
-- TOC entry 3664 (class 2606 OID 69148)
-- Name: fk8a1609939c9e4883;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a1609939c9e4883 FOREIGN KEY (pizza_modifier_price_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3663 (class 2606 OID 69153)
-- Name: fk8a160993ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a160993ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3696 (class 2606 OID 69158)
-- Name: fk8fd6290dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT fk8fd6290dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3632 (class 2606 OID 69163)
-- Name: fk937b5f0c1f6a9a4a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c1f6a9a4a FOREIGN KEY (void_by_user) REFERENCES users(auto_id);
--
-- TOC entry 3631 (class 2606 OID 69168)
-- Name: fk937b5f0c2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3630 (class 2606 OID 69173)
-- Name: fk937b5f0c7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3629 (class 2606 OID 69178)
-- Name: fk937b5f0caa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0caa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3628 (class 2606 OID 69183)
-- Name: fk937b5f0cc188ea51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cc188ea51 FOREIGN KEY (gratuity_id) REFERENCES gratuity(id);
--
-- TOC entry 3627 (class 2606 OID 69188)
-- Name: fk937b5f0cf575c7d4;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cf575c7d4 FOREIGN KEY (driver_id) REFERENCES users(auto_id);
--
-- TOC entry 3684 (class 2606 OID 69193)
-- Name: fk93802290dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3683 (class 2606 OID 69198)
-- Name: fk93802290f5d6e47b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290f5d6e47b FOREIGN KEY (type_id) REFERENCES shop_table_type(id);
--
-- TOC entry 3687 (class 2606 OID 69203)
-- Name: fk963f26d69d31df8e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT fk963f26d69d31df8e FOREIGN KEY (id) REFERENCES terminal(id);
--
-- TOC entry 3691 (class 2606 OID 69208)
-- Name: fk979f54661df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54661df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3690 (class 2606 OID 69213)
-- Name: fk979f546633e5d3b2;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f546633e5d3b2 FOREIGN KEY (size_modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3689 (class 2606 OID 69218)
-- Name: fk979f54665cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54665cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3602 (class 2606 OID 69223)
-- Name: fk98cf9b143ef4cd9b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report_voidtickets
    ADD CONSTRAINT fk98cf9b143ef4cd9b FOREIGN KEY (dpreport_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3686 (class 2606 OID 69228)
-- Name: fk99ede5fc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3685 (class 2606 OID 69233)
-- Name: fk99ede5fcc433e65a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fcc433e65a FOREIGN KEY (virtual_printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3712 (class 2606 OID 69238)
-- Name: fk9af7853bcf15f4a6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtualprinter_order_type
    ADD CONSTRAINT fk9af7853bcf15f4a6 FOREIGN KEY (printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3643 (class 2606 OID 69243)
-- Name: fk9ea1afc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3642 (class 2606 OID 69248)
-- Name: fk9ea1afc89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3693 (class 2606 OID 69253)
-- Name: fk9f1996346c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f1996346c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3692 (class 2606 OID 69258)
-- Name: fk9f199634dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f199634dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3601 (class 2606 OID 69263)
-- Name: fkaec362202ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362202ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3600 (class 2606 OID 69268)
-- Name: fkaec362203e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362203e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3622 (class 2606 OID 69273)
-- Name: fkaf48f43b5b397c5;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b5b397c5 FOREIGN KEY (reference_id) REFERENCES purchase_order(id);
--
-- TOC entry 3621 (class 2606 OID 69278)
-- Name: fkaf48f43b96a3d6bf;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b96a3d6bf FOREIGN KEY (item_id) REFERENCES inventory_item(id);
--
-- TOC entry 3620 (class 2606 OID 69283)
-- Name: fkaf48f43bd152c95f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bd152c95f FOREIGN KEY (vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3619 (class 2606 OID 69288)
-- Name: fkaf48f43beda09759;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43beda09759 FOREIGN KEY (to_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3618 (class 2606 OID 69293)
-- Name: fkaf48f43bff3f328a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bff3f328a FOREIGN KEY (from_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3675 (class 2606 OID 69298)
-- Name: fkba6efbd68979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT fkba6efbd68979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3670 (class 2606 OID 69303)
-- Name: fkc05b805e5f31265c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group_printers
    ADD CONSTRAINT fkc05b805e5f31265c FOREIGN KEY (printer_id) REFERENCES printer_group(id);
--
-- TOC entry 3682 (class 2606 OID 69308)
-- Name: fkcbeff0e454031ec1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_ticket_num
    ADD CONSTRAINT fkcbeff0e454031ec1 FOREIGN KEY (shop_table_status_id) REFERENCES shop_table_status(id);
--
-- TOC entry 3611 (class 2606 OID 69313)
-- Name: fkce827c6f3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT fkce827c6f3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3666 (class 2606 OID 69318)
-- Name: fkd3de7e7896183657;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT fkd3de7e7896183657 FOREIGN KEY (item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3596 (class 2606 OID 69323)
-- Name: fkd43068347bbccf0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT fkd43068347bbccf0 FOREIGN KEY (id) REFERENCES customer(auto_id);
--
-- TOC entry 3676 (class 2606 OID 69328)
-- Name: fkd70c313ca36ab054;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT fkd70c313ca36ab054 FOREIGN KEY (id) REFERENCES shop_floor_template(id);
--
-- TOC entry 3653 (class 2606 OID 69333)
-- Name: fkd89ccdee33662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdee33662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3652 (class 2606 OID 69338)
-- Name: fkd89ccdeed3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdeed3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3590 (class 2606 OID 69343)
-- Name: fkdfe829a2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3589 (class 2606 OID 69348)
-- Name: fkdfe829a3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3588 (class 2606 OID 69353)
-- Name: fkdfe829a7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3660 (class 2606 OID 69358)
-- Name: fke03c92d533662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d533662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3659 (class 2606 OID 69363)
-- Name: fke03c92d57660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d57660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3624 (class 2606 OID 69368)
-- Name: fke2b846573ac1d2e0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b846573ac1d2e0 FOREIGN KEY (order_type_id) REFERENCES order_type(id);
--
-- TOC entry 3623 (class 2606 OID 69373)
-- Name: fke2b8465789fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b8465789fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3651 (class 2606 OID 69378)
-- Name: fke3790e40113bf083;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40113bf083 FOREIGN KEY (menugroup_id) REFERENCES menu_group(id);
--
-- TOC entry 3650 (class 2606 OID 69383)
-- Name: fke3790e40d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3701 (class 2606 OID 69388)
-- Name: fke3de65548e8203bc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT fke3de65548e8203bc FOREIGN KEY (id) REFERENCES transactions(id);
--
-- TOC entry 3626 (class 2606 OID 69393)
-- Name: fke83d827c969c6de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT fke83d827c969c6de FOREIGN KEY (assigned_user) REFERENCES users(auto_id);
--
-- TOC entry 3669 (class 2606 OID 69398)
-- Name: fkeac112927c59441d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac112927c59441d FOREIGN KEY (crust) REFERENCES pizza_crust(id);
--
-- TOC entry 3668 (class 2606 OID 69403)
-- Name: fkeac11292a56d141c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292a56d141c FOREIGN KEY (order_type) REFERENCES order_type(id);
--
-- TOC entry 3667 (class 2606 OID 69408)
-- Name: fkeac11292dd545b77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292dd545b77 FOREIGN KEY (menu_item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3610 (class 2606 OID 69413)
-- Name: fkf8a37399d900aa01;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399d900aa01 FOREIGN KEY (elt) REFERENCES tax(id);
--
-- TOC entry 3609 (class 2606 OID 69418)
-- Name: fkf8a37399eff11066;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399eff11066 FOREIGN KEY (group_id) REFERENCES tax_group(id);
--
-- TOC entry 3641 (class 2606 OID 69423)
-- Name: fkf94186ff89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT fkf94186ff89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3706 (class 2606 OID 69428)
-- Name: fkfe9871551df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871551df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3705 (class 2606 OID 69433)
-- Name: fkfe9871552ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871552ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3704 (class 2606 OID 69438)
-- Name: fkfe9871553e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871553e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3703 (class 2606 OID 69443)
-- Name: fkfe987155ca43b6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155ca43b6 FOREIGN KEY (payout_recepient_id) REFERENCES payout_recepients(id);
--
-- TOC entry 3702 (class 2606 OID 69448)
-- Name: fkfe987155fc697d9e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155fc697d9e FOREIGN KEY (payout_reason_id) REFERENCES payout_reasons(id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3729 (class 2606 OID 77286)
-- Name: conversiones_unidad_unidad_destino_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_destino_id_fkey FOREIGN KEY (unidad_destino_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3730 (class 2606 OID 77281)
-- Name: conversiones_unidad_unidad_origen_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_origen_id_fkey FOREIGN KEY (unidad_origen_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3733 (class 2606 OID 77407)
-- Name: cost_layer_batch_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_batch_id_fkey FOREIGN KEY (batch_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3734 (class 2606 OID 77402)
-- Name: cost_layer_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3731 (class 2606 OID 77339)
-- Name: historial_costos_item_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3732 (class 2606 OID 77363)
-- Name: historial_costos_receta_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta
    ADD CONSTRAINT historial_costos_receta_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3720 (class 2606 OID 77090)
-- Name: inventory_batch_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch
    ADD CONSTRAINT inventory_batch_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3738 (class 2606 OID 77502)
-- Name: item_vendor_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3737 (class 2606 OID 77507)
-- Name: item_vendor_unidad_presentacion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_unidad_presentacion_id_fkey FOREIGN KEY (unidad_presentacion_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3718 (class 2606 OID 77304)
-- Name: items_unidad_compra_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_compra_id_fkey FOREIGN KEY (unidad_compra_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3717 (class 2606 OID 77291)
-- Name: items_unidad_medida_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_medida_id_fkey FOREIGN KEY (unidad_medida_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3719 (class 2606 OID 77519)
-- Name: items_unidad_salida_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_salida_id_fkey FOREIGN KEY (unidad_salida_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3735 (class 2606 OID 77435)
-- Name: modificadores_pos_receta_modificador_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_receta_modificador_id_fkey FOREIGN KEY (receta_modificador_id) REFERENCES receta_cab(id);
--
-- TOC entry 3722 (class 2606 OID 77107)
-- Name: mov_inv_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3721 (class 2606 OID 77112)
-- Name: mov_inv_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3726 (class 2606 OID 77205)
-- Name: op_produccion_cab_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab
    ADD CONSTRAINT op_produccion_cab_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3742 (class 2606 OID 77601)
-- Name: perdida_log_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3741 (class 2606 OID 77606)
-- Name: perdida_log_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3740 (class 2606 OID 77611)
-- Name: perdida_log_uom_original_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_uom_original_id_fkey FOREIGN KEY (uom_original_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3713 (class 2606 OID 69453)
-- Name: postcorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3715 (class 2606 OID 69458)
-- Name: precorte_efectivo_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3716 (class 2606 OID 69463)
-- Name: precorte_otros_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3714 (class 2606 OID 69468)
-- Name: precorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3736 (class 2606 OID 77484)
-- Name: recalc_log_job_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log
    ADD CONSTRAINT recalc_log_job_id_fkey FOREIGN KEY (job_id) REFERENCES job_recalc_queue(id);
--
-- TOC entry 3724 (class 2606 OID 77187)
-- Name: receta_det_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3725 (class 2606 OID 77182)
-- Name: receta_det_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3723 (class 2606 OID 77156)
-- Name: receta_version_receta_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_receta_id_fkey FOREIGN KEY (receta_id) REFERENCES receta_cab(id);
--
-- TOC entry 3739 (class 2606 OID 77562)
-- Name: stock_policy_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy
    ADD CONSTRAINT stock_policy_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3745 (class 2606 OID 77634)
-- Name: ticket_det_consumo_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3744 (class 2606 OID 77639)
-- Name: ticket_det_consumo_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3743 (class 2606 OID 77644)
-- Name: ticket_det_consumo_uom_original_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_uom_original_id_fkey FOREIGN KEY (uom_original_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3727 (class 2606 OID 77440)
-- Name: ticket_venta_det_receta_shadow_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_receta_shadow_id_fkey FOREIGN KEY (receta_shadow_id) REFERENCES receta_shadow(id);
--
-- TOC entry 3728 (class 2606 OID 77240)
-- Name: ticket_venta_det_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 4147 (class 0 OID 0)
-- Dependencies: 7
-- Name: public;
Type: ACL;
Schema: -;
Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;
GRANT USAGE ON SCHEMA public TO selemti_user;
--
-- TOC entry 4148 (class 0 OID 0)
-- Dependencies: 6
-- Name: selemti;
Type: ACL;
Schema: -;
Owner: floreant
--

REVOKE ALL ON SCHEMA selemti FROM PUBLIC;
REVOKE ALL ON SCHEMA selemti FROM floreant;
GRANT ALL ON SCHEMA selemti TO floreant;
GRANT ALL ON SCHEMA selemti TO selemti_user;
SET search_path = public, pg_catalog;
--
-- TOC entry 4150 (class 0 OID 0)
-- Dependencies: 181
-- Name: action_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE action_history FROM PUBLIC;
REVOKE ALL ON TABLE action_history FROM floreant;
GRANT ALL ON TABLE action_history TO floreant;
GRANT SELECT ON TABLE action_history TO selemti_user;
--
-- TOC entry 4152 (class 0 OID 0)
-- Dependencies: 183
-- Name: attendence_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE attendence_history FROM PUBLIC;
REVOKE ALL ON TABLE attendence_history FROM floreant;
GRANT ALL ON TABLE attendence_history TO floreant;
GRANT SELECT ON TABLE attendence_history TO selemti_user;
--
-- TOC entry 4154 (class 0 OID 0)
-- Dependencies: 185
-- Name: cash_drawer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cash_drawer FROM PUBLIC;
REVOKE ALL ON TABLE cash_drawer FROM floreant;
GRANT ALL ON TABLE cash_drawer TO floreant;
GRANT SELECT ON TABLE cash_drawer TO selemti_user;
--
-- TOC entry 4156 (class 0 OID 0)
-- Dependencies: 187
-- Name: cash_drawer_reset_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cash_drawer_reset_history FROM PUBLIC;
REVOKE ALL ON TABLE cash_drawer_reset_history FROM floreant;
GRANT ALL ON TABLE cash_drawer_reset_history TO floreant;
GRANT SELECT ON TABLE cash_drawer_reset_history TO selemti_user;
--
-- TOC entry 4158 (class 0 OID 0)
-- Dependencies: 189
-- Name: cooking_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cooking_instruction FROM PUBLIC;
REVOKE ALL ON TABLE cooking_instruction FROM floreant;
GRANT ALL ON TABLE cooking_instruction TO floreant;
GRANT SELECT ON TABLE cooking_instruction TO selemti_user;
--
-- TOC entry 4160 (class 0 OID 0)
-- Dependencies: 191
-- Name: coupon_and_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE coupon_and_discount FROM PUBLIC;
REVOKE ALL ON TABLE coupon_and_discount FROM floreant;
GRANT ALL ON TABLE coupon_and_discount TO floreant;
GRANT SELECT ON TABLE coupon_and_discount TO selemti_user;
--
-- TOC entry 4162 (class 0 OID 0)
-- Dependencies: 193
-- Name: currency;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE currency FROM PUBLIC;
REVOKE ALL ON TABLE currency FROM floreant;
GRANT ALL ON TABLE currency TO floreant;
GRANT SELECT ON TABLE currency TO selemti_user;
--
-- TOC entry 4163 (class 0 OID 0)
-- Dependencies: 194
-- Name: currency_balance;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE currency_balance FROM PUBLIC;
REVOKE ALL ON TABLE currency_balance FROM floreant;
GRANT ALL ON TABLE currency_balance TO floreant;
GRANT SELECT ON TABLE currency_balance TO selemti_user;
--
-- TOC entry 4166 (class 0 OID 0)
-- Dependencies: 197
-- Name: custom_payment;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE custom_payment FROM PUBLIC;
REVOKE ALL ON TABLE custom_payment FROM floreant;
GRANT ALL ON TABLE custom_payment TO floreant;
GRANT SELECT ON TABLE custom_payment TO selemti_user;
--
-- TOC entry 4168 (class 0 OID 0)
-- Dependencies: 199
-- Name: customer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE customer FROM PUBLIC;
REVOKE ALL ON TABLE customer FROM floreant;
GRANT ALL ON TABLE customer TO floreant;
GRANT SELECT ON TABLE customer TO selemti_user;
--
-- TOC entry 4170 (class 0 OID 0)
-- Dependencies: 201
-- Name: customer_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE customer_properties FROM PUBLIC;
REVOKE ALL ON TABLE customer_properties FROM floreant;
GRANT ALL ON TABLE customer_properties TO floreant;
GRANT SELECT ON TABLE customer_properties TO selemti_user;
--
-- TOC entry 4171 (class 0 OID 0)
-- Dependencies: 202
-- Name: daily_folio_counter;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE daily_folio_counter FROM PUBLIC;
REVOKE ALL ON TABLE daily_folio_counter FROM floreant;
GRANT ALL ON TABLE daily_folio_counter TO floreant;
GRANT SELECT ON TABLE daily_folio_counter TO selemti_user;
--
-- TOC entry 4172 (class 0 OID 0)
-- Dependencies: 203
-- Name: data_update_info;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE data_update_info FROM PUBLIC;
REVOKE ALL ON TABLE data_update_info FROM floreant;
GRANT ALL ON TABLE data_update_info TO floreant;
GRANT SELECT ON TABLE data_update_info TO selemti_user;
--
-- TOC entry 4174 (class 0 OID 0)
-- Dependencies: 205
-- Name: delivery_address;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_address FROM PUBLIC;
REVOKE ALL ON TABLE delivery_address FROM floreant;
GRANT ALL ON TABLE delivery_address TO floreant;
GRANT SELECT ON TABLE delivery_address TO selemti_user;
--
-- TOC entry 4176 (class 0 OID 0)
-- Dependencies: 207
-- Name: delivery_charge;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_charge FROM PUBLIC;
REVOKE ALL ON TABLE delivery_charge FROM floreant;
GRANT ALL ON TABLE delivery_charge TO floreant;
GRANT SELECT ON TABLE delivery_charge TO selemti_user;
--
-- TOC entry 4178 (class 0 OID 0)
-- Dependencies: 209
-- Name: delivery_configuration;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_configuration FROM PUBLIC;
REVOKE ALL ON TABLE delivery_configuration FROM floreant;
GRANT ALL ON TABLE delivery_configuration TO floreant;
GRANT SELECT ON TABLE delivery_configuration TO selemti_user;
--
-- TOC entry 4180 (class 0 OID 0)
-- Dependencies: 211
-- Name: delivery_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_instruction FROM PUBLIC;
REVOKE ALL ON TABLE delivery_instruction FROM floreant;
GRANT ALL ON TABLE delivery_instruction TO floreant;
GRANT SELECT ON TABLE delivery_instruction TO selemti_user;
--
-- TOC entry 4182 (class 0 OID 0)
-- Dependencies: 213
-- Name: drawer_assigned_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_assigned_history FROM PUBLIC;
REVOKE ALL ON TABLE drawer_assigned_history FROM floreant;
GRANT ALL ON TABLE drawer_assigned_history TO floreant;
GRANT SELECT ON TABLE drawer_assigned_history TO selemti_user;
--
-- TOC entry 4184 (class 0 OID 0)
-- Dependencies: 215
-- Name: drawer_pull_report;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_pull_report FROM PUBLIC;
REVOKE ALL ON TABLE drawer_pull_report FROM floreant;
GRANT ALL ON TABLE drawer_pull_report TO floreant;
GRANT SELECT ON TABLE drawer_pull_report TO selemti_user;
--
-- TOC entry 4186 (class 0 OID 0)
-- Dependencies: 217
-- Name: drawer_pull_report_voidtickets;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_pull_report_voidtickets FROM PUBLIC;
REVOKE ALL ON TABLE drawer_pull_report_voidtickets FROM floreant;
GRANT ALL ON TABLE drawer_pull_report_voidtickets TO floreant;
GRANT SELECT ON TABLE drawer_pull_report_voidtickets TO selemti_user;
--
-- TOC entry 4187 (class 0 OID 0)
-- Dependencies: 218
-- Name: employee_in_out_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE employee_in_out_history FROM PUBLIC;
REVOKE ALL ON TABLE employee_in_out_history FROM floreant;
GRANT ALL ON TABLE employee_in_out_history TO floreant;
GRANT SELECT ON TABLE employee_in_out_history TO selemti_user;
--
-- TOC entry 4189 (class 0 OID 0)
-- Dependencies: 220
-- Name: global_config;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE global_config FROM PUBLIC;
REVOKE ALL ON TABLE global_config FROM floreant;
GRANT ALL ON TABLE global_config TO floreant;
GRANT SELECT ON TABLE global_config TO selemti_user;
--
-- TOC entry 4191 (class 0 OID 0)
-- Dependencies: 222
-- Name: gratuity;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE gratuity FROM PUBLIC;
REVOKE ALL ON TABLE gratuity FROM floreant;
GRANT ALL ON TABLE gratuity TO floreant;
GRANT SELECT ON TABLE gratuity TO selemti_user;
--
-- TOC entry 4193 (class 0 OID 0)
-- Dependencies: 224
-- Name: group_taxes;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE group_taxes FROM PUBLIC;
REVOKE ALL ON TABLE group_taxes FROM floreant;
GRANT ALL ON TABLE group_taxes TO floreant;
GRANT SELECT ON TABLE group_taxes TO selemti_user;
--
-- TOC entry 4194 (class 0 OID 0)
-- Dependencies: 225
-- Name: guest_check_print;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE guest_check_print FROM PUBLIC;
REVOKE ALL ON TABLE guest_check_print FROM floreant;
GRANT ALL ON TABLE guest_check_print TO floreant;
GRANT SELECT ON TABLE guest_check_print TO selemti_user;
--
-- TOC entry 4196 (class 0 OID 0)
-- Dependencies: 227
-- Name: inventory_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_group FROM PUBLIC;
REVOKE ALL ON TABLE inventory_group FROM floreant;
GRANT ALL ON TABLE inventory_group TO floreant;
GRANT SELECT ON TABLE inventory_group TO selemti_user;
--
-- TOC entry 4198 (class 0 OID 0)
-- Dependencies: 229
-- Name: inventory_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_item FROM PUBLIC;
REVOKE ALL ON TABLE inventory_item FROM floreant;
GRANT ALL ON TABLE inventory_item TO floreant;
GRANT SELECT ON TABLE inventory_item TO selemti_user;
--
-- TOC entry 4200 (class 0 OID 0)
-- Dependencies: 231
-- Name: inventory_location;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_location FROM PUBLIC;
REVOKE ALL ON TABLE inventory_location FROM floreant;
GRANT ALL ON TABLE inventory_location TO floreant;
GRANT SELECT ON TABLE inventory_location TO selemti_user;
--
-- TOC entry 4202 (class 0 OID 0)
-- Dependencies: 233
-- Name: inventory_meta_code;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_meta_code FROM PUBLIC;
REVOKE ALL ON TABLE inventory_meta_code FROM floreant;
GRANT ALL ON TABLE inventory_meta_code TO floreant;
GRANT SELECT ON TABLE inventory_meta_code TO selemti_user;
--
-- TOC entry 4204 (class 0 OID 0)
-- Dependencies: 235
-- Name: inventory_transaction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_transaction FROM PUBLIC;
REVOKE ALL ON TABLE inventory_transaction FROM floreant;
GRANT ALL ON TABLE inventory_transaction TO floreant;
GRANT SELECT ON TABLE inventory_transaction TO selemti_user;
--
-- TOC entry 4206 (class 0 OID 0)
-- Dependencies: 237
-- Name: inventory_unit;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_unit FROM PUBLIC;
REVOKE ALL ON TABLE inventory_unit FROM floreant;
GRANT ALL ON TABLE inventory_unit TO floreant;
GRANT SELECT ON TABLE inventory_unit TO selemti_user;
--
-- TOC entry 4208 (class 0 OID 0)
-- Dependencies: 239
-- Name: inventory_vendor;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_vendor FROM PUBLIC;
REVOKE ALL ON TABLE inventory_vendor FROM floreant;
GRANT ALL ON TABLE inventory_vendor TO floreant;
GRANT SELECT ON TABLE inventory_vendor TO selemti_user;
--
-- TOC entry 4210 (class 0 OID 0)
-- Dependencies: 241
-- Name: inventory_warehouse;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_warehouse FROM PUBLIC;
REVOKE ALL ON TABLE inventory_warehouse FROM floreant;
GRANT ALL ON TABLE inventory_warehouse TO floreant;
GRANT SELECT ON TABLE inventory_warehouse TO selemti_user;
--
-- TOC entry 4212 (class 0 OID 0)
-- Dependencies: 243
-- Name: item_order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE item_order_type FROM PUBLIC;
REVOKE ALL ON TABLE item_order_type FROM floreant;
GRANT ALL ON TABLE item_order_type TO floreant;
GRANT SELECT ON TABLE item_order_type TO selemti_user;
--
-- TOC entry 4213 (class 0 OID 0)
-- Dependencies: 244
-- Name: kitchen_ticket;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kitchen_ticket FROM PUBLIC;
REVOKE ALL ON TABLE kitchen_ticket FROM floreant;
GRANT ALL ON TABLE kitchen_ticket TO floreant;
GRANT SELECT ON TABLE kitchen_ticket TO selemti_user;
--
-- TOC entry 4214 (class 0 OID 0)
-- Dependencies: 245
-- Name: terminal;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal FROM PUBLIC;
REVOKE ALL ON TABLE terminal FROM floreant;
GRANT ALL ON TABLE terminal TO floreant;
GRANT SELECT ON TABLE terminal TO selemti_user;
--
-- TOC entry 4215 (class 0 OID 0)
-- Dependencies: 246
-- Name: ticket;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket FROM PUBLIC;
REVOKE ALL ON TABLE ticket FROM floreant;
GRANT ALL ON TABLE ticket TO floreant;
GRANT SELECT ON TABLE ticket TO selemti_user;
--
-- TOC entry 4216 (class 0 OID 0)
-- Dependencies: 247
-- Name: kds_orders_enhanced;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kds_orders_enhanced FROM PUBLIC;
REVOKE ALL ON TABLE kds_orders_enhanced FROM floreant;
GRANT ALL ON TABLE kds_orders_enhanced TO floreant;
GRANT SELECT ON TABLE kds_orders_enhanced TO selemti_user;
--
-- TOC entry 4217 (class 0 OID 0)
-- Dependencies: 248
-- Name: kds_ready_log;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kds_ready_log FROM PUBLIC;
REVOKE ALL ON TABLE kds_ready_log FROM floreant;
GRANT ALL ON TABLE kds_ready_log TO floreant;
GRANT SELECT ON TABLE kds_ready_log TO selemti_user;
--
-- TOC entry 4218 (class 0 OID 0)
-- Dependencies: 249
-- Name: kit_ticket_table_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kit_ticket_table_num FROM PUBLIC;
REVOKE ALL ON TABLE kit_ticket_table_num FROM floreant;
GRANT ALL ON TABLE kit_ticket_table_num TO floreant;
GRANT SELECT ON TABLE kit_ticket_table_num TO selemti_user;
--
-- TOC entry 4220 (class 0 OID 0)
-- Dependencies: 251
-- Name: kitchen_ticket_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kitchen_ticket_item FROM PUBLIC;
REVOKE ALL ON TABLE kitchen_ticket_item FROM floreant;
GRANT ALL ON TABLE kitchen_ticket_item TO floreant;
GRANT SELECT ON TABLE kitchen_ticket_item TO selemti_user;
--
-- TOC entry 4222 (class 0 OID 0)
-- Dependencies: 253
-- Name: menu_category;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_category FROM PUBLIC;
REVOKE ALL ON TABLE menu_category FROM floreant;
GRANT ALL ON TABLE menu_category TO floreant;
GRANT SELECT ON TABLE menu_category TO selemti_user;
--
-- TOC entry 4224 (class 0 OID 0)
-- Dependencies: 255
-- Name: menu_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_group FROM PUBLIC;
REVOKE ALL ON TABLE menu_group FROM floreant;
GRANT ALL ON TABLE menu_group TO floreant;
GRANT SELECT ON TABLE menu_group TO selemti_user;
--
-- TOC entry 4226 (class 0 OID 0)
-- Dependencies: 257
-- Name: menu_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item FROM PUBLIC;
REVOKE ALL ON TABLE menu_item FROM floreant;
GRANT ALL ON TABLE menu_item TO floreant;
GRANT SELECT ON TABLE menu_item TO selemti_user;
--
-- TOC entry 4228 (class 0 OID 0)
-- Dependencies: 259
-- Name: menu_item_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_properties FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_properties FROM floreant;
GRANT ALL ON TABLE menu_item_properties TO floreant;
GRANT SELECT ON TABLE menu_item_properties TO selemti_user;
--
-- TOC entry 4229 (class 0 OID 0)
-- Dependencies: 260
-- Name: menu_item_size;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_size FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_size FROM floreant;
GRANT ALL ON TABLE menu_item_size TO floreant;
GRANT SELECT ON TABLE menu_item_size TO selemti_user;
--
-- TOC entry 4231 (class 0 OID 0)
-- Dependencies: 262
-- Name: menu_item_terminal_ref;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_terminal_ref FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_terminal_ref FROM floreant;
GRANT ALL ON TABLE menu_item_terminal_ref TO floreant;
GRANT SELECT ON TABLE menu_item_terminal_ref TO selemti_user;
--
-- TOC entry 4232 (class 0 OID 0)
-- Dependencies: 263
-- Name: menu_modifier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier FROM floreant;
GRANT ALL ON TABLE menu_modifier TO floreant;
GRANT SELECT ON TABLE menu_modifier TO selemti_user;
--
-- TOC entry 4233 (class 0 OID 0)
-- Dependencies: 264
-- Name: menu_modifier_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier_group FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier_group FROM floreant;
GRANT ALL ON TABLE menu_modifier_group TO floreant;
GRANT SELECT ON TABLE menu_modifier_group TO selemti_user;
--
-- TOC entry 4236 (class 0 OID 0)
-- Dependencies: 267
-- Name: menu_modifier_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier_properties FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier_properties FROM floreant;
GRANT ALL ON TABLE menu_modifier_properties TO floreant;
GRANT SELECT ON TABLE menu_modifier_properties TO selemti_user;
--
-- TOC entry 4237 (class 0 OID 0)
-- Dependencies: 268
-- Name: menucategory_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menucategory_discount FROM PUBLIC;
REVOKE ALL ON TABLE menucategory_discount FROM floreant;
GRANT ALL ON TABLE menucategory_discount TO floreant;
GRANT SELECT ON TABLE menucategory_discount TO selemti_user;
--
-- TOC entry 4238 (class 0 OID 0)
-- Dependencies: 269
-- Name: menugroup_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menugroup_discount FROM PUBLIC;
REVOKE ALL ON TABLE menugroup_discount FROM floreant;
GRANT ALL ON TABLE menugroup_discount TO floreant;
GRANT SELECT ON TABLE menugroup_discount TO selemti_user;
--
-- TOC entry 4239 (class 0 OID 0)
-- Dependencies: 270
-- Name: menuitem_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_discount FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_discount FROM floreant;
GRANT ALL ON TABLE menuitem_discount TO floreant;
GRANT SELECT ON TABLE menuitem_discount TO selemti_user;
--
-- TOC entry 4240 (class 0 OID 0)
-- Dependencies: 271
-- Name: menuitem_modifiergroup;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_modifiergroup FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_modifiergroup FROM floreant;
GRANT ALL ON TABLE menuitem_modifiergroup TO floreant;
GRANT SELECT ON TABLE menuitem_modifiergroup TO selemti_user;
--
-- TOC entry 4242 (class 0 OID 0)
-- Dependencies: 273
-- Name: menuitem_pizzapirce;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_pizzapirce FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_pizzapirce FROM floreant;
GRANT ALL ON TABLE menuitem_pizzapirce TO floreant;
GRANT SELECT ON TABLE menuitem_pizzapirce TO selemti_user;
--
-- TOC entry 4243 (class 0 OID 0)
-- Dependencies: 274
-- Name: menuitem_shift;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_shift FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_shift FROM floreant;
GRANT ALL ON TABLE menuitem_shift TO floreant;
GRANT SELECT ON TABLE menuitem_shift TO selemti_user;
--
-- TOC entry 4245 (class 0 OID 0)
-- Dependencies: 276
-- Name: menumodifier_pizzamodifierprice;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menumodifier_pizzamodifierprice FROM PUBLIC;
REVOKE ALL ON TABLE menumodifier_pizzamodifierprice FROM floreant;
GRANT ALL ON TABLE menumodifier_pizzamodifierprice TO floreant;
GRANT SELECT ON TABLE menumodifier_pizzamodifierprice TO selemti_user;
--
-- TOC entry 4246 (class 0 OID 0)
-- Dependencies: 389
-- Name: migrations;
Type: ACL;
Schema: public;
Owner: postgres
--

REVOKE ALL ON TABLE migrations FROM PUBLIC;
REVOKE ALL ON TABLE migrations FROM postgres;
GRANT ALL ON TABLE migrations TO postgres;
GRANT SELECT ON TABLE migrations TO selemti_user;
--
-- TOC entry 4248 (class 0 OID 0)
-- Dependencies: 277
-- Name: modifier_multiplier_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE modifier_multiplier_price FROM PUBLIC;
REVOKE ALL ON TABLE modifier_multiplier_price FROM floreant;
GRANT ALL ON TABLE modifier_multiplier_price TO floreant;
GRANT SELECT ON TABLE modifier_multiplier_price TO selemti_user;
--
-- TOC entry 4250 (class 0 OID 0)
-- Dependencies: 279
-- Name: multiplier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE multiplier FROM PUBLIC;
REVOKE ALL ON TABLE multiplier FROM floreant;
GRANT ALL ON TABLE multiplier TO floreant;
GRANT SELECT ON TABLE multiplier TO selemti_user;
--
-- TOC entry 4251 (class 0 OID 0)
-- Dependencies: 280
-- Name: order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE order_type FROM PUBLIC;
REVOKE ALL ON TABLE order_type FROM floreant;
GRANT ALL ON TABLE order_type TO floreant;
GRANT SELECT ON TABLE order_type TO selemti_user;
--
-- TOC entry 4253 (class 0 OID 0)
-- Dependencies: 282
-- Name: packaging_unit;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE packaging_unit FROM PUBLIC;
REVOKE ALL ON TABLE packaging_unit FROM floreant;
GRANT ALL ON TABLE packaging_unit TO floreant;
GRANT SELECT ON TABLE packaging_unit TO selemti_user;
--
-- TOC entry 4255 (class 0 OID 0)
-- Dependencies: 284
-- Name: payout_reasons;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE payout_reasons FROM PUBLIC;
REVOKE ALL ON TABLE payout_reasons FROM floreant;
GRANT ALL ON TABLE payout_reasons TO floreant;
GRANT SELECT ON TABLE payout_reasons TO selemti_user;
--
-- TOC entry 4257 (class 0 OID 0)
-- Dependencies: 286
-- Name: payout_recepients;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE payout_recepients FROM PUBLIC;
REVOKE ALL ON TABLE payout_recepients FROM floreant;
GRANT ALL ON TABLE payout_recepients TO floreant;
GRANT SELECT ON TABLE payout_recepients TO selemti_user;
--
-- TOC entry 4259 (class 0 OID 0)
-- Dependencies: 288
-- Name: pizza_crust;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_crust FROM PUBLIC;
REVOKE ALL ON TABLE pizza_crust FROM floreant;
GRANT ALL ON TABLE pizza_crust TO floreant;
GRANT SELECT ON TABLE pizza_crust TO selemti_user;
--
-- TOC entry 4261 (class 0 OID 0)
-- Dependencies: 290
-- Name: pizza_modifier_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_modifier_price FROM PUBLIC;
REVOKE ALL ON TABLE pizza_modifier_price FROM floreant;
GRANT ALL ON TABLE pizza_modifier_price TO floreant;
GRANT SELECT ON TABLE pizza_modifier_price TO selemti_user;
--
-- TOC entry 4263 (class 0 OID 0)
-- Dependencies: 292
-- Name: pizza_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_price FROM PUBLIC;
REVOKE ALL ON TABLE pizza_price FROM floreant;
GRANT ALL ON TABLE pizza_price TO floreant;
GRANT SELECT ON TABLE pizza_price TO selemti_user;
--
-- TOC entry 4265 (class 0 OID 0)
-- Dependencies: 294
-- Name: printer_configuration;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_configuration FROM PUBLIC;
REVOKE ALL ON TABLE printer_configuration FROM floreant;
GRANT ALL ON TABLE printer_configuration TO floreant;
GRANT SELECT ON TABLE printer_configuration TO selemti_user;
--
-- TOC entry 4266 (class 0 OID 0)
-- Dependencies: 295
-- Name: printer_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_group FROM PUBLIC;
REVOKE ALL ON TABLE printer_group FROM floreant;
GRANT ALL ON TABLE printer_group TO floreant;
GRANT SELECT ON TABLE printer_group TO selemti_user;
--
-- TOC entry 4268 (class 0 OID 0)
-- Dependencies: 297
-- Name: printer_group_printers;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_group_printers FROM PUBLIC;
REVOKE ALL ON TABLE printer_group_printers FROM floreant;
GRANT ALL ON TABLE printer_group_printers TO floreant;
GRANT SELECT ON TABLE printer_group_printers TO selemti_user;
--
-- TOC entry 4269 (class 0 OID 0)
-- Dependencies: 298
-- Name: purchase_order;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE purchase_order FROM PUBLIC;
REVOKE ALL ON TABLE purchase_order FROM floreant;
GRANT ALL ON TABLE purchase_order TO floreant;
GRANT SELECT ON TABLE purchase_order TO selemti_user;
--
-- TOC entry 4271 (class 0 OID 0)
-- Dependencies: 300
-- Name: recepie;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE recepie FROM PUBLIC;
REVOKE ALL ON TABLE recepie FROM floreant;
GRANT ALL ON TABLE recepie TO floreant;
GRANT SELECT ON TABLE recepie TO selemti_user;
--
-- TOC entry 4273 (class 0 OID 0)
-- Dependencies: 302
-- Name: recepie_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE recepie_item FROM PUBLIC;
REVOKE ALL ON TABLE recepie_item FROM floreant;
GRANT ALL ON TABLE recepie_item TO floreant;
GRANT SELECT ON TABLE recepie_item TO selemti_user;
--
-- TOC entry 4275 (class 0 OID 0)
-- Dependencies: 304
-- Name: restaurant;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE restaurant FROM PUBLIC;
REVOKE ALL ON TABLE restaurant FROM floreant;
GRANT ALL ON TABLE restaurant TO floreant;
GRANT SELECT ON TABLE restaurant TO selemti_user;
--
-- TOC entry 4276 (class 0 OID 0)
-- Dependencies: 305
-- Name: restaurant_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE restaurant_properties FROM PUBLIC;
REVOKE ALL ON TABLE restaurant_properties FROM floreant;
GRANT ALL ON TABLE restaurant_properties TO floreant;
GRANT SELECT ON TABLE restaurant_properties TO selemti_user;
--
-- TOC entry 4277 (class 0 OID 0)
-- Dependencies: 306
-- Name: shift;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shift FROM PUBLIC;
REVOKE ALL ON TABLE shift FROM floreant;
GRANT ALL ON TABLE shift TO floreant;
GRANT SELECT ON TABLE shift TO selemti_user;
--
-- TOC entry 4279 (class 0 OID 0)
-- Dependencies: 308
-- Name: shop_floor;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor FROM floreant;
GRANT ALL ON TABLE shop_floor TO floreant;
GRANT SELECT ON TABLE shop_floor TO selemti_user;
--
-- TOC entry 4281 (class 0 OID 0)
-- Dependencies: 310
-- Name: shop_floor_template;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor_template FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor_template FROM floreant;
GRANT ALL ON TABLE shop_floor_template TO floreant;
GRANT SELECT ON TABLE shop_floor_template TO selemti_user;
--
-- TOC entry 4283 (class 0 OID 0)
-- Dependencies: 312
-- Name: shop_floor_template_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor_template_properties FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor_template_properties FROM floreant;
GRANT ALL ON TABLE shop_floor_template_properties TO floreant;
GRANT SELECT ON TABLE shop_floor_template_properties TO selemti_user;
--
-- TOC entry 4284 (class 0 OID 0)
-- Dependencies: 313
-- Name: shop_table;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table FROM PUBLIC;
REVOKE ALL ON TABLE shop_table FROM floreant;
GRANT ALL ON TABLE shop_table TO floreant;
GRANT SELECT ON TABLE shop_table TO selemti_user;
--
-- TOC entry 4285 (class 0 OID 0)
-- Dependencies: 314
-- Name: shop_table_status;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table_status FROM PUBLIC;
REVOKE ALL ON TABLE shop_table_status FROM floreant;
GRANT ALL ON TABLE shop_table_status TO floreant;
GRANT SELECT ON TABLE shop_table_status TO selemti_user;
--
-- TOC entry 4286 (class 0 OID 0)
-- Dependencies: 315
-- Name: shop_table_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table_type FROM PUBLIC;
REVOKE ALL ON TABLE shop_table_type FROM floreant;
GRANT ALL ON TABLE shop_table_type TO floreant;
GRANT SELECT ON TABLE shop_table_type TO selemti_user;
--
-- TOC entry 4288 (class 0 OID 0)
-- Dependencies: 317
-- Name: table_booking_info;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_booking_info FROM PUBLIC;
REVOKE ALL ON TABLE table_booking_info FROM floreant;
GRANT ALL ON TABLE table_booking_info TO floreant;
GRANT SELECT ON TABLE table_booking_info TO selemti_user;
--
-- TOC entry 4290 (class 0 OID 0)
-- Dependencies: 319
-- Name: table_booking_mapping;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_booking_mapping FROM PUBLIC;
REVOKE ALL ON TABLE table_booking_mapping FROM floreant;
GRANT ALL ON TABLE table_booking_mapping TO floreant;
GRANT SELECT ON TABLE table_booking_mapping TO selemti_user;
--
-- TOC entry 4291 (class 0 OID 0)
-- Dependencies: 320
-- Name: table_ticket_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_ticket_num FROM PUBLIC;
REVOKE ALL ON TABLE table_ticket_num FROM floreant;
GRANT ALL ON TABLE table_ticket_num TO floreant;
GRANT SELECT ON TABLE table_ticket_num TO selemti_user;
--
-- TOC entry 4292 (class 0 OID 0)
-- Dependencies: 321
-- Name: table_type_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_type_relation FROM PUBLIC;
REVOKE ALL ON TABLE table_type_relation FROM floreant;
GRANT ALL ON TABLE table_type_relation TO floreant;
GRANT SELECT ON TABLE table_type_relation TO selemti_user;
--
-- TOC entry 4293 (class 0 OID 0)
-- Dependencies: 322
-- Name: tax;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE tax FROM PUBLIC;
REVOKE ALL ON TABLE tax FROM floreant;
GRANT ALL ON TABLE tax TO floreant;
GRANT SELECT ON TABLE tax TO selemti_user;
--
-- TOC entry 4294 (class 0 OID 0)
-- Dependencies: 323
-- Name: tax_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE tax_group FROM PUBLIC;
REVOKE ALL ON TABLE tax_group FROM floreant;
GRANT ALL ON TABLE tax_group TO floreant;
GRANT SELECT ON TABLE tax_group TO selemti_user;
--
-- TOC entry 4296 (class 0 OID 0)
-- Dependencies: 325
-- Name: terminal_printers;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal_printers FROM PUBLIC;
REVOKE ALL ON TABLE terminal_printers FROM floreant;
GRANT ALL ON TABLE terminal_printers TO floreant;
GRANT SELECT ON TABLE terminal_printers TO selemti_user;
--
-- TOC entry 4298 (class 0 OID 0)
-- Dependencies: 327
-- Name: terminal_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal_properties FROM PUBLIC;
REVOKE ALL ON TABLE terminal_properties FROM floreant;
GRANT ALL ON TABLE terminal_properties TO floreant;
GRANT SELECT ON TABLE terminal_properties TO selemti_user;
--
-- TOC entry 4299 (class 0 OID 0)
-- Dependencies: 328
-- Name: ticket_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_discount FROM PUBLIC;
REVOKE ALL ON TABLE ticket_discount FROM floreant;
GRANT ALL ON TABLE ticket_discount TO floreant;
GRANT SELECT ON TABLE ticket_discount TO selemti_user;
--
-- TOC entry 4301 (class 0 OID 0)
-- Dependencies: 330
-- Name: ticket_folio_complete;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_folio_complete FROM PUBLIC;
REVOKE ALL ON TABLE ticket_folio_complete FROM floreant;
GRANT ALL ON TABLE ticket_folio_complete TO floreant;
GRANT SELECT ON TABLE ticket_folio_complete TO selemti_user;
--
-- TOC entry 4303 (class 0 OID 0)
-- Dependencies: 332
-- Name: ticket_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item FROM floreant;
GRANT ALL ON TABLE ticket_item TO floreant;
GRANT SELECT ON TABLE ticket_item TO selemti_user;
--
-- TOC entry 4304 (class 0 OID 0)
-- Dependencies: 333
-- Name: ticket_item_addon_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_addon_relation FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_addon_relation FROM floreant;
GRANT ALL ON TABLE ticket_item_addon_relation TO floreant;
GRANT SELECT ON TABLE ticket_item_addon_relation TO selemti_user;
--
-- TOC entry 4305 (class 0 OID 0)
-- Dependencies: 334
-- Name: ticket_item_cooking_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_cooking_instruction FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_cooking_instruction FROM floreant;
GRANT ALL ON TABLE ticket_item_cooking_instruction TO floreant;
GRANT SELECT ON TABLE ticket_item_cooking_instruction TO selemti_user;
--
-- TOC entry 4306 (class 0 OID 0)
-- Dependencies: 335
-- Name: ticket_item_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_discount FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_discount FROM floreant;
GRANT ALL ON TABLE ticket_item_discount TO floreant;
GRANT SELECT ON TABLE ticket_item_discount TO selemti_user;
--
-- TOC entry 4309 (class 0 OID 0)
-- Dependencies: 338
-- Name: ticket_item_modifier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_modifier FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_modifier FROM floreant;
GRANT ALL ON TABLE ticket_item_modifier TO floreant;
GRANT SELECT ON TABLE ticket_item_modifier TO selemti_user;
--
-- TOC entry 4311 (class 0 OID 0)
-- Dependencies: 340
-- Name: ticket_item_modifier_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_modifier_relation FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_modifier_relation FROM floreant;
GRANT ALL ON TABLE ticket_item_modifier_relation TO floreant;
GRANT SELECT ON TABLE ticket_item_modifier_relation TO selemti_user;
--
-- TOC entry 4312 (class 0 OID 0)
-- Dependencies: 341
-- Name: ticket_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_properties FROM PUBLIC;
REVOKE ALL ON TABLE ticket_properties FROM floreant;
GRANT ALL ON TABLE ticket_properties TO floreant;
GRANT SELECT ON TABLE ticket_properties TO selemti_user;
--
-- TOC entry 4313 (class 0 OID 0)
-- Dependencies: 342
-- Name: ticket_table_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_table_num FROM PUBLIC;
REVOKE ALL ON TABLE ticket_table_num FROM floreant;
GRANT ALL ON TABLE ticket_table_num TO floreant;
GRANT SELECT ON TABLE ticket_table_num TO selemti_user;
--
-- TOC entry 4314 (class 0 OID 0)
-- Dependencies: 343
-- Name: transaction_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE transaction_properties FROM PUBLIC;
REVOKE ALL ON TABLE transaction_properties FROM floreant;
GRANT ALL ON TABLE transaction_properties TO floreant;
GRANT SELECT ON TABLE transaction_properties TO selemti_user;
--
-- TOC entry 4315 (class 0 OID 0)
-- Dependencies: 344
-- Name: transactions;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE transactions FROM PUBLIC;
REVOKE ALL ON TABLE transactions FROM floreant;
GRANT ALL ON TABLE transactions TO floreant;
GRANT SELECT ON TABLE transactions TO selemti_user;
--
-- TOC entry 4317 (class 0 OID 0)
-- Dependencies: 346
-- Name: user_permission;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_permission FROM PUBLIC;
REVOKE ALL ON TABLE user_permission FROM floreant;
GRANT ALL ON TABLE user_permission TO floreant;
GRANT SELECT ON TABLE user_permission TO selemti_user;
--
-- TOC entry 4318 (class 0 OID 0)
-- Dependencies: 347
-- Name: user_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_type FROM PUBLIC;
REVOKE ALL ON TABLE user_type FROM floreant;
GRANT ALL ON TABLE user_type TO floreant;
GRANT SELECT ON TABLE user_type TO selemti_user;
--
-- TOC entry 4320 (class 0 OID 0)
-- Dependencies: 349
-- Name: user_user_permission;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_user_permission FROM PUBLIC;
REVOKE ALL ON TABLE user_user_permission FROM floreant;
GRANT ALL ON TABLE user_user_permission TO floreant;
GRANT SELECT ON TABLE user_user_permission TO selemti_user;
--
-- TOC entry 4321 (class 0 OID 0)
-- Dependencies: 350
-- Name: users;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE users FROM PUBLIC;
REVOKE ALL ON TABLE users FROM floreant;
GRANT ALL ON TABLE users TO floreant;
GRANT SELECT ON TABLE users TO selemti_user;
--
-- TOC entry 4323 (class 0 OID 0)
-- Dependencies: 352
-- Name: virtual_printer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE virtual_printer FROM PUBLIC;
REVOKE ALL ON TABLE virtual_printer FROM floreant;
GRANT ALL ON TABLE virtual_printer TO floreant;
GRANT SELECT ON TABLE virtual_printer TO selemti_user;
--
-- TOC entry 4325 (class 0 OID 0)
-- Dependencies: 354
-- Name: virtualprinter_order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE virtualprinter_order_type FROM PUBLIC;
REVOKE ALL ON TABLE virtualprinter_order_type FROM floreant;
GRANT ALL ON TABLE virtualprinter_order_type TO floreant;
GRANT SELECT ON TABLE virtualprinter_order_type TO selemti_user;
--
-- TOC entry 4326 (class 0 OID 0)
-- Dependencies: 355
-- Name: void_reasons;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE void_reasons FROM PUBLIC;
REVOKE ALL ON TABLE void_reasons FROM floreant;
GRANT ALL ON TABLE void_reasons TO floreant;
GRANT SELECT ON TABLE void_reasons TO selemti_user;
--
-- TOC entry 4328 (class 0 OID 0)
-- Dependencies: 381
-- Name: vw_reconciliation_status;
Type: ACL;
Schema: public;
Owner: postgres
--

REVOKE ALL ON TABLE vw_reconciliation_status FROM PUBLIC;
REVOKE ALL ON TABLE vw_reconciliation_status FROM postgres;
GRANT ALL ON TABLE vw_reconciliation_status TO postgres;
GRANT SELECT ON TABLE vw_reconciliation_status TO selemti_user;
--
-- TOC entry 4329 (class 0 OID 0)
-- Dependencies: 357
-- Name: zip_code_vs_delivery_charge;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE zip_code_vs_delivery_charge FROM PUBLIC;
REVOKE ALL ON TABLE zip_code_vs_delivery_charge FROM floreant;
GRANT ALL ON TABLE zip_code_vs_delivery_charge TO floreant;
GRANT SELECT ON TABLE zip_code_vs_delivery_charge TO selemti_user;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 4374 (class 0 OID 0)
-- Dependencies: 377
-- Name: vw_sesion_ventas;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_ventas FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_ventas FROM postgres;
GRANT ALL ON TABLE vw_sesion_ventas TO postgres;
GRANT SELECT ON TABLE vw_sesion_ventas TO floreant;
--
-- TOC entry 4375 (class 0 OID 0)
-- Dependencies: 374
-- Name: vw_sesion_dpr;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_dpr FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_dpr FROM postgres;
GRANT ALL ON TABLE vw_sesion_dpr TO postgres;
GRANT SELECT ON TABLE vw_sesion_dpr TO floreant;
-- Completed on 2025-09-26 03:31:51

--
-- PostgreSQL database dump complete
--


\n-- END Local_Recetas_25_09_2025.sql\n
\n-- BEGIN Local_Recetas_28_09_2025.sql\n
--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.0
-- Dumped by pg_dump version 9.5.0

-- Started on 2025-09-30 01:46:34

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
DROP DATABASE pos;
--
-- TOC entry 4240 (class 1262 OID 67811)
-- Name: pos;
Type: DATABASE;
Schema: -;
Owner: floreant
--

CREATE DATABASE pos WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'Spanish_Mexico.1252' LC_CTYPE = 'Spanish_Mexico.1252';
ALTER DATABASE pos OWNER TO floreant;
\connect pos

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
--
-- TOC entry 7 (class 2615 OID 2200)
-- Name: public;
Type: SCHEMA;
Schema: -;
ALTER SCHEMA public OWNER TO postgres;
--
-- TOC entry 4241 (class 0 OID 0)
-- Dependencies: 7
-- Name: SCHEMA public;
Type: COMMENT;
Schema: -;
Owner: postgres
--

COMMENT ON SCHEMA public IS 'standard public schema';
--
-- TOC entry 6 (class 2615 OID 67812)
-- Name: selemti;
Type: SCHEMA;
Schema: -;
ALTER SCHEMA selemti OWNER TO floreant;
--
-- TOC entry 467 (class 3079 OID 12355)
-- Name: plpgsql;
Type: EXTENSION;
Schema: -;
Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;
--
-- TOC entry 4244 (class 0 OID 0)
-- Dependencies: 467
-- Name: EXTENSION plpgsql;
Type: COMMENT;
Schema: -;
Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';
SET search_path = selemti, pg_catalog;
--
-- TOC entry 1487 (class 1247 OID 77525)
-- Name: consumo_policy;
Type: TYPE;
Schema: selemti;
ALTER TYPE consumo_policy OWNER TO postgres;
--
-- TOC entry 1505 (class 1247 OID 77583)
-- Name: merma_clase;
Type: TYPE;
Schema: selemti;
ALTER TYPE merma_clase OWNER TO postgres;
--
-- TOC entry 1484 (class 1247 OID 77513)
-- Name: producto_tipo;
Type: TYPE;
Schema: selemti;
ALTER TYPE producto_tipo OWNER TO postgres;
SET search_path = public, pg_catalog;
--
-- TOC entry 468 (class 1255 OID 67813)
-- Name: _last_assign_window(integer, integer, timestamp with time zone);
Type: FUNCTION;
Schema: public;
';
ALTER FUNCTION public._last_assign_window(_terminal_id integer, _user_id integer, _ref_time timestamp with time zone) OWNER TO postgres;
--
-- TOC entry 482 (class 1255 OID 67814)
-- Name: assign_daily_folio();
Type: FUNCTION;
Schema: public;
v_date     DATE;
v_next     INTEGER;
BEGIN
    IF NEW.terminal_id IS NULL THEN
        RAISE EXCEPTION ''No se puede crear ticket sin terminal_id'';
END IF;
IF NEW.create_date IS NULL THEN
        NEW.create_date := NOW();
END IF;
v_date := (NEW.create_date AT TIME ZONE ''America/Mexico_City'')::DATE;
SELECT COALESCE(NULLIF(UPPER(BTRIM(t.location)), ''''), '''') INTO v_branch
    FROM public.terminal t
    WHERE t.id = NEW.terminal_id;
IF NOT FOUND THEN
        RAISE EXCEPTION ''Terminal % no existe en la base de datos'', NEW.terminal_id;
END IF;
IF NEW.daily_folio IS NOT NULL AND NEW.folio_date IS NOT NULL AND NEW.branch_key IS NOT NULL THEN
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE folio_date = NEW.folio_date
            AND branch_key = NEW.branch_key
            AND daily_folio = NEW.daily_folio
            AND id != NEW.id
        ) THEN
            RAISE EXCEPTION ''Folio % ya existe para % en %'', NEW.daily_folio, NEW.branch_key, NEW.folio_date;
END IF;
RETURN NEW;
END IF;
WITH up AS (
        INSERT INTO public.daily_folio_counter (folio_date, branch_key, last_value)
        VALUES (v_date, v_branch, 1)
        ON CONFLICT (folio_date, branch_key)
        DO UPDATE SET last_value = public.daily_folio_counter.last_value + 1
        RETURNING last_value
    )
    SELECT last_value INTO v_next FROM up;
NEW.folio_date := v_date;
NEW.branch_key := v_branch;
NEW.daily_folio := v_next;
RETURN NEW;
END
';
ALTER FUNCTION public.assign_daily_folio() OWNER TO floreant;
--
-- TOC entry 494 (class 1255 OID 69478)
-- Name: fn_correct_drawer_report(date);
Type: FUNCTION;
Schema: public;
END';
ALTER FUNCTION public.fn_correct_drawer_report(report_date date) OWNER TO postgres;
--
-- TOC entry 495 (class 1255 OID 69476)
-- Name: fn_daily_reconciliation(date);
Type: FUNCTION;
Schema: public;
END';
ALTER FUNCTION public.fn_daily_reconciliation(report_date date) OWNER TO postgres;
--
-- TOC entry 493 (class 1255 OID 69477)
-- Name: fn_reconciliation_detail(date);
Type: FUNCTION;
Schema: public;
END';
ALTER FUNCTION public.fn_reconciliation_detail(report_date date) OWNER TO postgres;
--
-- TOC entry 483 (class 1255 OID 67815)
-- Name: get_daily_stats(date);
Type: FUNCTION;
Schema: public;
';
ALTER FUNCTION public.get_daily_stats(p_date date) OWNER TO floreant;
--
-- TOC entry 484 (class 1255 OID 67816)
-- Name: get_ticket_folio_info(integer);
Type: FUNCTION;
Schema: public;
';
ALTER FUNCTION public.get_ticket_folio_info(p_ticket_id integer) OWNER TO floreant;
--
-- TOC entry 485 (class 1255 OID 67817)
-- Name: kds_notify();
Type: FUNCTION;
Schema: public;
v_pg_id       INT;
v_item_id     INT;
v_status      TEXT;
v_total       INT;
v_ready       INT;
v_done        INT;
v_type        TEXT;
v_daily_folio INT;
v_branch_key  TEXT;
v_folio_fmt   TEXT;
BEGIN
    IF TG_TABLE_NAME = ''kitchen_ticket_item'' THEN
        IF NEW.ticket_item_id IS NULL THEN
            RAISE EXCEPTION ''ticket_item_id no puede ser NULL en kitchen_ticket_item'';
END IF;
v_item_id := NEW.ticket_item_id;
SELECT ti.ticket_id, ti.pg_id INTO v_ticket_id, v_pg_id
        FROM ticket_item ti WHERE ti.id = v_item_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket_item % no existe'', v_item_id;
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket % no existe'', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, ''0'');
v_status := UPPER(COALESCE(NEW.status, ''''));
v_type := CASE WHEN TG_OP = ''INSERT'' THEN ''item_upsert'' ELSE ''item_status'' END;
PERFORM pg_notify(
            ''kds_event'',
            json_build_object(
                ''type'',        v_type,
                ''ticket_id'',   v_ticket_id,
                ''pg'',          v_pg_id,
                ''item_id'',     v_item_id,
                ''status'',      v_status,
                ''daily_folio'', v_daily_folio,
                ''branch_key'',  v_branch_key,
                ''folio_fmt'',   v_folio_fmt,
                ''ts'',          NOW()
            )::TEXT
        );
ELSIF TG_TABLE_NAME = ''ticket_item'' THEN
        v_item_id := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id := NEW.pg_id;
IF v_ticket_id IS NULL THEN
            RAISE EXCEPTION ''ticket_id no puede ser NULL en ticket_item'';
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket % no existe'', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, ''0'');
v_status := UPPER(COALESCE(NEW.status, ''''));
v_type := CASE WHEN TG_OP = ''INSERT'' THEN ''item_insert'' ELSE ''item_status'' END;
PERFORM pg_notify(
            ''kds_event'',
            json_build_object(
                ''type'',        v_type,
                ''ticket_id'',   v_ticket_id,
                ''pg'',          v_pg_id,
                ''item_id'',     v_item_id,
                ''status'',      v_status,
                ''daily_folio'', v_daily_folio,
                ''branch_key'',  v_branch_key,
                ''folio_fmt'',   v_folio_fmt,
                ''ts'',          NOW()
            )::TEXT
        );
END IF;
IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
        WITH s AS (
            SELECT
                ti.id AS item_id,
                UPPER(COALESCE(kti.status, ti.status, '''')) AS st
            FROM ticket_item ti
            LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
            WHERE ti.ticket_id = v_ticket_id AND ti.pg_id = v_pg_id
            GROUP BY ti.id, st
        )
        SELECT
            COUNT(DISTINCT item_id) AS total,
            COUNT(DISTINCT item_id) FILTER (WHERE st IN (''READY'', ''DONE'')) AS ready,
            COUNT(DISTINCT item_id) FILTER (WHERE st = ''DONE'') AS done
        INTO v_total, v_ready, v_done
        FROM s;
IF v_total > 0 AND v_total = v_ready THEN
            PERFORM pg_notify(
                ''kds_event'',
                json_build_object(
                    ''type'',        ''ticket_all_ready'',
                    ''ticket_id'',   v_ticket_id,
                    ''pg'',          v_pg_id,
                    ''daily_folio'', v_daily_folio,
                    ''branch_key'',  v_branch_key,
                    ''folio_fmt'',   v_folio_fmt,
                    ''ts'',          NOW()
                )::TEXT
            );
END IF;
IF v_total > 0 AND v_total = v_done THEN
            PERFORM pg_notify(
                ''kds_event'',
                json_build_object(
                    ''type'',        ''ticket_all_done'',
                    ''ticket_id'',   v_ticket_id,
                    ''pg'',          v_pg_id,
                    ''daily_folio'', v_daily_folio,
                    ''branch_key'',  v_branch_key,
                    ''folio_fmt'',   v_folio_fmt,
                    ''ts'',          NOW()
                )::TEXT
            );
END IF;
END IF;
RETURN NEW;
END;
';
ALTER FUNCTION public.kds_notify() OWNER TO floreant;
--
-- TOC entry 486 (class 1255 OID 67818)
-- Name: reset_daily_folio_smart(text);
Type: FUNCTION;
Schema: public;
v_branch TEXT;
v_has_rows BOOLEAN;
BEGIN
    SELECT EXISTS (
        SELECT 1 FROM public.daily_folio_counter
        WHERE folio_date = v_current_date
        AND (p_branch IS NULL OR branch_key = UPPER(BTRIM(p_branch)))
    ) INTO v_has_rows;
IF NOT v_has_rows THEN
        branch_reset := ''none'';
tickets_affected := 0;
RETURN NEXT;
RETURN;
END IF;
FOR v_branch IN
        SELECT DISTINCT
            CASE
                WHEN p_branch IS NULL THEN dfc.branch_key
                ELSE UPPER(BTRIM(p_branch))
            END
        FROM public.daily_folio_counter dfc
        WHERE dfc.folio_date = v_current_date
        AND (p_branch IS NULL OR dfc.branch_key = UPPER(BTRIM(p_branch)))
    LOOP
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE branch_key = v_branch
            AND folio_date = v_current_date
        ) THEN
            RAISE NOTICE ''ADVERTENCIA: Sucursal % ya tiene % tickets hoy - NO reseteable'',
                v_branch,
                (SELECT COUNT(*) FROM public.ticket WHERE branch_key = v_branch AND folio_date = v_current_date);
CONTINUE;
END IF;
DELETE FROM public.daily_folio_counter
        WHERE branch_key = v_branch AND folio_date = v_current_date;
branch_reset := v_branch;
tickets_affected := 0;
RETURN NEXT;
END LOOP;
RETURN;
END
';
ALTER FUNCTION public.reset_daily_folio_smart(p_branch text) OWNER TO floreant;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 498 (class 1255 OID 77664)
-- Name: cerrar_lote_preparado(bigint, merma_clase, text, integer, integer);
Type: FUNCTION;
Schema: selemti;
v_qty_disponible NUMERIC(14,6);
v_mov_id BIGINT;
BEGIN
    SELECT b.item_id, b.cantidad_actual
    INTO v_item_id, v_qty_disponible
    FROM selemti.inventory_batch b
    WHERE b.id = p_lote_id;
IF v_item_id IS NULL THEN
        RAISE EXCEPTION ''Lote % no existe'', p_lote_id;
END IF;
IF v_qty_disponible IS NULL OR v_qty_disponible <= 0 THEN
        RETURN 0;
END IF;
INSERT INTO selemti.mov_inv (ts, item_id, lote_id, cantidad, tipo, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, 0 - v_qty_disponible, ''MERMA'', ''CIERRE_PREP'', p_lote_id)
    RETURNING id INTO v_mov_id;
INSERT INTO selemti.perdida_log (ts, item_id, lote_id, clase, motivo, qty_canonica, usuario_id, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, p_clase, p_motivo, v_qty_disponible, p_usuario_id, ''CIERRE_PREP'', v_mov_id);
RETURN v_mov_id;
END;
';
ALTER FUNCTION selemti.cerrar_lote_preparado(p_lote_id bigint, p_clase merma_clase, p_motivo text, p_usuario_id integer, p_uom_id integer) OWNER TO postgres;
--
-- TOC entry 487 (class 1255 OID 67819)
-- Name: fn_dah_after_insert();
Type: FUNCTION;
Schema: selemti;
BEGIN
  IF NEW.operation = ''ASIGNAR'' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
IF v_term IS NULL THEN
      INSERT INTO selemti.auditoria(quien,que,payload)
      VALUES(NEW.a_user,''NO_SE_PUDO_RESOLVER_TERMINAL'',
             jsonb_build_object(''dah_id'',NEW.id,''operation'',NEW.operation,''time'',NEW."time"));
RETURN NEW;
END IF;
INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id
    ) VALUES (
      v_term.id, COALESCE(v_term.name,''Terminal ''||v_term.id), COALESCE(v_term.location,''''),
      NEW.a_user, COALESCE(NEW."time", now()), ''ACTIVA'', COALESCE(v_term.current_balance,0), NEW.id
    );
ELSIF NEW.operation = ''CERRAR'' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
UPDATE selemti.sesion_cajon
       SET cierre_ts     = COALESCE(NEW."time", now()),
           estatus       = ''LISTO_PARA_CORTE'',
           closing_float = COALESCE(v_term.current_balance,0),
           dah_evento_id = COALESCE(dah_evento_id, NEW.id)
     WHERE terminal_id = COALESCE(v_term.id, terminal_id)
       AND cajero_usuario_id = NEW.a_user
       AND cierre_ts IS NULL;
END IF;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_dah_after_insert() OWNER TO floreant;
--
-- TOC entry 488 (class 1255 OID 67820)
-- Name: fn_normalizar_forma_pago(text, text, text, text);
Type: FUNCTION;
Schema: selemti;
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN (''CASH'',''CREDIT'',''DEBIT'',''TRANSFER'') THEN
    RETURN pt;
ELSIF pt = ''CUSTOM_PAYMENT'' THEN
    IF cn IS NOT NULL THEN RETURN ''CUSTOM:''||cn;
ELSE RETURN ''CUSTOM'';
END IF;
ELSIF pt IN (''REFUND'',''PAY_OUT'',''CASH_DROP'') THEN
    RETURN pt;
-- egresos/ajustes estandarizados
  ELSE
    RETURN pt;
END IF;
END ';
ALTER FUNCTION selemti.fn_normalizar_forma_pago(p_payment_type text, p_transaction_type text, p_payment_sub_type text, p_custom_name text) OWNER TO floreant;
--
-- TOC entry 481 (class 1255 OID 67821)
-- Name: fn_precorte_efectivo_bi();
Type: FUNCTION;
Schema: selemti;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_precorte_efectivo_bi() OWNER TO floreant;
--
-- TOC entry 489 (class 1255 OID 67822)
-- Name: fn_reparar_sesion_apertura(integer, integer);
Type: FUNCTION;
Schema: selemti;
BEGIN
  IF EXISTS (
    SELECT 1 FROM selemti.sesion_cajon
    WHERE terminal_id=p_terminal_id AND cajero_usuario_id=p_usuario AND cierre_ts IS NULL
  ) THEN
    RETURN ''YA_EXISTE_SESION_ABIERTA'';
END IF;
SELECT * INTO v_term FROM public.terminal WHERE id=p_terminal_id;
IF v_term IS NULL THEN RETURN ''TERMINAL_NO_ENCONTRADA'';
END IF;
INSERT INTO selemti.sesion_cajon(
    terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
    apertura_ts, estatus, opening_float
  ) VALUES (
    p_terminal_id, COALESCE(v_term.name,''Terminal ''||p_terminal_id), COALESCE(v_term.location,''''),
    p_usuario, now(), ''ACTIVA'', COALESCE(v_term.current_balance,0)
  );
RETURN ''CREADA'';
END ';
ALTER FUNCTION selemti.fn_reparar_sesion_apertura(p_terminal_id integer, p_usuario integer) OWNER TO floreant;
--
-- TOC entry 490 (class 1255 OID 67823)
-- Name: fn_slug(text);
Type: FUNCTION;
Schema: selemti;
BEGIN
  s := translate(s, ''ÃÃ‰ÃÃ“ÃšÃœÃ‘Ã¡Ã©Ã­Ã³ÃºÃ¼Ã±'', ''AEIOUUNaeiouun'');
s := regexp_replace(s, ''[^a-z0-9]+'', ''-'', ''g'');
s := regexp_replace(s, ''(^-|-$)'', '''', ''g'');
IF s = '''' THEN RETURN NULL;
END IF;
RETURN s;
END ';
ALTER FUNCTION selemti.fn_slug(in_text text) OWNER TO floreant;
--
-- TOC entry 491 (class 1255 OID 67824)
-- Name: fn_terminal_bu_snapshot_cierre();
Type: FUNCTION;
Schema: selemti;
v_has_new boolean := (NEW.assigned_user IS NOT NULL);
BEGIN
  /* CIERRE: habÃ­a cajero y ahora ya no */
  IF (v_has_old AND NOT v_has_new) THEN
    UPDATE selemti.sesion_cajon AS sc
       SET cierre_ts      = now(),
           estatus        = ''LISTO_PARA_CORTE'',
           closing_float  = COALESCE(OLD.current_balance, 0),
           -- bandera: true si NO hubo precorte para esta sesiÃ³n
           skipped_precorte = NOT EXISTS (
             SELECT 1
             FROM selemti.precorte p
             WHERE p.sesion_id = sc.id
           )
     WHERE sc.terminal_id       = OLD.id
       AND sc.cajero_usuario_id = OLD.assigned_user
       AND sc.cierre_ts         IS NULL;
END IF;
/* APERTURA: no habÃ­a cajero y ahora sÃ­ */
  IF (NOT v_has_old AND v_has_new) THEN
    INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id, skipped_precorte
    )
    VALUES(
      NEW.id,
      COALESCE(NEW.name, ''Terminal ''||NEW.id),
      COALESCE(NEW.location, ''''),
      NEW.assigned_user,
      now(),
      ''ACTIVA'',
      COALESCE(NEW.current_balance, 0),
      NULL,
      FALSE  -- por defecto, en apertura no estÃ¡ saltado
    );
END IF;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_terminal_bu_snapshot_cierre() OWNER TO floreant;
--
-- TOC entry 492 (class 1255 OID 67825)
-- Name: fn_tx_after_insert_forma_pago();
Type: FUNCTION;
Schema: selemti;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
    NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name
  );
INSERT INTO selemti.formas_pago(
    codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref
  )
  VALUES (
    v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref
  )
  ON CONFLICT DO NOTHING;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_tx_after_insert_forma_pago() OWNER TO floreant;
--
-- TOC entry 497 (class 1255 OID 77663)
-- Name: inferir_recetas_de_ventas(date, date);
Type: FUNCTION;
Schema: selemti;
v_plato_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
FOR v_plato_record IN 
        SELECT DISTINCT td.item_id, COUNT(*) as total_ventas
        FROM selemti.ticket_venta_det td
        JOIN selemti.ticket_venta_cab tc ON td.ticket_id = tc.id
        WHERE tc.fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta
          AND td.receta_shadow_id IS NULL
        GROUP BY td.item_id
        HAVING COUNT(*) >= 5
    LOOP
        INSERT INTO selemti.receta_shadow (codigo_plato_pos, nombre_plato, total_ventas_analizadas, fecha_primer_venta, fecha_ultima_venta)
        VALUES (v_plato_record.item_id, ''Inferida_'' || v_plato_record.item_id, v_plato_record.total_ventas, p_fecha_desde, p_fecha_hasta);
UPDATE selemti.ticket_venta_det
        SET receta_shadow_id = currval(''selemti.receta_shadow_id_seq''), reprocesado = TRUE, version_reproceso = 1
        WHERE item_id = v_plato_record.item_id
          AND ticket_id IN (SELECT id FROM selemti.ticket_venta_cab WHERE fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta);
v_recetas_inferidas := v_recetas_inferidas + 1;
END LOOP;
RETURN v_recetas_inferidas;
END;
';
ALTER FUNCTION selemti.inferir_recetas_de_ventas(p_fecha_desde date, p_fecha_hasta date) OWNER TO postgres;
--
-- TOC entry 499 (class 1255 OID 77999)
-- Name: registrar_consumo_porcionado(bigint, bigint, text, numeric, json);
Type: FUNCTION;
Schema: selemti;
Owner: postgres
--

CREATE FUNCTION registrar_consumo_porcionado(p_ticket_id bigint, p_ticket_det_id bigint, p_item_id text, p_qty_total numeric, p_distribucion json) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
  r JSON;
v_count INT := 0;
BEGIN
  FOR r IN SELECT * FROM json_array_elements(p_distribucion)
  LOOP
    INSERT INTO selemti.ticket_det_consumo(
      ticket_id, ticket_det_id, item_id, lote_id, qty_canonica, ref_tipo, ref_id
    )
    VALUES (
      p_ticket_id, p_ticket_det_id, p_item_id, NULL,
      (r->>''qty_ml'')::NUMERIC,
      ''PORCION'', p_ticket_det_id
    );
v_count := v_count + 1;
END LOOP;
RETURN v_count;
END;
';
ALTER FUNCTION selemti.registrar_consumo_porcionado(p_ticket_id bigint, p_ticket_det_id bigint, p_item_id text, p_qty_total numeric, p_distribucion json) OWNER TO postgres;
--
-- TOC entry 496 (class 1255 OID 77662)
-- Name: reprocesar_costos_historicos(date, date, character varying, integer);
Type: FUNCTION;
Schema: selemti;
v_total_actualizados INTEGER := 0;
v_item_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
INSERT INTO selemti.job_recalc_queue (scope_type, scope_from, scope_to, reason, status)
    VALUES (''PERIODO'', p_fecha_desde, p_fecha_hasta, ''Reproceso costos '' || p_algoritmo, ''RUNNING'')
    RETURNING id INTO v_lote_id;
FOR v_item_record IN 
        SELECT DISTINCT item_id 
        FROM selemti.mov_inv 
        WHERE ts BETWEEN p_fecha_desde AND p_fecha_hasta
    LOOP
        UPDATE selemti.historial_costos_item
        SET costo_wac = (
            SELECT AVG(costo_unit * cantidad) / NULLIF(SUM(cantidad), 0)
            FROM selemti.mov_inv 
            WHERE item_id = v_item_record.item_id 
            AND ts BETWEEN p_fecha_desde AND p_fecha_hasta 
            AND tipo IN (''COMPRA'', ''RECEPCION'')
        )
        WHERE item_id = v_item_record.item_id AND fecha_efectiva BETWEEN p_fecha_desde AND p_fecha_hasta;
v_total_actualizados := v_total_actualizados + 1;
END LOOP;
UPDATE selemti.job_recalc_queue 
    SET status = ''DONE'', 
        result = (''{"actualizados": '' || v_total_actualizados || ''}'')::json
    WHERE id = v_lote_id;
RETURN v_total_actualizados;
EXCEPTION
    WHEN OTHERS THEN
        UPDATE selemti.job_recalc_queue 
        SET status = ''FAILED'', 
            result = (''{"error": "'' || REPLACE(SQLERRM, ''"'', ''\"'') || ''"}'')::json
        WHERE id = v_lote_id;
RAISE;
END;
';
ALTER FUNCTION selemti.reprocesar_costos_historicos(p_fecha_desde date, p_fecha_hasta date, p_algoritmo character varying, p_usuario_id integer) OWNER TO postgres;
SET search_path = public, pg_catalog;
SET default_tablespace = '';
SET default_with_oids = false;
--
-- TOC entry 181 (class 1259 OID 67826)
-- Name: action_history;
Type: TABLE;
Schema: public;
ALTER TABLE action_history OWNER TO floreant;
--
-- TOC entry 182 (class 1259 OID 67832)
-- Name: action_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE action_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE action_history_id_seq OWNER TO floreant;
--
-- TOC entry 4246 (class 0 OID 0)
-- Dependencies: 182
-- Name: action_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE action_history_id_seq OWNED BY action_history.id;
--
-- TOC entry 183 (class 1259 OID 67834)
-- Name: attendence_history;
Type: TABLE;
Schema: public;
ALTER TABLE attendence_history OWNER TO floreant;
--
-- TOC entry 184 (class 1259 OID 67837)
-- Name: attendence_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE attendence_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE attendence_history_id_seq OWNER TO floreant;
--
-- TOC entry 4248 (class 0 OID 0)
-- Dependencies: 184
-- Name: attendence_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE attendence_history_id_seq OWNED BY attendence_history.id;
--
-- TOC entry 185 (class 1259 OID 67839)
-- Name: cash_drawer;
Type: TABLE;
Schema: public;
ALTER TABLE cash_drawer OWNER TO floreant;
--
-- TOC entry 186 (class 1259 OID 67842)
-- Name: cash_drawer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_id_seq OWNER TO floreant;
--
-- TOC entry 4250 (class 0 OID 0)
-- Dependencies: 186
-- Name: cash_drawer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_id_seq OWNED BY cash_drawer.id;
--
-- TOC entry 187 (class 1259 OID 67844)
-- Name: cash_drawer_reset_history;
Type: TABLE;
Schema: public;
ALTER TABLE cash_drawer_reset_history OWNER TO floreant;
--
-- TOC entry 188 (class 1259 OID 67847)
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_reset_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_reset_history_id_seq OWNER TO floreant;
--
-- TOC entry 4252 (class 0 OID 0)
-- Dependencies: 188
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_reset_history_id_seq OWNED BY cash_drawer_reset_history.id;
--
-- TOC entry 189 (class 1259 OID 67849)
-- Name: cooking_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE cooking_instruction OWNER TO floreant;
--
-- TOC entry 190 (class 1259 OID 67852)
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cooking_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cooking_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 4254 (class 0 OID 0)
-- Dependencies: 190
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cooking_instruction_id_seq OWNED BY cooking_instruction.id;
--
-- TOC entry 191 (class 1259 OID 67854)
-- Name: coupon_and_discount;
Type: TABLE;
Schema: public;
ALTER TABLE coupon_and_discount OWNER TO floreant;
--
-- TOC entry 192 (class 1259 OID 67857)
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE coupon_and_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE coupon_and_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4256 (class 0 OID 0)
-- Dependencies: 192
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE coupon_and_discount_id_seq OWNED BY coupon_and_discount.id;
--
-- TOC entry 193 (class 1259 OID 67859)
-- Name: currency;
Type: TABLE;
Schema: public;
ALTER TABLE currency OWNER TO floreant;
--
-- TOC entry 194 (class 1259 OID 67862)
-- Name: currency_balance;
Type: TABLE;
Schema: public;
ALTER TABLE currency_balance OWNER TO floreant;
--
-- TOC entry 195 (class 1259 OID 67865)
-- Name: currency_balance_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_balance_id_seq OWNER TO floreant;
--
-- TOC entry 4259 (class 0 OID 0)
-- Dependencies: 195
-- Name: currency_balance_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_balance_id_seq OWNED BY currency_balance.id;
--
-- TOC entry 196 (class 1259 OID 67867)
-- Name: currency_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_id_seq OWNER TO floreant;
--
-- TOC entry 4260 (class 0 OID 0)
-- Dependencies: 196
-- Name: currency_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_id_seq OWNED BY currency.id;
--
-- TOC entry 197 (class 1259 OID 67869)
-- Name: custom_payment;
Type: TABLE;
Schema: public;
ALTER TABLE custom_payment OWNER TO floreant;
--
-- TOC entry 198 (class 1259 OID 67872)
-- Name: custom_payment_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE custom_payment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE custom_payment_id_seq OWNER TO floreant;
--
-- TOC entry 4262 (class 0 OID 0)
-- Dependencies: 198
-- Name: custom_payment_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE custom_payment_id_seq OWNED BY custom_payment.id;
--
-- TOC entry 199 (class 1259 OID 67874)
-- Name: customer;
Type: TABLE;
Schema: public;
ALTER TABLE customer OWNER TO floreant;
--
-- TOC entry 200 (class 1259 OID 67880)
-- Name: customer_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE customer_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE customer_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4264 (class 0 OID 0)
-- Dependencies: 200
-- Name: customer_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE customer_auto_id_seq OWNED BY customer.auto_id;
--
-- TOC entry 201 (class 1259 OID 67882)
-- Name: customer_properties;
Type: TABLE;
Schema: public;
ALTER TABLE customer_properties OWNER TO floreant;
--
-- TOC entry 202 (class 1259 OID 67888)
-- Name: daily_folio_counter;
Type: TABLE;
Schema: public;
ALTER TABLE daily_folio_counter OWNER TO floreant;
--
-- TOC entry 203 (class 1259 OID 67895)
-- Name: data_update_info;
Type: TABLE;
Schema: public;
ALTER TABLE data_update_info OWNER TO floreant;
--
-- TOC entry 204 (class 1259 OID 67898)
-- Name: data_update_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE data_update_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE data_update_info_id_seq OWNER TO floreant;
--
-- TOC entry 4268 (class 0 OID 0)
-- Dependencies: 204
-- Name: data_update_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE data_update_info_id_seq OWNED BY data_update_info.id;
--
-- TOC entry 205 (class 1259 OID 67900)
-- Name: delivery_address;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_address OWNER TO floreant;
--
-- TOC entry 206 (class 1259 OID 67903)
-- Name: delivery_address_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_address_id_seq OWNER TO floreant;
--
-- TOC entry 4270 (class 0 OID 0)
-- Dependencies: 206
-- Name: delivery_address_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_address_id_seq OWNED BY delivery_address.id;
--
-- TOC entry 207 (class 1259 OID 67905)
-- Name: delivery_charge;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_charge OWNER TO floreant;
--
-- TOC entry 208 (class 1259 OID 67908)
-- Name: delivery_charge_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_charge_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_charge_id_seq OWNER TO floreant;
--
-- TOC entry 4272 (class 0 OID 0)
-- Dependencies: 208
-- Name: delivery_charge_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_charge_id_seq OWNED BY delivery_charge.id;
--
-- TOC entry 209 (class 1259 OID 67910)
-- Name: delivery_configuration;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_configuration OWNER TO floreant;
--
-- TOC entry 210 (class 1259 OID 67913)
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_configuration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_configuration_id_seq OWNER TO floreant;
--
-- TOC entry 4274 (class 0 OID 0)
-- Dependencies: 210
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_configuration_id_seq OWNED BY delivery_configuration.id;
--
-- TOC entry 211 (class 1259 OID 67915)
-- Name: delivery_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_instruction OWNER TO floreant;
--
-- TOC entry 212 (class 1259 OID 67918)
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 4276 (class 0 OID 0)
-- Dependencies: 212
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_instruction_id_seq OWNED BY delivery_instruction.id;
--
-- TOC entry 213 (class 1259 OID 67920)
-- Name: drawer_assigned_history;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_assigned_history OWNER TO floreant;
--
-- TOC entry 214 (class 1259 OID 67923)
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_assigned_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_assigned_history_id_seq OWNER TO floreant;
--
-- TOC entry 4278 (class 0 OID 0)
-- Dependencies: 214
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_assigned_history_id_seq OWNED BY drawer_assigned_history.id;
--
-- TOC entry 215 (class 1259 OID 67925)
-- Name: drawer_pull_report;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_pull_report OWNER TO floreant;
--
-- TOC entry 216 (class 1259 OID 67928)
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_pull_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_pull_report_id_seq OWNER TO floreant;
--
-- TOC entry 4280 (class 0 OID 0)
-- Dependencies: 216
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_pull_report_id_seq OWNED BY drawer_pull_report.id;
--
-- TOC entry 217 (class 1259 OID 67930)
-- Name: drawer_pull_report_voidtickets;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_pull_report_voidtickets OWNER TO floreant;
--
-- TOC entry 218 (class 1259 OID 67936)
-- Name: employee_in_out_history;
Type: TABLE;
Schema: public;
ALTER TABLE employee_in_out_history OWNER TO floreant;
--
-- TOC entry 219 (class 1259 OID 67939)
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE employee_in_out_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE employee_in_out_history_id_seq OWNER TO floreant;
--
-- TOC entry 4283 (class 0 OID 0)
-- Dependencies: 219
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE employee_in_out_history_id_seq OWNED BY employee_in_out_history.id;
--
-- TOC entry 220 (class 1259 OID 67941)
-- Name: global_config;
Type: TABLE;
Schema: public;
ALTER TABLE global_config OWNER TO floreant;
--
-- TOC entry 221 (class 1259 OID 67944)
-- Name: global_config_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE global_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE global_config_id_seq OWNER TO floreant;
--
-- TOC entry 4285 (class 0 OID 0)
-- Dependencies: 221
-- Name: global_config_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE global_config_id_seq OWNED BY global_config.id;
--
-- TOC entry 222 (class 1259 OID 67946)
-- Name: gratuity;
Type: TABLE;
Schema: public;
ALTER TABLE gratuity OWNER TO floreant;
--
-- TOC entry 223 (class 1259 OID 67949)
-- Name: gratuity_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE gratuity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE gratuity_id_seq OWNER TO floreant;
--
-- TOC entry 4287 (class 0 OID 0)
-- Dependencies: 223
-- Name: gratuity_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE gratuity_id_seq OWNED BY gratuity.id;
--
-- TOC entry 224 (class 1259 OID 67951)
-- Name: group_taxes;
Type: TABLE;
Schema: public;
ALTER TABLE group_taxes OWNER TO floreant;
--
-- TOC entry 225 (class 1259 OID 67954)
-- Name: guest_check_print;
Type: TABLE;
Schema: public;
ALTER TABLE guest_check_print OWNER TO floreant;
--
-- TOC entry 226 (class 1259 OID 67957)
-- Name: guest_check_print_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE guest_check_print_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE guest_check_print_id_seq OWNER TO floreant;
--
-- TOC entry 4290 (class 0 OID 0)
-- Dependencies: 226
-- Name: guest_check_print_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE guest_check_print_id_seq OWNED BY guest_check_print.id;
--
-- TOC entry 227 (class 1259 OID 67959)
-- Name: inventory_group;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_group OWNER TO floreant;
--
-- TOC entry 228 (class 1259 OID 67962)
-- Name: inventory_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_group_id_seq OWNER TO floreant;
--
-- TOC entry 4292 (class 0 OID 0)
-- Dependencies: 228
-- Name: inventory_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_group_id_seq OWNED BY inventory_group.id;
--
-- TOC entry 229 (class 1259 OID 67964)
-- Name: inventory_item;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_item OWNER TO floreant;
--
-- TOC entry 230 (class 1259 OID 67967)
-- Name: inventory_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_item_id_seq OWNER TO floreant;
--
-- TOC entry 4294 (class 0 OID 0)
-- Dependencies: 230
-- Name: inventory_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_item_id_seq OWNED BY inventory_item.id;
--
-- TOC entry 231 (class 1259 OID 67969)
-- Name: inventory_location;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_location OWNER TO floreant;
--
-- TOC entry 232 (class 1259 OID 67972)
-- Name: inventory_location_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_location_id_seq OWNER TO floreant;
--
-- TOC entry 4296 (class 0 OID 0)
-- Dependencies: 232
-- Name: inventory_location_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_location_id_seq OWNED BY inventory_location.id;
--
-- TOC entry 233 (class 1259 OID 67974)
-- Name: inventory_meta_code;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_meta_code OWNER TO floreant;
--
-- TOC entry 234 (class 1259 OID 67980)
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_meta_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_meta_code_id_seq OWNER TO floreant;
--
-- TOC entry 4298 (class 0 OID 0)
-- Dependencies: 234
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_meta_code_id_seq OWNED BY inventory_meta_code.id;
--
-- TOC entry 235 (class 1259 OID 67982)
-- Name: inventory_transaction;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_transaction OWNER TO floreant;
--
-- TOC entry 236 (class 1259 OID 67985)
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_transaction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_transaction_id_seq OWNER TO floreant;
--
-- TOC entry 4300 (class 0 OID 0)
-- Dependencies: 236
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_transaction_id_seq OWNED BY inventory_transaction.id;
--
-- TOC entry 237 (class 1259 OID 67987)
-- Name: inventory_unit;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_unit OWNER TO floreant;
--
-- TOC entry 238 (class 1259 OID 67993)
-- Name: inventory_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_unit_id_seq OWNER TO floreant;
--
-- TOC entry 4302 (class 0 OID 0)
-- Dependencies: 238
-- Name: inventory_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_unit_id_seq OWNED BY inventory_unit.id;
--
-- TOC entry 239 (class 1259 OID 67995)
-- Name: inventory_vendor;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_vendor OWNER TO floreant;
--
-- TOC entry 240 (class 1259 OID 68001)
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_vendor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_vendor_id_seq OWNER TO floreant;
--
-- TOC entry 4304 (class 0 OID 0)
-- Dependencies: 240
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_vendor_id_seq OWNED BY inventory_vendor.id;
--
-- TOC entry 241 (class 1259 OID 68003)
-- Name: inventory_warehouse;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_warehouse OWNER TO floreant;
--
-- TOC entry 242 (class 1259 OID 68006)
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_warehouse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_warehouse_id_seq OWNER TO floreant;
--
-- TOC entry 4306 (class 0 OID 0)
-- Dependencies: 242
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_warehouse_id_seq OWNED BY inventory_warehouse.id;
--
-- TOC entry 243 (class 1259 OID 68008)
-- Name: item_order_type;
Type: TABLE;
Schema: public;
ALTER TABLE item_order_type OWNER TO floreant;
--
-- TOC entry 244 (class 1259 OID 68011)
-- Name: kitchen_ticket;
Type: TABLE;
Schema: public;
ALTER TABLE kitchen_ticket OWNER TO floreant;
--
-- TOC entry 245 (class 1259 OID 68014)
-- Name: terminal;
Type: TABLE;
Schema: public;
ALTER TABLE terminal OWNER TO floreant;
--
-- TOC entry 246 (class 1259 OID 68020)
-- Name: ticket;
Type: TABLE;
Schema: public;
ALTER TABLE ticket OWNER TO floreant;
--
-- TOC entry 247 (class 1259 OID 68027)
-- Name: kds_orders_enhanced;
Type: VIEW;
Schema: public;
ALTER TABLE kds_orders_enhanced OWNER TO floreant;
--
-- TOC entry 248 (class 1259 OID 68032)
-- Name: kds_ready_log;
Type: TABLE;
Schema: public;
ALTER TABLE kds_ready_log OWNER TO floreant;
--
-- TOC entry 249 (class 1259 OID 68036)
-- Name: kit_ticket_table_num;
Type: TABLE;
Schema: public;
ALTER TABLE kit_ticket_table_num OWNER TO floreant;
--
-- TOC entry 250 (class 1259 OID 68039)
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_id_seq OWNER TO floreant;
--
-- TOC entry 4314 (class 0 OID 0)
-- Dependencies: 250
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_id_seq OWNED BY kitchen_ticket.id;
--
-- TOC entry 251 (class 1259 OID 68041)
-- Name: kitchen_ticket_item;
Type: TABLE;
Schema: public;
ALTER TABLE kitchen_ticket_item OWNER TO floreant;
--
-- TOC entry 252 (class 1259 OID 68047)
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 4316 (class 0 OID 0)
-- Dependencies: 252
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_item_id_seq OWNED BY kitchen_ticket_item.id;
--
-- TOC entry 253 (class 1259 OID 68049)
-- Name: menu_category;
Type: TABLE;
Schema: public;
ALTER TABLE menu_category OWNER TO floreant;
--
-- TOC entry 254 (class 1259 OID 68052)
-- Name: menu_category_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_category_id_seq OWNER TO floreant;
--
-- TOC entry 4318 (class 0 OID 0)
-- Dependencies: 254
-- Name: menu_category_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_category_id_seq OWNED BY menu_category.id;
--
-- TOC entry 255 (class 1259 OID 68054)
-- Name: menu_group;
Type: TABLE;
Schema: public;
ALTER TABLE menu_group OWNER TO floreant;
--
-- TOC entry 256 (class 1259 OID 68057)
-- Name: menu_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_group_id_seq OWNER TO floreant;
--
-- TOC entry 4320 (class 0 OID 0)
-- Dependencies: 256
-- Name: menu_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_group_id_seq OWNED BY menu_group.id;
--
-- TOC entry 257 (class 1259 OID 68059)
-- Name: menu_item;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item OWNER TO floreant;
--
-- TOC entry 258 (class 1259 OID 68065)
-- Name: menu_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_id_seq OWNER TO floreant;
--
-- TOC entry 4322 (class 0 OID 0)
-- Dependencies: 258
-- Name: menu_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_id_seq OWNED BY menu_item.id;
--
-- TOC entry 259 (class 1259 OID 68067)
-- Name: menu_item_properties;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_properties OWNER TO floreant;
--
-- TOC entry 260 (class 1259 OID 68070)
-- Name: menu_item_size;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_size OWNER TO floreant;
--
-- TOC entry 261 (class 1259 OID 68073)
-- Name: menu_item_size_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_size_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_size_id_seq OWNER TO floreant;
--
-- TOC entry 4325 (class 0 OID 0)
-- Dependencies: 261
-- Name: menu_item_size_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_size_id_seq OWNED BY menu_item_size.id;
--
-- TOC entry 262 (class 1259 OID 68075)
-- Name: menu_item_terminal_ref;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_terminal_ref OWNER TO floreant;
--
-- TOC entry 263 (class 1259 OID 68078)
-- Name: menu_modifier;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier OWNER TO floreant;
--
-- TOC entry 264 (class 1259 OID 68081)
-- Name: menu_modifier_group;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier_group OWNER TO floreant;
--
-- TOC entry 265 (class 1259 OID 68084)
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_group_id_seq OWNER TO floreant;
--
-- TOC entry 4329 (class 0 OID 0)
-- Dependencies: 265
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_group_id_seq OWNED BY menu_modifier_group.id;
--
-- TOC entry 266 (class 1259 OID 68086)
-- Name: menu_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 4330 (class 0 OID 0)
-- Dependencies: 266
-- Name: menu_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_id_seq OWNED BY menu_modifier.id;
--
-- TOC entry 267 (class 1259 OID 68088)
-- Name: menu_modifier_properties;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier_properties OWNER TO floreant;
--
-- TOC entry 268 (class 1259 OID 68091)
-- Name: menucategory_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menucategory_discount OWNER TO floreant;
--
-- TOC entry 269 (class 1259 OID 68094)
-- Name: menugroup_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menugroup_discount OWNER TO floreant;
--
-- TOC entry 270 (class 1259 OID 68097)
-- Name: menuitem_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_discount OWNER TO floreant;
--
-- TOC entry 271 (class 1259 OID 68100)
-- Name: menuitem_modifiergroup;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_modifiergroup OWNER TO floreant;
--
-- TOC entry 272 (class 1259 OID 68103)
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_modifiergroup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_modifiergroup_id_seq OWNER TO floreant;
--
-- TOC entry 4336 (class 0 OID 0)
-- Dependencies: 272
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_modifiergroup_id_seq OWNED BY menuitem_modifiergroup.id;
--
-- TOC entry 273 (class 1259 OID 68105)
-- Name: menuitem_pizzapirce;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_pizzapirce OWNER TO floreant;
--
-- TOC entry 274 (class 1259 OID 68108)
-- Name: menuitem_shift;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_shift OWNER TO floreant;
--
-- TOC entry 275 (class 1259 OID 68111)
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_shift_id_seq OWNER TO floreant;
--
-- TOC entry 4339 (class 0 OID 0)
-- Dependencies: 275
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_shift_id_seq OWNED BY menuitem_shift.id;
--
-- TOC entry 276 (class 1259 OID 68113)
-- Name: menumodifier_pizzamodifierprice;
Type: TABLE;
Schema: public;
ALTER TABLE menumodifier_pizzamodifierprice OWNER TO floreant;
--
-- TOC entry 389 (class 1259 OID 73602)
-- Name: migrations;
Type: TABLE;
Schema: public;
ALTER TABLE migrations OWNER TO postgres;
--
-- TOC entry 388 (class 1259 OID 73600)
-- Name: migrations_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: postgres
--

CREATE SEQUENCE migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE migrations_id_seq OWNER TO postgres;
--
-- TOC entry 4342 (class 0 OID 0)
-- Dependencies: 388
-- Name: migrations_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: postgres
--

ALTER SEQUENCE migrations_id_seq OWNED BY migrations.id;
--
-- TOC entry 277 (class 1259 OID 68116)
-- Name: modifier_multiplier_price;
Type: TABLE;
Schema: public;
ALTER TABLE modifier_multiplier_price OWNER TO floreant;
--
-- TOC entry 278 (class 1259 OID 68119)
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE modifier_multiplier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE modifier_multiplier_price_id_seq OWNER TO floreant;
--
-- TOC entry 4344 (class 0 OID 0)
-- Dependencies: 278
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE modifier_multiplier_price_id_seq OWNED BY modifier_multiplier_price.id;
--
-- TOC entry 279 (class 1259 OID 68121)
-- Name: multiplier;
Type: TABLE;
Schema: public;
ALTER TABLE multiplier OWNER TO floreant;
--
-- TOC entry 280 (class 1259 OID 68124)
-- Name: order_type;
Type: TABLE;
Schema: public;
ALTER TABLE order_type OWNER TO floreant;
--
-- TOC entry 281 (class 1259 OID 68130)
-- Name: order_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE order_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE order_type_id_seq OWNER TO floreant;
--
-- TOC entry 4347 (class 0 OID 0)
-- Dependencies: 281
-- Name: order_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE order_type_id_seq OWNED BY order_type.id;
--
-- TOC entry 282 (class 1259 OID 68132)
-- Name: packaging_unit;
Type: TABLE;
Schema: public;
ALTER TABLE packaging_unit OWNER TO floreant;
--
-- TOC entry 283 (class 1259 OID 68135)
-- Name: packaging_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE packaging_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE packaging_unit_id_seq OWNER TO floreant;
--
-- TOC entry 4349 (class 0 OID 0)
-- Dependencies: 283
-- Name: packaging_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE packaging_unit_id_seq OWNED BY packaging_unit.id;
--
-- TOC entry 284 (class 1259 OID 68137)
-- Name: payout_reasons;
Type: TABLE;
Schema: public;
ALTER TABLE payout_reasons OWNER TO floreant;
--
-- TOC entry 285 (class 1259 OID 68140)
-- Name: payout_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 4351 (class 0 OID 0)
-- Dependencies: 285
-- Name: payout_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_reasons_id_seq OWNED BY payout_reasons.id;
--
-- TOC entry 286 (class 1259 OID 68142)
-- Name: payout_recepients;
Type: TABLE;
Schema: public;
ALTER TABLE payout_recepients OWNER TO floreant;
--
-- TOC entry 287 (class 1259 OID 68145)
-- Name: payout_recepients_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_recepients_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_recepients_id_seq OWNER TO floreant;
--
-- TOC entry 4353 (class 0 OID 0)
-- Dependencies: 287
-- Name: payout_recepients_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_recepients_id_seq OWNED BY payout_recepients.id;
--
-- TOC entry 288 (class 1259 OID 68147)
-- Name: pizza_crust;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_crust OWNER TO floreant;
--
-- TOC entry 289 (class 1259 OID 68150)
-- Name: pizza_crust_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_crust_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_crust_id_seq OWNER TO floreant;
--
-- TOC entry 4355 (class 0 OID 0)
-- Dependencies: 289
-- Name: pizza_crust_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_crust_id_seq OWNED BY pizza_crust.id;
--
-- TOC entry 290 (class 1259 OID 68152)
-- Name: pizza_modifier_price;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_modifier_price OWNER TO floreant;
--
-- TOC entry 291 (class 1259 OID 68155)
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_modifier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_modifier_price_id_seq OWNER TO floreant;
--
-- TOC entry 4357 (class 0 OID 0)
-- Dependencies: 291
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_modifier_price_id_seq OWNED BY pizza_modifier_price.id;
--
-- TOC entry 292 (class 1259 OID 68157)
-- Name: pizza_price;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_price OWNER TO floreant;
--
-- TOC entry 293 (class 1259 OID 68160)
-- Name: pizza_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_price_id_seq OWNER TO floreant;
--
-- TOC entry 4359 (class 0 OID 0)
-- Dependencies: 293
-- Name: pizza_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_price_id_seq OWNED BY pizza_price.id;
--
-- TOC entry 294 (class 1259 OID 68162)
-- Name: printer_configuration;
Type: TABLE;
Schema: public;
ALTER TABLE printer_configuration OWNER TO floreant;
--
-- TOC entry 295 (class 1259 OID 68168)
-- Name: printer_group;
Type: TABLE;
Schema: public;
ALTER TABLE printer_group OWNER TO floreant;
--
-- TOC entry 296 (class 1259 OID 68171)
-- Name: printer_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE printer_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE printer_group_id_seq OWNER TO floreant;
--
-- TOC entry 4362 (class 0 OID 0)
-- Dependencies: 296
-- Name: printer_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE printer_group_id_seq OWNED BY printer_group.id;
--
-- TOC entry 297 (class 1259 OID 68173)
-- Name: printer_group_printers;
Type: TABLE;
Schema: public;
ALTER TABLE printer_group_printers OWNER TO floreant;
--
-- TOC entry 298 (class 1259 OID 68176)
-- Name: purchase_order;
Type: TABLE;
Schema: public;
ALTER TABLE purchase_order OWNER TO floreant;
--
-- TOC entry 299 (class 1259 OID 68179)
-- Name: purchase_order_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE purchase_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE purchase_order_id_seq OWNER TO floreant;
--
-- TOC entry 4365 (class 0 OID 0)
-- Dependencies: 299
-- Name: purchase_order_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE purchase_order_id_seq OWNED BY purchase_order.id;
--
-- TOC entry 300 (class 1259 OID 68181)
-- Name: recepie;
Type: TABLE;
Schema: public;
ALTER TABLE recepie OWNER TO floreant;
--
-- TOC entry 301 (class 1259 OID 68184)
-- Name: recepie_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_id_seq OWNER TO floreant;
--
-- TOC entry 4367 (class 0 OID 0)
-- Dependencies: 301
-- Name: recepie_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_id_seq OWNED BY recepie.id;
--
-- TOC entry 302 (class 1259 OID 68186)
-- Name: recepie_item;
Type: TABLE;
Schema: public;
ALTER TABLE recepie_item OWNER TO floreant;
--
-- TOC entry 303 (class 1259 OID 68189)
-- Name: recepie_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_item_id_seq OWNER TO floreant;
--
-- TOC entry 4369 (class 0 OID 0)
-- Dependencies: 303
-- Name: recepie_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_item_id_seq OWNED BY recepie_item.id;
--
-- TOC entry 304 (class 1259 OID 68191)
-- Name: restaurant;
Type: TABLE;
Schema: public;
ALTER TABLE restaurant OWNER TO floreant;
--
-- TOC entry 305 (class 1259 OID 68194)
-- Name: restaurant_properties;
Type: TABLE;
Schema: public;
ALTER TABLE restaurant_properties OWNER TO floreant;
--
-- TOC entry 306 (class 1259 OID 68200)
-- Name: shift;
Type: TABLE;
Schema: public;
ALTER TABLE shift OWNER TO floreant;
--
-- TOC entry 307 (class 1259 OID 68203)
-- Name: shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shift_id_seq OWNER TO floreant;
--
-- TOC entry 4373 (class 0 OID 0)
-- Dependencies: 307
-- Name: shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shift_id_seq OWNED BY shift.id;
--
-- TOC entry 308 (class 1259 OID 68205)
-- Name: shop_floor;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor OWNER TO floreant;
--
-- TOC entry 309 (class 1259 OID 68208)
-- Name: shop_floor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_id_seq OWNER TO floreant;
--
-- TOC entry 4375 (class 0 OID 0)
-- Dependencies: 309
-- Name: shop_floor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_id_seq OWNED BY shop_floor.id;
--
-- TOC entry 310 (class 1259 OID 68210)
-- Name: shop_floor_template;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor_template OWNER TO floreant;
--
-- TOC entry 311 (class 1259 OID 68213)
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_template_id_seq OWNER TO floreant;
--
-- TOC entry 4377 (class 0 OID 0)
-- Dependencies: 311
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_template_id_seq OWNED BY shop_floor_template.id;
--
-- TOC entry 312 (class 1259 OID 68215)
-- Name: shop_floor_template_properties;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor_template_properties OWNER TO floreant;
--
-- TOC entry 313 (class 1259 OID 68218)
-- Name: shop_table;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table OWNER TO floreant;
--
-- TOC entry 314 (class 1259 OID 68221)
-- Name: shop_table_status;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table_status OWNER TO floreant;
--
-- TOC entry 315 (class 1259 OID 68224)
-- Name: shop_table_type;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table_type OWNER TO floreant;
--
-- TOC entry 316 (class 1259 OID 68227)
-- Name: shop_table_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_table_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_table_type_id_seq OWNER TO floreant;
--
-- TOC entry 4382 (class 0 OID 0)
-- Dependencies: 316
-- Name: shop_table_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_table_type_id_seq OWNED BY shop_table_type.id;
--
-- TOC entry 317 (class 1259 OID 68229)
-- Name: table_booking_info;
Type: TABLE;
Schema: public;
ALTER TABLE table_booking_info OWNER TO floreant;
--
-- TOC entry 318 (class 1259 OID 68232)
-- Name: table_booking_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE table_booking_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE table_booking_info_id_seq OWNER TO floreant;
--
-- TOC entry 4384 (class 0 OID 0)
-- Dependencies: 318
-- Name: table_booking_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE table_booking_info_id_seq OWNED BY table_booking_info.id;
--
-- TOC entry 319 (class 1259 OID 68234)
-- Name: table_booking_mapping;
Type: TABLE;
Schema: public;
ALTER TABLE table_booking_mapping OWNER TO floreant;
--
-- TOC entry 320 (class 1259 OID 68237)
-- Name: table_ticket_num;
Type: TABLE;
Schema: public;
ALTER TABLE table_ticket_num OWNER TO floreant;
--
-- TOC entry 321 (class 1259 OID 68240)
-- Name: table_type_relation;
Type: TABLE;
Schema: public;
ALTER TABLE table_type_relation OWNER TO floreant;
--
-- TOC entry 322 (class 1259 OID 68243)
-- Name: tax;
Type: TABLE;
Schema: public;
ALTER TABLE tax OWNER TO floreant;
--
-- TOC entry 323 (class 1259 OID 68246)
-- Name: tax_group;
Type: TABLE;
Schema: public;
ALTER TABLE tax_group OWNER TO floreant;
--
-- TOC entry 324 (class 1259 OID 68249)
-- Name: tax_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE tax_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE tax_id_seq OWNER TO floreant;
--
-- TOC entry 4390 (class 0 OID 0)
-- Dependencies: 324
-- Name: tax_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE tax_id_seq OWNED BY tax.id;
--
-- TOC entry 325 (class 1259 OID 68251)
-- Name: terminal_printers;
Type: TABLE;
Schema: public;
ALTER TABLE terminal_printers OWNER TO floreant;
--
-- TOC entry 326 (class 1259 OID 68254)
-- Name: terminal_printers_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE terminal_printers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE terminal_printers_id_seq OWNER TO floreant;
--
-- TOC entry 4392 (class 0 OID 0)
-- Dependencies: 326
-- Name: terminal_printers_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE terminal_printers_id_seq OWNED BY terminal_printers.id;
--
-- TOC entry 327 (class 1259 OID 68256)
-- Name: terminal_properties;
Type: TABLE;
Schema: public;
ALTER TABLE terminal_properties OWNER TO floreant;
--
-- TOC entry 328 (class 1259 OID 68262)
-- Name: ticket_discount;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_discount OWNER TO floreant;
--
-- TOC entry 329 (class 1259 OID 68265)
-- Name: ticket_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4395 (class 0 OID 0)
-- Dependencies: 329
-- Name: ticket_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_discount_id_seq OWNED BY ticket_discount.id;
--
-- TOC entry 330 (class 1259 OID 68267)
-- Name: ticket_folio_complete;
Type: VIEW;
Schema: public;
ALTER TABLE ticket_folio_complete OWNER TO floreant;
--
-- TOC entry 331 (class 1259 OID 68272)
-- Name: ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_id_seq OWNER TO floreant;
--
-- TOC entry 4397 (class 0 OID 0)
-- Dependencies: 331
-- Name: ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_id_seq OWNED BY ticket.id;
--
-- TOC entry 332 (class 1259 OID 68274)
-- Name: ticket_item;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item OWNER TO floreant;
--
-- TOC entry 333 (class 1259 OID 68280)
-- Name: ticket_item_addon_relation;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_addon_relation OWNER TO floreant;
--
-- TOC entry 334 (class 1259 OID 68283)
-- Name: ticket_item_cooking_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_cooking_instruction OWNER TO floreant;
--
-- TOC entry 335 (class 1259 OID 68286)
-- Name: ticket_item_discount;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_discount OWNER TO floreant;
--
-- TOC entry 336 (class 1259 OID 68289)
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4402 (class 0 OID 0)
-- Dependencies: 336
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_discount_id_seq OWNED BY ticket_item_discount.id;
--
-- TOC entry 337 (class 1259 OID 68291)
-- Name: ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 4403 (class 0 OID 0)
-- Dependencies: 337
-- Name: ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_id_seq OWNED BY ticket_item.id;
--
-- TOC entry 338 (class 1259 OID 68293)
-- Name: ticket_item_modifier;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_modifier OWNER TO floreant;
--
-- TOC entry 339 (class 1259 OID 68296)
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 4405 (class 0 OID 0)
-- Dependencies: 339
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_modifier_id_seq OWNED BY ticket_item_modifier.id;
--
-- TOC entry 340 (class 1259 OID 68298)
-- Name: ticket_item_modifier_relation;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_modifier_relation OWNER TO floreant;
--
-- TOC entry 341 (class 1259 OID 68301)
-- Name: ticket_properties;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_properties OWNER TO floreant;
--
-- TOC entry 342 (class 1259 OID 68307)
-- Name: ticket_table_num;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_table_num OWNER TO floreant;
--
-- TOC entry 343 (class 1259 OID 68310)
-- Name: transaction_properties;
Type: TABLE;
Schema: public;
ALTER TABLE transaction_properties OWNER TO floreant;
--
-- TOC entry 344 (class 1259 OID 68316)
-- Name: transactions;
Type: TABLE;
Schema: public;
ALTER TABLE transactions OWNER TO floreant;
--
-- TOC entry 345 (class 1259 OID 68322)
-- Name: transactions_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE transactions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE transactions_id_seq OWNER TO floreant;
--
-- TOC entry 4411 (class 0 OID 0)
-- Dependencies: 345
-- Name: transactions_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE transactions_id_seq OWNED BY transactions.id;
--
-- TOC entry 346 (class 1259 OID 68324)
-- Name: user_permission;
Type: TABLE;
Schema: public;
ALTER TABLE user_permission OWNER TO floreant;
--
-- TOC entry 347 (class 1259 OID 68327)
-- Name: user_type;
Type: TABLE;
Schema: public;
ALTER TABLE user_type OWNER TO floreant;
--
-- TOC entry 348 (class 1259 OID 68330)
-- Name: user_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE user_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE user_type_id_seq OWNER TO floreant;
--
-- TOC entry 4414 (class 0 OID 0)
-- Dependencies: 348
-- Name: user_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE user_type_id_seq OWNED BY user_type.id;
--
-- TOC entry 349 (class 1259 OID 68332)
-- Name: user_user_permission;
Type: TABLE;
Schema: public;
ALTER TABLE user_user_permission OWNER TO floreant;
--
-- TOC entry 350 (class 1259 OID 68335)
-- Name: users;
Type: TABLE;
Schema: public;
ALTER TABLE users OWNER TO floreant;
--
-- TOC entry 351 (class 1259 OID 68338)
-- Name: users_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE users_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE users_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4417 (class 0 OID 0)
-- Dependencies: 351
-- Name: users_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE users_auto_id_seq OWNED BY users.auto_id;
--
-- TOC entry 352 (class 1259 OID 68340)
-- Name: virtual_printer;
Type: TABLE;
Schema: public;
ALTER TABLE virtual_printer OWNER TO floreant;
--
-- TOC entry 353 (class 1259 OID 68343)
-- Name: virtual_printer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE virtual_printer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE virtual_printer_id_seq OWNER TO floreant;
--
-- TOC entry 4419 (class 0 OID 0)
-- Dependencies: 353
-- Name: virtual_printer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE virtual_printer_id_seq OWNED BY virtual_printer.id;
--
-- TOC entry 354 (class 1259 OID 68345)
-- Name: virtualprinter_order_type;
Type: TABLE;
Schema: public;
ALTER TABLE virtualprinter_order_type OWNER TO floreant;
--
-- TOC entry 355 (class 1259 OID 68348)
-- Name: void_reasons;
Type: TABLE;
Schema: public;
ALTER TABLE void_reasons OWNER TO floreant;
--
-- TOC entry 356 (class 1259 OID 68351)
-- Name: void_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE void_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE void_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 4422 (class 0 OID 0)
-- Dependencies: 356
-- Name: void_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE void_reasons_id_seq OWNED BY void_reasons.id;
--
-- TOC entry 381 (class 1259 OID 69479)
-- Name: vw_reconciliation_status;
Type: VIEW;
Schema: public;
ALTER TABLE vw_reconciliation_status OWNER TO postgres;
--
-- TOC entry 357 (class 1259 OID 68353)
-- Name: zip_code_vs_delivery_charge;
Type: TABLE;
Schema: public;
ALTER TABLE zip_code_vs_delivery_charge OWNER TO floreant;
--
-- TOC entry 358 (class 1259 OID 68356)
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE zip_code_vs_delivery_charge_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE zip_code_vs_delivery_charge_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4425 (class 0 OID 0)
-- Dependencies: 358
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE zip_code_vs_delivery_charge_auto_id_seq OWNED BY zip_code_vs_delivery_charge.auto_id;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 464 (class 1259 OID 77970)
-- Name: almacen;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE almacen (
    id text NOT NULL,
    sucursal_id text NOT NULL,
    nombre text NOT NULL,
    activo boolean DEFAULT true NOT NULL
);
ALTER TABLE almacen OWNER TO postgres;
--
-- TOC entry 359 (class 1259 OID 68358)
-- Name: auditoria;
Type: TABLE;
Schema: selemti;
ALTER TABLE auditoria OWNER TO floreant;
--
-- TOC entry 360 (class 1259 OID 68365)
-- Name: auditoria_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE auditoria_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE auditoria_id_seq OWNER TO floreant;
--
-- TOC entry 4426 (class 0 OID 0)
-- Dependencies: 360
-- Name: auditoria_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE auditoria_id_seq OWNED BY auditoria.id;
--
-- TOC entry 394 (class 1259 OID 73651)
-- Name: cache;
Type: TABLE;
Schema: selemti;
ALTER TABLE cache OWNER TO postgres;
--
-- TOC entry 395 (class 1259 OID 73659)
-- Name: cache_locks;
Type: TABLE;
Schema: selemti;
ALTER TABLE cache_locks OWNER TO postgres;
--
-- TOC entry 402 (class 1259 OID 73704)
-- Name: cat_unidades;
Type: TABLE;
Schema: selemti;
ALTER TABLE cat_unidades OWNER TO postgres;
--
-- TOC entry 401 (class 1259 OID 73702)
-- Name: cat_unidades_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE cat_unidades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cat_unidades_id_seq OWNER TO postgres;
--
-- TOC entry 4427 (class 0 OID 0)
-- Dependencies: 401
-- Name: cat_unidades_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE cat_unidades_id_seq OWNED BY cat_unidades.id;
--
-- TOC entry 423 (class 1259 OID 77265)
-- Name: conversiones_unidad;
Type: TABLE;
Schema: selemti;
ALTER TABLE conversiones_unidad OWNER TO postgres;
--
-- TOC entry 422 (class 1259 OID 77263)
-- Name: conversiones_unidad_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE conversiones_unidad_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE conversiones_unidad_id_seq OWNER TO postgres;
--
-- TOC entry 4428 (class 0 OID 0)
-- Dependencies: 422
-- Name: conversiones_unidad_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE conversiones_unidad_id_seq OWNED BY conversiones_unidad.id;
--
-- TOC entry 431 (class 1259 OID 77393)
-- Name: cost_layer;
Type: TABLE;
Schema: selemti;
ALTER TABLE cost_layer OWNER TO postgres;
--
-- TOC entry 430 (class 1259 OID 77391)
-- Name: cost_layer_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE cost_layer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cost_layer_id_seq OWNER TO postgres;
--
-- TOC entry 4429 (class 0 OID 0)
-- Dependencies: 430
-- Name: cost_layer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE cost_layer_id_seq OWNED BY cost_layer.id;
--
-- TOC entry 400 (class 1259 OID 73689)
-- Name: failed_jobs;
Type: TABLE;
Schema: selemti;
ALTER TABLE failed_jobs OWNER TO postgres;
--
-- TOC entry 399 (class 1259 OID 73687)
-- Name: failed_jobs_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE failed_jobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE failed_jobs_id_seq OWNER TO postgres;
--
-- TOC entry 4430 (class 0 OID 0)
-- Dependencies: 399
-- Name: failed_jobs_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE failed_jobs_id_seq OWNED BY failed_jobs.id;
--
-- TOC entry 361 (class 1259 OID 68367)
-- Name: formas_pago;
Type: TABLE;
Schema: selemti;
ALTER TABLE formas_pago OWNER TO floreant;
--
-- TOC entry 362 (class 1259 OID 68376)
-- Name: formas_pago_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE formas_pago_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE formas_pago_id_seq OWNER TO floreant;
--
-- TOC entry 4431 (class 0 OID 0)
-- Dependencies: 362
-- Name: formas_pago_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE formas_pago_id_seq OWNED BY formas_pago.id;
--
-- TOC entry 425 (class 1259 OID 77319)
-- Name: historial_costos_item;
Type: TABLE;
Schema: selemti;
ALTER TABLE historial_costos_item OWNER TO postgres;
--
-- TOC entry 424 (class 1259 OID 77317)
-- Name: historial_costos_item_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE historial_costos_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE historial_costos_item_id_seq OWNER TO postgres;
--
-- TOC entry 4432 (class 0 OID 0)
-- Dependencies: 424
-- Name: historial_costos_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE historial_costos_item_id_seq OWNED BY historial_costos_item.id;
--
-- TOC entry 427 (class 1259 OID 77351)
-- Name: historial_costos_receta;
Type: TABLE;
Schema: selemti;
ALTER TABLE historial_costos_receta OWNER TO postgres;
--
-- TOC entry 426 (class 1259 OID 77349)
-- Name: historial_costos_receta_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE historial_costos_receta_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE historial_costos_receta_id_seq OWNER TO postgres;
--
-- TOC entry 4433 (class 0 OID 0)
-- Dependencies: 426
-- Name: historial_costos_receta_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE historial_costos_receta_id_seq OWNED BY historial_costos_receta.id;
--
-- TOC entry 406 (class 1259 OID 77073)
-- Name: inventory_batch;
Type: TABLE;
Schema: selemti;
ALTER TABLE inventory_batch OWNER TO postgres;
--
-- TOC entry 4434 (class 0 OID 0)
-- Dependencies: 406
-- Name: TABLE inventory_batch;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE inventory_batch IS 'Lotes de inventario con trazabilidad completa';
--
-- TOC entry 405 (class 1259 OID 77071)
-- Name: inventory_batch_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE inventory_batch_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_batch_id_seq OWNER TO postgres;
--
-- TOC entry 4435 (class 0 OID 0)
-- Dependencies: 405
-- Name: inventory_batch_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE inventory_batch_id_seq OWNED BY inventory_batch.id;
--
-- TOC entry 439 (class 1259 OID 77489)
-- Name: item_vendor;
Type: TABLE;
Schema: selemti;
ALTER TABLE item_vendor OWNER TO postgres;
--
-- TOC entry 404 (class 1259 OID 77052)
-- Name: items;
Type: TABLE;
Schema: selemti;
ALTER TABLE items OWNER TO postgres;
--
-- TOC entry 4436 (class 0 OID 0)
-- Dependencies: 404
-- Name: TABLE items;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE items IS 'Maestro de todos los Ã­tems del sistema';
--
-- TOC entry 398 (class 1259 OID 73679)
-- Name: job_batches;
Type: TABLE;
Schema: selemti;
ALTER TABLE job_batches OWNER TO postgres;
--
-- TOC entry 436 (class 1259 OID 77460)
-- Name: job_recalc_queue;
Type: TABLE;
Schema: selemti;
ALTER TABLE job_recalc_queue OWNER TO postgres;
--
-- TOC entry 435 (class 1259 OID 77458)
-- Name: job_recalc_queue_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE job_recalc_queue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE job_recalc_queue_id_seq OWNER TO postgres;
--
-- TOC entry 4437 (class 0 OID 0)
-- Dependencies: 435
-- Name: job_recalc_queue_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE job_recalc_queue_id_seq OWNED BY job_recalc_queue.id;
--
-- TOC entry 397 (class 1259 OID 73669)
-- Name: jobs;
Type: TABLE;
Schema: selemti;
ALTER TABLE jobs OWNER TO postgres;
--
-- TOC entry 396 (class 1259 OID 73667)
-- Name: jobs_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE jobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE jobs_id_seq OWNER TO postgres;
--
-- TOC entry 4438 (class 0 OID 0)
-- Dependencies: 396
-- Name: jobs_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE jobs_id_seq OWNED BY jobs.id;
--
-- TOC entry 391 (class 1259 OID 73614)
-- Name: migrations;
Type: TABLE;
Schema: selemti;
ALTER TABLE migrations OWNER TO postgres;
--
-- TOC entry 390 (class 1259 OID 73612)
-- Name: migrations_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE migrations_id_seq OWNER TO postgres;
--
-- TOC entry 4439 (class 0 OID 0)
-- Dependencies: 390
-- Name: migrations_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE migrations_id_seq OWNED BY migrations.id;
--
-- TOC entry 459 (class 1259 OID 77739)
-- Name: model_has_permissions;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE model_has_permissions (
    permission_id bigint NOT NULL,
    model_type character varying(255) NOT NULL,
    model_id bigint NOT NULL
);
ALTER TABLE model_has_permissions OWNER TO postgres;
--
-- TOC entry 460 (class 1259 OID 77750)
-- Name: model_has_roles;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE model_has_roles (
    role_id bigint NOT NULL,
    model_type character varying(255) NOT NULL,
    model_id bigint NOT NULL
);
ALTER TABLE model_has_roles OWNER TO postgres;
--
-- TOC entry 434 (class 1259 OID 77424)
-- Name: modificadores_pos;
Type: TABLE;
Schema: selemti;
ALTER TABLE modificadores_pos OWNER TO postgres;
--
-- TOC entry 433 (class 1259 OID 77422)
-- Name: modificadores_pos_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE modificadores_pos_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE modificadores_pos_id_seq OWNER TO postgres;
--
-- TOC entry 4440 (class 0 OID 0)
-- Dependencies: 433
-- Name: modificadores_pos_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE modificadores_pos_id_seq OWNED BY modificadores_pos.id;
--
-- TOC entry 408 (class 1259 OID 77097)
-- Name: mov_inv;
Type: TABLE;
Schema: selemti;
ALTER TABLE mov_inv OWNER TO postgres;
--
-- TOC entry 4441 (class 0 OID 0)
-- Dependencies: 408
-- Name: TABLE mov_inv;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE mov_inv IS 'Kardex completo de movimientos de inventario';
--
-- TOC entry 407 (class 1259 OID 77095)
-- Name: mov_inv_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE mov_inv_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE mov_inv_id_seq OWNER TO postgres;
--
-- TOC entry 4442 (class 0 OID 0)
-- Dependencies: 407
-- Name: mov_inv_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE mov_inv_id_seq OWNED BY mov_inv.id;
--
-- TOC entry 415 (class 1259 OID 77194)
-- Name: op_produccion_cab;
Type: TABLE;
Schema: selemti;
ALTER TABLE op_produccion_cab OWNER TO postgres;
--
-- TOC entry 4443 (class 0 OID 0)
-- Dependencies: 415
-- Name: TABLE op_produccion_cab;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE op_produccion_cab IS 'Ã“rdenes de producciÃ³n para elaborados';
--
-- TOC entry 414 (class 1259 OID 77192)
-- Name: op_produccion_cab_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE op_produccion_cab_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE op_produccion_cab_id_seq OWNER TO postgres;
--
-- TOC entry 4444 (class 0 OID 0)
-- Dependencies: 414
-- Name: op_produccion_cab_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE op_produccion_cab_id_seq OWNED BY op_produccion_cab.id;
--
-- TOC entry 441 (class 1259 OID 77531)
-- Name: param_sucursal;
Type: TABLE;
Schema: selemti;
ALTER TABLE param_sucursal OWNER TO postgres;
--
-- TOC entry 440 (class 1259 OID 77529)
-- Name: param_sucursal_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE param_sucursal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE param_sucursal_id_seq OWNER TO postgres;
--
-- TOC entry 4445 (class 0 OID 0)
-- Dependencies: 440
-- Name: param_sucursal_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE param_sucursal_id_seq OWNED BY param_sucursal.id;
--
-- TOC entry 392 (class 1259 OID 73633)
-- Name: password_reset_tokens;
Type: TABLE;
Schema: selemti;
ALTER TABLE password_reset_tokens OWNER TO postgres;
--
-- TOC entry 447 (class 1259 OID 77589)
-- Name: perdida_log;
Type: TABLE;
Schema: selemti;
ALTER TABLE perdida_log OWNER TO postgres;
--
-- TOC entry 446 (class 1259 OID 77587)
-- Name: perdida_log_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE perdida_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE perdida_log_id_seq OWNER TO postgres;
--
-- TOC entry 4446 (class 0 OID 0)
-- Dependencies: 446
-- Name: perdida_log_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE perdida_log_id_seq OWNED BY perdida_log.id;
--
-- TOC entry 456 (class 1259 OID 77715)
-- Name: permissions;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE permissions (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    guard_name character varying(255) NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone
);
ALTER TABLE permissions OWNER TO postgres;
--
-- TOC entry 455 (class 1259 OID 77713)
-- Name: permissions_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE permissions_id_seq OWNER TO postgres;
--
-- TOC entry 4447 (class 0 OID 0)
-- Dependencies: 455
-- Name: permissions_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE permissions_id_seq OWNED BY permissions.id;
--
-- TOC entry 432 (class 1259 OID 77412)
-- Name: pos_map;
Type: TABLE;
Schema: selemti;
ALTER TABLE pos_map OWNER TO postgres;
--
-- TOC entry 363 (class 1259 OID 68378)
-- Name: postcorte;
Type: TABLE;
Schema: selemti;
ALTER TABLE postcorte OWNER TO floreant;
--
-- TOC entry 4448 (class 0 OID 0)
-- Dependencies: 363
-- Name: COLUMN postcorte.validado;
Type: COMMENT;
Schema: selemti;
Owner: floreant
--

COMMENT ON COLUMN postcorte.validado IS 'TRUE cuando el supervisor valida/cierra el postcorte';
--
-- TOC entry 364 (class 1259 OID 68401)
-- Name: postcorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE postcorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE postcorte_id_seq OWNER TO floreant;
--
-- TOC entry 4449 (class 0 OID 0)
-- Dependencies: 364
-- Name: postcorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE postcorte_id_seq OWNED BY postcorte.id;
--
-- TOC entry 365 (class 1259 OID 68403)
-- Name: precorte;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte OWNER TO floreant;
--
-- TOC entry 366 (class 1259 OID 68414)
-- Name: precorte_efectivo;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte_efectivo OWNER TO floreant;
--
-- TOC entry 367 (class 1259 OID 68418)
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_efectivo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_efectivo_id_seq OWNER TO floreant;
--
-- TOC entry 4450 (class 0 OID 0)
-- Dependencies: 367
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_efectivo_id_seq OWNED BY precorte_efectivo.id;
--
-- TOC entry 368 (class 1259 OID 68420)
-- Name: precorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_id_seq OWNER TO floreant;
--
-- TOC entry 4451 (class 0 OID 0)
-- Dependencies: 368
-- Name: precorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_id_seq OWNED BY precorte.id;
--
-- TOC entry 369 (class 1259 OID 68422)
-- Name: precorte_otros;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte_otros OWNER TO floreant;
--
-- TOC entry 370 (class 1259 OID 68430)
-- Name: precorte_otros_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_otros_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_otros_id_seq OWNER TO floreant;
--
-- TOC entry 4452 (class 0 OID 0)
-- Dependencies: 370
-- Name: precorte_otros_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_otros_id_seq OWNED BY precorte_otros.id;
--
-- TOC entry 465 (class 1259 OID 77984)
-- Name: proveedor;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE proveedor (
    id text NOT NULL,
    nombre text NOT NULL,
    rfc text,
    activo boolean DEFAULT true NOT NULL
);
ALTER TABLE proveedor OWNER TO postgres;
--
-- TOC entry 438 (class 1259 OID 77475)
-- Name: recalc_log;
Type: TABLE;
Schema: selemti;
ALTER TABLE recalc_log OWNER TO postgres;
--
-- TOC entry 437 (class 1259 OID 77473)
-- Name: recalc_log_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE recalc_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recalc_log_id_seq OWNER TO postgres;
--
-- TOC entry 4453 (class 0 OID 0)
-- Dependencies: 437
-- Name: recalc_log_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE recalc_log_id_seq OWNED BY recalc_log.id;
--
-- TOC entry 409 (class 1259 OID 77122)
-- Name: receta_cab;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_cab OWNER TO postgres;
--
-- TOC entry 4454 (class 0 OID 0)
-- Dependencies: 409
-- Name: TABLE receta_cab;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_cab IS 'Cabecera de recetas y platos del menÃº';
--
-- TOC entry 413 (class 1259 OID 77168)
-- Name: receta_det;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_det OWNER TO postgres;
--
-- TOC entry 4455 (class 0 OID 0)
-- Dependencies: 413
-- Name: TABLE receta_det;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_det IS 'Detalle de ingredientes por versiÃ³n de receta';
--
-- TOC entry 412 (class 1259 OID 77166)
-- Name: receta_det_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_det_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_det_id_seq OWNER TO postgres;
--
-- TOC entry 4456 (class 0 OID 0)
-- Dependencies: 412
-- Name: receta_det_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_det_id_seq OWNED BY receta_det.id;
--
-- TOC entry 429 (class 1259 OID 77370)
-- Name: receta_shadow;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_shadow OWNER TO postgres;
--
-- TOC entry 428 (class 1259 OID 77368)
-- Name: receta_shadow_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_shadow_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_shadow_id_seq OWNER TO postgres;
--
-- TOC entry 4457 (class 0 OID 0)
-- Dependencies: 428
-- Name: receta_shadow_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_shadow_id_seq OWNED BY receta_shadow.id;
--
-- TOC entry 411 (class 1259 OID 77142)
-- Name: receta_version;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_version OWNER TO postgres;
--
-- TOC entry 4458 (class 0 OID 0)
-- Dependencies: 411
-- Name: TABLE receta_version;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_version IS 'Control de versiones de recetas';
--
-- TOC entry 410 (class 1259 OID 77140)
-- Name: receta_version_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_version_id_seq OWNER TO postgres;
--
-- TOC entry 4459 (class 0 OID 0)
-- Dependencies: 410
-- Name: receta_version_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_version_id_seq OWNED BY receta_version.id;
--
-- TOC entry 461 (class 1259 OID 77761)
-- Name: role_has_permissions;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE role_has_permissions (
    permission_id bigint NOT NULL,
    role_id bigint NOT NULL
);
ALTER TABLE role_has_permissions OWNER TO postgres;
--
-- TOC entry 458 (class 1259 OID 77728)
-- Name: roles;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE roles (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    guard_name character varying(255) NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone
);
ALTER TABLE roles OWNER TO postgres;
--
-- TOC entry 457 (class 1259 OID 77726)
-- Name: roles_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE roles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE roles_id_seq OWNER TO postgres;
--
-- TOC entry 4460 (class 0 OID 0)
-- Dependencies: 457
-- Name: roles_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE roles_id_seq OWNED BY roles.id;
--
-- TOC entry 371 (class 1259 OID 68432)
-- Name: sesion_cajon;
Type: TABLE;
Schema: selemti;
ALTER TABLE sesion_cajon OWNER TO floreant;
--
-- TOC entry 372 (class 1259 OID 68443)
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE sesion_cajon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE sesion_cajon_id_seq OWNER TO floreant;
--
-- TOC entry 4461 (class 0 OID 0)
-- Dependencies: 372
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE sesion_cajon_id_seq OWNED BY sesion_cajon.id;
--
-- TOC entry 393 (class 1259 OID 73641)
-- Name: sessions;
Type: TABLE;
Schema: selemti;
ALTER TABLE sessions OWNER TO postgres;
--
-- TOC entry 443 (class 1259 OID 77549)
-- Name: stock_policy;
Type: TABLE;
Schema: selemti;
ALTER TABLE stock_policy OWNER TO postgres;
--
-- TOC entry 442 (class 1259 OID 77547)
-- Name: stock_policy_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE stock_policy_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE stock_policy_id_seq OWNER TO postgres;
--
-- TOC entry 4462 (class 0 OID 0)
-- Dependencies: 442
-- Name: stock_policy_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE stock_policy_id_seq OWNED BY stock_policy.id;
--
-- TOC entry 463 (class 1259 OID 77961)
-- Name: sucursal;
Type: TABLE;
Schema: selemti;
Owner: postgres
--

CREATE TABLE sucursal (
    id text NOT NULL,
    nombre text NOT NULL,
    activo boolean DEFAULT true NOT NULL
);
ALTER TABLE sucursal OWNER TO postgres;
--
-- TOC entry 445 (class 1259 OID 77570)
-- Name: sucursal_almacen_terminal;
Type: TABLE;
Schema: selemti;
ALTER TABLE sucursal_almacen_terminal OWNER TO postgres;
--
-- TOC entry 444 (class 1259 OID 77568)
-- Name: sucursal_almacen_terminal_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE sucursal_almacen_terminal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE sucursal_almacen_terminal_id_seq OWNER TO postgres;
--
-- TOC entry 4463 (class 0 OID 0)
-- Dependencies: 444
-- Name: sucursal_almacen_terminal_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE sucursal_almacen_terminal_id_seq OWNED BY sucursal_almacen_terminal.id;
--
-- TOC entry 449 (class 1259 OID 77623)
-- Name: ticket_det_consumo;
Type: TABLE;
Schema: selemti;
ALTER TABLE ticket_det_consumo OWNER TO postgres;
--
-- TOC entry 448 (class 1259 OID 77621)
-- Name: ticket_det_consumo_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_det_consumo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_det_consumo_id_seq OWNER TO postgres;
--
-- TOC entry 4464 (class 0 OID 0)
-- Dependencies: 448
-- Name: ticket_det_consumo_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_det_consumo_id_seq OWNED BY ticket_det_consumo.id;
--
-- TOC entry 417 (class 1259 OID 77217)
-- Name: ticket_venta_cab;
Type: TABLE;
Schema: selemti;
ALTER TABLE ticket_venta_cab OWNER TO postgres;
--
-- TOC entry 416 (class 1259 OID 77215)
-- Name: ticket_venta_cab_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_venta_cab_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_venta_cab_id_seq OWNER TO postgres;
--
-- TOC entry 4465 (class 0 OID 0)
-- Dependencies: 416
-- Name: ticket_venta_cab_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_venta_cab_id_seq OWNED BY ticket_venta_cab.id;
--
-- TOC entry 419 (class 1259 OID 77232)
-- Name: ticket_venta_det;
Type: TABLE;
Schema: selemti;
ALTER TABLE ticket_venta_det OWNER TO postgres;
--
-- TOC entry 418 (class 1259 OID 77230)
-- Name: ticket_venta_det_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_venta_det_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_venta_det_id_seq OWNER TO postgres;
--
-- TOC entry 4466 (class 0 OID 0)
-- Dependencies: 418
-- Name: ticket_venta_det_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_venta_det_id_seq OWNED BY ticket_venta_det.id;
--
-- TOC entry 421 (class 1259 OID 77247)
-- Name: unidades_medida;
Type: TABLE;
Schema: selemti;
ALTER TABLE unidades_medida OWNER TO postgres;
--
-- TOC entry 420 (class 1259 OID 77245)
-- Name: unidades_medida_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE unidades_medida_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE unidades_medida_id_seq OWNER TO postgres;
--
-- TOC entry 4467 (class 0 OID 0)
-- Dependencies: 420
-- Name: unidades_medida_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE unidades_medida_id_seq OWNED BY unidades_medida.id;
--
-- TOC entry 403 (class 1259 OID 77035)
-- Name: user_roles;
Type: TABLE;
Schema: selemti;
ALTER TABLE user_roles OWNER TO postgres;
--
-- TOC entry 4468 (class 0 OID 0)
-- Dependencies: 403
-- Name: TABLE user_roles;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE user_roles IS 'AsignaciÃ³n de roles a usuarios (RBAC)';
--
-- TOC entry 454 (class 1259 OID 77685)
-- Name: users;
Type: TABLE;
Schema: selemti;
ALTER TABLE users OWNER TO postgres;
--
-- TOC entry 4469 (class 0 OID 0)
-- Dependencies: 454
-- Name: TABLE users;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE users IS 'Usuarios del sistema con sus credenciales y estado';
--
-- TOC entry 453 (class 1259 OID 77683)
-- Name: users_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE users_id_seq OWNER TO postgres;
--
-- TOC entry 4470 (class 0 OID 0)
-- Dependencies: 453
-- Name: users_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;
--
-- TOC entry 451 (class 1259 OID 77670)
-- Name: v_ingenieria_menu_completa;
Type: VIEW;
Schema: selemti;
ALTER TABLE v_ingenieria_menu_completa OWNER TO postgres;
--
-- TOC entry 462 (class 1259 OID 77951)
-- Name: v_items_con_uom;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW v_items_con_uom AS
 SELECT i.id,
    i.nombre,
    i.descripcion,
    i.categoria_id,
    i.unidad_medida,
    i.perishable,
    i.temperatura_min,
    i.temperatura_max,
    i.costo_promedio,
    i.activo,
    i.created_at,
    i.updated_at,
    i.unidad_medida_id,
    i.factor_conversion,
    i.unidad_compra_id,
    i.factor_compra,
    i.tipo,
    i.unidad_salida_id,
    um.codigo AS uom_codigo,
    um.nombre AS uom_nombre,
    um.tipo AS uom_tipo
   FROM (items i
     LEFT JOIN unidades_medida um ON ((um.id = i.unidad_medida_id)));
ALTER TABLE v_items_con_uom OWNER TO postgres;
--
-- TOC entry 452 (class 1259 OID 77675)
-- Name: v_merma_por_item;
Type: VIEW;
Schema: selemti;
ALTER TABLE v_merma_por_item OWNER TO postgres;
--
-- TOC entry 450 (class 1259 OID 77665)
-- Name: v_stock_actual;
Type: VIEW;
Schema: selemti;
ALTER TABLE v_stock_actual OWNER TO postgres;
--
-- TOC entry 466 (class 1259 OID 77993)
-- Name: v_stock_brechas;
Type: VIEW;
Schema: selemti;
Owner: postgres
--

CREATE VIEW v_stock_brechas AS
 SELECT sp.sucursal_id,
    sp.almacen_id,
    sp.item_id,
    sp.min_qty,
    sp.max_qty,
    COALESCE(sa.stock_actual, (0)::numeric) AS stock_actual,
    GREATEST((sp.min_qty - COALESCE(sa.stock_actual, (0)::numeric)), (0)::numeric) AS qty_a_comprar
   FROM (stock_policy sp
     LEFT JOIN ( SELECT mov_inv.item_id,
            sum(
                CASE
                    WHEN ((mov_inv.tipo)::text = 'ENTRADA'::text) THEN mov_inv.cantidad
                    WHEN ((mov_inv.tipo)::text = ANY ((ARRAY['SALIDA'::character varying, 'MERMA'::character varying, 'AJUSTE'::character varying, 'TRASPASO'::character varying])::text[])) THEN (- mov_inv.cantidad)
                    ELSE (0)::numeric
                END) AS stock_actual
           FROM mov_inv
          GROUP BY mov_inv.item_id) sa ON (((sa.item_id)::text = sp.item_id)));
ALTER TABLE v_stock_brechas OWNER TO postgres;
--
-- TOC entry 383 (class 1259 OID 69489)
-- Name: vw_anulaciones_por_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_anulaciones_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 375 (class 1259 OID 68455)
-- Name: vw_sesion_reembolsos_efectivo;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_reembolsos_efectivo OWNER TO floreant;
--
-- TOC entry 376 (class 1259 OID 68460)
-- Name: vw_sesion_retiros;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_retiros OWNER TO floreant;
--
-- TOC entry 377 (class 1259 OID 68465)
-- Name: vw_sesion_ventas;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_ventas OWNER TO postgres;
--
-- TOC entry 386 (class 1259 OID 69504)
-- Name: vw_conciliacion_efectivo;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_conciliacion_efectivo OWNER TO postgres;
--
-- TOC entry 373 (class 1259 OID 68445)
-- Name: vw_sesion_descuentos;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_descuentos OWNER TO floreant;
--
-- TOC entry 374 (class 1259 OID 68450)
-- Name: vw_sesion_dpr;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_dpr OWNER TO postgres;
--
-- TOC entry 378 (class 1259 OID 68470)
-- Name: vw_conciliacion_sesion;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_conciliacion_sesion OWNER TO floreant;
--
-- TOC entry 385 (class 1259 OID 69499)
-- Name: vw_conciliacion_tarjetas;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_conciliacion_tarjetas OWNER TO postgres;
--
-- TOC entry 382 (class 1259 OID 69484)
-- Name: vw_descuentos_por_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_descuentos_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 379 (class 1259 OID 68475)
-- Name: vw_fast_tickets;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_fast_tickets OWNER TO postgres;
--
-- TOC entry 380 (class 1259 OID 68479)
-- Name: vw_fast_tx;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_fast_tx OWNER TO postgres;
--
-- TOC entry 384 (class 1259 OID 69494)
-- Name: vw_pagos_por_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_pagos_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 387 (class 1259 OID 69523)
-- Name: vw_resumen_conciliacion_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_resumen_conciliacion_terminal_dia OWNER TO postgres;
SET search_path = public, pg_catalog;
--
-- TOC entry 2997 (class 2604 OID 68483)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history ALTER COLUMN id SET DEFAULT nextval('action_history_id_seq'::regclass);
--
-- TOC entry 2998 (class 2604 OID 68484)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history ALTER COLUMN id SET DEFAULT nextval('attendence_history_id_seq'::regclass);
--
-- TOC entry 2999 (class 2604 OID 68485)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer ALTER COLUMN id SET DEFAULT nextval('cash_drawer_id_seq'::regclass);
--
-- TOC entry 3000 (class 2604 OID 68486)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history ALTER COLUMN id SET DEFAULT nextval('cash_drawer_reset_history_id_seq'::regclass);
--
-- TOC entry 3001 (class 2604 OID 68487)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction ALTER COLUMN id SET DEFAULT nextval('cooking_instruction_id_seq'::regclass);
--
-- TOC entry 3002 (class 2604 OID 68488)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount ALTER COLUMN id SET DEFAULT nextval('coupon_and_discount_id_seq'::regclass);
--
-- TOC entry 3003 (class 2604 OID 68489)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency ALTER COLUMN id SET DEFAULT nextval('currency_id_seq'::regclass);
--
-- TOC entry 3004 (class 2604 OID 68490)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance ALTER COLUMN id SET DEFAULT nextval('currency_balance_id_seq'::regclass);
--
-- TOC entry 3005 (class 2604 OID 68491)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment ALTER COLUMN id SET DEFAULT nextval('custom_payment_id_seq'::regclass);
--
-- TOC entry 3006 (class 2604 OID 68492)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer ALTER COLUMN auto_id SET DEFAULT nextval('customer_auto_id_seq'::regclass);
--
-- TOC entry 3008 (class 2604 OID 68493)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info ALTER COLUMN id SET DEFAULT nextval('data_update_info_id_seq'::regclass);
--
-- TOC entry 3009 (class 2604 OID 68494)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address ALTER COLUMN id SET DEFAULT nextval('delivery_address_id_seq'::regclass);
--
-- TOC entry 3010 (class 2604 OID 68495)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge ALTER COLUMN id SET DEFAULT nextval('delivery_charge_id_seq'::regclass);
--
-- TOC entry 3011 (class 2604 OID 68496)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration ALTER COLUMN id SET DEFAULT nextval('delivery_configuration_id_seq'::regclass);
--
-- TOC entry 3012 (class 2604 OID 68497)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction ALTER COLUMN id SET DEFAULT nextval('delivery_instruction_id_seq'::regclass);
--
-- TOC entry 3013 (class 2604 OID 68498)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history ALTER COLUMN id SET DEFAULT nextval('drawer_assigned_history_id_seq'::regclass);
--
-- TOC entry 3014 (class 2604 OID 68499)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report ALTER COLUMN id SET DEFAULT nextval('drawer_pull_report_id_seq'::regclass);
--
-- TOC entry 3015 (class 2604 OID 68500)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history ALTER COLUMN id SET DEFAULT nextval('employee_in_out_history_id_seq'::regclass);
--
-- TOC entry 3016 (class 2604 OID 68501)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config ALTER COLUMN id SET DEFAULT nextval('global_config_id_seq'::regclass);
--
-- TOC entry 3017 (class 2604 OID 68502)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity ALTER COLUMN id SET DEFAULT nextval('gratuity_id_seq'::regclass);
--
-- TOC entry 3018 (class 2604 OID 68503)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print ALTER COLUMN id SET DEFAULT nextval('guest_check_print_id_seq'::regclass);
--
-- TOC entry 3019 (class 2604 OID 68504)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group ALTER COLUMN id SET DEFAULT nextval('inventory_group_id_seq'::regclass);
--
-- TOC entry 3020 (class 2604 OID 68505)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item ALTER COLUMN id SET DEFAULT nextval('inventory_item_id_seq'::regclass);
--
-- TOC entry 3021 (class 2604 OID 68506)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location ALTER COLUMN id SET DEFAULT nextval('inventory_location_id_seq'::regclass);
--
-- TOC entry 3022 (class 2604 OID 68507)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code ALTER COLUMN id SET DEFAULT nextval('inventory_meta_code_id_seq'::regclass);
--
-- TOC entry 3023 (class 2604 OID 68508)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction ALTER COLUMN id SET DEFAULT nextval('inventory_transaction_id_seq'::regclass);
--
-- TOC entry 3024 (class 2604 OID 68509)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit ALTER COLUMN id SET DEFAULT nextval('inventory_unit_id_seq'::regclass);
--
-- TOC entry 3025 (class 2604 OID 68510)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor ALTER COLUMN id SET DEFAULT nextval('inventory_vendor_id_seq'::regclass);
--
-- TOC entry 3026 (class 2604 OID 68511)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse ALTER COLUMN id SET DEFAULT nextval('inventory_warehouse_id_seq'::regclass);
--
-- TOC entry 3027 (class 2604 OID 68512)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_id_seq'::regclass);
--
-- TOC entry 3031 (class 2604 OID 68513)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_item_id_seq'::regclass);
--
-- TOC entry 3032 (class 2604 OID 68514)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category ALTER COLUMN id SET DEFAULT nextval('menu_category_id_seq'::regclass);
--
-- TOC entry 3033 (class 2604 OID 68515)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group ALTER COLUMN id SET DEFAULT nextval('menu_group_id_seq'::regclass);
--
-- TOC entry 3034 (class 2604 OID 68516)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item ALTER COLUMN id SET DEFAULT nextval('menu_item_id_seq'::regclass);
--
-- TOC entry 3035 (class 2604 OID 68517)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size ALTER COLUMN id SET DEFAULT nextval('menu_item_size_id_seq'::regclass);
--
-- TOC entry 3036 (class 2604 OID 68518)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier ALTER COLUMN id SET DEFAULT nextval('menu_modifier_id_seq'::regclass);
--
-- TOC entry 3037 (class 2604 OID 68519)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group ALTER COLUMN id SET DEFAULT nextval('menu_modifier_group_id_seq'::regclass);
--
-- TOC entry 3038 (class 2604 OID 68520)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup ALTER COLUMN id SET DEFAULT nextval('menuitem_modifiergroup_id_seq'::regclass);
--
-- TOC entry 3039 (class 2604 OID 68521)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift ALTER COLUMN id SET DEFAULT nextval('menuitem_shift_id_seq'::regclass);
--
-- TOC entry 3110 (class 2604 OID 73605)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: postgres
--

ALTER TABLE ONLY migrations ALTER COLUMN id SET DEFAULT nextval('migrations_id_seq'::regclass);
--
-- TOC entry 3040 (class 2604 OID 68522)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price ALTER COLUMN id SET DEFAULT nextval('modifier_multiplier_price_id_seq'::regclass);
--
-- TOC entry 3041 (class 2604 OID 68523)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type ALTER COLUMN id SET DEFAULT nextval('order_type_id_seq'::regclass);
--
-- TOC entry 3042 (class 2604 OID 68524)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit ALTER COLUMN id SET DEFAULT nextval('packaging_unit_id_seq'::regclass);
--
-- TOC entry 3043 (class 2604 OID 68525)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons ALTER COLUMN id SET DEFAULT nextval('payout_reasons_id_seq'::regclass);
--
-- TOC entry 3044 (class 2604 OID 68526)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients ALTER COLUMN id SET DEFAULT nextval('payout_recepients_id_seq'::regclass);
--
-- TOC entry 3045 (class 2604 OID 68527)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust ALTER COLUMN id SET DEFAULT nextval('pizza_crust_id_seq'::regclass);
--
-- TOC entry 3046 (class 2604 OID 68528)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price ALTER COLUMN id SET DEFAULT nextval('pizza_modifier_price_id_seq'::regclass);
--
-- TOC entry 3047 (class 2604 OID 68529)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price ALTER COLUMN id SET DEFAULT nextval('pizza_price_id_seq'::regclass);
--
-- TOC entry 3048 (class 2604 OID 68530)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group ALTER COLUMN id SET DEFAULT nextval('printer_group_id_seq'::regclass);
--
-- TOC entry 3049 (class 2604 OID 68531)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order ALTER COLUMN id SET DEFAULT nextval('purchase_order_id_seq'::regclass);
--
-- TOC entry 3050 (class 2604 OID 68532)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie ALTER COLUMN id SET DEFAULT nextval('recepie_id_seq'::regclass);
--
-- TOC entry 3051 (class 2604 OID 68533)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item ALTER COLUMN id SET DEFAULT nextval('recepie_item_id_seq'::regclass);
--
-- TOC entry 3052 (class 2604 OID 68534)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift ALTER COLUMN id SET DEFAULT nextval('shift_id_seq'::regclass);
--
-- TOC entry 3053 (class 2604 OID 68535)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor ALTER COLUMN id SET DEFAULT nextval('shop_floor_id_seq'::regclass);
--
-- TOC entry 3054 (class 2604 OID 68536)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template ALTER COLUMN id SET DEFAULT nextval('shop_floor_template_id_seq'::regclass);
--
-- TOC entry 3055 (class 2604 OID 68537)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type ALTER COLUMN id SET DEFAULT nextval('shop_table_type_id_seq'::regclass);
--
-- TOC entry 3056 (class 2604 OID 68538)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info ALTER COLUMN id SET DEFAULT nextval('table_booking_info_id_seq'::regclass);
--
-- TOC entry 3057 (class 2604 OID 68539)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax ALTER COLUMN id SET DEFAULT nextval('tax_id_seq'::regclass);
--
-- TOC entry 3058 (class 2604 OID 68540)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers ALTER COLUMN id SET DEFAULT nextval('terminal_printers_id_seq'::regclass);
--
-- TOC entry 3028 (class 2604 OID 68541)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket ALTER COLUMN id SET DEFAULT nextval('ticket_id_seq'::regclass);
--
-- TOC entry 3059 (class 2604 OID 68542)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount ALTER COLUMN id SET DEFAULT nextval('ticket_discount_id_seq'::regclass);
--
-- TOC entry 3060 (class 2604 OID 68543)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item ALTER COLUMN id SET DEFAULT nextval('ticket_item_id_seq'::regclass);
--
-- TOC entry 3061 (class 2604 OID 68544)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount ALTER COLUMN id SET DEFAULT nextval('ticket_item_discount_id_seq'::regclass);
--
-- TOC entry 3062 (class 2604 OID 68545)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier ALTER COLUMN id SET DEFAULT nextval('ticket_item_modifier_id_seq'::regclass);
--
-- TOC entry 3063 (class 2604 OID 68546)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions ALTER COLUMN id SET DEFAULT nextval('transactions_id_seq'::regclass);
--
-- TOC entry 3064 (class 2604 OID 68547)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type ALTER COLUMN id SET DEFAULT nextval('user_type_id_seq'::regclass);
--
-- TOC entry 3065 (class 2604 OID 68548)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users ALTER COLUMN auto_id SET DEFAULT nextval('users_auto_id_seq'::regclass);
--
-- TOC entry 3066 (class 2604 OID 68549)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer ALTER COLUMN id SET DEFAULT nextval('virtual_printer_id_seq'::regclass);
--
-- TOC entry 3067 (class 2604 OID 68550)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons ALTER COLUMN id SET DEFAULT nextval('void_reasons_id_seq'::regclass);
--
-- TOC entry 3068 (class 2604 OID 68551)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge ALTER COLUMN auto_id SET DEFAULT nextval('zip_code_vs_delivery_charge_auto_id_seq'::regclass);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3069 (class 2604 OID 68552)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria ALTER COLUMN id SET DEFAULT nextval('auditoria_id_seq'::regclass);
--
-- TOC entry 3115 (class 2604 OID 73707)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cat_unidades ALTER COLUMN id SET DEFAULT nextval('cat_unidades_id_seq'::regclass);
--
-- TOC entry 3192 (class 2604 OID 77268)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad ALTER COLUMN id SET DEFAULT nextval('conversiones_unidad_id_seq'::regclass);
--
-- TOC entry 3220 (class 2604 OID 77396)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer ALTER COLUMN id SET DEFAULT nextval('cost_layer_id_seq'::regclass);
--
-- TOC entry 3113 (class 2604 OID 73692)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs ALTER COLUMN id SET DEFAULT nextval('failed_jobs_id_seq'::regclass);
--
-- TOC entry 3074 (class 2604 OID 68553)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago ALTER COLUMN id SET DEFAULT nextval('formas_pago_id_seq'::regclass);
--
-- TOC entry 3200 (class 2604 OID 77322)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item ALTER COLUMN id SET DEFAULT nextval('historial_costos_item_id_seq'::regclass);
--
-- TOC entry 3208 (class 2604 OID 77354)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta ALTER COLUMN id SET DEFAULT nextval('historial_costos_receta_id_seq'::regclass);
--
-- TOC entry 3132 (class 2604 OID 77076)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch ALTER COLUMN id SET DEFAULT nextval('inventory_batch_id_seq'::regclass);
--
-- TOC entry 3227 (class 2604 OID 77463)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_recalc_queue ALTER COLUMN id SET DEFAULT nextval('job_recalc_queue_id_seq'::regclass);
--
-- TOC entry 3112 (class 2604 OID 73672)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY jobs ALTER COLUMN id SET DEFAULT nextval('jobs_id_seq'::regclass);
--
-- TOC entry 3111 (class 2604 OID 73617)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY migrations ALTER COLUMN id SET DEFAULT nextval('migrations_id_seq'::regclass);
--
-- TOC entry 3223 (class 2604 OID 77427)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos ALTER COLUMN id SET DEFAULT nextval('modificadores_pos_id_seq'::regclass);
--
-- TOC entry 3143 (class 2604 OID 77100)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv ALTER COLUMN id SET DEFAULT nextval('mov_inv_id_seq'::regclass);
--
-- TOC entry 3166 (class 2604 OID 77197)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab ALTER COLUMN id SET DEFAULT nextval('op_produccion_cab_id_seq'::regclass);
--
-- TOC entry 3238 (class 2604 OID 77534)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal ALTER COLUMN id SET DEFAULT nextval('param_sucursal_id_seq'::regclass);
--
-- TOC entry 3252 (class 2604 OID 77592)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log ALTER COLUMN id SET DEFAULT nextval('perdida_log_id_seq'::regclass);
--
-- TOC entry 3270 (class 2604 OID 77718)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY permissions ALTER COLUMN id SET DEFAULT nextval('permissions_id_seq'::regclass);
--
-- TOC entry 3089 (class 2604 OID 68554)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte ALTER COLUMN id SET DEFAULT nextval('postcorte_id_seq'::regclass);
--
-- TOC entry 3097 (class 2604 OID 68555)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte ALTER COLUMN id SET DEFAULT nextval('precorte_id_seq'::regclass);
--
-- TOC entry 3099 (class 2604 OID 68556)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo ALTER COLUMN id SET DEFAULT nextval('precorte_efectivo_id_seq'::regclass);
--
-- TOC entry 3103 (class 2604 OID 68557)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros ALTER COLUMN id SET DEFAULT nextval('precorte_otros_id_seq'::regclass);
--
-- TOC entry 3232 (class 2604 OID 77478)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log ALTER COLUMN id SET DEFAULT nextval('recalc_log_id_seq'::regclass);
--
-- TOC entry 3160 (class 2604 OID 77171)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det ALTER COLUMN id SET DEFAULT nextval('receta_det_id_seq'::regclass);
--
-- TOC entry 3212 (class 2604 OID 77373)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_shadow ALTER COLUMN id SET DEFAULT nextval('receta_shadow_id_seq'::regclass);
--
-- TOC entry 3156 (class 2604 OID 77145)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version ALTER COLUMN id SET DEFAULT nextval('receta_version_id_seq'::regclass);
--
-- TOC entry 3271 (class 2604 OID 77731)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY roles ALTER COLUMN id SET DEFAULT nextval('roles_id_seq'::regclass);
--
-- TOC entry 3108 (class 2604 OID 68558)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon ALTER COLUMN id SET DEFAULT nextval('sesion_cajon_id_seq'::regclass);
--
-- TOC entry 3244 (class 2604 OID 77552)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy ALTER COLUMN id SET DEFAULT nextval('stock_policy_id_seq'::regclass);
--
-- TOC entry 3249 (class 2604 OID 77573)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sucursal_almacen_terminal ALTER COLUMN id SET DEFAULT nextval('sucursal_almacen_terminal_id_seq'::regclass);
--
-- TOC entry 3256 (class 2604 OID 77626)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo ALTER COLUMN id SET DEFAULT nextval('ticket_det_consumo_id_seq'::regclass);
--
-- TOC entry 3172 (class 2604 OID 77220)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab ALTER COLUMN id SET DEFAULT nextval('ticket_venta_cab_id_seq'::regclass);
--
-- TOC entry 3178 (class 2604 OID 77235)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det ALTER COLUMN id SET DEFAULT nextval('ticket_venta_det_id_seq'::regclass);
--
-- TOC entry 3183 (class 2604 OID 77250)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida ALTER COLUMN id SET DEFAULT nextval('unidades_medida_id_seq'::regclass);
--
-- TOC entry 3259 (class 2604 OID 77688)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);
SET search_path = public, pg_catalog;
--
-- TOC entry 3276 (class 2606 OID 68562)
-- Name: action_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT action_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3278 (class 2606 OID 68564)
-- Name: attendence_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT attendence_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3280 (class 2606 OID 68566)
-- Name: cash_drawer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT cash_drawer_pkey PRIMARY KEY (id);
--
-- TOC entry 3282 (class 2606 OID 68568)
-- Name: cash_drawer_reset_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT cash_drawer_reset_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3284 (class 2606 OID 68570)
-- Name: cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction
    ADD CONSTRAINT cooking_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 3286 (class 2606 OID 68572)
-- Name: coupon_and_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3288 (class 2606 OID 68574)
-- Name: coupon_and_discount_uuid_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_uuid_key UNIQUE (uuid);
--
-- TOC entry 3292 (class 2606 OID 68576)
-- Name: currency_balance_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT currency_balance_pkey PRIMARY KEY (id);
--
-- TOC entry 3290 (class 2606 OID 68578)
-- Name: currency_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency
    ADD CONSTRAINT currency_pkey PRIMARY KEY (id);
--
-- TOC entry 3294 (class 2606 OID 68580)
-- Name: custom_payment_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment
    ADD CONSTRAINT custom_payment_pkey PRIMARY KEY (id);
--
-- TOC entry 3296 (class 2606 OID 68582)
-- Name: customer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer
    ADD CONSTRAINT customer_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 3298 (class 2606 OID 68584)
-- Name: customer_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT customer_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3300 (class 2606 OID 68586)
-- Name: daily_folio_counter_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY daily_folio_counter
    ADD CONSTRAINT daily_folio_counter_pkey PRIMARY KEY (folio_date, branch_key);
--
-- TOC entry 3302 (class 2606 OID 68588)
-- Name: data_update_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info
    ADD CONSTRAINT data_update_info_pkey PRIMARY KEY (id);
--
-- TOC entry 3304 (class 2606 OID 68590)
-- Name: delivery_address_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT delivery_address_pkey PRIMARY KEY (id);
--
-- TOC entry 3306 (class 2606 OID 68592)
-- Name: delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge
    ADD CONSTRAINT delivery_charge_pkey PRIMARY KEY (id);
--
-- TOC entry 3308 (class 2606 OID 68594)
-- Name: delivery_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration
    ADD CONSTRAINT delivery_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 3310 (class 2606 OID 68596)
-- Name: delivery_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT delivery_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 3312 (class 2606 OID 68598)
-- Name: drawer_assigned_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT drawer_assigned_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3316 (class 2606 OID 68600)
-- Name: drawer_pull_report_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT drawer_pull_report_pkey PRIMARY KEY (id);
--
-- TOC entry 3319 (class 2606 OID 68602)
-- Name: employee_in_out_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT employee_in_out_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3321 (class 2606 OID 68604)
-- Name: global_config_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pkey PRIMARY KEY (id);
--
-- TOC entry 3323 (class 2606 OID 68606)
-- Name: global_config_pos_key_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pos_key_key UNIQUE (pos_key);
--
-- TOC entry 3325 (class 2606 OID 68608)
-- Name: gratuity_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT gratuity_pkey PRIMARY KEY (id);
--
-- TOC entry 3327 (class 2606 OID 68610)
-- Name: guest_check_print_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT guest_check_print_pkey PRIMARY KEY (id);
--
-- TOC entry 3329 (class 2606 OID 68612)
-- Name: inventory_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group
    ADD CONSTRAINT inventory_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3331 (class 2606 OID 68614)
-- Name: inventory_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT inventory_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3333 (class 2606 OID 68616)
-- Name: inventory_location_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT inventory_location_pkey PRIMARY KEY (id);
--
-- TOC entry 3335 (class 2606 OID 68618)
-- Name: inventory_meta_code_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code
    ADD CONSTRAINT inventory_meta_code_pkey PRIMARY KEY (id);
--
-- TOC entry 3337 (class 2606 OID 68620)
-- Name: inventory_transaction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT inventory_transaction_pkey PRIMARY KEY (id);
--
-- TOC entry 3339 (class 2606 OID 68622)
-- Name: inventory_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit
    ADD CONSTRAINT inventory_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 3341 (class 2606 OID 68624)
-- Name: inventory_vendor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor
    ADD CONSTRAINT inventory_vendor_pkey PRIMARY KEY (id);
--
-- TOC entry 3343 (class 2606 OID 68626)
-- Name: inventory_warehouse_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse
    ADD CONSTRAINT inventory_warehouse_pkey PRIMARY KEY (id);
--
-- TOC entry 3367 (class 2606 OID 68628)
-- Name: kds_ready_log_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kds_ready_log
    ADD CONSTRAINT kds_ready_log_pkey PRIMARY KEY (ticket_id);
--
-- TOC entry 3370 (class 2606 OID 68630)
-- Name: kitchen_ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT kitchen_ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3346 (class 2606 OID 68632)
-- Name: kitchen_ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT kitchen_ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 3373 (class 2606 OID 68634)
-- Name: menu_category_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category
    ADD CONSTRAINT menu_category_pkey PRIMARY KEY (id);
--
-- TOC entry 3375 (class 2606 OID 68636)
-- Name: menu_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT menu_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3378 (class 2606 OID 68638)
-- Name: menu_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT menu_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3380 (class 2606 OID 68640)
-- Name: menu_item_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT menu_item_properties_pkey PRIMARY KEY (menu_item_id, property_name);
--
-- TOC entry 3382 (class 2606 OID 68642)
-- Name: menu_item_size_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size
    ADD CONSTRAINT menu_item_size_pkey PRIMARY KEY (id);
--
-- TOC entry 3387 (class 2606 OID 68644)
-- Name: menu_modifier_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group
    ADD CONSTRAINT menu_modifier_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3384 (class 2606 OID 68646)
-- Name: menu_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT menu_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 3390 (class 2606 OID 68648)
-- Name: menu_modifier_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT menu_modifier_properties_pkey PRIMARY KEY (menu_modifier_id, property_name);
--
-- TOC entry 3392 (class 2606 OID 68650)
-- Name: menuitem_modifiergroup_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT menuitem_modifiergroup_pkey PRIMARY KEY (id);
--
-- TOC entry 3394 (class 2606 OID 68652)
-- Name: menuitem_shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT menuitem_shift_pkey PRIMARY KEY (id);
--
-- TOC entry 3531 (class 2606 OID 73607)
-- Name: migrations_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: postgres
--

ALTER TABLE ONLY migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);
--
-- TOC entry 3396 (class 2606 OID 68654)
-- Name: modifier_multiplier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT modifier_multiplier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3398 (class 2606 OID 68656)
-- Name: multiplier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY multiplier
    ADD CONSTRAINT multiplier_pkey PRIMARY KEY (name);
--
-- TOC entry 3400 (class 2606 OID 68658)
-- Name: order_type_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_name_key UNIQUE (name);
--
-- TOC entry 3402 (class 2606 OID 68660)
-- Name: order_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3404 (class 2606 OID 68662)
-- Name: packaging_unit_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_name_key UNIQUE (name);
--
-- TOC entry 3406 (class 2606 OID 68664)
-- Name: packaging_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 3408 (class 2606 OID 68666)
-- Name: payout_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons
    ADD CONSTRAINT payout_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 3410 (class 2606 OID 68668)
-- Name: payout_recepients_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients
    ADD CONSTRAINT payout_recepients_pkey PRIMARY KEY (id);
--
-- TOC entry 3412 (class 2606 OID 68670)
-- Name: pizza_crust_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust
    ADD CONSTRAINT pizza_crust_pkey PRIMARY KEY (id);
--
-- TOC entry 3414 (class 2606 OID 68672)
-- Name: pizza_modifier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT pizza_modifier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3416 (class 2606 OID 68674)
-- Name: pizza_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT pizza_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3418 (class 2606 OID 68676)
-- Name: printer_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_configuration
    ADD CONSTRAINT printer_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 3420 (class 2606 OID 68678)
-- Name: printer_group_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_name_key UNIQUE (name);
--
-- TOC entry 3422 (class 2606 OID 68680)
-- Name: printer_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3424 (class 2606 OID 68682)
-- Name: purchase_order_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_pkey PRIMARY KEY (id);
--
-- TOC entry 3428 (class 2606 OID 68684)
-- Name: recepie_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT recepie_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3426 (class 2606 OID 68686)
-- Name: recepie_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT recepie_pkey PRIMARY KEY (id);
--
-- TOC entry 3430 (class 2606 OID 68688)
-- Name: restaurant_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant
    ADD CONSTRAINT restaurant_pkey PRIMARY KEY (id);
--
-- TOC entry 3432 (class 2606 OID 68690)
-- Name: restaurant_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT restaurant_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3434 (class 2606 OID 68692)
-- Name: shift_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_name_key UNIQUE (name);
--
-- TOC entry 3436 (class 2606 OID 68694)
-- Name: shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_pkey PRIMARY KEY (id);
--
-- TOC entry 3438 (class 2606 OID 68696)
-- Name: shop_floor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor
    ADD CONSTRAINT shop_floor_pkey PRIMARY KEY (id);
--
-- TOC entry 3440 (class 2606 OID 68698)
-- Name: shop_floor_template_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT shop_floor_template_pkey PRIMARY KEY (id);
--
-- TOC entry 3442 (class 2606 OID 68700)
-- Name: shop_floor_template_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT shop_floor_template_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3444 (class 2606 OID 68702)
-- Name: shop_table_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT shop_table_pkey PRIMARY KEY (id);
--
-- TOC entry 3446 (class 2606 OID 68704)
-- Name: shop_table_status_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_status
    ADD CONSTRAINT shop_table_status_pkey PRIMARY KEY (id);
--
-- TOC entry 3448 (class 2606 OID 68706)
-- Name: shop_table_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type
    ADD CONSTRAINT shop_table_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3451 (class 2606 OID 68708)
-- Name: table_booking_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT table_booking_info_pkey PRIMARY KEY (id);
--
-- TOC entry 3456 (class 2606 OID 68710)
-- Name: tax_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax_group
    ADD CONSTRAINT tax_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3454 (class 2606 OID 68712)
-- Name: tax_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax
    ADD CONSTRAINT tax_pkey PRIMARY KEY (id);
--
-- TOC entry 3348 (class 2606 OID 68714)
-- Name: terminal_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT terminal_pkey PRIMARY KEY (id);
--
-- TOC entry 3458 (class 2606 OID 68716)
-- Name: terminal_printers_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT terminal_printers_pkey PRIMARY KEY (id);
--
-- TOC entry 3460 (class 2606 OID 68718)
-- Name: terminal_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT terminal_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3462 (class 2606 OID 68720)
-- Name: ticket_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT ticket_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3356 (class 2606 OID 68722)
-- Name: ticket_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_global_id_key UNIQUE (global_id);
--
-- TOC entry 3467 (class 2606 OID 68724)
-- Name: ticket_item_addon_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT ticket_item_addon_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 3469 (class 2606 OID 68726)
-- Name: ticket_item_cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT ticket_item_cooking_instruction_pkey PRIMARY KEY (ticket_item_id, item_order);
--
-- TOC entry 3471 (class 2606 OID 68728)
-- Name: ticket_item_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT ticket_item_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3473 (class 2606 OID 68730)
-- Name: ticket_item_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT ticket_item_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 3475 (class 2606 OID 68732)
-- Name: ticket_item_modifier_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT ticket_item_modifier_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 3465 (class 2606 OID 68734)
-- Name: ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3358 (class 2606 OID 68736)
-- Name: ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 3477 (class 2606 OID 68738)
-- Name: ticket_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT ticket_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3479 (class 2606 OID 68740)
-- Name: transaction_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT transaction_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3483 (class 2606 OID 68742)
-- Name: transactions_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_global_id_key UNIQUE (global_id);
--
-- TOC entry 3485 (class 2606 OID 68744)
-- Name: transactions_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_pkey PRIMARY KEY (id);
--
-- TOC entry 3487 (class 2606 OID 68746)
-- Name: user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_permission
    ADD CONSTRAINT user_permission_pkey PRIMARY KEY (name);
--
-- TOC entry 3489 (class 2606 OID 68748)
-- Name: user_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type
    ADD CONSTRAINT user_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3491 (class 2606 OID 68750)
-- Name: user_user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT user_user_permission_pkey PRIMARY KEY (permissionid, elt);
--
-- TOC entry 3493 (class 2606 OID 68752)
-- Name: users_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 3495 (class 2606 OID 68754)
-- Name: users_user_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_id_key UNIQUE (user_id);
--
-- TOC entry 3497 (class 2606 OID 68756)
-- Name: users_user_pass_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_pass_key UNIQUE (user_pass);
--
-- TOC entry 3499 (class 2606 OID 68758)
-- Name: virtual_printer_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_name_key UNIQUE (name);
--
-- TOC entry 3501 (class 2606 OID 68760)
-- Name: virtual_printer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_pkey PRIMARY KEY (id);
--
-- TOC entry 3503 (class 2606 OID 68762)
-- Name: void_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons
    ADD CONSTRAINT void_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 3505 (class 2606 OID 68764)
-- Name: zip_code_vs_delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge
    ADD CONSTRAINT zip_code_vs_delivery_charge_pkey PRIMARY KEY (auto_id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3661 (class 2606 OID 77978)
-- Name: almacen_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY almacen
    ADD CONSTRAINT almacen_pkey PRIMARY KEY (id);
--
-- TOC entry 3507 (class 2606 OID 68766)
-- Name: auditoria_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria
    ADD CONSTRAINT auditoria_pkey PRIMARY KEY (id);
--
-- TOC entry 3543 (class 2606 OID 73666)
-- Name: cache_locks_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cache_locks
    ADD CONSTRAINT cache_locks_pkey PRIMARY KEY (key);
--
-- TOC entry 3541 (class 2606 OID 73658)
-- Name: cache_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cache
    ADD CONSTRAINT cache_pkey PRIMARY KEY (key);
--
-- TOC entry 3554 (class 2606 OID 73709)
-- Name: cat_unidades_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cat_unidades
    ADD CONSTRAINT cat_unidades_pkey PRIMARY KEY (id);
--
-- TOC entry 3592 (class 2606 OID 77278)
-- Name: conversiones_unidad_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_pkey PRIMARY KEY (id);
--
-- TOC entry 3594 (class 2606 OID 77280)
-- Name: conversiones_unidad_unidad_origen_id_unidad_destino_id_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_origen_id_unidad_destino_id_key UNIQUE (unidad_origen_id, unidad_destino_id);
--
-- TOC entry 3605 (class 2606 OID 77401)
-- Name: cost_layer_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_pkey PRIMARY KEY (id);
--
-- TOC entry 3550 (class 2606 OID 73698)
-- Name: failed_jobs_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs
    ADD CONSTRAINT failed_jobs_pkey PRIMARY KEY (id);
--
-- TOC entry 3552 (class 2606 OID 73700)
-- Name: failed_jobs_uuid_unique;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs
    ADD CONSTRAINT failed_jobs_uuid_unique UNIQUE (uuid);
--
-- TOC entry 3509 (class 2606 OID 68768)
-- Name: formas_pago_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago
    ADD CONSTRAINT formas_pago_pkey PRIMARY KEY (id);
--
-- TOC entry 3596 (class 2606 OID 77338)
-- Name: historial_costos_item_item_id_fecha_efectiva_version_datos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_item_id_fecha_efectiva_version_datos_key UNIQUE (item_id, fecha_efectiva, version_datos);
--
-- TOC entry 3598 (class 2606 OID 77336)
-- Name: historial_costos_item_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3601 (class 2606 OID 77362)
-- Name: historial_costos_receta_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta
    ADD CONSTRAINT historial_costos_receta_pkey PRIMARY KEY (id);
--
-- TOC entry 3562 (class 2606 OID 77089)
-- Name: inventory_batch_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch
    ADD CONSTRAINT inventory_batch_pkey PRIMARY KEY (id);
--
-- TOC entry 3618 (class 2606 OID 77501)
-- Name: item_vendor_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_pkey PRIMARY KEY (item_id, vendor_id, presentacion);
--
-- TOC entry 3558 (class 2606 OID 77070)
-- Name: items_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_pkey PRIMARY KEY (id);
--
-- TOC entry 3548 (class 2606 OID 73686)
-- Name: job_batches_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_batches
    ADD CONSTRAINT job_batches_pkey PRIMARY KEY (id);
--
-- TOC entry 3614 (class 2606 OID 77472)
-- Name: job_recalc_queue_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_recalc_queue
    ADD CONSTRAINT job_recalc_queue_pkey PRIMARY KEY (id);
--
-- TOC entry 3545 (class 2606 OID 73677)
-- Name: jobs_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY jobs
    ADD CONSTRAINT jobs_pkey PRIMARY KEY (id);
--
-- TOC entry 3533 (class 2606 OID 73619)
-- Name: migrations_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);
--
-- TOC entry 3652 (class 2606 OID 77749)
-- Name: model_has_permissions_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY model_has_permissions
    ADD CONSTRAINT model_has_permissions_pkey PRIMARY KEY (permission_id, model_id, model_type);
--
-- TOC entry 3655 (class 2606 OID 77760)
-- Name: model_has_roles_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY model_has_roles
    ADD CONSTRAINT model_has_roles_pkey PRIMARY KEY (role_id, model_id, model_type);
--
-- TOC entry 3610 (class 2606 OID 77434)
-- Name: modificadores_pos_codigo_pos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_codigo_pos_key UNIQUE (codigo_pos);
--
-- TOC entry 3612 (class 2606 OID 77432)
-- Name: modificadores_pos_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_pkey PRIMARY KEY (id);
--
-- TOC entry 3566 (class 2606 OID 77106)
-- Name: mov_inv_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_pkey PRIMARY KEY (id);
--
-- TOC entry 3579 (class 2606 OID 77204)
-- Name: op_produccion_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab
    ADD CONSTRAINT op_produccion_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3620 (class 2606 OID 77544)
-- Name: param_sucursal_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal
    ADD CONSTRAINT param_sucursal_pkey PRIMARY KEY (id);
--
-- TOC entry 3622 (class 2606 OID 77546)
-- Name: param_sucursal_sucursal_id_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal
    ADD CONSTRAINT param_sucursal_sucursal_id_key UNIQUE (sucursal_id);
--
-- TOC entry 3535 (class 2606 OID 73640)
-- Name: password_reset_tokens_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY password_reset_tokens
    ADD CONSTRAINT password_reset_tokens_pkey PRIMARY KEY (email);
--
-- TOC entry 3632 (class 2606 OID 77600)
-- Name: perdida_log_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_pkey PRIMARY KEY (id);
--
-- TOC entry 3643 (class 2606 OID 77725)
-- Name: permissions_name_guard_name_unique;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY permissions
    ADD CONSTRAINT permissions_name_guard_name_unique UNIQUE (name, guard_name);
--
-- TOC entry 3645 (class 2606 OID 77723)
-- Name: permissions_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY permissions
    ADD CONSTRAINT permissions_pkey PRIMARY KEY (id);
--
-- TOC entry 3608 (class 2606 OID 77421)
-- Name: pos_map_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY pos_map
    ADD CONSTRAINT pos_map_pkey PRIMARY KEY (pos_system, plu, valid_from, sys_from);
--
-- TOC entry 3512 (class 2606 OID 68770)
-- Name: postcorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3520 (class 2606 OID 68772)
-- Name: precorte_efectivo_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_pkey PRIMARY KEY (id);
--
-- TOC entry 3523 (class 2606 OID 68774)
-- Name: precorte_otros_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_pkey PRIMARY KEY (id);
--
-- TOC entry 3517 (class 2606 OID 68776)
-- Name: precorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3663 (class 2606 OID 77992)
-- Name: proveedor_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY proveedor
    ADD CONSTRAINT proveedor_pkey PRIMARY KEY (id);
--
-- TOC entry 3616 (class 2606 OID 77483)
-- Name: recalc_log_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log
    ADD CONSTRAINT recalc_log_pkey PRIMARY KEY (id);
--
-- TOC entry 3568 (class 2606 OID 77139)
-- Name: receta_cab_codigo_plato_pos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_cab
    ADD CONSTRAINT receta_cab_codigo_plato_pos_key UNIQUE (codigo_plato_pos);
--
-- TOC entry 3570 (class 2606 OID 77137)
-- Name: receta_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_cab
    ADD CONSTRAINT receta_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3577 (class 2606 OID 77181)
-- Name: receta_det_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_pkey PRIMARY KEY (id);
--
-- TOC entry 3603 (class 2606 OID 77385)
-- Name: receta_shadow_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_shadow
    ADD CONSTRAINT receta_shadow_pkey PRIMARY KEY (id);
--
-- TOC entry 3573 (class 2606 OID 77153)
-- Name: receta_version_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_pkey PRIMARY KEY (id);
--
-- TOC entry 3575 (class 2606 OID 77155)
-- Name: receta_version_receta_id_version_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_receta_id_version_key UNIQUE (receta_id, version);
--
-- TOC entry 3657 (class 2606 OID 77775)
-- Name: role_has_permissions_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY role_has_permissions
    ADD CONSTRAINT role_has_permissions_pkey PRIMARY KEY (permission_id, role_id);
--
-- TOC entry 3647 (class 2606 OID 77738)
-- Name: roles_name_guard_name_unique;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY roles
    ADD CONSTRAINT roles_name_guard_name_unique UNIQUE (name, guard_name);
--
-- TOC entry 3649 (class 2606 OID 77736)
-- Name: roles_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY roles
    ADD CONSTRAINT roles_pkey PRIMARY KEY (id);
--
-- TOC entry 3527 (class 2606 OID 68778)
-- Name: sesion_cajon_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_pkey PRIMARY KEY (id);
--
-- TOC entry 3529 (class 2606 OID 68780)
-- Name: sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key UNIQUE (terminal_id, cajero_usuario_id, apertura_ts);
--
-- TOC entry 3538 (class 2606 OID 73648)
-- Name: sessions_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);
--
-- TOC entry 3626 (class 2606 OID 77561)
-- Name: stock_policy_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy
    ADD CONSTRAINT stock_policy_pkey PRIMARY KEY (id);
--
-- TOC entry 3629 (class 2606 OID 77580)
-- Name: sucursal_almacen_terminal_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sucursal_almacen_terminal
    ADD CONSTRAINT sucursal_almacen_terminal_pkey PRIMARY KEY (id);
--
-- TOC entry 3659 (class 2606 OID 77969)
-- Name: sucursal_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sucursal
    ADD CONSTRAINT sucursal_pkey PRIMARY KEY (id);
--
-- TOC entry 3637 (class 2606 OID 77633)
-- Name: ticket_det_consumo_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_pkey PRIMARY KEY (id);
--
-- TOC entry 3582 (class 2606 OID 77229)
-- Name: ticket_venta_cab_numero_ticket_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab
    ADD CONSTRAINT ticket_venta_cab_numero_ticket_key UNIQUE (numero_ticket);
--
-- TOC entry 3584 (class 2606 OID 77227)
-- Name: ticket_venta_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab
    ADD CONSTRAINT ticket_venta_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3586 (class 2606 OID 77239)
-- Name: ticket_venta_det_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_pkey PRIMARY KEY (id);
--
-- TOC entry 3588 (class 2606 OID 77262)
-- Name: unidades_medida_codigo_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida
    ADD CONSTRAINT unidades_medida_codigo_key UNIQUE (codigo);
--
-- TOC entry 3590 (class 2606 OID 77260)
-- Name: unidades_medida_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida
    ADD CONSTRAINT unidades_medida_pkey PRIMARY KEY (id);
--
-- TOC entry 3514 (class 2606 OID 68782)
-- Name: uq_postcorte_sesion_id;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT uq_postcorte_sesion_id UNIQUE (sesion_id);
--
-- TOC entry 3556 (class 2606 OID 77041)
-- Name: user_roles_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY user_roles
    ADD CONSTRAINT user_roles_pkey PRIMARY KEY (user_id, role_id);
--
-- TOC entry 3639 (class 2606 OID 77703)
-- Name: users_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);
--
-- TOC entry 3641 (class 2606 OID 77705)
-- Name: users_username_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_username_key UNIQUE (username);
SET search_path = public, pg_catalog;
--
-- TOC entry 3349 (class 1259 OID 68783)
-- Name: creationhour;
Type: INDEX;
Schema: public;
--
-- TOC entry 3350 (class 1259 OID 68784)
-- Name: deliverydate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3317 (class 1259 OID 68785)
-- Name: drawer_report_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3351 (class 1259 OID 68786)
-- Name: drawerresetted;
Type: INDEX;
Schema: public;
--
-- TOC entry 3371 (class 1259 OID 68787)
-- Name: food_category_visible;
Type: INDEX;
Schema: public;
--
-- TOC entry 3449 (class 1259 OID 68788)
-- Name: fromdate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3313 (class 1259 OID 68789)
-- Name: idx_dah_user_op_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3314 (class 1259 OID 68790)
-- Name: idx_drawer_assigned_history_user_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3352 (class 1259 OID 68791)
-- Name: idx_ticket_close_term_owner;
Type: INDEX;
Schema: public;
--
-- TOC entry 3480 (class 1259 OID 68792)
-- Name: idx_tx_term_user_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3368 (class 1259 OID 68793)
-- Name: ix_kitchen_ticket_item_item_id;
Type: INDEX;
Schema: public;
--
-- TOC entry 3344 (class 1259 OID 68794)
-- Name: ix_kitchen_ticket_ticket_id;
Type: INDEX;
Schema: public;
--
-- TOC entry 3353 (class 1259 OID 68795)
-- Name: ix_ticket_branch_key;
Type: INDEX;
Schema: public;
--
-- TOC entry 3354 (class 1259 OID 68796)
-- Name: ix_ticket_folio_date;
Type: INDEX;
Schema: public;
--
-- TOC entry 3463 (class 1259 OID 68797)
-- Name: ix_ticket_item_ticket_pg;
Type: INDEX;
Schema: public;
--
-- TOC entry 3376 (class 1259 OID 68798)
-- Name: menugroupvisible;
Type: INDEX;
Schema: public;
--
-- TOC entry 3388 (class 1259 OID 68799)
-- Name: mg_enable;
Type: INDEX;
Schema: public;
--
-- TOC entry 3385 (class 1259 OID 68800)
-- Name: modifierenabled;
Type: INDEX;
Schema: public;
--
-- TOC entry 3359 (class 1259 OID 68801)
-- Name: ticketactivedate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3360 (class 1259 OID 68802)
-- Name: ticketclosingdate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3361 (class 1259 OID 68803)
-- Name: ticketcreatedate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3362 (class 1259 OID 68804)
-- Name: ticketpaid;
Type: INDEX;
Schema: public;
--
-- TOC entry 3363 (class 1259 OID 68805)
-- Name: ticketsettled;
Type: INDEX;
Schema: public;
--
-- TOC entry 3364 (class 1259 OID 68806)
-- Name: ticketvoided;
Type: INDEX;
Schema: public;
--
-- TOC entry 3452 (class 1259 OID 68807)
-- Name: todate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3481 (class 1259 OID 68808)
-- Name: tran_drawer_resetted;
Type: INDEX;
Schema: public;
--
-- TOC entry 3365 (class 1259 OID 68809)
-- Name: ux_ticket_dailyfolio;
Type: INDEX;
Schema: public;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3599 (class 1259 OID 77656)
-- Name: idx_historial_costos_item_fecha;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3559 (class 1259 OID 77653)
-- Name: idx_inventory_batch_caducidad;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3560 (class 1259 OID 77652)
-- Name: idx_inventory_batch_item;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3563 (class 1259 OID 77651)
-- Name: idx_mov_inv_item_ts;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3564 (class 1259 OID 77650)
-- Name: idx_mov_inv_tipo_fecha;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3630 (class 1259 OID 77658)
-- Name: idx_perdida_item_ts;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3515 (class 1259 OID 68810)
-- Name: idx_precorte_sesion_id;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3571 (class 1259 OID 77654)
-- Name: idx_receta_version_publicada;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3623 (class 1259 OID 77657)
-- Name: idx_stock_policy_item_suc;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3624 (class 1259 OID 77567)
-- Name: idx_stock_policy_unique;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3627 (class 1259 OID 77581)
-- Name: idx_suc_alm_term_unique;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3633 (class 1259 OID 77649)
-- Name: idx_tick_cons_unique;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3634 (class 1259 OID 77660)
-- Name: idx_tickcons_lote;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3635 (class 1259 OID 77659)
-- Name: idx_tickcons_ticket;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3580 (class 1259 OID 77655)
-- Name: idx_ticket_venta_fecha;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3606 (class 1259 OID 77661)
-- Name: ix_layer_item_suc;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3521 (class 1259 OID 68811)
-- Name: ix_precorte_otros_precorte;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3524 (class 1259 OID 68812)
-- Name: ix_sesion_cajon_cajero;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3525 (class 1259 OID 68813)
-- Name: ix_sesion_cajon_terminal;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3546 (class 1259 OID 73678)
-- Name: jobs_queue_index;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3650 (class 1259 OID 77742)
-- Name: model_has_permissions_model_id_model_type_index;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX model_has_permissions_model_id_model_type_index ON model_has_permissions USING btree (model_id, model_type);
--
-- TOC entry 3653 (class 1259 OID 77753)
-- Name: model_has_roles_model_id_model_type_index;
Type: INDEX;
Schema: selemti;
Owner: postgres
--

CREATE INDEX model_has_roles_model_id_model_type_index ON model_has_roles USING btree (model_id, model_type);
--
-- TOC entry 3518 (class 1259 OID 68814)
-- Name: precorte_sesion_id_idx;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3536 (class 1259 OID 73650)
-- Name: sessions_last_activity_index;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3539 (class 1259 OID 73649)
-- Name: sessions_user_id_index;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3510 (class 1259 OID 68815)
-- Name: uq_fp_huella_expr;
Type: INDEX;
Schema: selemti;
SET search_path = public, pg_catalog;
--
-- TOC entry 3831 (class 2620 OID 68816)
-- Name: trg_assign_daily_folio;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3832 (class 2620 OID 68817)
-- Name: trg_kds_notify_kti;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3833 (class 2620 OID 68818)
-- Name: trg_kds_notify_ti;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3829 (class 2620 OID 68819)
-- Name: trg_selemti_dah_ai;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3830 (class 2620 OID 68820)
-- Name: trg_selemti_terminal_bu_snapshot;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3834 (class 2620 OID 68821)
-- Name: trg_selemti_tx_ai_forma_pago;
Type: TRIGGER;
Schema: public;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3835 (class 2620 OID 68822)
-- Name: trg_precorte_efectivo_bi;
Type: TRIGGER;
Schema: selemti;
SET search_path = public, pg_catalog;
--
-- TOC entry 3724 (class 2606 OID 68823)
-- Name: fk1273b4bbb79c6270;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT fk1273b4bbb79c6270 FOREIGN KEY (menu_modifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3711 (class 2606 OID 68828)
-- Name: fk1462f02bcb07faa3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT fk1462f02bcb07faa3 FOREIGN KEY (kithen_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3735 (class 2606 OID 68833)
-- Name: fk17bd51a089fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a089fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3734 (class 2606 OID 68838)
-- Name: fk17bd51a0ae5d580;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a0ae5d580 FOREIGN KEY (pizza_price_id) REFERENCES pizza_price(id);
--
-- TOC entry 3765 (class 2606 OID 68843)
-- Name: fk1fa465141df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT fk1fa465141df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3754 (class 2606 OID 68848)
-- Name: fk2458e9258979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT fk2458e9258979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3674 (class 2606 OID 68853)
-- Name: fk29aca6899e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT fk29aca6899e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3675 (class 2606 OID 68858)
-- Name: fk29d9ca39e1c3d97;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT fk29d9ca39e1c3d97 FOREIGN KEY (customer_no) REFERENCES customer(auto_id);
--
-- TOC entry 3672 (class 2606 OID 68863)
-- Name: fk2cc0e08e28dd6c11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e28dd6c11 FOREIGN KEY (currency_id) REFERENCES currency(id);
--
-- TOC entry 3671 (class 2606 OID 68868)
-- Name: fk2cc0e08e9006558;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e9006558 FOREIGN KEY (cash_drawer_id) REFERENCES cash_drawer(id);
--
-- TOC entry 3670 (class 2606 OID 68873)
-- Name: fk2cc0e08efb910735;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08efb910735 FOREIGN KEY (dpr_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3785 (class 2606 OID 68878)
-- Name: fk2dbeaa4f283ecc6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f283ecc6 FOREIGN KEY (permissionid) REFERENCES user_type(id);
--
-- TOC entry 3784 (class 2606 OID 68883)
-- Name: fk2dbeaa4f8f23f5e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f8f23f5e FOREIGN KEY (elt) REFERENCES user_permission(name);
--
-- TOC entry 3756 (class 2606 OID 68888)
-- Name: fk301c4de53e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de53e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3755 (class 2606 OID 68893)
-- Name: fk301c4de59e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de59e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3733 (class 2606 OID 68898)
-- Name: fk312b355b40fda3c9;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b40fda3c9 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3732 (class 2606 OID 68903)
-- Name: fk312b355b6e7b8b68;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b6e7b8b68 FOREIGN KEY (menuitem_modifiergroup_id) REFERENCES menu_item(id);
--
-- TOC entry 3731 (class 2606 OID 68908)
-- Name: fk312b355b7f2f368;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b7f2f368 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3702 (class 2606 OID 68913)
-- Name: fk341cbc275cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT fk341cbc275cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3685 (class 2606 OID 68918)
-- Name: fk34e4e3771df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3771df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3684 (class 2606 OID 68923)
-- Name: fk34e4e3772ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3772ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3683 (class 2606 OID 68928)
-- Name: fk34e4e377aa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e377aa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3771 (class 2606 OID 68933)
-- Name: fk3825f9d0dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT fk3825f9d0dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3772 (class 2606 OID 68938)
-- Name: fk3df5d4fab9276e77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT fk3df5d4fab9276e77 FOREIGN KEY (ticket_itemid) REFERENCES ticket_item(id);
--
-- TOC entry 3664 (class 2606 OID 68943)
-- Name: fk3f3af36b3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT fk3f3af36b3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3717 (class 2606 OID 68948)
-- Name: fk4cd5a1f35188aa24;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35188aa24 FOREIGN KEY (group_id) REFERENCES menu_group(id);
--
-- TOC entry 3716 (class 2606 OID 68953)
-- Name: fk4cd5a1f35cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3715 (class 2606 OID 68958)
-- Name: fk4cd5a1f35ee9f27a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35ee9f27a FOREIGN KEY (tax_group_id) REFERENCES tax_group(id);
--
-- TOC entry 3714 (class 2606 OID 68963)
-- Name: fk4cd5a1f3a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3713 (class 2606 OID 68968)
-- Name: fk4cd5a1f3f3b77c57;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3f3b77c57 FOREIGN KEY (recepie) REFERENCES recepie(id);
--
-- TOC entry 3788 (class 2606 OID 68973)
-- Name: fk4d495e87660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e87660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3787 (class 2606 OID 68978)
-- Name: fk4d495e8897b1e39;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8897b1e39 FOREIGN KEY (n_user_type) REFERENCES user_type(id);
--
-- TOC entry 3786 (class 2606 OID 68983)
-- Name: fk4d495e8d9409968;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8d9409968 FOREIGN KEY (currentterminal) REFERENCES terminal(id);
--
-- TOC entry 3712 (class 2606 OID 68988)
-- Name: fk4dc1ab7f2e347ff0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT fk4dc1ab7f2e347ff0 FOREIGN KEY (category_id) REFERENCES menu_category(id);
--
-- TOC entry 3726 (class 2606 OID 68993)
-- Name: fk4f8523e38d9ea931;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e38d9ea931 FOREIGN KEY (menucategory_id) REFERENCES menu_category(id);
--
-- TOC entry 3725 (class 2606 OID 68998)
-- Name: fk4f8523e3d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e3d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3710 (class 2606 OID 69003)
-- Name: fk5696584bb73e273e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kit_ticket_table_num
    ADD CONSTRAINT fk5696584bb73e273e FOREIGN KEY (kit_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3739 (class 2606 OID 69008)
-- Name: fk572726f374be2c71;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f374be2c71 FOREIGN KEY (pizzamodifierprice_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3738 (class 2606 OID 69013)
-- Name: fk572726f3ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f3ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3694 (class 2606 OID 69018)
-- Name: fk59073b58c46a9c15;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT fk59073b58c46a9c15 FOREIGN KEY (warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3723 (class 2606 OID 69023)
-- Name: fk59b6b1b72501cb2c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b72501cb2c FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3722 (class 2606 OID 69028)
-- Name: fk59b6b1b75e0c7b8d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b75e0c7b8d FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3721 (class 2606 OID 69033)
-- Name: fk59b6b1b7a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b7a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3676 (class 2606 OID 69038)
-- Name: fk5a823c91f1dd782b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT fk5a823c91f1dd782b FOREIGN KEY (a_user) REFERENCES users(auto_id);
--
-- TOC entry 3775 (class 2606 OID 69043)
-- Name: fk5d3f9acb6c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acb6c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3774 (class 2606 OID 69048)
-- Name: fk5d3f9acbdec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acbdec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3668 (class 2606 OID 69053)
-- Name: fk6221077d2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT fk6221077d2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3777 (class 2606 OID 69058)
-- Name: fk65af15e21df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_table_num
    ADD CONSTRAINT fk65af15e21df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3748 (class 2606 OID 69063)
-- Name: fk6b4e177764931efc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT fk6b4e177764931efc FOREIGN KEY (menu_item) REFERENCES menu_item(id);
--
-- TOC entry 3758 (class 2606 OID 69068)
-- Name: fk6bc51417160de3b1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417160de3b1 FOREIGN KEY (booking_id) REFERENCES table_booking_info(id);
--
-- TOC entry 3757 (class 2606 OID 69073)
-- Name: fk6bc51417dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3682 (class 2606 OID 69078)
-- Name: fk6d5db9fa2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3681 (class 2606 OID 69083)
-- Name: fk6d5db9fa3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3680 (class 2606 OID 69088)
-- Name: fk6d5db9fa7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3776 (class 2606 OID 69093)
-- Name: fk70ecd046223049de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT fk70ecd046223049de FOREIGN KEY (id) REFERENCES ticket(id);
--
-- TOC entry 3669 (class 2606 OID 69098)
-- Name: fk719418223e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT fk719418223e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3693 (class 2606 OID 69103)
-- Name: fk7dc968362cd583c1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968362cd583c1 FOREIGN KEY (item_group_id) REFERENCES inventory_group(id);
--
-- TOC entry 3692 (class 2606 OID 69108)
-- Name: fk7dc968363525e956;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968363525e956 FOREIGN KEY (punit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3691 (class 2606 OID 69113)
-- Name: fk7dc968366848d615;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968366848d615 FOREIGN KEY (recipe_unit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3690 (class 2606 OID 69118)
-- Name: fk7dc9683695e455d3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc9683695e455d3 FOREIGN KEY (item_location_id) REFERENCES inventory_location(id);
--
-- TOC entry 3689 (class 2606 OID 69123)
-- Name: fk7dc968369e60c333;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968369e60c333 FOREIGN KEY (item_vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3751 (class 2606 OID 69128)
-- Name: fk80ad9f75fc64768f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT fk80ad9f75fc64768f FOREIGN KEY (id) REFERENCES restaurant(id);
--
-- TOC entry 3750 (class 2606 OID 69133)
-- Name: fk855626db1682b10e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626db1682b10e FOREIGN KEY (inventory_item) REFERENCES inventory_item(id);
--
-- TOC entry 3749 (class 2606 OID 69138)
-- Name: fk855626dbcae89b83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626dbcae89b83 FOREIGN KEY (recepie_id) REFERENCES recepie(id);
--
-- TOC entry 3742 (class 2606 OID 69143)
-- Name: fk8a16099391d62c51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a16099391d62c51 FOREIGN KEY (multiplier_id) REFERENCES multiplier(name);
--
-- TOC entry 3741 (class 2606 OID 69148)
-- Name: fk8a1609939c9e4883;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a1609939c9e4883 FOREIGN KEY (pizza_modifier_price_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3740 (class 2606 OID 69153)
-- Name: fk8a160993ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a160993ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3773 (class 2606 OID 69158)
-- Name: fk8fd6290dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT fk8fd6290dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3709 (class 2606 OID 69163)
-- Name: fk937b5f0c1f6a9a4a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c1f6a9a4a FOREIGN KEY (void_by_user) REFERENCES users(auto_id);
--
-- TOC entry 3708 (class 2606 OID 69168)
-- Name: fk937b5f0c2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3707 (class 2606 OID 69173)
-- Name: fk937b5f0c7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3706 (class 2606 OID 69178)
-- Name: fk937b5f0caa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0caa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3705 (class 2606 OID 69183)
-- Name: fk937b5f0cc188ea51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cc188ea51 FOREIGN KEY (gratuity_id) REFERENCES gratuity(id);
--
-- TOC entry 3704 (class 2606 OID 69188)
-- Name: fk937b5f0cf575c7d4;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cf575c7d4 FOREIGN KEY (driver_id) REFERENCES users(auto_id);
--
-- TOC entry 3761 (class 2606 OID 69193)
-- Name: fk93802290dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3760 (class 2606 OID 69198)
-- Name: fk93802290f5d6e47b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290f5d6e47b FOREIGN KEY (type_id) REFERENCES shop_table_type(id);
--
-- TOC entry 3764 (class 2606 OID 69203)
-- Name: fk963f26d69d31df8e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT fk963f26d69d31df8e FOREIGN KEY (id) REFERENCES terminal(id);
--
-- TOC entry 3768 (class 2606 OID 69208)
-- Name: fk979f54661df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54661df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3767 (class 2606 OID 69213)
-- Name: fk979f546633e5d3b2;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f546633e5d3b2 FOREIGN KEY (size_modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3766 (class 2606 OID 69218)
-- Name: fk979f54665cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54665cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3679 (class 2606 OID 69223)
-- Name: fk98cf9b143ef4cd9b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report_voidtickets
    ADD CONSTRAINT fk98cf9b143ef4cd9b FOREIGN KEY (dpreport_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3763 (class 2606 OID 69228)
-- Name: fk99ede5fc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3762 (class 2606 OID 69233)
-- Name: fk99ede5fcc433e65a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fcc433e65a FOREIGN KEY (virtual_printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3789 (class 2606 OID 69238)
-- Name: fk9af7853bcf15f4a6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtualprinter_order_type
    ADD CONSTRAINT fk9af7853bcf15f4a6 FOREIGN KEY (printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3720 (class 2606 OID 69243)
-- Name: fk9ea1afc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3719 (class 2606 OID 69248)
-- Name: fk9ea1afc89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3770 (class 2606 OID 69253)
-- Name: fk9f1996346c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f1996346c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3769 (class 2606 OID 69258)
-- Name: fk9f199634dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f199634dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3678 (class 2606 OID 69263)
-- Name: fkaec362202ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362202ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3677 (class 2606 OID 69268)
-- Name: fkaec362203e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362203e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3699 (class 2606 OID 69273)
-- Name: fkaf48f43b5b397c5;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b5b397c5 FOREIGN KEY (reference_id) REFERENCES purchase_order(id);
--
-- TOC entry 3698 (class 2606 OID 69278)
-- Name: fkaf48f43b96a3d6bf;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b96a3d6bf FOREIGN KEY (item_id) REFERENCES inventory_item(id);
--
-- TOC entry 3697 (class 2606 OID 69283)
-- Name: fkaf48f43bd152c95f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bd152c95f FOREIGN KEY (vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3696 (class 2606 OID 69288)
-- Name: fkaf48f43beda09759;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43beda09759 FOREIGN KEY (to_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3695 (class 2606 OID 69293)
-- Name: fkaf48f43bff3f328a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bff3f328a FOREIGN KEY (from_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3752 (class 2606 OID 69298)
-- Name: fkba6efbd68979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT fkba6efbd68979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3747 (class 2606 OID 69303)
-- Name: fkc05b805e5f31265c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group_printers
    ADD CONSTRAINT fkc05b805e5f31265c FOREIGN KEY (printer_id) REFERENCES printer_group(id);
--
-- TOC entry 3759 (class 2606 OID 69308)
-- Name: fkcbeff0e454031ec1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_ticket_num
    ADD CONSTRAINT fkcbeff0e454031ec1 FOREIGN KEY (shop_table_status_id) REFERENCES shop_table_status(id);
--
-- TOC entry 3688 (class 2606 OID 69313)
-- Name: fkce827c6f3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT fkce827c6f3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3743 (class 2606 OID 69318)
-- Name: fkd3de7e7896183657;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT fkd3de7e7896183657 FOREIGN KEY (item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3673 (class 2606 OID 69323)
-- Name: fkd43068347bbccf0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT fkd43068347bbccf0 FOREIGN KEY (id) REFERENCES customer(auto_id);
--
-- TOC entry 3753 (class 2606 OID 69328)
-- Name: fkd70c313ca36ab054;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT fkd70c313ca36ab054 FOREIGN KEY (id) REFERENCES shop_floor_template(id);
--
-- TOC entry 3730 (class 2606 OID 69333)
-- Name: fkd89ccdee33662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdee33662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3729 (class 2606 OID 69338)
-- Name: fkd89ccdeed3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdeed3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3667 (class 2606 OID 69343)
-- Name: fkdfe829a2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3666 (class 2606 OID 69348)
-- Name: fkdfe829a3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3665 (class 2606 OID 69353)
-- Name: fkdfe829a7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3737 (class 2606 OID 69358)
-- Name: fke03c92d533662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d533662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3736 (class 2606 OID 69363)
-- Name: fke03c92d57660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d57660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3701 (class 2606 OID 69368)
-- Name: fke2b846573ac1d2e0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b846573ac1d2e0 FOREIGN KEY (order_type_id) REFERENCES order_type(id);
--
-- TOC entry 3700 (class 2606 OID 69373)
-- Name: fke2b8465789fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b8465789fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3728 (class 2606 OID 69378)
-- Name: fke3790e40113bf083;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40113bf083 FOREIGN KEY (menugroup_id) REFERENCES menu_group(id);
--
-- TOC entry 3727 (class 2606 OID 69383)
-- Name: fke3790e40d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3778 (class 2606 OID 69388)
-- Name: fke3de65548e8203bc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT fke3de65548e8203bc FOREIGN KEY (id) REFERENCES transactions(id);
--
-- TOC entry 3703 (class 2606 OID 69393)
-- Name: fke83d827c969c6de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT fke83d827c969c6de FOREIGN KEY (assigned_user) REFERENCES users(auto_id);
--
-- TOC entry 3746 (class 2606 OID 69398)
-- Name: fkeac112927c59441d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac112927c59441d FOREIGN KEY (crust) REFERENCES pizza_crust(id);
--
-- TOC entry 3745 (class 2606 OID 69403)
-- Name: fkeac11292a56d141c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292a56d141c FOREIGN KEY (order_type) REFERENCES order_type(id);
--
-- TOC entry 3744 (class 2606 OID 69408)
-- Name: fkeac11292dd545b77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292dd545b77 FOREIGN KEY (menu_item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3687 (class 2606 OID 69413)
-- Name: fkf8a37399d900aa01;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399d900aa01 FOREIGN KEY (elt) REFERENCES tax(id);
--
-- TOC entry 3686 (class 2606 OID 69418)
-- Name: fkf8a37399eff11066;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399eff11066 FOREIGN KEY (group_id) REFERENCES tax_group(id);
--
-- TOC entry 3718 (class 2606 OID 69423)
-- Name: fkf94186ff89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT fkf94186ff89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3783 (class 2606 OID 69428)
-- Name: fkfe9871551df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871551df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3782 (class 2606 OID 69433)
-- Name: fkfe9871552ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871552ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3781 (class 2606 OID 69438)
-- Name: fkfe9871553e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871553e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3780 (class 2606 OID 69443)
-- Name: fkfe987155ca43b6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155ca43b6 FOREIGN KEY (payout_recepient_id) REFERENCES payout_recepients(id);
--
-- TOC entry 3779 (class 2606 OID 69448)
-- Name: fkfe987155fc697d9e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155fc697d9e FOREIGN KEY (payout_reason_id) REFERENCES payout_reasons(id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3828 (class 2606 OID 77979)
-- Name: almacen_sucursal_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY almacen
    ADD CONSTRAINT almacen_sucursal_id_fkey FOREIGN KEY (sucursal_id) REFERENCES sucursal(id);
--
-- TOC entry 3807 (class 2606 OID 77286)
-- Name: conversiones_unidad_unidad_destino_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_destino_id_fkey FOREIGN KEY (unidad_destino_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3808 (class 2606 OID 77281)
-- Name: conversiones_unidad_unidad_origen_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_origen_id_fkey FOREIGN KEY (unidad_origen_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3811 (class 2606 OID 77407)
-- Name: cost_layer_batch_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_batch_id_fkey FOREIGN KEY (batch_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3812 (class 2606 OID 77402)
-- Name: cost_layer_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3804 (class 2606 OID 77956)
-- Name: fk_ticket_det_cab;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT fk_ticket_det_cab FOREIGN KEY (ticket_id) REFERENCES ticket_venta_cab(id) ON DELETE CASCADE;
--
-- TOC entry 3809 (class 2606 OID 77339)
-- Name: historial_costos_item_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3810 (class 2606 OID 77363)
-- Name: historial_costos_receta_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta
    ADD CONSTRAINT historial_costos_receta_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3797 (class 2606 OID 77090)
-- Name: inventory_batch_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch
    ADD CONSTRAINT inventory_batch_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3816 (class 2606 OID 77502)
-- Name: item_vendor_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3815 (class 2606 OID 77507)
-- Name: item_vendor_unidad_presentacion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_unidad_presentacion_id_fkey FOREIGN KEY (unidad_presentacion_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3795 (class 2606 OID 77304)
-- Name: items_unidad_compra_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_compra_id_fkey FOREIGN KEY (unidad_compra_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3794 (class 2606 OID 77291)
-- Name: items_unidad_medida_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_medida_id_fkey FOREIGN KEY (unidad_medida_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3796 (class 2606 OID 77519)
-- Name: items_unidad_salida_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_salida_id_fkey FOREIGN KEY (unidad_salida_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3824 (class 2606 OID 77743)
-- Name: model_has_permissions_permission_id_foreign;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY model_has_permissions
    ADD CONSTRAINT model_has_permissions_permission_id_foreign FOREIGN KEY (permission_id) REFERENCES permissions(id) ON DELETE CASCADE;
--
-- TOC entry 3825 (class 2606 OID 77754)
-- Name: model_has_roles_role_id_foreign;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY model_has_roles
    ADD CONSTRAINT model_has_roles_role_id_foreign FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE;
--
-- TOC entry 3813 (class 2606 OID 77435)
-- Name: modificadores_pos_receta_modificador_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_receta_modificador_id_fkey FOREIGN KEY (receta_modificador_id) REFERENCES receta_cab(id);
--
-- TOC entry 3799 (class 2606 OID 77107)
-- Name: mov_inv_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3798 (class 2606 OID 77112)
-- Name: mov_inv_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3803 (class 2606 OID 77205)
-- Name: op_produccion_cab_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab
    ADD CONSTRAINT op_produccion_cab_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3820 (class 2606 OID 77601)
-- Name: perdida_log_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3819 (class 2606 OID 77606)
-- Name: perdida_log_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3818 (class 2606 OID 77611)
-- Name: perdida_log_uom_original_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_uom_original_id_fkey FOREIGN KEY (uom_original_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3790 (class 2606 OID 69453)
-- Name: postcorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3792 (class 2606 OID 69458)
-- Name: precorte_efectivo_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3793 (class 2606 OID 69463)
-- Name: precorte_otros_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3791 (class 2606 OID 69468)
-- Name: precorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3814 (class 2606 OID 77484)
-- Name: recalc_log_job_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log
    ADD CONSTRAINT recalc_log_job_id_fkey FOREIGN KEY (job_id) REFERENCES job_recalc_queue(id);
--
-- TOC entry 3801 (class 2606 OID 77187)
-- Name: receta_det_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3802 (class 2606 OID 77182)
-- Name: receta_det_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3800 (class 2606 OID 77156)
-- Name: receta_version_receta_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_receta_id_fkey FOREIGN KEY (receta_id) REFERENCES receta_cab(id);
--
-- TOC entry 3827 (class 2606 OID 77764)
-- Name: role_has_permissions_permission_id_foreign;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY role_has_permissions
    ADD CONSTRAINT role_has_permissions_permission_id_foreign FOREIGN KEY (permission_id) REFERENCES permissions(id) ON DELETE CASCADE;
--
-- TOC entry 3826 (class 2606 OID 77769)
-- Name: role_has_permissions_role_id_foreign;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY role_has_permissions
    ADD CONSTRAINT role_has_permissions_role_id_foreign FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE;
--
-- TOC entry 3817 (class 2606 OID 77562)
-- Name: stock_policy_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy
    ADD CONSTRAINT stock_policy_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3823 (class 2606 OID 77634)
-- Name: ticket_det_consumo_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3822 (class 2606 OID 77639)
-- Name: ticket_det_consumo_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3821 (class 2606 OID 77644)
-- Name: ticket_det_consumo_uom_original_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_uom_original_id_fkey FOREIGN KEY (uom_original_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3805 (class 2606 OID 77440)
-- Name: ticket_venta_det_receta_shadow_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_receta_shadow_id_fkey FOREIGN KEY (receta_shadow_id) REFERENCES receta_shadow(id);
--
-- TOC entry 3806 (class 2606 OID 77240)
-- Name: ticket_venta_det_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 4242 (class 0 OID 0)
-- Dependencies: 7
-- Name: public;
Type: ACL;
Schema: -;
Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;
GRANT USAGE ON SCHEMA public TO selemti_user;
--
-- TOC entry 4243 (class 0 OID 0)
-- Dependencies: 6
-- Name: selemti;
Type: ACL;
Schema: -;
Owner: floreant
--

REVOKE ALL ON SCHEMA selemti FROM PUBLIC;
REVOKE ALL ON SCHEMA selemti FROM floreant;
GRANT ALL ON SCHEMA selemti TO floreant;
GRANT ALL ON SCHEMA selemti TO selemti_user;
SET search_path = public, pg_catalog;
--
-- TOC entry 4245 (class 0 OID 0)
-- Dependencies: 181
-- Name: action_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE action_history FROM PUBLIC;
REVOKE ALL ON TABLE action_history FROM floreant;
GRANT ALL ON TABLE action_history TO floreant;
GRANT SELECT ON TABLE action_history TO selemti_user;
--
-- TOC entry 4247 (class 0 OID 0)
-- Dependencies: 183
-- Name: attendence_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE attendence_history FROM PUBLIC;
REVOKE ALL ON TABLE attendence_history FROM floreant;
GRANT ALL ON TABLE attendence_history TO floreant;
GRANT SELECT ON TABLE attendence_history TO selemti_user;
--
-- TOC entry 4249 (class 0 OID 0)
-- Dependencies: 185
-- Name: cash_drawer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cash_drawer FROM PUBLIC;
REVOKE ALL ON TABLE cash_drawer FROM floreant;
GRANT ALL ON TABLE cash_drawer TO floreant;
GRANT SELECT ON TABLE cash_drawer TO selemti_user;
--
-- TOC entry 4251 (class 0 OID 0)
-- Dependencies: 187
-- Name: cash_drawer_reset_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cash_drawer_reset_history FROM PUBLIC;
REVOKE ALL ON TABLE cash_drawer_reset_history FROM floreant;
GRANT ALL ON TABLE cash_drawer_reset_history TO floreant;
GRANT SELECT ON TABLE cash_drawer_reset_history TO selemti_user;
--
-- TOC entry 4253 (class 0 OID 0)
-- Dependencies: 189
-- Name: cooking_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cooking_instruction FROM PUBLIC;
REVOKE ALL ON TABLE cooking_instruction FROM floreant;
GRANT ALL ON TABLE cooking_instruction TO floreant;
GRANT SELECT ON TABLE cooking_instruction TO selemti_user;
--
-- TOC entry 4255 (class 0 OID 0)
-- Dependencies: 191
-- Name: coupon_and_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE coupon_and_discount FROM PUBLIC;
REVOKE ALL ON TABLE coupon_and_discount FROM floreant;
GRANT ALL ON TABLE coupon_and_discount TO floreant;
GRANT SELECT ON TABLE coupon_and_discount TO selemti_user;
--
-- TOC entry 4257 (class 0 OID 0)
-- Dependencies: 193
-- Name: currency;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE currency FROM PUBLIC;
REVOKE ALL ON TABLE currency FROM floreant;
GRANT ALL ON TABLE currency TO floreant;
GRANT SELECT ON TABLE currency TO selemti_user;
--
-- TOC entry 4258 (class 0 OID 0)
-- Dependencies: 194
-- Name: currency_balance;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE currency_balance FROM PUBLIC;
REVOKE ALL ON TABLE currency_balance FROM floreant;
GRANT ALL ON TABLE currency_balance TO floreant;
GRANT SELECT ON TABLE currency_balance TO selemti_user;
--
-- TOC entry 4261 (class 0 OID 0)
-- Dependencies: 197
-- Name: custom_payment;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE custom_payment FROM PUBLIC;
REVOKE ALL ON TABLE custom_payment FROM floreant;
GRANT ALL ON TABLE custom_payment TO floreant;
GRANT SELECT ON TABLE custom_payment TO selemti_user;
--
-- TOC entry 4263 (class 0 OID 0)
-- Dependencies: 199
-- Name: customer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE customer FROM PUBLIC;
REVOKE ALL ON TABLE customer FROM floreant;
GRANT ALL ON TABLE customer TO floreant;
GRANT SELECT ON TABLE customer TO selemti_user;
--
-- TOC entry 4265 (class 0 OID 0)
-- Dependencies: 201
-- Name: customer_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE customer_properties FROM PUBLIC;
REVOKE ALL ON TABLE customer_properties FROM floreant;
GRANT ALL ON TABLE customer_properties TO floreant;
GRANT SELECT ON TABLE customer_properties TO selemti_user;
--
-- TOC entry 4266 (class 0 OID 0)
-- Dependencies: 202
-- Name: daily_folio_counter;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE daily_folio_counter FROM PUBLIC;
REVOKE ALL ON TABLE daily_folio_counter FROM floreant;
GRANT ALL ON TABLE daily_folio_counter TO floreant;
GRANT SELECT ON TABLE daily_folio_counter TO selemti_user;
--
-- TOC entry 4267 (class 0 OID 0)
-- Dependencies: 203
-- Name: data_update_info;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE data_update_info FROM PUBLIC;
REVOKE ALL ON TABLE data_update_info FROM floreant;
GRANT ALL ON TABLE data_update_info TO floreant;
GRANT SELECT ON TABLE data_update_info TO selemti_user;
--
-- TOC entry 4269 (class 0 OID 0)
-- Dependencies: 205
-- Name: delivery_address;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_address FROM PUBLIC;
REVOKE ALL ON TABLE delivery_address FROM floreant;
GRANT ALL ON TABLE delivery_address TO floreant;
GRANT SELECT ON TABLE delivery_address TO selemti_user;
--
-- TOC entry 4271 (class 0 OID 0)
-- Dependencies: 207
-- Name: delivery_charge;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_charge FROM PUBLIC;
REVOKE ALL ON TABLE delivery_charge FROM floreant;
GRANT ALL ON TABLE delivery_charge TO floreant;
GRANT SELECT ON TABLE delivery_charge TO selemti_user;
--
-- TOC entry 4273 (class 0 OID 0)
-- Dependencies: 209
-- Name: delivery_configuration;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_configuration FROM PUBLIC;
REVOKE ALL ON TABLE delivery_configuration FROM floreant;
GRANT ALL ON TABLE delivery_configuration TO floreant;
GRANT SELECT ON TABLE delivery_configuration TO selemti_user;
--
-- TOC entry 4275 (class 0 OID 0)
-- Dependencies: 211
-- Name: delivery_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_instruction FROM PUBLIC;
REVOKE ALL ON TABLE delivery_instruction FROM floreant;
GRANT ALL ON TABLE delivery_instruction TO floreant;
GRANT SELECT ON TABLE delivery_instruction TO selemti_user;
--
-- TOC entry 4277 (class 0 OID 0)
-- Dependencies: 213
-- Name: drawer_assigned_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_assigned_history FROM PUBLIC;
REVOKE ALL ON TABLE drawer_assigned_history FROM floreant;
GRANT ALL ON TABLE drawer_assigned_history TO floreant;
GRANT SELECT ON TABLE drawer_assigned_history TO selemti_user;
--
-- TOC entry 4279 (class 0 OID 0)
-- Dependencies: 215
-- Name: drawer_pull_report;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_pull_report FROM PUBLIC;
REVOKE ALL ON TABLE drawer_pull_report FROM floreant;
GRANT ALL ON TABLE drawer_pull_report TO floreant;
GRANT SELECT ON TABLE drawer_pull_report TO selemti_user;
--
-- TOC entry 4281 (class 0 OID 0)
-- Dependencies: 217
-- Name: drawer_pull_report_voidtickets;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_pull_report_voidtickets FROM PUBLIC;
REVOKE ALL ON TABLE drawer_pull_report_voidtickets FROM floreant;
GRANT ALL ON TABLE drawer_pull_report_voidtickets TO floreant;
GRANT SELECT ON TABLE drawer_pull_report_voidtickets TO selemti_user;
--
-- TOC entry 4282 (class 0 OID 0)
-- Dependencies: 218
-- Name: employee_in_out_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE employee_in_out_history FROM PUBLIC;
REVOKE ALL ON TABLE employee_in_out_history FROM floreant;
GRANT ALL ON TABLE employee_in_out_history TO floreant;
GRANT SELECT ON TABLE employee_in_out_history TO selemti_user;
--
-- TOC entry 4284 (class 0 OID 0)
-- Dependencies: 220
-- Name: global_config;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE global_config FROM PUBLIC;
REVOKE ALL ON TABLE global_config FROM floreant;
GRANT ALL ON TABLE global_config TO floreant;
GRANT SELECT ON TABLE global_config TO selemti_user;
--
-- TOC entry 4286 (class 0 OID 0)
-- Dependencies: 222
-- Name: gratuity;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE gratuity FROM PUBLIC;
REVOKE ALL ON TABLE gratuity FROM floreant;
GRANT ALL ON TABLE gratuity TO floreant;
GRANT SELECT ON TABLE gratuity TO selemti_user;
--
-- TOC entry 4288 (class 0 OID 0)
-- Dependencies: 224
-- Name: group_taxes;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE group_taxes FROM PUBLIC;
REVOKE ALL ON TABLE group_taxes FROM floreant;
GRANT ALL ON TABLE group_taxes TO floreant;
GRANT SELECT ON TABLE group_taxes TO selemti_user;
--
-- TOC entry 4289 (class 0 OID 0)
-- Dependencies: 225
-- Name: guest_check_print;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE guest_check_print FROM PUBLIC;
REVOKE ALL ON TABLE guest_check_print FROM floreant;
GRANT ALL ON TABLE guest_check_print TO floreant;
GRANT SELECT ON TABLE guest_check_print TO selemti_user;
--
-- TOC entry 4291 (class 0 OID 0)
-- Dependencies: 227
-- Name: inventory_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_group FROM PUBLIC;
REVOKE ALL ON TABLE inventory_group FROM floreant;
GRANT ALL ON TABLE inventory_group TO floreant;
GRANT SELECT ON TABLE inventory_group TO selemti_user;
--
-- TOC entry 4293 (class 0 OID 0)
-- Dependencies: 229
-- Name: inventory_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_item FROM PUBLIC;
REVOKE ALL ON TABLE inventory_item FROM floreant;
GRANT ALL ON TABLE inventory_item TO floreant;
GRANT SELECT ON TABLE inventory_item TO selemti_user;
--
-- TOC entry 4295 (class 0 OID 0)
-- Dependencies: 231
-- Name: inventory_location;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_location FROM PUBLIC;
REVOKE ALL ON TABLE inventory_location FROM floreant;
GRANT ALL ON TABLE inventory_location TO floreant;
GRANT SELECT ON TABLE inventory_location TO selemti_user;
--
-- TOC entry 4297 (class 0 OID 0)
-- Dependencies: 233
-- Name: inventory_meta_code;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_meta_code FROM PUBLIC;
REVOKE ALL ON TABLE inventory_meta_code FROM floreant;
GRANT ALL ON TABLE inventory_meta_code TO floreant;
GRANT SELECT ON TABLE inventory_meta_code TO selemti_user;
--
-- TOC entry 4299 (class 0 OID 0)
-- Dependencies: 235
-- Name: inventory_transaction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_transaction FROM PUBLIC;
REVOKE ALL ON TABLE inventory_transaction FROM floreant;
GRANT ALL ON TABLE inventory_transaction TO floreant;
GRANT SELECT ON TABLE inventory_transaction TO selemti_user;
--
-- TOC entry 4301 (class 0 OID 0)
-- Dependencies: 237
-- Name: inventory_unit;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_unit FROM PUBLIC;
REVOKE ALL ON TABLE inventory_unit FROM floreant;
GRANT ALL ON TABLE inventory_unit TO floreant;
GRANT SELECT ON TABLE inventory_unit TO selemti_user;
--
-- TOC entry 4303 (class 0 OID 0)
-- Dependencies: 239
-- Name: inventory_vendor;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_vendor FROM PUBLIC;
REVOKE ALL ON TABLE inventory_vendor FROM floreant;
GRANT ALL ON TABLE inventory_vendor TO floreant;
GRANT SELECT ON TABLE inventory_vendor TO selemti_user;
--
-- TOC entry 4305 (class 0 OID 0)
-- Dependencies: 241
-- Name: inventory_warehouse;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_warehouse FROM PUBLIC;
REVOKE ALL ON TABLE inventory_warehouse FROM floreant;
GRANT ALL ON TABLE inventory_warehouse TO floreant;
GRANT SELECT ON TABLE inventory_warehouse TO selemti_user;
--
-- TOC entry 4307 (class 0 OID 0)
-- Dependencies: 243
-- Name: item_order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE item_order_type FROM PUBLIC;
REVOKE ALL ON TABLE item_order_type FROM floreant;
GRANT ALL ON TABLE item_order_type TO floreant;
GRANT SELECT ON TABLE item_order_type TO selemti_user;
--
-- TOC entry 4308 (class 0 OID 0)
-- Dependencies: 244
-- Name: kitchen_ticket;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kitchen_ticket FROM PUBLIC;
REVOKE ALL ON TABLE kitchen_ticket FROM floreant;
GRANT ALL ON TABLE kitchen_ticket TO floreant;
GRANT SELECT ON TABLE kitchen_ticket TO selemti_user;
--
-- TOC entry 4309 (class 0 OID 0)
-- Dependencies: 245
-- Name: terminal;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal FROM PUBLIC;
REVOKE ALL ON TABLE terminal FROM floreant;
GRANT ALL ON TABLE terminal TO floreant;
GRANT SELECT ON TABLE terminal TO selemti_user;
--
-- TOC entry 4310 (class 0 OID 0)
-- Dependencies: 246
-- Name: ticket;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket FROM PUBLIC;
REVOKE ALL ON TABLE ticket FROM floreant;
GRANT ALL ON TABLE ticket TO floreant;
GRANT SELECT ON TABLE ticket TO selemti_user;
--
-- TOC entry 4311 (class 0 OID 0)
-- Dependencies: 247
-- Name: kds_orders_enhanced;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kds_orders_enhanced FROM PUBLIC;
REVOKE ALL ON TABLE kds_orders_enhanced FROM floreant;
GRANT ALL ON TABLE kds_orders_enhanced TO floreant;
GRANT SELECT ON TABLE kds_orders_enhanced TO selemti_user;
--
-- TOC entry 4312 (class 0 OID 0)
-- Dependencies: 248
-- Name: kds_ready_log;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kds_ready_log FROM PUBLIC;
REVOKE ALL ON TABLE kds_ready_log FROM floreant;
GRANT ALL ON TABLE kds_ready_log TO floreant;
GRANT SELECT ON TABLE kds_ready_log TO selemti_user;
--
-- TOC entry 4313 (class 0 OID 0)
-- Dependencies: 249
-- Name: kit_ticket_table_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kit_ticket_table_num FROM PUBLIC;
REVOKE ALL ON TABLE kit_ticket_table_num FROM floreant;
GRANT ALL ON TABLE kit_ticket_table_num TO floreant;
GRANT SELECT ON TABLE kit_ticket_table_num TO selemti_user;
--
-- TOC entry 4315 (class 0 OID 0)
-- Dependencies: 251
-- Name: kitchen_ticket_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kitchen_ticket_item FROM PUBLIC;
REVOKE ALL ON TABLE kitchen_ticket_item FROM floreant;
GRANT ALL ON TABLE kitchen_ticket_item TO floreant;
GRANT SELECT ON TABLE kitchen_ticket_item TO selemti_user;
--
-- TOC entry 4317 (class 0 OID 0)
-- Dependencies: 253
-- Name: menu_category;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_category FROM PUBLIC;
REVOKE ALL ON TABLE menu_category FROM floreant;
GRANT ALL ON TABLE menu_category TO floreant;
GRANT SELECT ON TABLE menu_category TO selemti_user;
--
-- TOC entry 4319 (class 0 OID 0)
-- Dependencies: 255
-- Name: menu_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_group FROM PUBLIC;
REVOKE ALL ON TABLE menu_group FROM floreant;
GRANT ALL ON TABLE menu_group TO floreant;
GRANT SELECT ON TABLE menu_group TO selemti_user;
--
-- TOC entry 4321 (class 0 OID 0)
-- Dependencies: 257
-- Name: menu_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item FROM PUBLIC;
REVOKE ALL ON TABLE menu_item FROM floreant;
GRANT ALL ON TABLE menu_item TO floreant;
GRANT SELECT ON TABLE menu_item TO selemti_user;
--
-- TOC entry 4323 (class 0 OID 0)
-- Dependencies: 259
-- Name: menu_item_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_properties FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_properties FROM floreant;
GRANT ALL ON TABLE menu_item_properties TO floreant;
GRANT SELECT ON TABLE menu_item_properties TO selemti_user;
--
-- TOC entry 4324 (class 0 OID 0)
-- Dependencies: 260
-- Name: menu_item_size;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_size FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_size FROM floreant;
GRANT ALL ON TABLE menu_item_size TO floreant;
GRANT SELECT ON TABLE menu_item_size TO selemti_user;
--
-- TOC entry 4326 (class 0 OID 0)
-- Dependencies: 262
-- Name: menu_item_terminal_ref;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_terminal_ref FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_terminal_ref FROM floreant;
GRANT ALL ON TABLE menu_item_terminal_ref TO floreant;
GRANT SELECT ON TABLE menu_item_terminal_ref TO selemti_user;
--
-- TOC entry 4327 (class 0 OID 0)
-- Dependencies: 263
-- Name: menu_modifier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier FROM floreant;
GRANT ALL ON TABLE menu_modifier TO floreant;
GRANT SELECT ON TABLE menu_modifier TO selemti_user;
--
-- TOC entry 4328 (class 0 OID 0)
-- Dependencies: 264
-- Name: menu_modifier_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier_group FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier_group FROM floreant;
GRANT ALL ON TABLE menu_modifier_group TO floreant;
GRANT SELECT ON TABLE menu_modifier_group TO selemti_user;
--
-- TOC entry 4331 (class 0 OID 0)
-- Dependencies: 267
-- Name: menu_modifier_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier_properties FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier_properties FROM floreant;
GRANT ALL ON TABLE menu_modifier_properties TO floreant;
GRANT SELECT ON TABLE menu_modifier_properties TO selemti_user;
--
-- TOC entry 4332 (class 0 OID 0)
-- Dependencies: 268
-- Name: menucategory_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menucategory_discount FROM PUBLIC;
REVOKE ALL ON TABLE menucategory_discount FROM floreant;
GRANT ALL ON TABLE menucategory_discount TO floreant;
GRANT SELECT ON TABLE menucategory_discount TO selemti_user;
--
-- TOC entry 4333 (class 0 OID 0)
-- Dependencies: 269
-- Name: menugroup_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menugroup_discount FROM PUBLIC;
REVOKE ALL ON TABLE menugroup_discount FROM floreant;
GRANT ALL ON TABLE menugroup_discount TO floreant;
GRANT SELECT ON TABLE menugroup_discount TO selemti_user;
--
-- TOC entry 4334 (class 0 OID 0)
-- Dependencies: 270
-- Name: menuitem_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_discount FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_discount FROM floreant;
GRANT ALL ON TABLE menuitem_discount TO floreant;
GRANT SELECT ON TABLE menuitem_discount TO selemti_user;
--
-- TOC entry 4335 (class 0 OID 0)
-- Dependencies: 271
-- Name: menuitem_modifiergroup;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_modifiergroup FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_modifiergroup FROM floreant;
GRANT ALL ON TABLE menuitem_modifiergroup TO floreant;
GRANT SELECT ON TABLE menuitem_modifiergroup TO selemti_user;
--
-- TOC entry 4337 (class 0 OID 0)
-- Dependencies: 273
-- Name: menuitem_pizzapirce;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_pizzapirce FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_pizzapirce FROM floreant;
GRANT ALL ON TABLE menuitem_pizzapirce TO floreant;
GRANT SELECT ON TABLE menuitem_pizzapirce TO selemti_user;
--
-- TOC entry 4338 (class 0 OID 0)
-- Dependencies: 274
-- Name: menuitem_shift;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_shift FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_shift FROM floreant;
GRANT ALL ON TABLE menuitem_shift TO floreant;
GRANT SELECT ON TABLE menuitem_shift TO selemti_user;
--
-- TOC entry 4340 (class 0 OID 0)
-- Dependencies: 276
-- Name: menumodifier_pizzamodifierprice;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menumodifier_pizzamodifierprice FROM PUBLIC;
REVOKE ALL ON TABLE menumodifier_pizzamodifierprice FROM floreant;
GRANT ALL ON TABLE menumodifier_pizzamodifierprice TO floreant;
GRANT SELECT ON TABLE menumodifier_pizzamodifierprice TO selemti_user;
--
-- TOC entry 4341 (class 0 OID 0)
-- Dependencies: 389
-- Name: migrations;
Type: ACL;
Schema: public;
Owner: postgres
--

REVOKE ALL ON TABLE migrations FROM PUBLIC;
REVOKE ALL ON TABLE migrations FROM postgres;
GRANT ALL ON TABLE migrations TO postgres;
GRANT SELECT ON TABLE migrations TO selemti_user;
--
-- TOC entry 4343 (class 0 OID 0)
-- Dependencies: 277
-- Name: modifier_multiplier_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE modifier_multiplier_price FROM PUBLIC;
REVOKE ALL ON TABLE modifier_multiplier_price FROM floreant;
GRANT ALL ON TABLE modifier_multiplier_price TO floreant;
GRANT SELECT ON TABLE modifier_multiplier_price TO selemti_user;
--
-- TOC entry 4345 (class 0 OID 0)
-- Dependencies: 279
-- Name: multiplier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE multiplier FROM PUBLIC;
REVOKE ALL ON TABLE multiplier FROM floreant;
GRANT ALL ON TABLE multiplier TO floreant;
GRANT SELECT ON TABLE multiplier TO selemti_user;
--
-- TOC entry 4346 (class 0 OID 0)
-- Dependencies: 280
-- Name: order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE order_type FROM PUBLIC;
REVOKE ALL ON TABLE order_type FROM floreant;
GRANT ALL ON TABLE order_type TO floreant;
GRANT SELECT ON TABLE order_type TO selemti_user;
--
-- TOC entry 4348 (class 0 OID 0)
-- Dependencies: 282
-- Name: packaging_unit;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE packaging_unit FROM PUBLIC;
REVOKE ALL ON TABLE packaging_unit FROM floreant;
GRANT ALL ON TABLE packaging_unit TO floreant;
GRANT SELECT ON TABLE packaging_unit TO selemti_user;
--
-- TOC entry 4350 (class 0 OID 0)
-- Dependencies: 284
-- Name: payout_reasons;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE payout_reasons FROM PUBLIC;
REVOKE ALL ON TABLE payout_reasons FROM floreant;
GRANT ALL ON TABLE payout_reasons TO floreant;
GRANT SELECT ON TABLE payout_reasons TO selemti_user;
--
-- TOC entry 4352 (class 0 OID 0)
-- Dependencies: 286
-- Name: payout_recepients;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE payout_recepients FROM PUBLIC;
REVOKE ALL ON TABLE payout_recepients FROM floreant;
GRANT ALL ON TABLE payout_recepients TO floreant;
GRANT SELECT ON TABLE payout_recepients TO selemti_user;
--
-- TOC entry 4354 (class 0 OID 0)
-- Dependencies: 288
-- Name: pizza_crust;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_crust FROM PUBLIC;
REVOKE ALL ON TABLE pizza_crust FROM floreant;
GRANT ALL ON TABLE pizza_crust TO floreant;
GRANT SELECT ON TABLE pizza_crust TO selemti_user;
--
-- TOC entry 4356 (class 0 OID 0)
-- Dependencies: 290
-- Name: pizza_modifier_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_modifier_price FROM PUBLIC;
REVOKE ALL ON TABLE pizza_modifier_price FROM floreant;
GRANT ALL ON TABLE pizza_modifier_price TO floreant;
GRANT SELECT ON TABLE pizza_modifier_price TO selemti_user;
--
-- TOC entry 4358 (class 0 OID 0)
-- Dependencies: 292
-- Name: pizza_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_price FROM PUBLIC;
REVOKE ALL ON TABLE pizza_price FROM floreant;
GRANT ALL ON TABLE pizza_price TO floreant;
GRANT SELECT ON TABLE pizza_price TO selemti_user;
--
-- TOC entry 4360 (class 0 OID 0)
-- Dependencies: 294
-- Name: printer_configuration;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_configuration FROM PUBLIC;
REVOKE ALL ON TABLE printer_configuration FROM floreant;
GRANT ALL ON TABLE printer_configuration TO floreant;
GRANT SELECT ON TABLE printer_configuration TO selemti_user;
--
-- TOC entry 4361 (class 0 OID 0)
-- Dependencies: 295
-- Name: printer_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_group FROM PUBLIC;
REVOKE ALL ON TABLE printer_group FROM floreant;
GRANT ALL ON TABLE printer_group TO floreant;
GRANT SELECT ON TABLE printer_group TO selemti_user;
--
-- TOC entry 4363 (class 0 OID 0)
-- Dependencies: 297
-- Name: printer_group_printers;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_group_printers FROM PUBLIC;
REVOKE ALL ON TABLE printer_group_printers FROM floreant;
GRANT ALL ON TABLE printer_group_printers TO floreant;
GRANT SELECT ON TABLE printer_group_printers TO selemti_user;
--
-- TOC entry 4364 (class 0 OID 0)
-- Dependencies: 298
-- Name: purchase_order;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE purchase_order FROM PUBLIC;
REVOKE ALL ON TABLE purchase_order FROM floreant;
GRANT ALL ON TABLE purchase_order TO floreant;
GRANT SELECT ON TABLE purchase_order TO selemti_user;
--
-- TOC entry 4366 (class 0 OID 0)
-- Dependencies: 300
-- Name: recepie;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE recepie FROM PUBLIC;
REVOKE ALL ON TABLE recepie FROM floreant;
GRANT ALL ON TABLE recepie TO floreant;
GRANT SELECT ON TABLE recepie TO selemti_user;
--
-- TOC entry 4368 (class 0 OID 0)
-- Dependencies: 302
-- Name: recepie_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE recepie_item FROM PUBLIC;
REVOKE ALL ON TABLE recepie_item FROM floreant;
GRANT ALL ON TABLE recepie_item TO floreant;
GRANT SELECT ON TABLE recepie_item TO selemti_user;
--
-- TOC entry 4370 (class 0 OID 0)
-- Dependencies: 304
-- Name: restaurant;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE restaurant FROM PUBLIC;
REVOKE ALL ON TABLE restaurant FROM floreant;
GRANT ALL ON TABLE restaurant TO floreant;
GRANT SELECT ON TABLE restaurant TO selemti_user;
--
-- TOC entry 4371 (class 0 OID 0)
-- Dependencies: 305
-- Name: restaurant_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE restaurant_properties FROM PUBLIC;
REVOKE ALL ON TABLE restaurant_properties FROM floreant;
GRANT ALL ON TABLE restaurant_properties TO floreant;
GRANT SELECT ON TABLE restaurant_properties TO selemti_user;
--
-- TOC entry 4372 (class 0 OID 0)
-- Dependencies: 306
-- Name: shift;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shift FROM PUBLIC;
REVOKE ALL ON TABLE shift FROM floreant;
GRANT ALL ON TABLE shift TO floreant;
GRANT SELECT ON TABLE shift TO selemti_user;
--
-- TOC entry 4374 (class 0 OID 0)
-- Dependencies: 308
-- Name: shop_floor;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor FROM floreant;
GRANT ALL ON TABLE shop_floor TO floreant;
GRANT SELECT ON TABLE shop_floor TO selemti_user;
--
-- TOC entry 4376 (class 0 OID 0)
-- Dependencies: 310
-- Name: shop_floor_template;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor_template FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor_template FROM floreant;
GRANT ALL ON TABLE shop_floor_template TO floreant;
GRANT SELECT ON TABLE shop_floor_template TO selemti_user;
--
-- TOC entry 4378 (class 0 OID 0)
-- Dependencies: 312
-- Name: shop_floor_template_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor_template_properties FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor_template_properties FROM floreant;
GRANT ALL ON TABLE shop_floor_template_properties TO floreant;
GRANT SELECT ON TABLE shop_floor_template_properties TO selemti_user;
--
-- TOC entry 4379 (class 0 OID 0)
-- Dependencies: 313
-- Name: shop_table;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table FROM PUBLIC;
REVOKE ALL ON TABLE shop_table FROM floreant;
GRANT ALL ON TABLE shop_table TO floreant;
GRANT SELECT ON TABLE shop_table TO selemti_user;
--
-- TOC entry 4380 (class 0 OID 0)
-- Dependencies: 314
-- Name: shop_table_status;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table_status FROM PUBLIC;
REVOKE ALL ON TABLE shop_table_status FROM floreant;
GRANT ALL ON TABLE shop_table_status TO floreant;
GRANT SELECT ON TABLE shop_table_status TO selemti_user;
--
-- TOC entry 4381 (class 0 OID 0)
-- Dependencies: 315
-- Name: shop_table_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table_type FROM PUBLIC;
REVOKE ALL ON TABLE shop_table_type FROM floreant;
GRANT ALL ON TABLE shop_table_type TO floreant;
GRANT SELECT ON TABLE shop_table_type TO selemti_user;
--
-- TOC entry 4383 (class 0 OID 0)
-- Dependencies: 317
-- Name: table_booking_info;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_booking_info FROM PUBLIC;
REVOKE ALL ON TABLE table_booking_info FROM floreant;
GRANT ALL ON TABLE table_booking_info TO floreant;
GRANT SELECT ON TABLE table_booking_info TO selemti_user;
--
-- TOC entry 4385 (class 0 OID 0)
-- Dependencies: 319
-- Name: table_booking_mapping;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_booking_mapping FROM PUBLIC;
REVOKE ALL ON TABLE table_booking_mapping FROM floreant;
GRANT ALL ON TABLE table_booking_mapping TO floreant;
GRANT SELECT ON TABLE table_booking_mapping TO selemti_user;
--
-- TOC entry 4386 (class 0 OID 0)
-- Dependencies: 320
-- Name: table_ticket_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_ticket_num FROM PUBLIC;
REVOKE ALL ON TABLE table_ticket_num FROM floreant;
GRANT ALL ON TABLE table_ticket_num TO floreant;
GRANT SELECT ON TABLE table_ticket_num TO selemti_user;
--
-- TOC entry 4387 (class 0 OID 0)
-- Dependencies: 321
-- Name: table_type_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_type_relation FROM PUBLIC;
REVOKE ALL ON TABLE table_type_relation FROM floreant;
GRANT ALL ON TABLE table_type_relation TO floreant;
GRANT SELECT ON TABLE table_type_relation TO selemti_user;
--
-- TOC entry 4388 (class 0 OID 0)
-- Dependencies: 322
-- Name: tax;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE tax FROM PUBLIC;
REVOKE ALL ON TABLE tax FROM floreant;
GRANT ALL ON TABLE tax TO floreant;
GRANT SELECT ON TABLE tax TO selemti_user;
--
-- TOC entry 4389 (class 0 OID 0)
-- Dependencies: 323
-- Name: tax_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE tax_group FROM PUBLIC;
REVOKE ALL ON TABLE tax_group FROM floreant;
GRANT ALL ON TABLE tax_group TO floreant;
GRANT SELECT ON TABLE tax_group TO selemti_user;
--
-- TOC entry 4391 (class 0 OID 0)
-- Dependencies: 325
-- Name: terminal_printers;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal_printers FROM PUBLIC;
REVOKE ALL ON TABLE terminal_printers FROM floreant;
GRANT ALL ON TABLE terminal_printers TO floreant;
GRANT SELECT ON TABLE terminal_printers TO selemti_user;
--
-- TOC entry 4393 (class 0 OID 0)
-- Dependencies: 327
-- Name: terminal_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal_properties FROM PUBLIC;
REVOKE ALL ON TABLE terminal_properties FROM floreant;
GRANT ALL ON TABLE terminal_properties TO floreant;
GRANT SELECT ON TABLE terminal_properties TO selemti_user;
--
-- TOC entry 4394 (class 0 OID 0)
-- Dependencies: 328
-- Name: ticket_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_discount FROM PUBLIC;
REVOKE ALL ON TABLE ticket_discount FROM floreant;
GRANT ALL ON TABLE ticket_discount TO floreant;
GRANT SELECT ON TABLE ticket_discount TO selemti_user;
--
-- TOC entry 4396 (class 0 OID 0)
-- Dependencies: 330
-- Name: ticket_folio_complete;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_folio_complete FROM PUBLIC;
REVOKE ALL ON TABLE ticket_folio_complete FROM floreant;
GRANT ALL ON TABLE ticket_folio_complete TO floreant;
GRANT SELECT ON TABLE ticket_folio_complete TO selemti_user;
--
-- TOC entry 4398 (class 0 OID 0)
-- Dependencies: 332
-- Name: ticket_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item FROM floreant;
GRANT ALL ON TABLE ticket_item TO floreant;
GRANT SELECT ON TABLE ticket_item TO selemti_user;
--
-- TOC entry 4399 (class 0 OID 0)
-- Dependencies: 333
-- Name: ticket_item_addon_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_addon_relation FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_addon_relation FROM floreant;
GRANT ALL ON TABLE ticket_item_addon_relation TO floreant;
GRANT SELECT ON TABLE ticket_item_addon_relation TO selemti_user;
--
-- TOC entry 4400 (class 0 OID 0)
-- Dependencies: 334
-- Name: ticket_item_cooking_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_cooking_instruction FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_cooking_instruction FROM floreant;
GRANT ALL ON TABLE ticket_item_cooking_instruction TO floreant;
GRANT SELECT ON TABLE ticket_item_cooking_instruction TO selemti_user;
--
-- TOC entry 4401 (class 0 OID 0)
-- Dependencies: 335
-- Name: ticket_item_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_discount FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_discount FROM floreant;
GRANT ALL ON TABLE ticket_item_discount TO floreant;
GRANT SELECT ON TABLE ticket_item_discount TO selemti_user;
--
-- TOC entry 4404 (class 0 OID 0)
-- Dependencies: 338
-- Name: ticket_item_modifier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_modifier FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_modifier FROM floreant;
GRANT ALL ON TABLE ticket_item_modifier TO floreant;
GRANT SELECT ON TABLE ticket_item_modifier TO selemti_user;
--
-- TOC entry 4406 (class 0 OID 0)
-- Dependencies: 340
-- Name: ticket_item_modifier_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_modifier_relation FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_modifier_relation FROM floreant;
GRANT ALL ON TABLE ticket_item_modifier_relation TO floreant;
GRANT SELECT ON TABLE ticket_item_modifier_relation TO selemti_user;
--
-- TOC entry 4407 (class 0 OID 0)
-- Dependencies: 341
-- Name: ticket_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_properties FROM PUBLIC;
REVOKE ALL ON TABLE ticket_properties FROM floreant;
GRANT ALL ON TABLE ticket_properties TO floreant;
GRANT SELECT ON TABLE ticket_properties TO selemti_user;
--
-- TOC entry 4408 (class 0 OID 0)
-- Dependencies: 342
-- Name: ticket_table_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_table_num FROM PUBLIC;
REVOKE ALL ON TABLE ticket_table_num FROM floreant;
GRANT ALL ON TABLE ticket_table_num TO floreant;
GRANT SELECT ON TABLE ticket_table_num TO selemti_user;
--
-- TOC entry 4409 (class 0 OID 0)
-- Dependencies: 343
-- Name: transaction_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE transaction_properties FROM PUBLIC;
REVOKE ALL ON TABLE transaction_properties FROM floreant;
GRANT ALL ON TABLE transaction_properties TO floreant;
GRANT SELECT ON TABLE transaction_properties TO selemti_user;
--
-- TOC entry 4410 (class 0 OID 0)
-- Dependencies: 344
-- Name: transactions;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE transactions FROM PUBLIC;
REVOKE ALL ON TABLE transactions FROM floreant;
GRANT ALL ON TABLE transactions TO floreant;
GRANT SELECT ON TABLE transactions TO selemti_user;
--
-- TOC entry 4412 (class 0 OID 0)
-- Dependencies: 346
-- Name: user_permission;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_permission FROM PUBLIC;
REVOKE ALL ON TABLE user_permission FROM floreant;
GRANT ALL ON TABLE user_permission TO floreant;
GRANT SELECT ON TABLE user_permission TO selemti_user;
--
-- TOC entry 4413 (class 0 OID 0)
-- Dependencies: 347
-- Name: user_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_type FROM PUBLIC;
REVOKE ALL ON TABLE user_type FROM floreant;
GRANT ALL ON TABLE user_type TO floreant;
GRANT SELECT ON TABLE user_type TO selemti_user;
--
-- TOC entry 4415 (class 0 OID 0)
-- Dependencies: 349
-- Name: user_user_permission;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_user_permission FROM PUBLIC;
REVOKE ALL ON TABLE user_user_permission FROM floreant;
GRANT ALL ON TABLE user_user_permission TO floreant;
GRANT SELECT ON TABLE user_user_permission TO selemti_user;
--
-- TOC entry 4416 (class 0 OID 0)
-- Dependencies: 350
-- Name: users;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE users FROM PUBLIC;
REVOKE ALL ON TABLE users FROM floreant;
GRANT ALL ON TABLE users TO floreant;
GRANT SELECT ON TABLE users TO selemti_user;
--
-- TOC entry 4418 (class 0 OID 0)
-- Dependencies: 352
-- Name: virtual_printer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE virtual_printer FROM PUBLIC;
REVOKE ALL ON TABLE virtual_printer FROM floreant;
GRANT ALL ON TABLE virtual_printer TO floreant;
GRANT SELECT ON TABLE virtual_printer TO selemti_user;
--
-- TOC entry 4420 (class 0 OID 0)
-- Dependencies: 354
-- Name: virtualprinter_order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE virtualprinter_order_type FROM PUBLIC;
REVOKE ALL ON TABLE virtualprinter_order_type FROM floreant;
GRANT ALL ON TABLE virtualprinter_order_type TO floreant;
GRANT SELECT ON TABLE virtualprinter_order_type TO selemti_user;
--
-- TOC entry 4421 (class 0 OID 0)
-- Dependencies: 355
-- Name: void_reasons;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE void_reasons FROM PUBLIC;
REVOKE ALL ON TABLE void_reasons FROM floreant;
GRANT ALL ON TABLE void_reasons TO floreant;
GRANT SELECT ON TABLE void_reasons TO selemti_user;
--
-- TOC entry 4423 (class 0 OID 0)
-- Dependencies: 381
-- Name: vw_reconciliation_status;
Type: ACL;
Schema: public;
Owner: postgres
--

REVOKE ALL ON TABLE vw_reconciliation_status FROM PUBLIC;
REVOKE ALL ON TABLE vw_reconciliation_status FROM postgres;
GRANT ALL ON TABLE vw_reconciliation_status TO postgres;
GRANT SELECT ON TABLE vw_reconciliation_status TO selemti_user;
--
-- TOC entry 4424 (class 0 OID 0)
-- Dependencies: 357
-- Name: zip_code_vs_delivery_charge;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE zip_code_vs_delivery_charge FROM PUBLIC;
REVOKE ALL ON TABLE zip_code_vs_delivery_charge FROM floreant;
GRANT ALL ON TABLE zip_code_vs_delivery_charge TO floreant;
GRANT SELECT ON TABLE zip_code_vs_delivery_charge TO selemti_user;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 4471 (class 0 OID 0)
-- Dependencies: 377
-- Name: vw_sesion_ventas;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_ventas FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_ventas FROM postgres;
GRANT ALL ON TABLE vw_sesion_ventas TO postgres;
GRANT SELECT ON TABLE vw_sesion_ventas TO floreant;
--
-- TOC entry 4472 (class 0 OID 0)
-- Dependencies: 374
-- Name: vw_sesion_dpr;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_dpr FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_dpr FROM postgres;
GRANT ALL ON TABLE vw_sesion_dpr TO postgres;
GRANT SELECT ON TABLE vw_sesion_dpr TO floreant;
\n-- END precorte.sql\n
\n-- BEGIN Productivo_24_09_2025.sql\n
--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.25
-- Dumped by pg_dump version 9.5.0

-- Started on 2025-09-25 19:30:19

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
DROP DATABASE pos;
--
-- TOC entry 3490 (class 1262 OID 35339)
-- Name: pos;
Type: DATABASE;
Schema: -;
Owner: floreant
--

CREATE DATABASE pos WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'es_ES.UTF-8' LC_CTYPE = 'es_ES.UTF-8';
ALTER DATABASE pos OWNER TO floreant;
\connect pos

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
--
-- TOC entry 6 (class 2615 OID 2200)
-- Name: public;
Type: SCHEMA;
Schema: -;
ALTER SCHEMA public OWNER TO postgres;
--
-- TOC entry 3491 (class 0 OID 0)
-- Dependencies: 6
-- Name: SCHEMA public;
Type: COMMENT;
Schema: -;
Owner: postgres
--

COMMENT ON SCHEMA public IS 'standard public schema';
--
-- TOC entry 7 (class 2615 OID 36810)
-- Name: selemti;
Type: SCHEMA;
Schema: -;
ALTER SCHEMA selemti OWNER TO floreant;
--
-- TOC entry 381 (class 3079 OID 12361)
-- Name: plpgsql;
Type: EXTENSION;
Schema: -;
Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;
--
-- TOC entry 3493 (class 0 OID 0)
-- Dependencies: 381
-- Name: EXTENSION plpgsql;
Type: COMMENT;
Schema: -;
Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';
SET search_path = public, pg_catalog;
--
-- TOC entry 405 (class 1255 OID 36993)
-- Name: _last_assign_window(integer, integer, timestamp with time zone);
Type: FUNCTION;
Schema: public;
$$;
ALTER FUNCTION public._last_assign_window(_terminal_id integer, _user_id integer, _ref_time timestamp with time zone) OWNER TO postgres;
--
-- TOC entry 398 (class 1255 OID 35340)
-- Name: assign_daily_folio();
Type: FUNCTION;
Schema: public;
v_date     DATE;
v_next     INTEGER;
BEGIN
    IF NEW.terminal_id IS NULL THEN
        RAISE EXCEPTION 'No se puede crear ticket sin terminal_id';
END IF;
IF NEW.create_date IS NULL THEN
        NEW.create_date := NOW();
END IF;
v_date := (NEW.create_date AT TIME ZONE 'America/Mexico_City')::DATE;
SELECT COALESCE(NULLIF(UPPER(BTRIM(t.location)), ''), '') INTO v_branch
    FROM public.terminal t
    WHERE t.id = NEW.terminal_id;
IF NOT FOUND THEN
        RAISE EXCEPTION 'Terminal % no existe en la base de datos', NEW.terminal_id;
END IF;
IF NEW.daily_folio IS NOT NULL AND NEW.folio_date IS NOT NULL AND NEW.branch_key IS NOT NULL THEN
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE folio_date = NEW.folio_date
            AND branch_key = NEW.branch_key
            AND daily_folio = NEW.daily_folio
            AND id != NEW.id
        ) THEN
            RAISE EXCEPTION 'Folio % ya existe para % en %', NEW.daily_folio, NEW.branch_key, NEW.folio_date;
END IF;
RETURN NEW;
END IF;
WITH up AS (
        INSERT INTO public.daily_folio_counter (folio_date, branch_key, last_value)
        VALUES (v_date, v_branch, 1)
        ON CONFLICT (folio_date, branch_key)
        DO UPDATE SET last_value = public.daily_folio_counter.last_value + 1
        RETURNING last_value
    )
    SELECT last_value INTO v_next FROM up;
NEW.folio_date := v_date;
NEW.branch_key := v_branch;
NEW.daily_folio := v_next;
RETURN NEW;
END
$$;
ALTER FUNCTION public.assign_daily_folio() OWNER TO floreant;
--
-- TOC entry 399 (class 1255 OID 35341)
-- Name: get_daily_stats(date);
Type: FUNCTION;
Schema: public;
$$;
ALTER FUNCTION public.get_daily_stats(p_date date) OWNER TO floreant;
--
-- TOC entry 400 (class 1255 OID 35342)
-- Name: get_ticket_folio_info(integer);
Type: FUNCTION;
Schema: public;
$$;
ALTER FUNCTION public.get_ticket_folio_info(p_ticket_id integer) OWNER TO floreant;
--
-- TOC entry 401 (class 1255 OID 35343)
-- Name: kds_notify();
Type: FUNCTION;
Schema: public;
v_pg_id       INT;
v_item_id     INT;
v_status      TEXT;
v_total       INT;
v_ready       INT;
v_done        INT;
v_type        TEXT;
v_daily_folio INT;
v_branch_key  TEXT;
v_folio_fmt   TEXT;
BEGIN
    IF TG_TABLE_NAME = 'kitchen_ticket_item' THEN
        IF NEW.ticket_item_id IS NULL THEN
            RAISE EXCEPTION 'ticket_item_id no puede ser NULL en kitchen_ticket_item';
END IF;
v_item_id := NEW.ticket_item_id;
SELECT ti.ticket_id, ti.pg_id INTO v_ticket_id, v_pg_id
        FROM ticket_item ti WHERE ti.id = v_item_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket_item % no existe', v_item_id;
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket % no existe', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, '0');
v_status := UPPER(COALESCE(NEW.status, ''));
v_type := CASE WHEN TG_OP = 'INSERT' THEN 'item_upsert' ELSE 'item_status' END;
PERFORM pg_notify(
            'kds_event',
            json_build_object(
                'type',        v_type,
                'ticket_id',   v_ticket_id,
                'pg',          v_pg_id,
                'item_id',     v_item_id,
                'status',      v_status,
                'daily_folio', v_daily_folio,
                'branch_key',  v_branch_key,
                'folio_fmt',   v_folio_fmt,
                'ts',          NOW()
            )::TEXT
        );
ELSIF TG_TABLE_NAME = 'ticket_item' THEN
        v_item_id := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id := NEW.pg_id;
IF v_ticket_id IS NULL THEN
            RAISE EXCEPTION 'ticket_id no puede ser NULL en ticket_item';
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket % no existe', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, '0');
v_status := UPPER(COALESCE(NEW.status, ''));
v_type := CASE WHEN TG_OP = 'INSERT' THEN 'item_insert' ELSE 'item_status' END;
PERFORM pg_notify(
            'kds_event',
            json_build_object(
                'type',        v_type,
                'ticket_id',   v_ticket_id,
                'pg',          v_pg_id,
                'item_id',     v_item_id,
                'status',      v_status,
                'daily_folio', v_daily_folio,
                'branch_key',  v_branch_key,
                'folio_fmt',   v_folio_fmt,
                'ts',          NOW()
            )::TEXT
        );
END IF;
IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
        WITH s AS (
            SELECT
                ti.id AS item_id,
                UPPER(COALESCE(kti.status, ti.status, '')) AS st
            FROM ticket_item ti
            LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
            WHERE ti.ticket_id = v_ticket_id AND ti.pg_id = v_pg_id
            GROUP BY ti.id, st
        )
        SELECT
            COUNT(DISTINCT item_id) AS total,
            COUNT(DISTINCT item_id) FILTER (WHERE st IN ('READY', 'DONE')) AS ready,
            COUNT(DISTINCT item_id) FILTER (WHERE st = 'DONE') AS done
        INTO v_total, v_ready, v_done
        FROM s;
IF v_total > 0 AND v_total = v_ready THEN
            PERFORM pg_notify(
                'kds_event',
                json_build_object(
                    'type',        'ticket_all_ready',
                    'ticket_id',   v_ticket_id,
                    'pg',          v_pg_id,
                    'daily_folio', v_daily_folio,
                    'branch_key',  v_branch_key,
                    'folio_fmt',   v_folio_fmt,
                    'ts',          NOW()
                )::TEXT
            );
END IF;
IF v_total > 0 AND v_total = v_done THEN
            PERFORM pg_notify(
                'kds_event',
                json_build_object(
                    'type',        'ticket_all_done',
                    'ticket_id',   v_ticket_id,
                    'pg',          v_pg_id,
                    'daily_folio', v_daily_folio,
                    'branch_key',  v_branch_key,
                    'folio_fmt',   v_folio_fmt,
                    'ts',          NOW()
                )::TEXT
            );
END IF;
END IF;
RETURN NEW;
END;
$$;
ALTER FUNCTION public.kds_notify() OWNER TO floreant;
--
-- TOC entry 402 (class 1255 OID 35344)
-- Name: reset_daily_folio_smart(text);
Type: FUNCTION;
Schema: public;
v_branch TEXT;
v_has_rows BOOLEAN;
BEGIN
    SELECT EXISTS (
        SELECT 1 FROM public.daily_folio_counter
        WHERE folio_date = v_current_date
        AND (p_branch IS NULL OR branch_key = UPPER(BTRIM(p_branch)))
    ) INTO v_has_rows;
IF NOT v_has_rows THEN
        branch_reset := 'none';
tickets_affected := 0;
RETURN NEXT;
RETURN;
END IF;
FOR v_branch IN
        SELECT DISTINCT
            CASE
                WHEN p_branch IS NULL THEN dfc.branch_key
                ELSE UPPER(BTRIM(p_branch))
            END
        FROM public.daily_folio_counter dfc
        WHERE dfc.folio_date = v_current_date
        AND (p_branch IS NULL OR dfc.branch_key = UPPER(BTRIM(p_branch)))
    LOOP
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE branch_key = v_branch
            AND folio_date = v_current_date
        ) THEN
            RAISE NOTICE 'ADVERTENCIA: Sucursal % ya tiene % tickets hoy - NO reseteable',
                v_branch,
                (SELECT COUNT(*) FROM public.ticket WHERE branch_key = v_branch AND folio_date = v_current_date);
CONTINUE;
END IF;
DELETE FROM public.daily_folio_counter
        WHERE branch_key = v_branch AND folio_date = v_current_date;
branch_reset := v_branch;
tickets_affected := 0;
RETURN NEXT;
END LOOP;
RETURN;
END
$$;
ALTER FUNCTION public.reset_daily_folio_smart(p_branch text) OWNER TO floreant;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 403 (class 1255 OID 36947)
-- Name: fn_dah_after_insert();
Type: FUNCTION;
Schema: selemti;
BEGIN
  IF NEW.operation = 'ASIGNAR' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
IF v_term IS NULL THEN
      INSERT INTO selemti.auditoria(quien,que,payload)
      VALUES(NEW.a_user,'NO_SE_PUDO_RESOLVER_TERMINAL',
             jsonb_build_object('dah_id',NEW.id,'operation',NEW.operation,'time',NEW."time"));
RETURN NEW;
END IF;
INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id
    ) VALUES (
      v_term.id, COALESCE(v_term.name,'Terminal '||v_term.id), COALESCE(v_term.location,''),
      NEW.a_user, COALESCE(NEW."time", now()), 'ACTIVA', COALESCE(v_term.current_balance,0), NEW.id
    );
ELSIF NEW.operation = 'CERRAR' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
UPDATE selemti.sesion_cajon
       SET cierre_ts     = COALESCE(NEW."time", now()),
           estatus       = 'LISTO_PARA_CORTE',
           closing_float = COALESCE(v_term.current_balance,0),
           dah_evento_id = COALESCE(dah_evento_id, NEW.id)
     WHERE terminal_id = COALESCE(v_term.id, terminal_id)
       AND cajero_usuario_id = NEW.a_user
       AND cierre_ts IS NULL;
END IF;
RETURN NEW;
END $$;
ALTER FUNCTION selemti.fn_dah_after_insert() OWNER TO floreant;
--
-- TOC entry 384 (class 1255 OID 36941)
-- Name: fn_normalizar_forma_pago(text, text, text, text);
Type: FUNCTION;
Schema: selemti;
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN ('CASH','CREDIT','DEBIT','TRANSFER') THEN
    RETURN pt;
ELSIF pt = 'CUSTOM_PAYMENT' THEN
    IF cn IS NOT NULL THEN RETURN 'CUSTOM:'||cn;
ELSE RETURN 'CUSTOM';
END IF;
ELSIF pt IN ('REFUND','PAY_OUT','CASH_DROP') THEN
    RETURN pt;
-- egresos/ajustes estandarizados
  ELSE
    RETURN pt;
END IF;
END $$;
ALTER FUNCTION selemti.fn_normalizar_forma_pago(p_payment_type text, p_transaction_type text, p_payment_sub_type text, p_custom_name text) OWNER TO floreant;
--
-- TOC entry 382 (class 1255 OID 36877)
-- Name: fn_precorte_efectivo_bi();
Type: FUNCTION;
Schema: selemti;
RETURN NEW;
END $$;
ALTER FUNCTION selemti.fn_precorte_efectivo_bi() OWNER TO floreant;
--
-- TOC entry 404 (class 1255 OID 36949)
-- Name: fn_reparar_sesion_apertura(integer, integer);
Type: FUNCTION;
Schema: selemti;
BEGIN
  IF EXISTS (
    SELECT 1 FROM selemti.sesion_cajon
    WHERE terminal_id=p_terminal_id AND cajero_usuario_id=p_usuario AND cierre_ts IS NULL
  ) THEN
    RETURN 'YA_EXISTE_SESION_ABIERTA';
END IF;
SELECT * INTO v_term FROM public.terminal WHERE id=p_terminal_id;
IF v_term IS NULL THEN RETURN 'TERMINAL_NO_ENCONTRADA';
END IF;
INSERT INTO selemti.sesion_cajon(
    terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
    apertura_ts, estatus, opening_float
  ) VALUES (
    p_terminal_id, COALESCE(v_term.name,'Terminal '||p_terminal_id), COALESCE(v_term.location,''),
    p_usuario, now(), 'ACTIVA', COALESCE(v_term.current_balance,0)
  );
RETURN 'CREADA';
END $$;
ALTER FUNCTION selemti.fn_reparar_sesion_apertura(p_terminal_id integer, p_usuario integer) OWNER TO floreant;
--
-- TOC entry 383 (class 1255 OID 36940)
-- Name: fn_slug(text);
Type: FUNCTION;
Schema: selemti;
BEGIN
  s := translate(s, 'ÃÃ‰ÃÃ“ÃšÃœÃ‘Ã¡Ã©Ã­Ã³ÃºÃ¼Ã±', 'AEIOUUNaeiouun');
s := regexp_replace(s, '[^a-z0-9]+', '-', 'g');
s := regexp_replace(s, '(^-|-$)', '', 'g');
IF s = '' THEN RETURN NULL;
END IF;
RETURN s;
END $_$;
ALTER FUNCTION selemti.fn_slug(in_text text) OWNER TO floreant;
--
-- TOC entry 406 (class 1255 OID 36944)
-- Name: fn_terminal_bu_snapshot_cierre();
Type: FUNCTION;
Schema: selemti;
v_has_new boolean := (NEW.assigned_user IS NOT NULL);
BEGIN
  /* CIERRE: habÃ­a cajero y ahora ya no */
  IF (v_has_old AND NOT v_has_new) THEN
    UPDATE selemti.sesion_cajon AS sc
       SET cierre_ts      = now(),
           estatus        = 'LISTO_PARA_CORTE',
           closing_float  = COALESCE(OLD.current_balance, 0),
           -- bandera: true si NO hubo precorte para esta sesiÃ³n
           skipped_precorte = NOT EXISTS (
             SELECT 1
             FROM selemti.precorte p
             WHERE p.sesion_id = sc.id
           )
     WHERE sc.terminal_id       = OLD.id
       AND sc.cajero_usuario_id = OLD.assigned_user
       AND sc.cierre_ts         IS NULL;
END IF;
/* APERTURA: no habÃ­a cajero y ahora sÃ­ */
  IF (NOT v_has_old AND v_has_new) THEN
    INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id, skipped_precorte
    )
    VALUES(
      NEW.id,
      COALESCE(NEW.name, 'Terminal '||NEW.id),
      COALESCE(NEW.location, ''),
      NEW.assigned_user,
      now(),
      'ACTIVA',
      COALESCE(NEW.current_balance, 0),
      NULL,
      FALSE  -- por defecto, en apertura no estÃ¡ saltado
    );
END IF;
RETURN NEW;
END $$;
ALTER FUNCTION selemti.fn_terminal_bu_snapshot_cierre() OWNER TO floreant;
--
-- TOC entry 385 (class 1255 OID 36942)
-- Name: fn_tx_after_insert_forma_pago();
Type: FUNCTION;
Schema: selemti;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
    NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name
  );
INSERT INTO selemti.formas_pago(
    codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref
  )
  VALUES (
    v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref
  )
  ON CONFLICT DO NOTHING;
RETURN NEW;
END $$;
ALTER FUNCTION selemti.fn_tx_after_insert_forma_pago() OWNER TO floreant;
SET search_path = public, pg_catalog;
SET default_tablespace = '';
SET default_with_oids = false;
--
-- TOC entry 181 (class 1259 OID 35345)
-- Name: action_history;
Type: TABLE;
Schema: public;
ALTER TABLE action_history OWNER TO floreant;
--
-- TOC entry 182 (class 1259 OID 35351)
-- Name: action_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE action_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE action_history_id_seq OWNER TO floreant;
--
-- TOC entry 3494 (class 0 OID 0)
-- Dependencies: 182
-- Name: action_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE action_history_id_seq OWNED BY action_history.id;
--
-- TOC entry 183 (class 1259 OID 35353)
-- Name: attendence_history;
Type: TABLE;
Schema: public;
ALTER TABLE attendence_history OWNER TO floreant;
--
-- TOC entry 184 (class 1259 OID 35356)
-- Name: attendence_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE attendence_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE attendence_history_id_seq OWNER TO floreant;
--
-- TOC entry 3495 (class 0 OID 0)
-- Dependencies: 184
-- Name: attendence_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE attendence_history_id_seq OWNED BY attendence_history.id;
--
-- TOC entry 185 (class 1259 OID 35358)
-- Name: cash_drawer;
Type: TABLE;
Schema: public;
ALTER TABLE cash_drawer OWNER TO floreant;
--
-- TOC entry 186 (class 1259 OID 35361)
-- Name: cash_drawer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_id_seq OWNER TO floreant;
--
-- TOC entry 3496 (class 0 OID 0)
-- Dependencies: 186
-- Name: cash_drawer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_id_seq OWNED BY cash_drawer.id;
--
-- TOC entry 187 (class 1259 OID 35363)
-- Name: cash_drawer_reset_history;
Type: TABLE;
Schema: public;
ALTER TABLE cash_drawer_reset_history OWNER TO floreant;
--
-- TOC entry 188 (class 1259 OID 35366)
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_reset_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_reset_history_id_seq OWNER TO floreant;
--
-- TOC entry 3497 (class 0 OID 0)
-- Dependencies: 188
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_reset_history_id_seq OWNED BY cash_drawer_reset_history.id;
--
-- TOC entry 189 (class 1259 OID 35368)
-- Name: cooking_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE cooking_instruction OWNER TO floreant;
--
-- TOC entry 190 (class 1259 OID 35371)
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cooking_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cooking_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 3498 (class 0 OID 0)
-- Dependencies: 190
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cooking_instruction_id_seq OWNED BY cooking_instruction.id;
--
-- TOC entry 191 (class 1259 OID 35373)
-- Name: coupon_and_discount;
Type: TABLE;
Schema: public;
ALTER TABLE coupon_and_discount OWNER TO floreant;
--
-- TOC entry 192 (class 1259 OID 35376)
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE coupon_and_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE coupon_and_discount_id_seq OWNER TO floreant;
--
-- TOC entry 3499 (class 0 OID 0)
-- Dependencies: 192
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE coupon_and_discount_id_seq OWNED BY coupon_and_discount.id;
--
-- TOC entry 193 (class 1259 OID 35378)
-- Name: currency;
Type: TABLE;
Schema: public;
ALTER TABLE currency OWNER TO floreant;
--
-- TOC entry 194 (class 1259 OID 35381)
-- Name: currency_balance;
Type: TABLE;
Schema: public;
ALTER TABLE currency_balance OWNER TO floreant;
--
-- TOC entry 195 (class 1259 OID 35384)
-- Name: currency_balance_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_balance_id_seq OWNER TO floreant;
--
-- TOC entry 3500 (class 0 OID 0)
-- Dependencies: 195
-- Name: currency_balance_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_balance_id_seq OWNED BY currency_balance.id;
--
-- TOC entry 196 (class 1259 OID 35386)
-- Name: currency_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_id_seq OWNER TO floreant;
--
-- TOC entry 3501 (class 0 OID 0)
-- Dependencies: 196
-- Name: currency_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_id_seq OWNED BY currency.id;
--
-- TOC entry 197 (class 1259 OID 35388)
-- Name: custom_payment;
Type: TABLE;
Schema: public;
ALTER TABLE custom_payment OWNER TO floreant;
--
-- TOC entry 198 (class 1259 OID 35391)
-- Name: custom_payment_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE custom_payment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE custom_payment_id_seq OWNER TO floreant;
--
-- TOC entry 3502 (class 0 OID 0)
-- Dependencies: 198
-- Name: custom_payment_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE custom_payment_id_seq OWNED BY custom_payment.id;
--
-- TOC entry 199 (class 1259 OID 35393)
-- Name: customer;
Type: TABLE;
Schema: public;
ALTER TABLE customer OWNER TO floreant;
--
-- TOC entry 200 (class 1259 OID 35399)
-- Name: customer_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE customer_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE customer_auto_id_seq OWNER TO floreant;
--
-- TOC entry 3503 (class 0 OID 0)
-- Dependencies: 200
-- Name: customer_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE customer_auto_id_seq OWNED BY customer.auto_id;
--
-- TOC entry 201 (class 1259 OID 35401)
-- Name: customer_properties;
Type: TABLE;
Schema: public;
ALTER TABLE customer_properties OWNER TO floreant;
--
-- TOC entry 202 (class 1259 OID 35407)
-- Name: daily_folio_counter;
Type: TABLE;
Schema: public;
ALTER TABLE daily_folio_counter OWNER TO floreant;
--
-- TOC entry 203 (class 1259 OID 35414)
-- Name: data_update_info;
Type: TABLE;
Schema: public;
ALTER TABLE data_update_info OWNER TO floreant;
--
-- TOC entry 204 (class 1259 OID 35417)
-- Name: data_update_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE data_update_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE data_update_info_id_seq OWNER TO floreant;
--
-- TOC entry 3504 (class 0 OID 0)
-- Dependencies: 204
-- Name: data_update_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE data_update_info_id_seq OWNED BY data_update_info.id;
--
-- TOC entry 205 (class 1259 OID 35419)
-- Name: delivery_address;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_address OWNER TO floreant;
--
-- TOC entry 206 (class 1259 OID 35422)
-- Name: delivery_address_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_address_id_seq OWNER TO floreant;
--
-- TOC entry 3505 (class 0 OID 0)
-- Dependencies: 206
-- Name: delivery_address_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_address_id_seq OWNED BY delivery_address.id;
--
-- TOC entry 207 (class 1259 OID 35424)
-- Name: delivery_charge;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_charge OWNER TO floreant;
--
-- TOC entry 208 (class 1259 OID 35427)
-- Name: delivery_charge_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_charge_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_charge_id_seq OWNER TO floreant;
--
-- TOC entry 3506 (class 0 OID 0)
-- Dependencies: 208
-- Name: delivery_charge_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_charge_id_seq OWNED BY delivery_charge.id;
--
-- TOC entry 209 (class 1259 OID 35429)
-- Name: delivery_configuration;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_configuration OWNER TO floreant;
--
-- TOC entry 210 (class 1259 OID 35432)
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_configuration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_configuration_id_seq OWNER TO floreant;
--
-- TOC entry 3507 (class 0 OID 0)
-- Dependencies: 210
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_configuration_id_seq OWNED BY delivery_configuration.id;
--
-- TOC entry 211 (class 1259 OID 35434)
-- Name: delivery_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_instruction OWNER TO floreant;
--
-- TOC entry 212 (class 1259 OID 35437)
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 3508 (class 0 OID 0)
-- Dependencies: 212
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_instruction_id_seq OWNED BY delivery_instruction.id;
--
-- TOC entry 213 (class 1259 OID 35439)
-- Name: drawer_assigned_history;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_assigned_history OWNER TO floreant;
--
-- TOC entry 214 (class 1259 OID 35442)
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_assigned_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_assigned_history_id_seq OWNER TO floreant;
--
-- TOC entry 3509 (class 0 OID 0)
-- Dependencies: 214
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_assigned_history_id_seq OWNED BY drawer_assigned_history.id;
--
-- TOC entry 215 (class 1259 OID 35444)
-- Name: drawer_pull_report;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_pull_report OWNER TO floreant;
--
-- TOC entry 216 (class 1259 OID 35447)
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_pull_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_pull_report_id_seq OWNER TO floreant;
--
-- TOC entry 3510 (class 0 OID 0)
-- Dependencies: 216
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_pull_report_id_seq OWNED BY drawer_pull_report.id;
--
-- TOC entry 217 (class 1259 OID 35449)
-- Name: drawer_pull_report_voidtickets;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_pull_report_voidtickets OWNER TO floreant;
--
-- TOC entry 218 (class 1259 OID 35455)
-- Name: employee_in_out_history;
Type: TABLE;
Schema: public;
ALTER TABLE employee_in_out_history OWNER TO floreant;
--
-- TOC entry 219 (class 1259 OID 35458)
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE employee_in_out_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE employee_in_out_history_id_seq OWNER TO floreant;
--
-- TOC entry 3511 (class 0 OID 0)
-- Dependencies: 219
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE employee_in_out_history_id_seq OWNED BY employee_in_out_history.id;
--
-- TOC entry 220 (class 1259 OID 35460)
-- Name: global_config;
Type: TABLE;
Schema: public;
ALTER TABLE global_config OWNER TO floreant;
--
-- TOC entry 221 (class 1259 OID 35463)
-- Name: global_config_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE global_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE global_config_id_seq OWNER TO floreant;
--
-- TOC entry 3512 (class 0 OID 0)
-- Dependencies: 221
-- Name: global_config_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE global_config_id_seq OWNED BY global_config.id;
--
-- TOC entry 222 (class 1259 OID 35465)
-- Name: gratuity;
Type: TABLE;
Schema: public;
ALTER TABLE gratuity OWNER TO floreant;
--
-- TOC entry 223 (class 1259 OID 35468)
-- Name: gratuity_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE gratuity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE gratuity_id_seq OWNER TO floreant;
--
-- TOC entry 3513 (class 0 OID 0)
-- Dependencies: 223
-- Name: gratuity_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE gratuity_id_seq OWNED BY gratuity.id;
--
-- TOC entry 224 (class 1259 OID 35470)
-- Name: group_taxes;
Type: TABLE;
Schema: public;
ALTER TABLE group_taxes OWNER TO floreant;
--
-- TOC entry 225 (class 1259 OID 35473)
-- Name: guest_check_print;
Type: TABLE;
Schema: public;
ALTER TABLE guest_check_print OWNER TO floreant;
--
-- TOC entry 226 (class 1259 OID 35476)
-- Name: guest_check_print_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE guest_check_print_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE guest_check_print_id_seq OWNER TO floreant;
--
-- TOC entry 3514 (class 0 OID 0)
-- Dependencies: 226
-- Name: guest_check_print_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE guest_check_print_id_seq OWNED BY guest_check_print.id;
--
-- TOC entry 227 (class 1259 OID 35478)
-- Name: inventory_group;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_group OWNER TO floreant;
--
-- TOC entry 228 (class 1259 OID 35481)
-- Name: inventory_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_group_id_seq OWNER TO floreant;
--
-- TOC entry 3515 (class 0 OID 0)
-- Dependencies: 228
-- Name: inventory_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_group_id_seq OWNED BY inventory_group.id;
--
-- TOC entry 229 (class 1259 OID 35483)
-- Name: inventory_item;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_item OWNER TO floreant;
--
-- TOC entry 230 (class 1259 OID 35486)
-- Name: inventory_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_item_id_seq OWNER TO floreant;
--
-- TOC entry 3516 (class 0 OID 0)
-- Dependencies: 230
-- Name: inventory_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_item_id_seq OWNED BY inventory_item.id;
--
-- TOC entry 231 (class 1259 OID 35488)
-- Name: inventory_location;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_location OWNER TO floreant;
--
-- TOC entry 232 (class 1259 OID 35491)
-- Name: inventory_location_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_location_id_seq OWNER TO floreant;
--
-- TOC entry 3517 (class 0 OID 0)
-- Dependencies: 232
-- Name: inventory_location_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_location_id_seq OWNED BY inventory_location.id;
--
-- TOC entry 233 (class 1259 OID 35493)
-- Name: inventory_meta_code;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_meta_code OWNER TO floreant;
--
-- TOC entry 234 (class 1259 OID 35499)
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_meta_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_meta_code_id_seq OWNER TO floreant;
--
-- TOC entry 3518 (class 0 OID 0)
-- Dependencies: 234
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_meta_code_id_seq OWNED BY inventory_meta_code.id;
--
-- TOC entry 235 (class 1259 OID 35501)
-- Name: inventory_transaction;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_transaction OWNER TO floreant;
--
-- TOC entry 236 (class 1259 OID 35504)
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_transaction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_transaction_id_seq OWNER TO floreant;
--
-- TOC entry 3519 (class 0 OID 0)
-- Dependencies: 236
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_transaction_id_seq OWNED BY inventory_transaction.id;
--
-- TOC entry 237 (class 1259 OID 35506)
-- Name: inventory_unit;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_unit OWNER TO floreant;
--
-- TOC entry 238 (class 1259 OID 35512)
-- Name: inventory_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_unit_id_seq OWNER TO floreant;
--
-- TOC entry 3520 (class 0 OID 0)
-- Dependencies: 238
-- Name: inventory_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_unit_id_seq OWNED BY inventory_unit.id;
--
-- TOC entry 239 (class 1259 OID 35514)
-- Name: inventory_vendor;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_vendor OWNER TO floreant;
--
-- TOC entry 240 (class 1259 OID 35520)
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_vendor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_vendor_id_seq OWNER TO floreant;
--
-- TOC entry 3521 (class 0 OID 0)
-- Dependencies: 240
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_vendor_id_seq OWNED BY inventory_vendor.id;
--
-- TOC entry 241 (class 1259 OID 35522)
-- Name: inventory_warehouse;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_warehouse OWNER TO floreant;
--
-- TOC entry 242 (class 1259 OID 35525)
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_warehouse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_warehouse_id_seq OWNER TO floreant;
--
-- TOC entry 3522 (class 0 OID 0)
-- Dependencies: 242
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_warehouse_id_seq OWNED BY inventory_warehouse.id;
--
-- TOC entry 243 (class 1259 OID 35527)
-- Name: item_order_type;
Type: TABLE;
Schema: public;
ALTER TABLE item_order_type OWNER TO floreant;
--
-- TOC entry 244 (class 1259 OID 35530)
-- Name: kitchen_ticket;
Type: TABLE;
Schema: public;
ALTER TABLE kitchen_ticket OWNER TO floreant;
--
-- TOC entry 245 (class 1259 OID 35533)
-- Name: terminal;
Type: TABLE;
Schema: public;
ALTER TABLE terminal OWNER TO floreant;
--
-- TOC entry 246 (class 1259 OID 35539)
-- Name: ticket;
Type: TABLE;
Schema: public;
ALTER TABLE ticket OWNER TO floreant;
--
-- TOC entry 247 (class 1259 OID 35546)
-- Name: kds_orders_enhanced;
Type: VIEW;
Schema: public;
ALTER TABLE kds_orders_enhanced OWNER TO floreant;
--
-- TOC entry 248 (class 1259 OID 35551)
-- Name: kds_ready_log;
Type: TABLE;
Schema: public;
ALTER TABLE kds_ready_log OWNER TO floreant;
--
-- TOC entry 249 (class 1259 OID 35555)
-- Name: kit_ticket_table_num;
Type: TABLE;
Schema: public;
ALTER TABLE kit_ticket_table_num OWNER TO floreant;
--
-- TOC entry 250 (class 1259 OID 35558)
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_id_seq OWNER TO floreant;
--
-- TOC entry 3523 (class 0 OID 0)
-- Dependencies: 250
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_id_seq OWNED BY kitchen_ticket.id;
--
-- TOC entry 251 (class 1259 OID 35560)
-- Name: kitchen_ticket_item;
Type: TABLE;
Schema: public;
ALTER TABLE kitchen_ticket_item OWNER TO floreant;
--
-- TOC entry 252 (class 1259 OID 35566)
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 3524 (class 0 OID 0)
-- Dependencies: 252
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_item_id_seq OWNED BY kitchen_ticket_item.id;
--
-- TOC entry 253 (class 1259 OID 35568)
-- Name: menu_category;
Type: TABLE;
Schema: public;
ALTER TABLE menu_category OWNER TO floreant;
--
-- TOC entry 254 (class 1259 OID 35571)
-- Name: menu_category_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_category_id_seq OWNER TO floreant;
--
-- TOC entry 3525 (class 0 OID 0)
-- Dependencies: 254
-- Name: menu_category_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_category_id_seq OWNED BY menu_category.id;
--
-- TOC entry 255 (class 1259 OID 35573)
-- Name: menu_group;
Type: TABLE;
Schema: public;
ALTER TABLE menu_group OWNER TO floreant;
--
-- TOC entry 256 (class 1259 OID 35576)
-- Name: menu_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_group_id_seq OWNER TO floreant;
--
-- TOC entry 3526 (class 0 OID 0)
-- Dependencies: 256
-- Name: menu_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_group_id_seq OWNED BY menu_group.id;
--
-- TOC entry 257 (class 1259 OID 35578)
-- Name: menu_item;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item OWNER TO floreant;
--
-- TOC entry 258 (class 1259 OID 35584)
-- Name: menu_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_id_seq OWNER TO floreant;
--
-- TOC entry 3527 (class 0 OID 0)
-- Dependencies: 258
-- Name: menu_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_id_seq OWNED BY menu_item.id;
--
-- TOC entry 259 (class 1259 OID 35586)
-- Name: menu_item_properties;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_properties OWNER TO floreant;
--
-- TOC entry 260 (class 1259 OID 35589)
-- Name: menu_item_size;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_size OWNER TO floreant;
--
-- TOC entry 261 (class 1259 OID 35592)
-- Name: menu_item_size_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_size_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_size_id_seq OWNER TO floreant;
--
-- TOC entry 3528 (class 0 OID 0)
-- Dependencies: 261
-- Name: menu_item_size_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_size_id_seq OWNED BY menu_item_size.id;
--
-- TOC entry 262 (class 1259 OID 35594)
-- Name: menu_item_terminal_ref;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_terminal_ref OWNER TO floreant;
--
-- TOC entry 263 (class 1259 OID 35597)
-- Name: menu_modifier;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier OWNER TO floreant;
--
-- TOC entry 264 (class 1259 OID 35600)
-- Name: menu_modifier_group;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier_group OWNER TO floreant;
--
-- TOC entry 265 (class 1259 OID 35603)
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_group_id_seq OWNER TO floreant;
--
-- TOC entry 3529 (class 0 OID 0)
-- Dependencies: 265
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_group_id_seq OWNED BY menu_modifier_group.id;
--
-- TOC entry 266 (class 1259 OID 35605)
-- Name: menu_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 3530 (class 0 OID 0)
-- Dependencies: 266
-- Name: menu_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_id_seq OWNED BY menu_modifier.id;
--
-- TOC entry 267 (class 1259 OID 35607)
-- Name: menu_modifier_properties;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier_properties OWNER TO floreant;
--
-- TOC entry 268 (class 1259 OID 35610)
-- Name: menucategory_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menucategory_discount OWNER TO floreant;
--
-- TOC entry 269 (class 1259 OID 35613)
-- Name: menugroup_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menugroup_discount OWNER TO floreant;
--
-- TOC entry 270 (class 1259 OID 35616)
-- Name: menuitem_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_discount OWNER TO floreant;
--
-- TOC entry 271 (class 1259 OID 35619)
-- Name: menuitem_modifiergroup;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_modifiergroup OWNER TO floreant;
--
-- TOC entry 272 (class 1259 OID 35622)
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_modifiergroup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_modifiergroup_id_seq OWNER TO floreant;
--
-- TOC entry 3531 (class 0 OID 0)
-- Dependencies: 272
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_modifiergroup_id_seq OWNED BY menuitem_modifiergroup.id;
--
-- TOC entry 273 (class 1259 OID 35624)
-- Name: menuitem_pizzapirce;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_pizzapirce OWNER TO floreant;
--
-- TOC entry 274 (class 1259 OID 35627)
-- Name: menuitem_shift;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_shift OWNER TO floreant;
--
-- TOC entry 275 (class 1259 OID 35630)
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_shift_id_seq OWNER TO floreant;
--
-- TOC entry 3532 (class 0 OID 0)
-- Dependencies: 275
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_shift_id_seq OWNED BY menuitem_shift.id;
--
-- TOC entry 276 (class 1259 OID 35632)
-- Name: menumodifier_pizzamodifierprice;
Type: TABLE;
Schema: public;
ALTER TABLE menumodifier_pizzamodifierprice OWNER TO floreant;
--
-- TOC entry 277 (class 1259 OID 35635)
-- Name: modifier_multiplier_price;
Type: TABLE;
Schema: public;
ALTER TABLE modifier_multiplier_price OWNER TO floreant;
--
-- TOC entry 278 (class 1259 OID 35638)
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE modifier_multiplier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE modifier_multiplier_price_id_seq OWNER TO floreant;
--
-- TOC entry 3533 (class 0 OID 0)
-- Dependencies: 278
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE modifier_multiplier_price_id_seq OWNED BY modifier_multiplier_price.id;
--
-- TOC entry 279 (class 1259 OID 35640)
-- Name: multiplier;
Type: TABLE;
Schema: public;
ALTER TABLE multiplier OWNER TO floreant;
--
-- TOC entry 280 (class 1259 OID 35643)
-- Name: order_type;
Type: TABLE;
Schema: public;
ALTER TABLE order_type OWNER TO floreant;
--
-- TOC entry 281 (class 1259 OID 35649)
-- Name: order_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE order_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE order_type_id_seq OWNER TO floreant;
--
-- TOC entry 3534 (class 0 OID 0)
-- Dependencies: 281
-- Name: order_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE order_type_id_seq OWNED BY order_type.id;
--
-- TOC entry 282 (class 1259 OID 35651)
-- Name: packaging_unit;
Type: TABLE;
Schema: public;
ALTER TABLE packaging_unit OWNER TO floreant;
--
-- TOC entry 283 (class 1259 OID 35654)
-- Name: packaging_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE packaging_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE packaging_unit_id_seq OWNER TO floreant;
--
-- TOC entry 3535 (class 0 OID 0)
-- Dependencies: 283
-- Name: packaging_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE packaging_unit_id_seq OWNED BY packaging_unit.id;
--
-- TOC entry 284 (class 1259 OID 35656)
-- Name: payout_reasons;
Type: TABLE;
Schema: public;
ALTER TABLE payout_reasons OWNER TO floreant;
--
-- TOC entry 285 (class 1259 OID 35659)
-- Name: payout_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 3536 (class 0 OID 0)
-- Dependencies: 285
-- Name: payout_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_reasons_id_seq OWNED BY payout_reasons.id;
--
-- TOC entry 286 (class 1259 OID 35661)
-- Name: payout_recepients;
Type: TABLE;
Schema: public;
ALTER TABLE payout_recepients OWNER TO floreant;
--
-- TOC entry 287 (class 1259 OID 35664)
-- Name: payout_recepients_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_recepients_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_recepients_id_seq OWNER TO floreant;
--
-- TOC entry 3537 (class 0 OID 0)
-- Dependencies: 287
-- Name: payout_recepients_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_recepients_id_seq OWNED BY payout_recepients.id;
--
-- TOC entry 288 (class 1259 OID 35666)
-- Name: pizza_crust;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_crust OWNER TO floreant;
--
-- TOC entry 289 (class 1259 OID 35669)
-- Name: pizza_crust_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_crust_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_crust_id_seq OWNER TO floreant;
--
-- TOC entry 3538 (class 0 OID 0)
-- Dependencies: 289
-- Name: pizza_crust_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_crust_id_seq OWNED BY pizza_crust.id;
--
-- TOC entry 290 (class 1259 OID 35671)
-- Name: pizza_modifier_price;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_modifier_price OWNER TO floreant;
--
-- TOC entry 291 (class 1259 OID 35674)
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_modifier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_modifier_price_id_seq OWNER TO floreant;
--
-- TOC entry 3539 (class 0 OID 0)
-- Dependencies: 291
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_modifier_price_id_seq OWNED BY pizza_modifier_price.id;
--
-- TOC entry 292 (class 1259 OID 35676)
-- Name: pizza_price;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_price OWNER TO floreant;
--
-- TOC entry 293 (class 1259 OID 35679)
-- Name: pizza_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_price_id_seq OWNER TO floreant;
--
-- TOC entry 3540 (class 0 OID 0)
-- Dependencies: 293
-- Name: pizza_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_price_id_seq OWNED BY pizza_price.id;
--
-- TOC entry 294 (class 1259 OID 35681)
-- Name: printer_configuration;
Type: TABLE;
Schema: public;
ALTER TABLE printer_configuration OWNER TO floreant;
--
-- TOC entry 295 (class 1259 OID 35687)
-- Name: printer_group;
Type: TABLE;
Schema: public;
ALTER TABLE printer_group OWNER TO floreant;
--
-- TOC entry 296 (class 1259 OID 35690)
-- Name: printer_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE printer_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE printer_group_id_seq OWNER TO floreant;
--
-- TOC entry 3541 (class 0 OID 0)
-- Dependencies: 296
-- Name: printer_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE printer_group_id_seq OWNED BY printer_group.id;
--
-- TOC entry 297 (class 1259 OID 35692)
-- Name: printer_group_printers;
Type: TABLE;
Schema: public;
ALTER TABLE printer_group_printers OWNER TO floreant;
--
-- TOC entry 298 (class 1259 OID 35695)
-- Name: purchase_order;
Type: TABLE;
Schema: public;
ALTER TABLE purchase_order OWNER TO floreant;
--
-- TOC entry 299 (class 1259 OID 35698)
-- Name: purchase_order_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE purchase_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE purchase_order_id_seq OWNER TO floreant;
--
-- TOC entry 3542 (class 0 OID 0)
-- Dependencies: 299
-- Name: purchase_order_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE purchase_order_id_seq OWNED BY purchase_order.id;
--
-- TOC entry 300 (class 1259 OID 35700)
-- Name: recepie;
Type: TABLE;
Schema: public;
ALTER TABLE recepie OWNER TO floreant;
--
-- TOC entry 301 (class 1259 OID 35703)
-- Name: recepie_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_id_seq OWNER TO floreant;
--
-- TOC entry 3543 (class 0 OID 0)
-- Dependencies: 301
-- Name: recepie_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_id_seq OWNED BY recepie.id;
--
-- TOC entry 302 (class 1259 OID 35705)
-- Name: recepie_item;
Type: TABLE;
Schema: public;
ALTER TABLE recepie_item OWNER TO floreant;
--
-- TOC entry 303 (class 1259 OID 35708)
-- Name: recepie_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_item_id_seq OWNER TO floreant;
--
-- TOC entry 3544 (class 0 OID 0)
-- Dependencies: 303
-- Name: recepie_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_item_id_seq OWNED BY recepie_item.id;
--
-- TOC entry 304 (class 1259 OID 35710)
-- Name: restaurant;
Type: TABLE;
Schema: public;
ALTER TABLE restaurant OWNER TO floreant;
--
-- TOC entry 305 (class 1259 OID 35713)
-- Name: restaurant_properties;
Type: TABLE;
Schema: public;
ALTER TABLE restaurant_properties OWNER TO floreant;
--
-- TOC entry 306 (class 1259 OID 35719)
-- Name: shift;
Type: TABLE;
Schema: public;
ALTER TABLE shift OWNER TO floreant;
--
-- TOC entry 307 (class 1259 OID 35722)
-- Name: shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shift_id_seq OWNER TO floreant;
--
-- TOC entry 3545 (class 0 OID 0)
-- Dependencies: 307
-- Name: shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shift_id_seq OWNED BY shift.id;
--
-- TOC entry 308 (class 1259 OID 35724)
-- Name: shop_floor;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor OWNER TO floreant;
--
-- TOC entry 309 (class 1259 OID 35727)
-- Name: shop_floor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_id_seq OWNER TO floreant;
--
-- TOC entry 3546 (class 0 OID 0)
-- Dependencies: 309
-- Name: shop_floor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_id_seq OWNED BY shop_floor.id;
--
-- TOC entry 310 (class 1259 OID 35729)
-- Name: shop_floor_template;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor_template OWNER TO floreant;
--
-- TOC entry 311 (class 1259 OID 35732)
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_template_id_seq OWNER TO floreant;
--
-- TOC entry 3547 (class 0 OID 0)
-- Dependencies: 311
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_template_id_seq OWNED BY shop_floor_template.id;
--
-- TOC entry 312 (class 1259 OID 35734)
-- Name: shop_floor_template_properties;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor_template_properties OWNER TO floreant;
--
-- TOC entry 313 (class 1259 OID 35737)
-- Name: shop_table;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table OWNER TO floreant;
--
-- TOC entry 314 (class 1259 OID 35740)
-- Name: shop_table_status;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table_status OWNER TO floreant;
--
-- TOC entry 315 (class 1259 OID 35743)
-- Name: shop_table_type;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table_type OWNER TO floreant;
--
-- TOC entry 316 (class 1259 OID 35746)
-- Name: shop_table_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_table_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_table_type_id_seq OWNER TO floreant;
--
-- TOC entry 3548 (class 0 OID 0)
-- Dependencies: 316
-- Name: shop_table_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_table_type_id_seq OWNED BY shop_table_type.id;
--
-- TOC entry 317 (class 1259 OID 35748)
-- Name: table_booking_info;
Type: TABLE;
Schema: public;
ALTER TABLE table_booking_info OWNER TO floreant;
--
-- TOC entry 318 (class 1259 OID 35751)
-- Name: table_booking_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE table_booking_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE table_booking_info_id_seq OWNER TO floreant;
--
-- TOC entry 3549 (class 0 OID 0)
-- Dependencies: 318
-- Name: table_booking_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE table_booking_info_id_seq OWNED BY table_booking_info.id;
--
-- TOC entry 319 (class 1259 OID 35753)
-- Name: table_booking_mapping;
Type: TABLE;
Schema: public;
ALTER TABLE table_booking_mapping OWNER TO floreant;
--
-- TOC entry 320 (class 1259 OID 35756)
-- Name: table_ticket_num;
Type: TABLE;
Schema: public;
ALTER TABLE table_ticket_num OWNER TO floreant;
--
-- TOC entry 321 (class 1259 OID 35759)
-- Name: table_type_relation;
Type: TABLE;
Schema: public;
ALTER TABLE table_type_relation OWNER TO floreant;
--
-- TOC entry 322 (class 1259 OID 35762)
-- Name: tax;
Type: TABLE;
Schema: public;
ALTER TABLE tax OWNER TO floreant;
--
-- TOC entry 323 (class 1259 OID 35765)
-- Name: tax_group;
Type: TABLE;
Schema: public;
ALTER TABLE tax_group OWNER TO floreant;
--
-- TOC entry 324 (class 1259 OID 35768)
-- Name: tax_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE tax_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE tax_id_seq OWNER TO floreant;
--
-- TOC entry 3550 (class 0 OID 0)
-- Dependencies: 324
-- Name: tax_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE tax_id_seq OWNED BY tax.id;
--
-- TOC entry 325 (class 1259 OID 35770)
-- Name: terminal_printers;
Type: TABLE;
Schema: public;
ALTER TABLE terminal_printers OWNER TO floreant;
--
-- TOC entry 326 (class 1259 OID 35773)
-- Name: terminal_printers_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE terminal_printers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE terminal_printers_id_seq OWNER TO floreant;
--
-- TOC entry 3551 (class 0 OID 0)
-- Dependencies: 326
-- Name: terminal_printers_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE terminal_printers_id_seq OWNED BY terminal_printers.id;
--
-- TOC entry 327 (class 1259 OID 35775)
-- Name: terminal_properties;
Type: TABLE;
Schema: public;
ALTER TABLE terminal_properties OWNER TO floreant;
--
-- TOC entry 328 (class 1259 OID 35781)
-- Name: ticket_discount;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_discount OWNER TO floreant;
--
-- TOC entry 329 (class 1259 OID 35784)
-- Name: ticket_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_discount_id_seq OWNER TO floreant;
--
-- TOC entry 3552 (class 0 OID 0)
-- Dependencies: 329
-- Name: ticket_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_discount_id_seq OWNED BY ticket_discount.id;
--
-- TOC entry 330 (class 1259 OID 35786)
-- Name: ticket_folio_complete;
Type: VIEW;
Schema: public;
ALTER TABLE ticket_folio_complete OWNER TO floreant;
--
-- TOC entry 331 (class 1259 OID 35791)
-- Name: ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_id_seq OWNER TO floreant;
--
-- TOC entry 3553 (class 0 OID 0)
-- Dependencies: 331
-- Name: ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_id_seq OWNED BY ticket.id;
--
-- TOC entry 332 (class 1259 OID 35793)
-- Name: ticket_item;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item OWNER TO floreant;
--
-- TOC entry 333 (class 1259 OID 35799)
-- Name: ticket_item_addon_relation;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_addon_relation OWNER TO floreant;
--
-- TOC entry 334 (class 1259 OID 35802)
-- Name: ticket_item_cooking_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_cooking_instruction OWNER TO floreant;
--
-- TOC entry 335 (class 1259 OID 35805)
-- Name: ticket_item_discount;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_discount OWNER TO floreant;
--
-- TOC entry 336 (class 1259 OID 35808)
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_discount_id_seq OWNER TO floreant;
--
-- TOC entry 3554 (class 0 OID 0)
-- Dependencies: 336
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_discount_id_seq OWNED BY ticket_item_discount.id;
--
-- TOC entry 337 (class 1259 OID 35810)
-- Name: ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 3555 (class 0 OID 0)
-- Dependencies: 337
-- Name: ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_id_seq OWNED BY ticket_item.id;
--
-- TOC entry 338 (class 1259 OID 35812)
-- Name: ticket_item_modifier;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_modifier OWNER TO floreant;
--
-- TOC entry 339 (class 1259 OID 35815)
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 3556 (class 0 OID 0)
-- Dependencies: 339
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_modifier_id_seq OWNED BY ticket_item_modifier.id;
--
-- TOC entry 340 (class 1259 OID 35817)
-- Name: ticket_item_modifier_relation;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_modifier_relation OWNER TO floreant;
--
-- TOC entry 341 (class 1259 OID 35820)
-- Name: ticket_properties;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_properties OWNER TO floreant;
--
-- TOC entry 342 (class 1259 OID 35826)
-- Name: ticket_table_num;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_table_num OWNER TO floreant;
--
-- TOC entry 343 (class 1259 OID 35829)
-- Name: transaction_properties;
Type: TABLE;
Schema: public;
ALTER TABLE transaction_properties OWNER TO floreant;
--
-- TOC entry 344 (class 1259 OID 35835)
-- Name: transactions;
Type: TABLE;
Schema: public;
ALTER TABLE transactions OWNER TO floreant;
--
-- TOC entry 345 (class 1259 OID 35841)
-- Name: transactions_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE transactions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE transactions_id_seq OWNER TO floreant;
--
-- TOC entry 3557 (class 0 OID 0)
-- Dependencies: 345
-- Name: transactions_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE transactions_id_seq OWNED BY transactions.id;
--
-- TOC entry 346 (class 1259 OID 35843)
-- Name: user_permission;
Type: TABLE;
Schema: public;
ALTER TABLE user_permission OWNER TO floreant;
--
-- TOC entry 347 (class 1259 OID 35846)
-- Name: user_type;
Type: TABLE;
Schema: public;
ALTER TABLE user_type OWNER TO floreant;
--
-- TOC entry 348 (class 1259 OID 35849)
-- Name: user_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE user_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE user_type_id_seq OWNER TO floreant;
--
-- TOC entry 3558 (class 0 OID 0)
-- Dependencies: 348
-- Name: user_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE user_type_id_seq OWNED BY user_type.id;
--
-- TOC entry 349 (class 1259 OID 35851)
-- Name: user_user_permission;
Type: TABLE;
Schema: public;
ALTER TABLE user_user_permission OWNER TO floreant;
--
-- TOC entry 350 (class 1259 OID 35854)
-- Name: users;
Type: TABLE;
Schema: public;
ALTER TABLE users OWNER TO floreant;
--
-- TOC entry 351 (class 1259 OID 35857)
-- Name: users_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE users_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE users_auto_id_seq OWNER TO floreant;
--
-- TOC entry 3559 (class 0 OID 0)
-- Dependencies: 351
-- Name: users_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE users_auto_id_seq OWNED BY users.auto_id;
--
-- TOC entry 352 (class 1259 OID 35859)
-- Name: virtual_printer;
Type: TABLE;
Schema: public;
ALTER TABLE virtual_printer OWNER TO floreant;
--
-- TOC entry 353 (class 1259 OID 35862)
-- Name: virtual_printer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE virtual_printer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE virtual_printer_id_seq OWNER TO floreant;
--
-- TOC entry 3560 (class 0 OID 0)
-- Dependencies: 353
-- Name: virtual_printer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE virtual_printer_id_seq OWNED BY virtual_printer.id;
--
-- TOC entry 354 (class 1259 OID 35864)
-- Name: virtualprinter_order_type;
Type: TABLE;
Schema: public;
ALTER TABLE virtualprinter_order_type OWNER TO floreant;
--
-- TOC entry 355 (class 1259 OID 35867)
-- Name: void_reasons;
Type: TABLE;
Schema: public;
ALTER TABLE void_reasons OWNER TO floreant;
--
-- TOC entry 356 (class 1259 OID 35870)
-- Name: void_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE void_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE void_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 3561 (class 0 OID 0)
-- Dependencies: 356
-- Name: void_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE void_reasons_id_seq OWNED BY void_reasons.id;
--
-- TOC entry 357 (class 1259 OID 35872)
-- Name: zip_code_vs_delivery_charge;
Type: TABLE;
Schema: public;
ALTER TABLE zip_code_vs_delivery_charge OWNER TO floreant;
--
-- TOC entry 358 (class 1259 OID 35875)
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE zip_code_vs_delivery_charge_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE zip_code_vs_delivery_charge_auto_id_seq OWNER TO floreant;
--
-- TOC entry 3562 (class 0 OID 0)
-- Dependencies: 358
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE zip_code_vs_delivery_charge_auto_id_seq OWNED BY zip_code_vs_delivery_charge.auto_id;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 360 (class 1259 OID 36813)
-- Name: auditoria;
Type: TABLE;
Schema: selemti;
ALTER TABLE auditoria OWNER TO floreant;
--
-- TOC entry 359 (class 1259 OID 36811)
-- Name: auditoria_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE auditoria_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE auditoria_id_seq OWNER TO floreant;
--
-- TOC entry 3563 (class 0 OID 0)
-- Dependencies: 359
-- Name: auditoria_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE auditoria_id_seq OWNED BY auditoria.id;
--
-- TOC entry 372 (class 1259 OID 36927)
-- Name: formas_pago;
Type: TABLE;
Schema: selemti;
ALTER TABLE formas_pago OWNER TO floreant;
--
-- TOC entry 371 (class 1259 OID 36925)
-- Name: formas_pago_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE formas_pago_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE formas_pago_id_seq OWNER TO floreant;
--
-- TOC entry 3564 (class 0 OID 0)
-- Dependencies: 371
-- Name: formas_pago_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE formas_pago_id_seq OWNED BY formas_pago.id;
--
-- TOC entry 370 (class 1259 OID 36900)
-- Name: postcorte;
Type: TABLE;
Schema: selemti;
ALTER TABLE postcorte OWNER TO floreant;
--
-- TOC entry 3565 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN postcorte.validado;
Type: COMMENT;
Schema: selemti;
Owner: floreant
--

COMMENT ON COLUMN postcorte.validado IS 'TRUE cuando el supervisor valida/cierra el postcorte';
--
-- TOC entry 369 (class 1259 OID 36898)
-- Name: postcorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE postcorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE postcorte_id_seq OWNER TO floreant;
--
-- TOC entry 3566 (class 0 OID 0)
-- Dependencies: 369
-- Name: postcorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE postcorte_id_seq OWNED BY postcorte.id;
--
-- TOC entry 364 (class 1259 OID 36844)
-- Name: precorte;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte OWNER TO floreant;
--
-- TOC entry 366 (class 1259 OID 36865)
-- Name: precorte_efectivo;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte_efectivo OWNER TO floreant;
--
-- TOC entry 365 (class 1259 OID 36863)
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_efectivo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_efectivo_id_seq OWNER TO floreant;
--
-- TOC entry 3567 (class 0 OID 0)
-- Dependencies: 365
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_efectivo_id_seq OWNED BY precorte_efectivo.id;
--
-- TOC entry 363 (class 1259 OID 36842)
-- Name: precorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_id_seq OWNER TO floreant;
--
-- TOC entry 3568 (class 0 OID 0)
-- Dependencies: 363
-- Name: precorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_id_seq OWNED BY precorte.id;
--
-- TOC entry 368 (class 1259 OID 36881)
-- Name: precorte_otros;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte_otros OWNER TO floreant;
--
-- TOC entry 367 (class 1259 OID 36879)
-- Name: precorte_otros_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_otros_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_otros_id_seq OWNER TO floreant;
--
-- TOC entry 3569 (class 0 OID 0)
-- Dependencies: 367
-- Name: precorte_otros_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_otros_id_seq OWNED BY precorte_otros.id;
--
-- TOC entry 362 (class 1259 OID 36825)
-- Name: sesion_cajon;
Type: TABLE;
Schema: selemti;
ALTER TABLE sesion_cajon OWNER TO floreant;
--
-- TOC entry 361 (class 1259 OID 36823)
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE sesion_cajon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE sesion_cajon_id_seq OWNER TO floreant;
--
-- TOC entry 3570 (class 0 OID 0)
-- Dependencies: 361
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE sesion_cajon_id_seq OWNED BY sesion_cajon.id;
--
-- TOC entry 374 (class 1259 OID 36955)
-- Name: vw_sesion_descuentos;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_descuentos OWNER TO floreant;
--
-- TOC entry 377 (class 1259 OID 36970)
-- Name: vw_sesion_dpr;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_dpr OWNER TO postgres;
--
-- TOC entry 376 (class 1259 OID 36965)
-- Name: vw_sesion_reembolsos_efectivo;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_reembolsos_efectivo OWNER TO floreant;
--
-- TOC entry 375 (class 1259 OID 36960)
-- Name: vw_sesion_retiros;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_retiros OWNER TO floreant;
--
-- TOC entry 373 (class 1259 OID 36950)
-- Name: vw_sesion_ventas;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_ventas OWNER TO postgres;
--
-- TOC entry 378 (class 1259 OID 36975)
-- Name: vw_conciliacion_sesion;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_conciliacion_sesion OWNER TO floreant;
--
-- TOC entry 380 (class 1259 OID 36998)
-- Name: vw_fast_tickets;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_fast_tickets OWNER TO postgres;
--
-- TOC entry 379 (class 1259 OID 36994)
-- Name: vw_fast_tx;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_fast_tx OWNER TO postgres;
SET search_path = public, pg_catalog;
--
-- TOC entry 2667 (class 2604 OID 35877)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history ALTER COLUMN id SET DEFAULT nextval('action_history_id_seq'::regclass);
--
-- TOC entry 2668 (class 2604 OID 35878)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history ALTER COLUMN id SET DEFAULT nextval('attendence_history_id_seq'::regclass);
--
-- TOC entry 2669 (class 2604 OID 35879)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer ALTER COLUMN id SET DEFAULT nextval('cash_drawer_id_seq'::regclass);
--
-- TOC entry 2670 (class 2604 OID 35880)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history ALTER COLUMN id SET DEFAULT nextval('cash_drawer_reset_history_id_seq'::regclass);
--
-- TOC entry 2671 (class 2604 OID 35881)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction ALTER COLUMN id SET DEFAULT nextval('cooking_instruction_id_seq'::regclass);
--
-- TOC entry 2672 (class 2604 OID 35882)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount ALTER COLUMN id SET DEFAULT nextval('coupon_and_discount_id_seq'::regclass);
--
-- TOC entry 2673 (class 2604 OID 35883)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency ALTER COLUMN id SET DEFAULT nextval('currency_id_seq'::regclass);
--
-- TOC entry 2674 (class 2604 OID 35884)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance ALTER COLUMN id SET DEFAULT nextval('currency_balance_id_seq'::regclass);
--
-- TOC entry 2675 (class 2604 OID 35885)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment ALTER COLUMN id SET DEFAULT nextval('custom_payment_id_seq'::regclass);
--
-- TOC entry 2676 (class 2604 OID 35886)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer ALTER COLUMN auto_id SET DEFAULT nextval('customer_auto_id_seq'::regclass);
--
-- TOC entry 2678 (class 2604 OID 35887)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info ALTER COLUMN id SET DEFAULT nextval('data_update_info_id_seq'::regclass);
--
-- TOC entry 2679 (class 2604 OID 35888)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address ALTER COLUMN id SET DEFAULT nextval('delivery_address_id_seq'::regclass);
--
-- TOC entry 2680 (class 2604 OID 35889)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge ALTER COLUMN id SET DEFAULT nextval('delivery_charge_id_seq'::regclass);
--
-- TOC entry 2681 (class 2604 OID 35890)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration ALTER COLUMN id SET DEFAULT nextval('delivery_configuration_id_seq'::regclass);
--
-- TOC entry 2682 (class 2604 OID 35891)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction ALTER COLUMN id SET DEFAULT nextval('delivery_instruction_id_seq'::regclass);
--
-- TOC entry 2683 (class 2604 OID 35892)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history ALTER COLUMN id SET DEFAULT nextval('drawer_assigned_history_id_seq'::regclass);
--
-- TOC entry 2684 (class 2604 OID 35893)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report ALTER COLUMN id SET DEFAULT nextval('drawer_pull_report_id_seq'::regclass);
--
-- TOC entry 2685 (class 2604 OID 35894)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history ALTER COLUMN id SET DEFAULT nextval('employee_in_out_history_id_seq'::regclass);
--
-- TOC entry 2686 (class 2604 OID 35895)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config ALTER COLUMN id SET DEFAULT nextval('global_config_id_seq'::regclass);
--
-- TOC entry 2687 (class 2604 OID 35896)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity ALTER COLUMN id SET DEFAULT nextval('gratuity_id_seq'::regclass);
--
-- TOC entry 2688 (class 2604 OID 35897)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print ALTER COLUMN id SET DEFAULT nextval('guest_check_print_id_seq'::regclass);
--
-- TOC entry 2689 (class 2604 OID 35898)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group ALTER COLUMN id SET DEFAULT nextval('inventory_group_id_seq'::regclass);
--
-- TOC entry 2690 (class 2604 OID 35899)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item ALTER COLUMN id SET DEFAULT nextval('inventory_item_id_seq'::regclass);
--
-- TOC entry 2691 (class 2604 OID 35900)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location ALTER COLUMN id SET DEFAULT nextval('inventory_location_id_seq'::regclass);
--
-- TOC entry 2692 (class 2604 OID 35901)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code ALTER COLUMN id SET DEFAULT nextval('inventory_meta_code_id_seq'::regclass);
--
-- TOC entry 2693 (class 2604 OID 35902)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction ALTER COLUMN id SET DEFAULT nextval('inventory_transaction_id_seq'::regclass);
--
-- TOC entry 2694 (class 2604 OID 35903)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit ALTER COLUMN id SET DEFAULT nextval('inventory_unit_id_seq'::regclass);
--
-- TOC entry 2695 (class 2604 OID 35904)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor ALTER COLUMN id SET DEFAULT nextval('inventory_vendor_id_seq'::regclass);
--
-- TOC entry 2696 (class 2604 OID 35905)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse ALTER COLUMN id SET DEFAULT nextval('inventory_warehouse_id_seq'::regclass);
--
-- TOC entry 2697 (class 2604 OID 35906)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_id_seq'::regclass);
--
-- TOC entry 2701 (class 2604 OID 35907)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_item_id_seq'::regclass);
--
-- TOC entry 2702 (class 2604 OID 35908)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category ALTER COLUMN id SET DEFAULT nextval('menu_category_id_seq'::regclass);
--
-- TOC entry 2703 (class 2604 OID 35909)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group ALTER COLUMN id SET DEFAULT nextval('menu_group_id_seq'::regclass);
--
-- TOC entry 2704 (class 2604 OID 35910)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item ALTER COLUMN id SET DEFAULT nextval('menu_item_id_seq'::regclass);
--
-- TOC entry 2705 (class 2604 OID 35911)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size ALTER COLUMN id SET DEFAULT nextval('menu_item_size_id_seq'::regclass);
--
-- TOC entry 2706 (class 2604 OID 35912)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier ALTER COLUMN id SET DEFAULT nextval('menu_modifier_id_seq'::regclass);
--
-- TOC entry 2707 (class 2604 OID 35913)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group ALTER COLUMN id SET DEFAULT nextval('menu_modifier_group_id_seq'::regclass);
--
-- TOC entry 2708 (class 2604 OID 35914)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup ALTER COLUMN id SET DEFAULT nextval('menuitem_modifiergroup_id_seq'::regclass);
--
-- TOC entry 2709 (class 2604 OID 35915)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift ALTER COLUMN id SET DEFAULT nextval('menuitem_shift_id_seq'::regclass);
--
-- TOC entry 2710 (class 2604 OID 35916)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price ALTER COLUMN id SET DEFAULT nextval('modifier_multiplier_price_id_seq'::regclass);
--
-- TOC entry 2711 (class 2604 OID 35917)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type ALTER COLUMN id SET DEFAULT nextval('order_type_id_seq'::regclass);
--
-- TOC entry 2712 (class 2604 OID 35918)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit ALTER COLUMN id SET DEFAULT nextval('packaging_unit_id_seq'::regclass);
--
-- TOC entry 2713 (class 2604 OID 35919)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons ALTER COLUMN id SET DEFAULT nextval('payout_reasons_id_seq'::regclass);
--
-- TOC entry 2714 (class 2604 OID 35920)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients ALTER COLUMN id SET DEFAULT nextval('payout_recepients_id_seq'::regclass);
--
-- TOC entry 2715 (class 2604 OID 35921)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust ALTER COLUMN id SET DEFAULT nextval('pizza_crust_id_seq'::regclass);
--
-- TOC entry 2716 (class 2604 OID 35922)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price ALTER COLUMN id SET DEFAULT nextval('pizza_modifier_price_id_seq'::regclass);
--
-- TOC entry 2717 (class 2604 OID 35923)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price ALTER COLUMN id SET DEFAULT nextval('pizza_price_id_seq'::regclass);
--
-- TOC entry 2718 (class 2604 OID 35924)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group ALTER COLUMN id SET DEFAULT nextval('printer_group_id_seq'::regclass);
--
-- TOC entry 2719 (class 2604 OID 35925)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order ALTER COLUMN id SET DEFAULT nextval('purchase_order_id_seq'::regclass);
--
-- TOC entry 2720 (class 2604 OID 35926)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie ALTER COLUMN id SET DEFAULT nextval('recepie_id_seq'::regclass);
--
-- TOC entry 2721 (class 2604 OID 35927)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item ALTER COLUMN id SET DEFAULT nextval('recepie_item_id_seq'::regclass);
--
-- TOC entry 2722 (class 2604 OID 35928)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift ALTER COLUMN id SET DEFAULT nextval('shift_id_seq'::regclass);
--
-- TOC entry 2723 (class 2604 OID 35929)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor ALTER COLUMN id SET DEFAULT nextval('shop_floor_id_seq'::regclass);
--
-- TOC entry 2724 (class 2604 OID 35930)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template ALTER COLUMN id SET DEFAULT nextval('shop_floor_template_id_seq'::regclass);
--
-- TOC entry 2725 (class 2604 OID 35931)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type ALTER COLUMN id SET DEFAULT nextval('shop_table_type_id_seq'::regclass);
--
-- TOC entry 2726 (class 2604 OID 35932)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info ALTER COLUMN id SET DEFAULT nextval('table_booking_info_id_seq'::regclass);
--
-- TOC entry 2727 (class 2604 OID 35933)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax ALTER COLUMN id SET DEFAULT nextval('tax_id_seq'::regclass);
--
-- TOC entry 2728 (class 2604 OID 35934)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers ALTER COLUMN id SET DEFAULT nextval('terminal_printers_id_seq'::regclass);
--
-- TOC entry 2698 (class 2604 OID 35935)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket ALTER COLUMN id SET DEFAULT nextval('ticket_id_seq'::regclass);
--
-- TOC entry 2729 (class 2604 OID 35936)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount ALTER COLUMN id SET DEFAULT nextval('ticket_discount_id_seq'::regclass);
--
-- TOC entry 2730 (class 2604 OID 35937)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item ALTER COLUMN id SET DEFAULT nextval('ticket_item_id_seq'::regclass);
--
-- TOC entry 2731 (class 2604 OID 35938)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount ALTER COLUMN id SET DEFAULT nextval('ticket_item_discount_id_seq'::regclass);
--
-- TOC entry 2732 (class 2604 OID 35939)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier ALTER COLUMN id SET DEFAULT nextval('ticket_item_modifier_id_seq'::regclass);
--
-- TOC entry 2733 (class 2604 OID 35940)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions ALTER COLUMN id SET DEFAULT nextval('transactions_id_seq'::regclass);
--
-- TOC entry 2734 (class 2604 OID 35941)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type ALTER COLUMN id SET DEFAULT nextval('user_type_id_seq'::regclass);
--
-- TOC entry 2735 (class 2604 OID 35942)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users ALTER COLUMN auto_id SET DEFAULT nextval('users_auto_id_seq'::regclass);
--
-- TOC entry 2736 (class 2604 OID 35943)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer ALTER COLUMN id SET DEFAULT nextval('virtual_printer_id_seq'::regclass);
--
-- TOC entry 2737 (class 2604 OID 35944)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons ALTER COLUMN id SET DEFAULT nextval('void_reasons_id_seq'::regclass);
--
-- TOC entry 2738 (class 2604 OID 35945)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge ALTER COLUMN auto_id SET DEFAULT nextval('zip_code_vs_delivery_charge_auto_id_seq'::regclass);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 2739 (class 2604 OID 36816)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria ALTER COLUMN id SET DEFAULT nextval('auditoria_id_seq'::regclass);
--
-- TOC entry 2776 (class 2604 OID 36930)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago ALTER COLUMN id SET DEFAULT nextval('formas_pago_id_seq'::regclass);
--
-- TOC entry 2758 (class 2604 OID 36903)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte ALTER COLUMN id SET DEFAULT nextval('postcorte_id_seq'::regclass);
--
-- TOC entry 2747 (class 2604 OID 36847)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte ALTER COLUMN id SET DEFAULT nextval('precorte_id_seq'::regclass);
--
-- TOC entry 2753 (class 2604 OID 36868)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo ALTER COLUMN id SET DEFAULT nextval('precorte_efectivo_id_seq'::regclass);
--
-- TOC entry 2755 (class 2604 OID 36884)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros ALTER COLUMN id SET DEFAULT nextval('precorte_otros_id_seq'::regclass);
--
-- TOC entry 2741 (class 2604 OID 36828)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon ALTER COLUMN id SET DEFAULT nextval('sesion_cajon_id_seq'::regclass);
SET search_path = public, pg_catalog;
--
-- TOC entry 2781 (class 2606 OID 35948)
-- Name: action_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT action_history_pkey PRIMARY KEY (id);
--
-- TOC entry 2783 (class 2606 OID 35950)
-- Name: attendence_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT attendence_history_pkey PRIMARY KEY (id);
--
-- TOC entry 2785 (class 2606 OID 35952)
-- Name: cash_drawer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT cash_drawer_pkey PRIMARY KEY (id);
--
-- TOC entry 2787 (class 2606 OID 35954)
-- Name: cash_drawer_reset_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT cash_drawer_reset_history_pkey PRIMARY KEY (id);
--
-- TOC entry 2789 (class 2606 OID 35956)
-- Name: cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction
    ADD CONSTRAINT cooking_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 2791 (class 2606 OID 35958)
-- Name: coupon_and_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 2793 (class 2606 OID 35960)
-- Name: coupon_and_discount_uuid_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_uuid_key UNIQUE (uuid);
--
-- TOC entry 2797 (class 2606 OID 35962)
-- Name: currency_balance_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT currency_balance_pkey PRIMARY KEY (id);
--
-- TOC entry 2795 (class 2606 OID 35964)
-- Name: currency_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency
    ADD CONSTRAINT currency_pkey PRIMARY KEY (id);
--
-- TOC entry 2799 (class 2606 OID 35966)
-- Name: custom_payment_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment
    ADD CONSTRAINT custom_payment_pkey PRIMARY KEY (id);
--
-- TOC entry 2801 (class 2606 OID 35968)
-- Name: customer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer
    ADD CONSTRAINT customer_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 2803 (class 2606 OID 35970)
-- Name: customer_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT customer_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2805 (class 2606 OID 35972)
-- Name: daily_folio_counter_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY daily_folio_counter
    ADD CONSTRAINT daily_folio_counter_pkey PRIMARY KEY (folio_date, branch_key);
--
-- TOC entry 2807 (class 2606 OID 35974)
-- Name: data_update_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info
    ADD CONSTRAINT data_update_info_pkey PRIMARY KEY (id);
--
-- TOC entry 2809 (class 2606 OID 35976)
-- Name: delivery_address_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT delivery_address_pkey PRIMARY KEY (id);
--
-- TOC entry 2811 (class 2606 OID 35978)
-- Name: delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge
    ADD CONSTRAINT delivery_charge_pkey PRIMARY KEY (id);
--
-- TOC entry 2813 (class 2606 OID 35980)
-- Name: delivery_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration
    ADD CONSTRAINT delivery_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 2815 (class 2606 OID 35982)
-- Name: delivery_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT delivery_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 2817 (class 2606 OID 35984)
-- Name: drawer_assigned_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT drawer_assigned_history_pkey PRIMARY KEY (id);
--
-- TOC entry 2821 (class 2606 OID 35986)
-- Name: drawer_pull_report_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT drawer_pull_report_pkey PRIMARY KEY (id);
--
-- TOC entry 2824 (class 2606 OID 35988)
-- Name: employee_in_out_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT employee_in_out_history_pkey PRIMARY KEY (id);
--
-- TOC entry 2826 (class 2606 OID 35990)
-- Name: global_config_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pkey PRIMARY KEY (id);
--
-- TOC entry 2828 (class 2606 OID 35992)
-- Name: global_config_pos_key_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pos_key_key UNIQUE (pos_key);
--
-- TOC entry 2830 (class 2606 OID 35994)
-- Name: gratuity_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT gratuity_pkey PRIMARY KEY (id);
--
-- TOC entry 2832 (class 2606 OID 35996)
-- Name: guest_check_print_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT guest_check_print_pkey PRIMARY KEY (id);
--
-- TOC entry 2834 (class 2606 OID 35998)
-- Name: inventory_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group
    ADD CONSTRAINT inventory_group_pkey PRIMARY KEY (id);
--
-- TOC entry 2836 (class 2606 OID 36000)
-- Name: inventory_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT inventory_item_pkey PRIMARY KEY (id);
--
-- TOC entry 2838 (class 2606 OID 36002)
-- Name: inventory_location_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT inventory_location_pkey PRIMARY KEY (id);
--
-- TOC entry 2840 (class 2606 OID 36004)
-- Name: inventory_meta_code_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code
    ADD CONSTRAINT inventory_meta_code_pkey PRIMARY KEY (id);
--
-- TOC entry 2842 (class 2606 OID 36006)
-- Name: inventory_transaction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT inventory_transaction_pkey PRIMARY KEY (id);
--
-- TOC entry 2844 (class 2606 OID 36008)
-- Name: inventory_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit
    ADD CONSTRAINT inventory_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 2846 (class 2606 OID 36010)
-- Name: inventory_vendor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor
    ADD CONSTRAINT inventory_vendor_pkey PRIMARY KEY (id);
--
-- TOC entry 2848 (class 2606 OID 36012)
-- Name: inventory_warehouse_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse
    ADD CONSTRAINT inventory_warehouse_pkey PRIMARY KEY (id);
--
-- TOC entry 2872 (class 2606 OID 36014)
-- Name: kds_ready_log_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kds_ready_log
    ADD CONSTRAINT kds_ready_log_pkey PRIMARY KEY (ticket_id);
--
-- TOC entry 2875 (class 2606 OID 36016)
-- Name: kitchen_ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT kitchen_ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 2851 (class 2606 OID 36018)
-- Name: kitchen_ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT kitchen_ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 2878 (class 2606 OID 36020)
-- Name: menu_category_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category
    ADD CONSTRAINT menu_category_pkey PRIMARY KEY (id);
--
-- TOC entry 2880 (class 2606 OID 36022)
-- Name: menu_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT menu_group_pkey PRIMARY KEY (id);
--
-- TOC entry 2883 (class 2606 OID 36024)
-- Name: menu_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT menu_item_pkey PRIMARY KEY (id);
--
-- TOC entry 2885 (class 2606 OID 36026)
-- Name: menu_item_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT menu_item_properties_pkey PRIMARY KEY (menu_item_id, property_name);
--
-- TOC entry 2887 (class 2606 OID 36028)
-- Name: menu_item_size_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size
    ADD CONSTRAINT menu_item_size_pkey PRIMARY KEY (id);
--
-- TOC entry 2892 (class 2606 OID 36030)
-- Name: menu_modifier_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group
    ADD CONSTRAINT menu_modifier_group_pkey PRIMARY KEY (id);
--
-- TOC entry 2889 (class 2606 OID 36032)
-- Name: menu_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT menu_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 2895 (class 2606 OID 36034)
-- Name: menu_modifier_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT menu_modifier_properties_pkey PRIMARY KEY (menu_modifier_id, property_name);
--
-- TOC entry 2897 (class 2606 OID 36036)
-- Name: menuitem_modifiergroup_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT menuitem_modifiergroup_pkey PRIMARY KEY (id);
--
-- TOC entry 2899 (class 2606 OID 36038)
-- Name: menuitem_shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT menuitem_shift_pkey PRIMARY KEY (id);
--
-- TOC entry 2901 (class 2606 OID 36040)
-- Name: modifier_multiplier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT modifier_multiplier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 2903 (class 2606 OID 36042)
-- Name: multiplier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY multiplier
    ADD CONSTRAINT multiplier_pkey PRIMARY KEY (name);
--
-- TOC entry 2905 (class 2606 OID 36044)
-- Name: order_type_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_name_key UNIQUE (name);
--
-- TOC entry 2907 (class 2606 OID 36046)
-- Name: order_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_pkey PRIMARY KEY (id);
--
-- TOC entry 2909 (class 2606 OID 36048)
-- Name: packaging_unit_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_name_key UNIQUE (name);
--
-- TOC entry 2911 (class 2606 OID 36050)
-- Name: packaging_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 2913 (class 2606 OID 36052)
-- Name: payout_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons
    ADD CONSTRAINT payout_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 2915 (class 2606 OID 36054)
-- Name: payout_recepients_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients
    ADD CONSTRAINT payout_recepients_pkey PRIMARY KEY (id);
--
-- TOC entry 2917 (class 2606 OID 36056)
-- Name: pizza_crust_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust
    ADD CONSTRAINT pizza_crust_pkey PRIMARY KEY (id);
--
-- TOC entry 2919 (class 2606 OID 36058)
-- Name: pizza_modifier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT pizza_modifier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 2921 (class 2606 OID 36060)
-- Name: pizza_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT pizza_price_pkey PRIMARY KEY (id);
--
-- TOC entry 2923 (class 2606 OID 36062)
-- Name: printer_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_configuration
    ADD CONSTRAINT printer_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 2925 (class 2606 OID 36064)
-- Name: printer_group_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_name_key UNIQUE (name);
--
-- TOC entry 2927 (class 2606 OID 36066)
-- Name: printer_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_pkey PRIMARY KEY (id);
--
-- TOC entry 2929 (class 2606 OID 36068)
-- Name: purchase_order_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_pkey PRIMARY KEY (id);
--
-- TOC entry 2933 (class 2606 OID 36070)
-- Name: recepie_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT recepie_item_pkey PRIMARY KEY (id);
--
-- TOC entry 2931 (class 2606 OID 36072)
-- Name: recepie_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT recepie_pkey PRIMARY KEY (id);
--
-- TOC entry 2935 (class 2606 OID 36074)
-- Name: restaurant_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant
    ADD CONSTRAINT restaurant_pkey PRIMARY KEY (id);
--
-- TOC entry 2937 (class 2606 OID 36076)
-- Name: restaurant_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT restaurant_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2939 (class 2606 OID 36078)
-- Name: shift_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_name_key UNIQUE (name);
--
-- TOC entry 2941 (class 2606 OID 36080)
-- Name: shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_pkey PRIMARY KEY (id);
--
-- TOC entry 2943 (class 2606 OID 36082)
-- Name: shop_floor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor
    ADD CONSTRAINT shop_floor_pkey PRIMARY KEY (id);
--
-- TOC entry 2945 (class 2606 OID 36084)
-- Name: shop_floor_template_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT shop_floor_template_pkey PRIMARY KEY (id);
--
-- TOC entry 2947 (class 2606 OID 36086)
-- Name: shop_floor_template_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT shop_floor_template_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2949 (class 2606 OID 36088)
-- Name: shop_table_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT shop_table_pkey PRIMARY KEY (id);
--
-- TOC entry 2951 (class 2606 OID 36090)
-- Name: shop_table_status_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_status
    ADD CONSTRAINT shop_table_status_pkey PRIMARY KEY (id);
--
-- TOC entry 2953 (class 2606 OID 36092)
-- Name: shop_table_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type
    ADD CONSTRAINT shop_table_type_pkey PRIMARY KEY (id);
--
-- TOC entry 2956 (class 2606 OID 36094)
-- Name: table_booking_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT table_booking_info_pkey PRIMARY KEY (id);
--
-- TOC entry 2961 (class 2606 OID 36096)
-- Name: tax_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax_group
    ADD CONSTRAINT tax_group_pkey PRIMARY KEY (id);
--
-- TOC entry 2959 (class 2606 OID 36098)
-- Name: tax_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax
    ADD CONSTRAINT tax_pkey PRIMARY KEY (id);
--
-- TOC entry 2853 (class 2606 OID 36100)
-- Name: terminal_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT terminal_pkey PRIMARY KEY (id);
--
-- TOC entry 2963 (class 2606 OID 36102)
-- Name: terminal_printers_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT terminal_printers_pkey PRIMARY KEY (id);
--
-- TOC entry 2965 (class 2606 OID 36104)
-- Name: terminal_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT terminal_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2967 (class 2606 OID 36106)
-- Name: ticket_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT ticket_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 2861 (class 2606 OID 36108)
-- Name: ticket_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_global_id_key UNIQUE (global_id);
--
-- TOC entry 2972 (class 2606 OID 36110)
-- Name: ticket_item_addon_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT ticket_item_addon_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 2974 (class 2606 OID 36112)
-- Name: ticket_item_cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT ticket_item_cooking_instruction_pkey PRIMARY KEY (ticket_item_id, item_order);
--
-- TOC entry 2976 (class 2606 OID 36114)
-- Name: ticket_item_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT ticket_item_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 2978 (class 2606 OID 36116)
-- Name: ticket_item_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT ticket_item_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 2980 (class 2606 OID 36118)
-- Name: ticket_item_modifier_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT ticket_item_modifier_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 2970 (class 2606 OID 36120)
-- Name: ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 2863 (class 2606 OID 36122)
-- Name: ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 2982 (class 2606 OID 36124)
-- Name: ticket_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT ticket_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2984 (class 2606 OID 36126)
-- Name: transaction_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT transaction_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2988 (class 2606 OID 36128)
-- Name: transactions_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_global_id_key UNIQUE (global_id);
--
-- TOC entry 2990 (class 2606 OID 36130)
-- Name: transactions_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_pkey PRIMARY KEY (id);
--
-- TOC entry 2992 (class 2606 OID 36132)
-- Name: user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_permission
    ADD CONSTRAINT user_permission_pkey PRIMARY KEY (name);
--
-- TOC entry 2994 (class 2606 OID 36134)
-- Name: user_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type
    ADD CONSTRAINT user_type_pkey PRIMARY KEY (id);
--
-- TOC entry 2996 (class 2606 OID 36136)
-- Name: user_user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT user_user_permission_pkey PRIMARY KEY (permissionid, elt);
--
-- TOC entry 2998 (class 2606 OID 36138)
-- Name: users_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 3000 (class 2606 OID 36140)
-- Name: users_user_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_id_key UNIQUE (user_id);
--
-- TOC entry 3002 (class 2606 OID 36142)
-- Name: users_user_pass_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_pass_key UNIQUE (user_pass);
--
-- TOC entry 3004 (class 2606 OID 36144)
-- Name: virtual_printer_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_name_key UNIQUE (name);
--
-- TOC entry 3006 (class 2606 OID 36146)
-- Name: virtual_printer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_pkey PRIMARY KEY (id);
--
-- TOC entry 3008 (class 2606 OID 36148)
-- Name: void_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons
    ADD CONSTRAINT void_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 3010 (class 2606 OID 36150)
-- Name: zip_code_vs_delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge
    ADD CONSTRAINT zip_code_vs_delivery_charge_pkey PRIMARY KEY (auto_id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3012 (class 2606 OID 36822)
-- Name: auditoria_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria
    ADD CONSTRAINT auditoria_pkey PRIMARY KEY (id);
--
-- TOC entry 3033 (class 2606 OID 36938)
-- Name: formas_pago_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago
    ADD CONSTRAINT formas_pago_pkey PRIMARY KEY (id);
--
-- TOC entry 3029 (class 2606 OID 36919)
-- Name: postcorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3024 (class 2606 OID 36871)
-- Name: precorte_efectivo_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_pkey PRIMARY KEY (id);
--
-- TOC entry 3027 (class 2606 OID 36891)
-- Name: precorte_otros_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_pkey PRIMARY KEY (id);
--
-- TOC entry 3021 (class 2606 OID 36857)
-- Name: precorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3016 (class 2606 OID 36837)
-- Name: sesion_cajon_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_pkey PRIMARY KEY (id);
--
-- TOC entry 3018 (class 2606 OID 36839)
-- Name: sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key UNIQUE (terminal_id, cajero_usuario_id, apertura_ts);
--
-- TOC entry 3031 (class 2606 OID 37049)
-- Name: uq_postcorte_sesion_id;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT uq_postcorte_sesion_id UNIQUE (sesion_id);
SET search_path = public, pg_catalog;
--
-- TOC entry 2854 (class 1259 OID 36151)
-- Name: creationhour;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX creationhour ON public.ticket USING btree (creation_hour);
--
-- TOC entry 2855 (class 1259 OID 36152)
-- Name: deliverydate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX deliverydate ON public.ticket USING btree (deliveery_date);
--
-- TOC entry 2822 (class 1259 OID 36153)
-- Name: drawer_report_time;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX drawer_report_time ON public.drawer_pull_report USING btree (report_time);
--
-- TOC entry 2856 (class 1259 OID 36154)
-- Name: drawerresetted;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX drawerresetted ON public.ticket USING btree (drawer_resetted);
--
-- TOC entry 2876 (class 1259 OID 36155)
-- Name: food_category_visible;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX food_category_visible ON public.menu_category USING btree (visible);
--
-- TOC entry 2954 (class 1259 OID 36156)
-- Name: fromdate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX fromdate ON public.table_booking_info USING btree (from_date);
--
-- TOC entry 2818 (class 1259 OID 36991)
-- Name: idx_dah_user_op_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 2819 (class 1259 OID 36946)
-- Name: idx_drawer_assigned_history_user_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 2857 (class 1259 OID 36992)
-- Name: idx_ticket_close_term_owner;
Type: INDEX;
Schema: public;
--
-- TOC entry 2985 (class 1259 OID 36990)
-- Name: idx_tx_term_user_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 2873 (class 1259 OID 36157)
-- Name: ix_kitchen_ticket_item_item_id;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ix_kitchen_ticket_item_item_id ON public.kitchen_ticket_item USING btree (ticket_item_id);
--
-- TOC entry 2849 (class 1259 OID 36158)
-- Name: ix_kitchen_ticket_ticket_id;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ix_kitchen_ticket_ticket_id ON public.kitchen_ticket USING btree (ticket_id);
--
-- TOC entry 2858 (class 1259 OID 36159)
-- Name: ix_ticket_branch_key;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ix_ticket_branch_key ON public.ticket USING btree (branch_key);
--
-- TOC entry 2859 (class 1259 OID 36160)
-- Name: ix_ticket_folio_date;
Type: INDEX;
Schema: public;
--
-- TOC entry 2968 (class 1259 OID 36161)
-- Name: ix_ticket_item_ticket_pg;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ix_ticket_item_ticket_pg ON public.ticket_item USING btree (ticket_id, pg_id);
--
-- TOC entry 2881 (class 1259 OID 36162)
-- Name: menugroupvisible;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX menugroupvisible ON public.menu_group USING btree (visible);
--
-- TOC entry 2893 (class 1259 OID 36163)
-- Name: mg_enable;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX mg_enable ON public.menu_modifier_group USING btree (enabled);
--
-- TOC entry 2890 (class 1259 OID 36164)
-- Name: modifierenabled;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX modifierenabled ON public.menu_modifier USING btree (enable);
--
-- TOC entry 2864 (class 1259 OID 36165)
-- Name: ticketactivedate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketactivedate ON public.ticket USING btree (active_date);
--
-- TOC entry 2865 (class 1259 OID 36166)
-- Name: ticketclosingdate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketclosingdate ON public.ticket USING btree (closing_date);
--
-- TOC entry 2866 (class 1259 OID 36167)
-- Name: ticketcreatedate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketcreatedate ON public.ticket USING btree (create_date);
--
-- TOC entry 2867 (class 1259 OID 36168)
-- Name: ticketpaid;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketpaid ON public.ticket USING btree (paid);
--
-- TOC entry 2868 (class 1259 OID 36169)
-- Name: ticketsettled;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketsettled ON public.ticket USING btree (settled);
--
-- TOC entry 2869 (class 1259 OID 36170)
-- Name: ticketvoided;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX ticketvoided ON public.ticket USING btree (voided);
--
-- TOC entry 2957 (class 1259 OID 36171)
-- Name: todate;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX todate ON public.table_booking_info USING btree (to_date);
--
-- TOC entry 2986 (class 1259 OID 36172)
-- Name: tran_drawer_resetted;
Type: INDEX;
Schema: public;
Owner: floreant
--

CREATE INDEX tran_drawer_resetted ON public.transactions USING btree (drawer_resetted);
--
-- TOC entry 2870 (class 1259 OID 36173)
-- Name: ux_ticket_dailyfolio;
Type: INDEX;
Schema: public;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3019 (class 1259 OID 37047)
-- Name: idx_precorte_sesion_id;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3025 (class 1259 OID 36897)
-- Name: ix_precorte_otros_precorte;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3013 (class 1259 OID 36841)
-- Name: ix_sesion_cajon_cajero;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3014 (class 1259 OID 36840)
-- Name: ix_sesion_cajon_terminal;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3022 (class 1259 OID 37061)
-- Name: precorte_sesion_id_idx;
Type: INDEX;
Schema: selemti;
Owner: floreant
--

CREATE INDEX precorte_sesion_id_idx ON selemti.precorte USING btree (sesion_id);
--
-- TOC entry 3034 (class 1259 OID 36939)
-- Name: uq_fp_huella_expr;
Type: INDEX;
Schema: selemti;
SET search_path = public, pg_catalog;
--
-- TOC entry 3167 (class 2620 OID 36174)
-- Name: trg_assign_daily_folio;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3168 (class 2620 OID 36175)
-- Name: trg_kds_notify_kti;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3169 (class 2620 OID 36176)
-- Name: trg_kds_notify_ti;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3165 (class 2620 OID 36948)
-- Name: trg_selemti_dah_ai;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3166 (class 2620 OID 36945)
-- Name: trg_selemti_terminal_bu_snapshot;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3170 (class 2620 OID 36943)
-- Name: trg_selemti_tx_ai_forma_pago;
Type: TRIGGER;
Schema: public;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3171 (class 2620 OID 36878)
-- Name: trg_precorte_efectivo_bi;
Type: TRIGGER;
Schema: selemti;
SET search_path = public, pg_catalog;
--
-- TOC entry 3095 (class 2606 OID 36177)
-- Name: fk1273b4bbb79c6270;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT fk1273b4bbb79c6270 FOREIGN KEY (menu_modifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3082 (class 2606 OID 36182)
-- Name: fk1462f02bcb07faa3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT fk1462f02bcb07faa3 FOREIGN KEY (kithen_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3106 (class 2606 OID 36187)
-- Name: fk17bd51a089fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a089fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3105 (class 2606 OID 36192)
-- Name: fk17bd51a0ae5d580;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a0ae5d580 FOREIGN KEY (pizza_price_id) REFERENCES pizza_price(id);
--
-- TOC entry 3136 (class 2606 OID 36197)
-- Name: fk1fa465141df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT fk1fa465141df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3125 (class 2606 OID 36202)
-- Name: fk2458e9258979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT fk2458e9258979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3045 (class 2606 OID 36207)
-- Name: fk29aca6899e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT fk29aca6899e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3046 (class 2606 OID 36212)
-- Name: fk29d9ca39e1c3d97;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT fk29d9ca39e1c3d97 FOREIGN KEY (customer_no) REFERENCES customer(auto_id);
--
-- TOC entry 3041 (class 2606 OID 36217)
-- Name: fk2cc0e08e28dd6c11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e28dd6c11 FOREIGN KEY (currency_id) REFERENCES currency(id);
--
-- TOC entry 3042 (class 2606 OID 36222)
-- Name: fk2cc0e08e9006558;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e9006558 FOREIGN KEY (cash_drawer_id) REFERENCES cash_drawer(id);
--
-- TOC entry 3043 (class 2606 OID 36227)
-- Name: fk2cc0e08efb910735;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08efb910735 FOREIGN KEY (dpr_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3155 (class 2606 OID 36232)
-- Name: fk2dbeaa4f283ecc6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f283ecc6 FOREIGN KEY (permissionid) REFERENCES user_type(id);
--
-- TOC entry 3156 (class 2606 OID 36237)
-- Name: fk2dbeaa4f8f23f5e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f8f23f5e FOREIGN KEY (elt) REFERENCES user_permission(name);
--
-- TOC entry 3126 (class 2606 OID 36242)
-- Name: fk301c4de53e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de53e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3127 (class 2606 OID 36247)
-- Name: fk301c4de59e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de59e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3102 (class 2606 OID 36252)
-- Name: fk312b355b40fda3c9;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b40fda3c9 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3103 (class 2606 OID 36257)
-- Name: fk312b355b6e7b8b68;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b6e7b8b68 FOREIGN KEY (menuitem_modifiergroup_id) REFERENCES menu_item(id);
--
-- TOC entry 3104 (class 2606 OID 36262)
-- Name: fk312b355b7f2f368;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b7f2f368 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3073 (class 2606 OID 36267)
-- Name: fk341cbc275cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT fk341cbc275cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3054 (class 2606 OID 36272)
-- Name: fk34e4e3771df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3771df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3055 (class 2606 OID 36277)
-- Name: fk34e4e3772ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3772ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3056 (class 2606 OID 36282)
-- Name: fk34e4e377aa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e377aa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3142 (class 2606 OID 36287)
-- Name: fk3825f9d0dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT fk3825f9d0dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3143 (class 2606 OID 36292)
-- Name: fk3df5d4fab9276e77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT fk3df5d4fab9276e77 FOREIGN KEY (ticket_itemid) REFERENCES ticket_item(id);
--
-- TOC entry 3035 (class 2606 OID 36297)
-- Name: fk3f3af36b3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT fk3f3af36b3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3084 (class 2606 OID 36302)
-- Name: fk4cd5a1f35188aa24;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35188aa24 FOREIGN KEY (group_id) REFERENCES menu_group(id);
--
-- TOC entry 3085 (class 2606 OID 36307)
-- Name: fk4cd5a1f35cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3086 (class 2606 OID 36312)
-- Name: fk4cd5a1f35ee9f27a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35ee9f27a FOREIGN KEY (tax_group_id) REFERENCES tax_group(id);
--
-- TOC entry 3087 (class 2606 OID 36317)
-- Name: fk4cd5a1f3a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3088 (class 2606 OID 36322)
-- Name: fk4cd5a1f3f3b77c57;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3f3b77c57 FOREIGN KEY (recepie) REFERENCES recepie(id);
--
-- TOC entry 3157 (class 2606 OID 36327)
-- Name: fk4d495e87660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e87660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3158 (class 2606 OID 36332)
-- Name: fk4d495e8897b1e39;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8897b1e39 FOREIGN KEY (n_user_type) REFERENCES user_type(id);
--
-- TOC entry 3159 (class 2606 OID 36337)
-- Name: fk4d495e8d9409968;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8d9409968 FOREIGN KEY (currentterminal) REFERENCES terminal(id);
--
-- TOC entry 3083 (class 2606 OID 36342)
-- Name: fk4dc1ab7f2e347ff0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT fk4dc1ab7f2e347ff0 FOREIGN KEY (category_id) REFERENCES menu_category(id);
--
-- TOC entry 3097 (class 2606 OID 36347)
-- Name: fk4f8523e38d9ea931;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e38d9ea931 FOREIGN KEY (menucategory_id) REFERENCES menu_category(id);
--
-- TOC entry 3096 (class 2606 OID 36352)
-- Name: fk4f8523e3d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e3d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3081 (class 2606 OID 36357)
-- Name: fk5696584bb73e273e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kit_ticket_table_num
    ADD CONSTRAINT fk5696584bb73e273e FOREIGN KEY (kit_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3110 (class 2606 OID 36362)
-- Name: fk572726f374be2c71;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f374be2c71 FOREIGN KEY (pizzamodifierprice_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3109 (class 2606 OID 36367)
-- Name: fk572726f3ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f3ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3065 (class 2606 OID 36372)
-- Name: fk59073b58c46a9c15;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT fk59073b58c46a9c15 FOREIGN KEY (warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3092 (class 2606 OID 36377)
-- Name: fk59b6b1b72501cb2c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b72501cb2c FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3093 (class 2606 OID 36382)
-- Name: fk59b6b1b75e0c7b8d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b75e0c7b8d FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3094 (class 2606 OID 36387)
-- Name: fk59b6b1b7a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b7a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3047 (class 2606 OID 36392)
-- Name: fk5a823c91f1dd782b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT fk5a823c91f1dd782b FOREIGN KEY (a_user) REFERENCES users(auto_id);
--
-- TOC entry 3145 (class 2606 OID 36397)
-- Name: fk5d3f9acb6c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acb6c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3146 (class 2606 OID 36402)
-- Name: fk5d3f9acbdec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acbdec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3039 (class 2606 OID 36407)
-- Name: fk6221077d2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT fk6221077d2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3148 (class 2606 OID 36412)
-- Name: fk65af15e21df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_table_num
    ADD CONSTRAINT fk65af15e21df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3119 (class 2606 OID 36417)
-- Name: fk6b4e177764931efc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT fk6b4e177764931efc FOREIGN KEY (menu_item) REFERENCES menu_item(id);
--
-- TOC entry 3129 (class 2606 OID 36422)
-- Name: fk6bc51417160de3b1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417160de3b1 FOREIGN KEY (booking_id) REFERENCES table_booking_info(id);
--
-- TOC entry 3128 (class 2606 OID 36427)
-- Name: fk6bc51417dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3051 (class 2606 OID 36432)
-- Name: fk6d5db9fa2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3052 (class 2606 OID 36437)
-- Name: fk6d5db9fa3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3053 (class 2606 OID 36442)
-- Name: fk6d5db9fa7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3147 (class 2606 OID 36447)
-- Name: fk70ecd046223049de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT fk70ecd046223049de FOREIGN KEY (id) REFERENCES ticket(id);
--
-- TOC entry 3040 (class 2606 OID 36452)
-- Name: fk719418223e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT fk719418223e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3060 (class 2606 OID 36457)
-- Name: fk7dc968362cd583c1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968362cd583c1 FOREIGN KEY (item_group_id) REFERENCES inventory_group(id);
--
-- TOC entry 3061 (class 2606 OID 36462)
-- Name: fk7dc968363525e956;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968363525e956 FOREIGN KEY (punit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3062 (class 2606 OID 36467)
-- Name: fk7dc968366848d615;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968366848d615 FOREIGN KEY (recipe_unit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3063 (class 2606 OID 36472)
-- Name: fk7dc9683695e455d3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc9683695e455d3 FOREIGN KEY (item_location_id) REFERENCES inventory_location(id);
--
-- TOC entry 3064 (class 2606 OID 36477)
-- Name: fk7dc968369e60c333;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968369e60c333 FOREIGN KEY (item_vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3122 (class 2606 OID 36482)
-- Name: fk80ad9f75fc64768f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT fk80ad9f75fc64768f FOREIGN KEY (id) REFERENCES restaurant(id);
--
-- TOC entry 3120 (class 2606 OID 36487)
-- Name: fk855626db1682b10e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626db1682b10e FOREIGN KEY (inventory_item) REFERENCES inventory_item(id);
--
-- TOC entry 3121 (class 2606 OID 36492)
-- Name: fk855626dbcae89b83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626dbcae89b83 FOREIGN KEY (recepie_id) REFERENCES recepie(id);
--
-- TOC entry 3111 (class 2606 OID 36497)
-- Name: fk8a16099391d62c51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a16099391d62c51 FOREIGN KEY (multiplier_id) REFERENCES multiplier(name);
--
-- TOC entry 3112 (class 2606 OID 36502)
-- Name: fk8a1609939c9e4883;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a1609939c9e4883 FOREIGN KEY (pizza_modifier_price_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3113 (class 2606 OID 36507)
-- Name: fk8a160993ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a160993ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3144 (class 2606 OID 36512)
-- Name: fk8fd6290dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT fk8fd6290dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3075 (class 2606 OID 36517)
-- Name: fk937b5f0c1f6a9a4a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c1f6a9a4a FOREIGN KEY (void_by_user) REFERENCES users(auto_id);
--
-- TOC entry 3076 (class 2606 OID 36522)
-- Name: fk937b5f0c2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3077 (class 2606 OID 36527)
-- Name: fk937b5f0c7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3078 (class 2606 OID 36532)
-- Name: fk937b5f0caa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0caa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3079 (class 2606 OID 36537)
-- Name: fk937b5f0cc188ea51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cc188ea51 FOREIGN KEY (gratuity_id) REFERENCES gratuity(id);
--
-- TOC entry 3080 (class 2606 OID 36542)
-- Name: fk937b5f0cf575c7d4;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cf575c7d4 FOREIGN KEY (driver_id) REFERENCES users(auto_id);
--
-- TOC entry 3132 (class 2606 OID 36547)
-- Name: fk93802290dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3131 (class 2606 OID 36552)
-- Name: fk93802290f5d6e47b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290f5d6e47b FOREIGN KEY (type_id) REFERENCES shop_table_type(id);
--
-- TOC entry 3135 (class 2606 OID 36557)
-- Name: fk963f26d69d31df8e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT fk963f26d69d31df8e FOREIGN KEY (id) REFERENCES terminal(id);
--
-- TOC entry 3137 (class 2606 OID 36562)
-- Name: fk979f54661df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54661df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3138 (class 2606 OID 36567)
-- Name: fk979f546633e5d3b2;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f546633e5d3b2 FOREIGN KEY (size_modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3139 (class 2606 OID 36572)
-- Name: fk979f54665cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54665cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3050 (class 2606 OID 36577)
-- Name: fk98cf9b143ef4cd9b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report_voidtickets
    ADD CONSTRAINT fk98cf9b143ef4cd9b FOREIGN KEY (dpreport_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3133 (class 2606 OID 36582)
-- Name: fk99ede5fc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3134 (class 2606 OID 36587)
-- Name: fk99ede5fcc433e65a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fcc433e65a FOREIGN KEY (virtual_printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3160 (class 2606 OID 36592)
-- Name: fk9af7853bcf15f4a6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtualprinter_order_type
    ADD CONSTRAINT fk9af7853bcf15f4a6 FOREIGN KEY (printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3091 (class 2606 OID 36597)
-- Name: fk9ea1afc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3090 (class 2606 OID 36602)
-- Name: fk9ea1afc89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3140 (class 2606 OID 36607)
-- Name: fk9f1996346c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f1996346c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3141 (class 2606 OID 36612)
-- Name: fk9f199634dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f199634dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3048 (class 2606 OID 36617)
-- Name: fkaec362202ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362202ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3049 (class 2606 OID 36622)
-- Name: fkaec362203e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362203e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3066 (class 2606 OID 36627)
-- Name: fkaf48f43b5b397c5;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b5b397c5 FOREIGN KEY (reference_id) REFERENCES purchase_order(id);
--
-- TOC entry 3067 (class 2606 OID 36632)
-- Name: fkaf48f43b96a3d6bf;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b96a3d6bf FOREIGN KEY (item_id) REFERENCES inventory_item(id);
--
-- TOC entry 3068 (class 2606 OID 36637)
-- Name: fkaf48f43bd152c95f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bd152c95f FOREIGN KEY (vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3069 (class 2606 OID 36642)
-- Name: fkaf48f43beda09759;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43beda09759 FOREIGN KEY (to_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3070 (class 2606 OID 36647)
-- Name: fkaf48f43bff3f328a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bff3f328a FOREIGN KEY (from_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3123 (class 2606 OID 36652)
-- Name: fkba6efbd68979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT fkba6efbd68979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3118 (class 2606 OID 36657)
-- Name: fkc05b805e5f31265c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group_printers
    ADD CONSTRAINT fkc05b805e5f31265c FOREIGN KEY (printer_id) REFERENCES printer_group(id);
--
-- TOC entry 3130 (class 2606 OID 36662)
-- Name: fkcbeff0e454031ec1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_ticket_num
    ADD CONSTRAINT fkcbeff0e454031ec1 FOREIGN KEY (shop_table_status_id) REFERENCES shop_table_status(id);
--
-- TOC entry 3059 (class 2606 OID 36667)
-- Name: fkce827c6f3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT fkce827c6f3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3114 (class 2606 OID 36672)
-- Name: fkd3de7e7896183657;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT fkd3de7e7896183657 FOREIGN KEY (item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3044 (class 2606 OID 36677)
-- Name: fkd43068347bbccf0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT fkd43068347bbccf0 FOREIGN KEY (id) REFERENCES customer(auto_id);
--
-- TOC entry 3124 (class 2606 OID 36682)
-- Name: fkd70c313ca36ab054;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT fkd70c313ca36ab054 FOREIGN KEY (id) REFERENCES shop_floor_template(id);
--
-- TOC entry 3101 (class 2606 OID 36687)
-- Name: fkd89ccdee33662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdee33662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3100 (class 2606 OID 36692)
-- Name: fkd89ccdeed3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdeed3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3036 (class 2606 OID 36697)
-- Name: fkdfe829a2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3037 (class 2606 OID 36702)
-- Name: fkdfe829a3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3038 (class 2606 OID 36707)
-- Name: fkdfe829a7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3107 (class 2606 OID 36712)
-- Name: fke03c92d533662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d533662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3108 (class 2606 OID 36717)
-- Name: fke03c92d57660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d57660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3072 (class 2606 OID 36722)
-- Name: fke2b846573ac1d2e0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b846573ac1d2e0 FOREIGN KEY (order_type_id) REFERENCES order_type(id);
--
-- TOC entry 3071 (class 2606 OID 36727)
-- Name: fke2b8465789fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b8465789fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3099 (class 2606 OID 36732)
-- Name: fke3790e40113bf083;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40113bf083 FOREIGN KEY (menugroup_id) REFERENCES menu_group(id);
--
-- TOC entry 3098 (class 2606 OID 36737)
-- Name: fke3790e40d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3149 (class 2606 OID 36742)
-- Name: fke3de65548e8203bc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT fke3de65548e8203bc FOREIGN KEY (id) REFERENCES transactions(id);
--
-- TOC entry 3074 (class 2606 OID 36747)
-- Name: fke83d827c969c6de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT fke83d827c969c6de FOREIGN KEY (assigned_user) REFERENCES users(auto_id);
--
-- TOC entry 3115 (class 2606 OID 36752)
-- Name: fkeac112927c59441d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac112927c59441d FOREIGN KEY (crust) REFERENCES pizza_crust(id);
--
-- TOC entry 3116 (class 2606 OID 36757)
-- Name: fkeac11292a56d141c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292a56d141c FOREIGN KEY (order_type) REFERENCES order_type(id);
--
-- TOC entry 3117 (class 2606 OID 36762)
-- Name: fkeac11292dd545b77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292dd545b77 FOREIGN KEY (menu_item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3058 (class 2606 OID 36767)
-- Name: fkf8a37399d900aa01;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399d900aa01 FOREIGN KEY (elt) REFERENCES tax(id);
--
-- TOC entry 3057 (class 2606 OID 36772)
-- Name: fkf8a37399eff11066;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399eff11066 FOREIGN KEY (group_id) REFERENCES tax_group(id);
--
-- TOC entry 3089 (class 2606 OID 36777)
-- Name: fkf94186ff89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT fkf94186ff89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3150 (class 2606 OID 36782)
-- Name: fkfe9871551df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871551df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3151 (class 2606 OID 36787)
-- Name: fkfe9871552ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871552ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3152 (class 2606 OID 36792)
-- Name: fkfe9871553e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871553e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3153 (class 2606 OID 36797)
-- Name: fkfe987155ca43b6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155ca43b6 FOREIGN KEY (payout_recepient_id) REFERENCES payout_recepients(id);
--
-- TOC entry 3154 (class 2606 OID 36802)
-- Name: fkfe987155fc697d9e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155fc697d9e FOREIGN KEY (payout_reason_id) REFERENCES payout_reasons(id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3164 (class 2606 OID 36920)
-- Name: postcorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3162 (class 2606 OID 36872)
-- Name: precorte_efectivo_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3163 (class 2606 OID 36892)
-- Name: precorte_otros_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3161 (class 2606 OID 36858)
-- Name: precorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3492 (class 0 OID 0)
-- Dependencies: 6
-- Name: public;
Type: ACL;
Schema: -;
Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;
--
-- TOC entry 3571 (class 0 OID 0)
-- Dependencies: 377
-- Name: vw_sesion_dpr;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_dpr FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_dpr FROM postgres;
GRANT ALL ON TABLE vw_sesion_dpr TO postgres;
GRANT SELECT ON TABLE vw_sesion_dpr TO floreant;
--
-- TOC entry 3572 (class 0 OID 0)
-- Dependencies: 373
-- Name: vw_sesion_ventas;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_ventas FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_ventas FROM postgres;
GRANT ALL ON TABLE vw_sesion_ventas TO postgres;
GRANT SELECT ON TABLE vw_sesion_ventas TO floreant;
-- 1) Tipos ENUM (crear solo si no existen)
DO $$ BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typnamespace='selemti'::regnamespace AND typname='lot_tracking') THEN
    CREATE TYPE selemti.lot_tracking AS ENUM ('NONE','OPTIONAL','REQUIRED');
  END IF;
END $$;
DO $$ BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typnamespace='selemti'::regnamespace AND typname='estado_compra') THEN
    CREATE TYPE selemti.estado_compra AS ENUM ('DRAFT','SENT','PARTIAL','RECEIVED','CLOSED','CANCELLED');
  END IF;
END $$;
DO $$ BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typnamespace='selemti'::regnamespace AND typname='estado_recepcion') THEN
    CREATE TYPE selemti.estado_recepcion AS ENUM ('PENDING','APPROVED','POSTED');
  END IF;
END $$;
DO $$ BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typnamespace='selemti'::regnamespace AND typname='estado_traspaso') THEN
    CREATE TYPE selemti.estado_traspaso AS ENUM ('PENDING','IN_TRANSIT','RECEIVED','CLOSED','CANCELLED');
  END IF;
END $$;
DO $$ BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typnamespace='selemti'::regnamespace AND typname='estatus_produccion') THEN
    CREATE TYPE selemti.estatus_produccion AS ENUM ('PLANNED','APPROVED','IN_PROCESS','CLOSED','ADJUSTED');
  END IF;
END $$;
DO $$ BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typnamespace='selemti'::regnamespace AND typname='tipo_mov_inv') THEN
    CREATE TYPE selemti.tipo_mov_inv AS ENUM ('COMPRA','RECEPCION','TRANSFER_OUT','TRANSFER_IN','PROD_OUT','PROD_IN','VENTA_TEO','AJUSTE','MERMA');
  END IF;
END $$;
DO $$ BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typnamespace='selemti'::regnamespace AND typname='merma_categoria') THEN
    CREATE TYPE selemti.merma_categoria AS ENUM ('PREPARACION','CADUCIDAD','ROTURA','ROBO','OTRA');
  END IF;
END $$;
DO $$ BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typnamespace='selemti'::regnamespace AND typname='nivel_aut') THEN
    CREATE TYPE selemti.nivel_aut AS ENUM ('NINGUNO','ENCARGADO','SUPERVISOR','ADMIN');
  END IF;
END $$;
CREATE TABLE IF NOT EXISTS selemti.compra (
  id            BIGSERIAL PRIMARY KEY,
  folio         TEXT,
  vendor_id     INT      NOT NULL REFERENCES public.inventory_vendor(id),
  fecha         TIMESTAMP NOT NULL DEFAULT now(),
  estado        selemti.estado_compra NOT NULL DEFAULT 'DRAFT',
  moneda        TEXT     NOT NULL DEFAULT 'MXN',
  tipo_cambio   NUMERIC(12,6) NOT NULL DEFAULT 1 CHECK (tipo_cambio > 0),
  subtotal      NUMERIC(14,6) NOT NULL DEFAULT 0 CHECK (subtotal >= 0),
  impuestos     NUMERIC(14,6) NOT NULL DEFAULT 0 CHECK (impuestos >= 0),
  total         NUMERIC(14,6) NOT NULL DEFAULT 0 CHECK (total >= 0),
  notas         TEXT,
  creado_por    INT      NOT NULL,
  aprobado_por  INT,
  sucursal_id   INT REFERENCES public.inventory_location(id)
);
CREATE INDEX IF NOT EXISTS ix_compra_vendor   ON selemti.compra(vendor_id);
CREATE INDEX IF NOT EXISTS ix_compra_sucursal ON selemti.compra(sucursal_id);
CREATE TABLE IF NOT EXISTS selemti.compra_det (
  id                     BIGSERIAL PRIMARY KEY,
  compra_id              BIGINT   NOT NULL REFERENCES selemti.compra(id) ON DELETE CASCADE,
  item_id                INT      NOT NULL REFERENCES public.inventory_item(id),
  cant_presentacion      NUMERIC(14,6) NOT NULL DEFAULT 0 CHECK (cant_presentacion >= 0),
  unidad_presentacion_id INT      NOT NULL REFERENCES public.inventory_unit(id),
  factor_a_canonica      NUMERIC(14,6) NOT NULL CHECK (factor_a_canonica > 0),
  cant_canonica          NUMERIC(14,6) NOT NULL DEFAULT 0,
  precio_unit            NUMERIC(14,6) NOT NULL DEFAULT 0 CHECK (precio_unit >= 0),
  impuestos              NUMERIC(14,6) NOT NULL DEFAULT 0 CHECK (impuestos >= 0),
  descuento              NUMERIC(14,6) NOT NULL DEFAULT 0 CHECK (descuento >= 0),
  location_id            INT REFERENCES public.inventory_location(id)
);
CREATE INDEX IF NOT EXISTS ix_compra_det_compra ON selemti.compra_det(compra_id);
CREATE INDEX IF NOT EXISTS ix_compra_det_item   ON selemti.compra_det(item_id);
CREATE INDEX IF NOT EXISTS ix_batch_item ON selemti.inventory_batch(item_id);
CREATE TABLE IF NOT EXISTS selemti.recepcion (
  id            BIGSERIAL PRIMARY KEY,
  compra_id     BIGINT REFERENCES selemti.compra(id),
  fecha         TIMESTAMP NOT NULL DEFAULT now(),
  estado        selemti.estado_recepcion NOT NULL DEFAULT 'PENDING',
  incidencias   TEXT,
  creado_por    INT NOT NULL,
  aprobado_por  INT
);
CREATE INDEX IF NOT EXISTS ix_recepcion_det_recepcion ON selemti.recepcion_det(recepcion_id);
CREATE INDEX IF NOT EXISTS ix_recepcion_det_item      ON selemti.recepcion_det(item_id);
CREATE TABLE IF NOT EXISTS selemti.traspaso (
  id                   BIGSERIAL PRIMARY KEY,
  fecha                TIMESTAMP NOT NULL DEFAULT now(),
  folio                TEXT,
  estado               selemti.estado_traspaso NOT NULL DEFAULT 'PENDING',
  origen_location_id   INT NOT NULL REFERENCES public.inventory_location(id),
  destino_location_id  INT NOT NULL REFERENCES public.inventory_location(id),
  motivo               TEXT,
  notas                TEXT,
  creado_por           INT NOT NULL,
  aprobado_por         INT,
  sucursal_id          INT REFERENCES public.inventory_location(id)
);
CREATE INDEX IF NOT EXISTS ix_traspaso_origen   ON selemti.traspaso(origen_location_id);
CREATE INDEX IF NOT EXISTS ix_traspaso_destino  ON selemti.traspaso(destino_location_id);
CREATE INDEX IF NOT EXISTS ix_traspaso_sucursal ON selemti.traspaso(sucursal_id);
CREATE INDEX IF NOT EXISTS ix_traspaso_det_item ON selemti.traspaso_det(item_id);
CREATE TABLE IF NOT EXISTS selemti.produccion (
  id           BIGSERIAL PRIMARY KEY,
  fecha        TIMESTAMP NOT NULL DEFAULT now(),
  location_id  INT NOT NULL REFERENCES public.inventory_location(id),
  estatus      selemti.estatus_produccion NOT NULL DEFAULT 'PLANNED',
  notas        TEXT,
  creado_por   INT NOT NULL,
  aprobado_por INT
);
CREATE TABLE IF NOT EXISTS selemti.produccion_insumo (
  id             BIGSERIAL PRIMARY KEY,
  produccion_id  BIGINT NOT NULL REFERENCES selemti.produccion(id) ON DELETE CASCADE,
  item_id        INT    NOT NULL REFERENCES public.inventory_item(id),
  qty_canonica   NUMERIC(14,6) NOT NULL CHECK (qty_canonica >= 0),
  merma_pct      NUMERIC(6,3)  CHECK (merma_pct IS NULL OR merma_pct >= 0)
);
CREATE INDEX IF NOT EXISTS ix_prod_insumo_item ON selemti.produccion_insumo(item_id);
CREATE TABLE IF NOT EXISTS selemti.produccion_resultado (
  id                  BIGSERIAL PRIMARY KEY,
  produccion_id       BIGINT NOT NULL REFERENCES selemti.produccion(id) ON DELETE CASCADE,
  item_id             INT    NOT NULL REFERENCES public.inventory_item(id),
  qty_ok_canonica     NUMERIC(14,6) NOT NULL DEFAULT 0 CHECK (qty_ok_canonica >= 0),
  qty_merma_canonica  NUMERIC(14,6) NOT NULL DEFAULT 0 CHECK (qty_merma_canonica >= 0)
);
CREATE INDEX IF NOT EXISTS ix_prod_resultado_item ON selemti.produccion_resultado(item_id);
CREATE INDEX IF NOT EXISTS ix_mov_item_ts         ON selemti.mov_inv(item_id, ts);
CREATE INDEX IF NOT EXISTS ix_mov_tipo_ts         ON selemti.mov_inv(tipo, ts);
CREATE INDEX IF NOT EXISTS ix_mov_inv_item_loc    ON selemti.mov_inv(item_id, location_id);
CREATE INDEX IF NOT EXISTS ix_mov_inv_loc_ts      ON selemti.mov_inv(location_id, ts);
CREATE INDEX IF NOT EXISTS ix_mov_inv_tipo_itemts ON selemti.mov_inv(tipo, item_id, ts DESC);
CREATE TABLE IF NOT EXISTS selemti.pos_ingesta (
  id             BIGSERIAL PRIMARY KEY,
  last_ticket_id BIGINT,
  last_close_ts  TIMESTAMP,
  updated_at     TIMESTAMP NOT NULL DEFAULT now()
);
CREATE TABLE IF NOT EXISTS selemti.costo_item (
  item_id    INT PRIMARY KEY REFERENCES public.inventory_item(id),
  wac        NUMERIC(14,6) NOT NULL DEFAULT 0,
  updated_at TIMESTAMP NOT NULL DEFAULT now()
);
-- 2.1) conversion_template (sin UNIQUE con expresiones;
Ã­ndices parciales abajo)
CREATE TABLE IF NOT EXISTS selemti.conversion_template (
  id                       BIGSERIAL PRIMARY KEY,
  item_id                  INT REFERENCES public.inventory_item(id),
  vendor_id                INT REFERENCES public.inventory_vendor(id),
  presentacion             TEXT NOT NULL,
  unidad_presentacion_id   INT NOT NULL REFERENCES public.inventory_unit(id),
  unidad_canonica          TEXT NOT NULL CHECK (unidad_canonica IN ('g','ml','pz')),
  factor_a_canonica        NUMERIC(14,6) NOT NULL CHECK (factor_a_canonica > 0),
  preferred                BOOLEAN NOT NULL DEFAULT FALSE,
  activo                   BOOLEAN NOT NULL DEFAULT TRUE
);
-- 2.2) Motor de alertas
CREATE TABLE IF NOT EXISTS selemti.alert_event (
  id           BIGSERIAL PRIMARY KEY,
  ts           TIMESTAMP NOT NULL DEFAULT now(),
  item_id      INT NOT NULL REFERENCES public.inventory_item(id),
  vendor_id    INT NULL REFERENCES public.inventory_vendor(id),
  source       TEXT NOT NULL,
  context_id   BIGINT NULL,
  old_cost     NUMERIC(14,6) NULL,
  new_cost     NUMERIC(14,6) NULL,
  delta_pct    NUMERIC(10,6) NULL,
  delta_abs    NUMERIC(14,6) NULL,
  currency     TEXT NOT NULL DEFAULT 'MXN',
  message      TEXT
);
CREATE INDEX IF NOT EXISTS ix_alert_event_item_ts ON selemti.alert_event(item_id, ts DESC);
CREATE TABLE IF NOT EXISTS selemti.alert_rule (
  id BIGSERIAL PRIMARY KEY,
  name TEXT NOT NULL,
  metric_key TEXT NOT NULL,
  expr JSONB NOT NULL,
  scope JSONB,
  cooldown_min INT NOT NULL DEFAULT 1440,
  severity TEXT NOT NULL DEFAULT 'WARN',
  channels JSONB NOT NULL DEFAULT '{"pg_notify":true}'::jsonb,
  enabled BOOLEAN NOT NULL DEFAULT TRUE
);
CREATE TABLE IF NOT EXISTS selemti.alert_subscription (
  id BIGSERIAL PRIMARY KEY,
  role TEXT,
  user_id INT,
  severity_min TEXT NOT NULL DEFAULT 'WARN',
  filters JSONB,
  channels JSONB NOT NULL DEFAULT '{"pg_notify":true}'::jsonb,
  enabled BOOLEAN NOT NULL DEFAULT TRUE
);
CREATE TABLE IF NOT EXISTS selemti.alert_silence (
  id BIGSERIAL PRIMARY KEY,
  until_ts TIMESTAMP NOT NULL,
  scope JSONB,
  reason TEXT
);
CREATE TABLE IF NOT EXISTS selemti.alert_template (
  id BIGSERIAL PRIMARY KEY,
  metric_key TEXT NOT NULL,
  severity TEXT NOT NULL,
  title_tpl TEXT NOT NULL,
  body_tpl TEXT NOT NULL
);
CREATE UNIQUE INDEX IF NOT EXISTS uq_alert_template_metric_sev ON selemti.alert_template(metric_key, severity);
-- 2.3) PolÃ­ticas de merma y preferencias UI
CREATE TABLE IF NOT EXISTS selemti.merma_policy (
  id           BIGSERIAL PRIMARY KEY,
  sucursal_id  INT NULL REFERENCES public.inventory_location(id),
  categoria    selemti.merma_categoria NOT NULL,
  th_warn      NUMERIC(14,2) NOT NULL DEFAULT 0,
  th_block     NUMERIC(14,2) NOT NULL DEFAULT 0,
  aut_req      selemti.nivel_aut NOT NULL DEFAULT 'SUPERVISOR',
  enabled      BOOLEAN NOT NULL DEFAULT TRUE
);
CREATE TABLE IF NOT EXISTS selemti.ui_prefs (
  id           BIGSERIAL PRIMARY KEY,
  sucursal_id  INT NULL REFERENCES public.inventory_location(id),
  key          TEXT NOT NULL,
  value_json   JSONB NOT NULL
);
-- 2.4) Modificadores en BOM
CREATE TABLE IF NOT EXISTS selemti.bom_modifier (
  id BIGSERIAL PRIMARY KEY,
  modifier_id INT NOT NULL,
  inventory_item_id INT NOT NULL REFERENCES public.inventory_item(id),
  qty_canonica NUMERIC(14,6) NOT NULL CHECK (qty_canonica >= 0),
  op TEXT NOT NULL DEFAULT 'ADD',
  scope JSONB
);
-- 2.x) ÃNDICES ÃšNICOS PARCIALES
CREATE UNIQUE INDEX IF NOT EXISTS uq_conv_template_item_pres_null_vendor
  ON selemti.conversion_template(item_id, presentacion)
  WHERE vendor_id IS NULL;
CREATE UNIQUE INDEX IF NOT EXISTS uq_conv_template_item_vendor_pres
  ON selemti.conversion_template(item_id, vendor_id, presentacion)
  WHERE vendor_id IS NOT NULL;
CREATE UNIQUE INDEX IF NOT EXISTS uq_alert_cfg_metric_scope
  ON selemti.alert_cfg(metric_key, scope)
  WHERE scope IS NOT NULL;
CREATE UNIQUE INDEX IF NOT EXISTS uq_merma_policy_sucursal_categoria
  ON selemti.merma_policy(sucursal_id, categoria)
  WHERE sucursal_id IS NOT NULL;
CREATE UNIQUE INDEX IF NOT EXISTS uq_ui_prefs_sucursal_key
  ON selemti.ui_prefs(sucursal_id, key)
  WHERE sucursal_id IS NOT NULL;
-- 3) Vistas
CREATE OR REPLACE VIEW selemti.vw_stock_disponible AS
SELECT
  mi.item_id,
  mi.location_id,
  mi.batch_id,
  SUM(CASE
        WHEN mi.tipo IN ('COMPRA','RECEPCION','TRANSFER_IN','PROD_IN') THEN mi.qty_canonica
        WHEN mi.tipo IN ('TRANSFER_OUT','PROD_OUT','VENTA_TEO','AJUSTE','MERMA') THEN -mi.qty_canonica
        ELSE 0
      END) AS qty_disponible
FROM selemti.mov_inv mi
GROUP BY mi.item_id, mi.location_id, mi.batch_id;
vw_bom_menu_item con casts explÃ­citos y formato exacto
DROP VIEW IF EXISTS selemti.vw_bom_menu_item;
$SQL$;
$SQL$;
END IF;
END $$;
-- 2) vw_conversion_sugerida con ORDER BY en el mismo orden del DISTINCT ON
DROP VIEW IF EXISTS selemti.vw_conversion_sugerida;
-- 4) Funciones
CREATE OR REPLACE FUNCTION selemti.fn_recalcula_wac(p_item_id INT)
RETURNS VOID LANGUAGE plpgsql AS $$
DECLARE
  v_wac NUMERIC(14,6) := 0;
v_stock NUMERIC(14,6) := 0;
r RECORD;
BEGIN
  FOR r IN
    SELECT ts, tipo, qty_canonica, costo_unit
    FROM selemti.mov_inv
    WHERE item_id = p_item_id
    ORDER BY ts ASC, id ASC
  LOOP
    IF r.tipo IN ('RECEPCION','PROD_IN','TRANSFER_IN') THEN
      IF r.costo_unit IS NOT NULL AND r.qty_canonica > 0 THEN
        v_wac := CASE
          WHEN v_stock <= 0 THEN r.costo_unit
          ELSE ((v_wac * v_stock) + (r.costo_unit * r.qty_canonica)) / NULLIF(v_stock + r.qty_canonica,0)
        END;
END IF;
v_stock := v_stock + r.qty_canonica;
ELSIF r.tipo IN ('TRANSFER_OUT','PROD_OUT','VENTA_TEO','AJUSTE','MERMA') THEN
      v_stock := v_stock - ABS(r.qty_canonica);
END IF;
END LOOP;
INSERT INTO selemti.costo_item(item_id, wac, updated_at)
  VALUES (p_item_id, COALESCE(v_wac,0), now())
  ON CONFLICT (item_id) DO UPDATE SET wac = EXCLUDED.wac, updated_at = now();
END;
$$;
CREATE OR REPLACE FUNCTION selemti.fn_generar_movimientos_por_documento(p_ref_table TEXT, p_ref_id BIGINT)
RETURNS VOID LANGUAGE plpgsql AS $$
BEGIN
  RAISE NOTICE 'TODO: generar movimientos para %.%', p_ref_table, p_ref_id;
END;
$$;
CREATE OR REPLACE FUNCTION selemti.fn_ingesta_ventas(p_from_ts TIMESTAMP, p_to_ts TIMESTAMP)
RETURNS VOID LANGUAGE plpgsql AS $$
BEGIN
  RAISE NOTICE 'TODO: leer tickets cerrados en rango [% .. %] y generar VENTA_TEO', p_from_ts, p_to_ts;
END;
$$;
CREATE OR REPLACE FUNCTION selemti.fn_wac_apply(p_item_id INT, p_qty_in NUMERIC, p_cost_unit NUMERIC)
RETURNS VOID LANGUAGE plpgsql AS $$
DECLARE
  v_stock   NUMERIC(14,6) := 0;
v_old_wac NUMERIC(14,6) := 0;
v_new_wac NUMERIC(14,6) := 0;
BEGIN
  IF p_qty_in IS NULL OR p_qty_in <= 0 OR p_cost_unit IS NULL THEN RETURN;
END IF;
SELECT COALESCE(SUM(CASE
           WHEN tipo IN ('COMPRA','RECEPCION','TRANSFER_IN','PROD_IN') THEN qty_canonica
           WHEN tipo IN ('TRANSFER_OUT','PROD_OUT','VENTA_TEO','AJUSTE','MERMA') THEN -qty_canonica
           ELSE 0 END), 0)
    INTO v_stock
  FROM selemti.mov_inv
  WHERE item_id = p_item_id;
SELECT wac INTO v_old_wac FROM selemti.costo_item WHERE item_id=p_item_id FOR UPDATE;
IF NOT FOUND THEN
    v_old_wac := 0;
INSERT INTO selemti.costo_item(item_id, wac) VALUES (p_item_id, 0)
    ON CONFLICT (item_id) DO NOTHING;
END IF;
IF v_stock <= 0 THEN
    v_new_wac := p_cost_unit;
ELSE
    v_new_wac := ((v_old_wac * v_stock) + (p_cost_unit * p_qty_in)) / NULLIF(v_stock + p_qty_in, 0);
END IF;
UPDATE selemti.costo_item SET wac = COALESCE(v_new_wac, p_cost_unit), updated_at = now() WHERE item_id = p_item_id;
END;
$$;
-- 5) Triggers
CREATE OR REPLACE FUNCTION selemti.trg_recepcion_after_update()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  IF NEW.estado = 'POSTED' AND OLD.estado IS DISTINCT FROM 'POSTED' THEN
    PERFORM selemti.fn_generar_movimientos_por_documento('recepcion', NEW.id);
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_recepcion_after_update ON selemti.recepcion;
CREATE TRIGGER trg_recepcion_after_update
AFTER UPDATE ON selemti.recepcion
FOR EACH ROW EXECUTE PROCEDURE selemti.trg_recepcion_after_update();
CREATE OR REPLACE FUNCTION selemti.trg_pos_ingesta_after_update()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  PERFORM selemti.fn_ingesta_ventas(COALESCE(NEW.last_close_ts, NOW() - INTERVAL '10 minutes'), NOW());
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_pos_ingesta_after_update ON selemti.pos_ingesta;
CREATE TRIGGER trg_pos_ingesta_after_update
AFTER UPDATE ON selemti.pos_ingesta
FOR EACH ROW EXECUTE PROCEDURE selemti.trg_pos_ingesta_after_update();
CREATE OR REPLACE FUNCTION selemti.trg_recepcion_det_check()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_perishable BOOLEAN := FALSE;
BEGIN
  SELECT COALESCE(MAX(CASE WHEN iv.perishable THEN 1 ELSE 0 END)=1, FALSE)
    INTO v_perishable
  FROM selemti.item_vendor iv
  WHERE iv.item_id = NEW.item_id AND iv.activo = TRUE;
IF v_perishable AND (NEW.caducidad IS NULL OR NEW.caducidad <= CURRENT_DATE) THEN
    RAISE EXCEPTION 'Item % requiere caducidad futura por ser perecedero', NEW.item_id;
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_recepcion_det_check ON selemti.recepcion_det;
CREATE OR REPLACE FUNCTION selemti.trg_mov_inv_wac()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  IF NEW.tipo IN ('RECEPCION','PROD_IN','TRANSFER_IN') AND NEW.costo_unit IS NOT NULL THEN
    PERFORM selemti.fn_wac_apply(NEW.item_id, NEW.qty_canonica, NEW.costo_unit);
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_mov_inv_wac ON selemti.mov_inv;
CREATE TRIGGER trg_mov_inv_wac
AFTER INSERT ON selemti.mov_inv
FOR EACH ROW EXECUTE PROCEDURE selemti.trg_mov_inv_wac();
CREATE OR REPLACE FUNCTION selemti.trg_compra_state_guard()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_ord NUMERIC(18,6);
v_rec NUMERIC(18,6);
BEGIN
  IF NEW.estado = 'CLOSED' AND OLD.estado IS DISTINCT FROM 'CLOSED' THEN
    SELECT COALESCE(SUM(cd.cant_canonica),0) INTO v_ord
    FROM selemti.compra_det cd WHERE cd.compra_id = NEW.id;
SELECT COALESCE(SUM(rd.cant_recibida_canonica),0) INTO v_rec
    FROM selemti.recepcion r
    JOIN selemti.recepcion_det rd ON rd.recepcion_id = r.id
    WHERE r.compra_id = NEW.id;
IF v_rec + 0.000001 < v_ord THEN
      RAISE EXCEPTION 'No se puede cerrar la compra %, faltan recepciones (ordenadas=%, recibidas=%)', NEW.id, v_ord, v_rec;
END IF;
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_compra_state_guard ON selemti.compra;
CREATE TRIGGER trg_compra_state_guard
BEFORE UPDATE ON selemti.compra
FOR EACH ROW EXECUTE PROCEDURE selemti.trg_compra_state_guard();
-- 6) Ãndices condicionales para ingesta (si existe public.ticket)
DO $$
DECLARE v_has_table BOOLEAN; v_col TEXT;
BEGIN
  SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname='ticket' AND c.relkind='r') INTO v_has_table;
  IF v_has_table THEN
    FOR v_col IN
      SELECT column_name FROM information_schema.columns
      WHERE table_schema='public' AND table_name='ticket'
        AND column_name IN ('close_ts','closed_at','closing_time','close_time','paid_time','settled_at')
    LOOP
      EXECUTE format('CREATE INDEX IF NOT EXISTS ix_ticket_%I ON public.ticket (%I);', v_col, v_col);
      EXIT;
    END LOOP;
    IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE schemaname='public' AND tablename='ticket' AND indexname='ix_ticket_id') THEN
      EXECUTE 'CREATE INDEX ix_ticket_id ON public.ticket (id)';
    END IF;
  END IF;
END $$;
COMMENT ON SCHEMA selemti IS 'Inventarios y compras para Floreant POS (PG 9.5 Consolidado FINAL).';
-- 1) Ampliar bom_modifier (PG 9.5: checar existencia de columnas)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='bom_modifier' AND column_name='costo_adicional'
  ) THEN
    EXECUTE 'ALTER TABLE selemti.bom_modifier ADD COLUMN costo_adicional NUMERIC(14,6) DEFAULT 0';
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='bom_modifier' AND column_name='precio_adicional'
  ) THEN
    EXECUTE 'ALTER TABLE selemti.bom_modifier ADD COLUMN precio_adicional NUMERIC(14,6) DEFAULT 0';
  END IF;
END $$;
-- Ãndices sugeridos (idempotentes)
CREATE INDEX IF NOT EXISTS ix_bom_modifier_modifier ON selemti.bom_modifier(modifier_id);
CREATE INDEX IF NOT EXISTS ix_bom_modifier_item     ON selemti.bom_modifier(inventory_item_id);
-- 2) Rehacer vw_bom_menu_item con casts + guardias (placeholders si faltan tablas public.*)
DROP VIEW IF EXISTS selemti.vw_bom_menu_item;
-- 3) Rehacer vw_conversion_sugerida con ORDER BY alineado al DISTINCT ON
DROP VIEW IF EXISTS selemti.vw_conversion_sugerida;
-- 4) vw_receta_completa (base + modificadores, con guards y placeholder seguro)
DROP VIEW IF EXISTS selemti.vw_receta_completa;
CREATE VIEW selemti.vw_receta_completa AS
SELECT
  NULL::INT AS menu_item_id,
  NULL::INT AS inventory_item_id,
  NULL::NUMERIC(14,6) AS qty_canonica,
  NULL::INT AS modifier_id,
  NULL::NUMERIC(14,6) AS qty_mod,
  NULL::NUMERIC(14,6) AS costo_adicional,
  NULL::NUMERIC(14,6) AS precio_adicional,
  NULL::TEXT AS origen
WHERE FALSE;
-- 4a) Si existen tablas base de recetas â†’ vista BASE
DO $MAIN$
DECLARE
  v_has_mi  BOOLEAN;
v_has_r   BOOLEAN;
v_has_ri  BOOLEAN;
BEGIN
  SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname='menu_item' AND c.relkind='r') INTO v_has_mi;
SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname='recepie' AND c.relkind='r') INTO v_has_r;
SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname='recepie_item' AND c.relkind='r') INTO v_has_ri;
IF v_has_mi AND v_has_r AND v_has_ri THEN
    EXECUTE $$
      CREATE OR REPLACE VIEW selemti.vw_receta_completa AS
      SELECT
        mi.id::INT                    AS menu_item_id,
        ri.inventory_item::INT        AS inventory_item_id,
        ri.percentage::NUMERIC(14,6)  AS qty_canonica,
        NULL::INT                     AS modifier_id,
        NULL::NUMERIC(14,6)           AS qty_mod,
        NULL::NUMERIC(14,6)           AS costo_adicional,
        NULL::NUMERIC(14,6)           AS precio_adicional,
        'BASE'::TEXT                  AS origen
      FROM public.menu_item mi
      JOIN public.recepie r       ON r.id = mi.recepie
      JOIN public.recepie_item ri ON ri.recepie_id = r.id
    $$;
END IF;
END
$MAIN$;
-- 4b) Si hay catÃ¡logo de modificadores y vÃ­nculo â†’ expandir con MODS
DO $MODS$
DECLARE
  v_has_mods BOOLEAN;
v_has_mim  BOOLEAN;
-- public.menu_item_modifier
  v_has_mmi  BOOLEAN;
-- public.menu_modifier_item
BEGIN
  SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname IN ('menu_modifier','modifiers') AND c.relkind='r')
    INTO v_has_mods;
SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname='menu_item_modifier' AND c.relkind='r')
    INTO v_has_mim;
SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname='menu_modifier_item' AND c.relkind='r')
    INTO v_has_mmi;
IF v_has_mods AND (v_has_mim OR v_has_mmi) THEN
    EXECUTE $$
      CREATE OR REPLACE VIEW selemti.vw_receta_completa AS
      WITH base AS (
        SELECT
          mi.id::INT                    AS menu_item_id,
          ri.inventory_item::INT        AS inventory_item_id,
          ri.percentage::NUMERIC(14,6)  AS qty_canonica,
          NULL::INT                     AS modifier_id,
          NULL::NUMERIC(14,6)           AS qty_mod,
          NULL::NUMERIC(14,6)           AS costo_adicional,
          NULL::NUMERIC(14,6)           AS precio_adicional,
          'BASE'::TEXT                  AS origen
        FROM public.menu_item mi
        JOIN public.recepie r       ON r.id = mi.recepie
        JOIN public.recepie_item ri ON ri.recepie_id = r.id
      ),
      mods AS (
        SELECT
          mim.menu_item_id::INT                AS menu_item_id,
          bm.inventory_item_id::INT            AS inventory_item_id,
          bm.qty_canonica::NUMERIC(14,6)       AS qty_canonica,
          bm.modifier_id::INT                  AS modifier_id,
          bm.qty_canonica::NUMERIC(14,6)       AS qty_mod,
          COALESCE(bm.costo_adicional,0)::NUMERIC(14,6)  AS costo_adicional,
          COALESCE(bm.precio_adicional,0)::NUMERIC(14,6) AS precio_adicional,
          'MOD'::TEXT                           AS origen
        FROM selemti.bom_modifier bm
        JOIN public.menu_item_modifier mim ON mim.modifier_id = bm.modifier_id
        WHERE EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                      WHERE n.nspname='public' AND c.relname='menu_item_modifier' AND c.relkind='r')
        UNION ALL
        SELECT
          mmi.menu_item_id::INT,
          bm.inventory_item_id::INT,
          bm.qty_canonica::NUMERIC(14,6),
          bm.modifier_id::INT,
          bm.qty_canonica::NUMERIC(14,6),
          COALESCE(bm.costo_adicional,0)::NUMERIC(14,6),
          COALESCE(bm.precio_adicional,0)::NUMERIC(14,6),
          'MOD'::TEXT
        FROM selemti.bom_modifier bm
        JOIN public.menu_modifier_item mmi ON mmi.modifier_id = bm.modifier_id
        WHERE EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                      WHERE n.nspname='public' AND c.relname='menu_modifier_item' AND c.relkind='r')
      )
      SELECT * FROM base
      UNION ALL
      SELECT * FROM mods
    $$;
END IF;
END
$MODS$;
-- 5) Trigger de descuento teÃ³rico en venta (si existe tabla de lÃ­neas)
-- (a) ticketitem
DO $T1$
BEGIN
  IF EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
             WHERE n.nspname='public' AND c.relname='ticketitem' AND c.relkind='r') THEN
    EXECUTE 'DROP TRIGGER IF EXISTS trg_venta_modificadores ON public.ticketitem';
EXECUTE 'CREATE TRIGGER trg_venta_modificadores
             AFTER INSERT ON public.ticketitem
             FOR EACH ROW EXECUTE PROCEDURE selemti.trg_venta_modificadores()';
END IF;
END
$T1$;
-- (b) ticket_line
DO $T2$
BEGIN
  IF EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
             WHERE n.nspname=''public'' AND c.relname=''ticket_line'' AND c.relkind=''r'') THEN
    EXECUTE ''DROP TRIGGER IF EXISTS trg_venta_modificadores ON public.ticket_line'';
EXECUTE ''CREATE TRIGGER trg_venta_modificadores
              AFTER INSERT ON public.ticket_line
              FOR EACH ROW EXECUTE PROCEDURE selemti.trg_venta_modificadores()'';
END IF;
END
$T2$;
-- (c) ticket_items
DO $T3$
BEGIN
  IF EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
             WHERE n.nspname='public' AND c.relname='ticket_items' AND c.relkind='r') THEN
    EXECUTE 'DROP TRIGGER IF EXISTS trg_venta_modificadores ON public.ticket_items';
EXECUTE 'CREATE TRIGGER trg_venta_modificadores
             AFTER INSERT ON public.ticket_items
             FOR EACH ROW EXECUTE PROCEDURE selemti.trg_venta_modificadores()';
END IF;
END
$T3$;
-- 3.2 vw_conversion_sugerida â€” corregir ORDER BY para DISTINCT ON
DROP VIEW IF EXISTS selemti.vw_conversion_sugerida;
-- =====================================================================
--  FIN HOTFIX v2
-- =====================================================================

\n-- END selemti_hotfix_pg95_v2.sql\n
\n-- BEGIN selemti_post_hotfix_checks_v2.sql\n

-- Checks v2
SELECT 'alert_cfg_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='alert_cfg'
) AS ok;
SELECT 'merma_policy_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='merma_policy'
) AS ok;
SELECT 'ui_prefs_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='ui_prefs'
) AS ok;
SELECT 'vw_bom_menu_item_ok' AS check, pg_get_viewdef('selemti.vw_bom_menu_item'::regclass) ILIKE '%name::text%' 
  AND pg_get_viewdef('selemti.vw_bom_menu_item'::regclass) ILIKE '%percentage::numeric%' AS ok;
SELECT 'vw_conv_ok_order' AS check, pg_get_viewdef('selemti.vw_conversion_sugerida'::regclass) ILIKE '%ORDER BY ct.item_id, COALESCE(ct.vendor_id,-1), ct.presentacion, ct.preferred DESC, ct.id DESC%' AS ok;
-- Unique partials present
SELECT 'uq_alert_cfg_metric_null_scope' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_alert_cfg_metric_null_scope'
) AS ok;
SELECT 'uq_merma_policy_sucursal_categoria' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_merma_policy_sucursal_categoria'
) AS ok;
SELECT 'uq_ui_prefs_sucursal_key' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_ui_prefs_sucursal_key'
) AS ok;
\n-- END selemti_post_hotfix_checks_v2.sql\n
\n-- BEGIN Triger_corte_final.sql\n
-- ===========================================
--  SELEM POS â€” Despliegue auxiliar (v0.1)
--  Compatibilidad: PostgreSQL 9.5+
--  Objetivo: conciliaciÃ³n por sesiÃ³n de cajÃ³n
--  Autor: Tavo+ChatGPT
-- ===========================================

-- ===========================================
-- 0) DIAGNÃ“STICO (opcional pero recomendado)
--    Esto NO crea objetos;
imprime cÃ³mo se llaman
--    las columnas relevantes para alinear mapeos.
-- ===========================================
DO $diag$
DECLARE
  tx_time_col TEXT;
tx_amt_col  TEXT;
tx_pay_col  TEXT;
tx_type_col TEXT;
tk_close_col TEXT;
dah_assign_col TEXT;
dah_release_col TEXT;
term_balance_col TEXT;
BEGIN
  RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (transactions) ===';
SELECT column_name INTO tx_time_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('tx_time','transaction_time','created','date','time','paid_time')
   ORDER BY CASE column_name
              WHEN 'tx_time' THEN 1
              WHEN 'transaction_time' THEN 2
              WHEN 'created' THEN 3
              WHEN 'date' THEN 4
              WHEN 'time' THEN 5
              WHEN 'paid_time' THEN 6
            END
   LIMIT 1;
SELECT column_name INTO tx_amt_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('amount','total','value','amt')
   LIMIT 1;
SELECT column_name INTO tx_pay_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('payment_type','tender_type','pay_type','method','payment_code')
   LIMIT 1;
SELECT column_name INTO tx_type_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('transaction_type','type','txn_type')
   LIMIT 1;
RAISE NOTICE 'transactions: tiempo=% , monto=% , payment=% , txn_type=%',
               COALESCE(tx_time_col,'(NO ENCONTRADO)'),
               COALESCE(tx_amt_col,'(NO ENCONTRADO)'),
               COALESCE(tx_pay_col,'(NO ENCONTRADO)'),
               COALESCE(tx_type_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (ticket) ===';
SELECT column_name INTO tk_close_col
    FROM information_schema.columns
   WHERE table_name='ticket'
     AND column_name IN ('closed_time','close_time','paid_time','modified_time','update_time')
   LIMIT 1;
RAISE NOTICE 'ticket: closed_time=%', COALESCE(tk_close_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (drawer_assigned_history) ===';
SELECT column_name INTO dah_assign_col
    FROM information_schema.columns
   WHERE table_name='drawer_assigned_history'
     AND column_name IN ('assigned_time','assigned_at','created','start_time')
   LIMIT 1;
SELECT column_name INTO dah_release_col
    FROM information_schema.columns
   WHERE table_name='drawer_assigned_history'
     AND column_name IN ('released_time','released_at','end_time','closed')
   LIMIT 1;
RAISE NOTICE 'drawer_assigned_history: assigned=% , released=%',
               COALESCE(dah_assign_col,'(NO ENCONTRADO)'),
               COALESCE(dah_release_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (terminal) ===';
SELECT column_name INTO term_balance_col
    FROM information_schema.columns
   WHERE table_name='terminal'
     AND column_name IN ('current_balance','opening_balance','balance')
   LIMIT 1;
RAISE NOTICE 'terminal: current_balance=%', COALESCE(term_balance_col,'(NO ENCONTRADO)');
END
$diag$;
-- ===========================================
-- 1) PARÃMETROS (ajusta SOLO si tu esquema difiere)
--    Si el diagnÃ³stico anterior te dio otros nombres,
--    cÃ¡mbialos aquÃ­ para que todo funcione.
-- ===========================================
DO $params$
BEGIN
  -- Mapa de columnas de transactions
  PERFORM set_config('selempos.tx_time_col',  'tx_time',            true);
PERFORM set_config('selempos.tx_amount_col','amount',             true);
PERFORM set_config('selempos.tx_pay_col',   'payment_type',       true);
PERFORM set_config('selempos.tx_type_col',  'transaction_type',   true);
-- ticket cerrado
  PERFORM set_config('selempos.ticket_closed_col','closed_time',    true);
-- drawer_assigned_history tiempos
  PERFORM set_config('selempos.dah_assigned_col','assigned_time',   true);
PERFORM set_config('selempos.dah_released_col','released_time',   true);
-- terminal balance
  PERFORM set_config('selempos.terminal_balance_col','current_balance', true);
END
$params$;
-- Helper para referenciar columnas configuradas
CREATE OR REPLACE FUNCTION selempos_col(name TEXT)
RETURNS TEXT LANGUAGE sql IMMUTABLE AS $$
  SELECT current_setting(name,true)
$$;
INSERT INTO selempos.selempos_payment_map(code, match_expr) VALUES
('CASH','CASH'),
('DEBIT','DEBIT'),
('CREDIT','CREDIT'),
('TRANSFER','TRANSFER')
ON CONFLICT DO NOTHING;
-- ===========================================
-- 3) VISTAS DE TOTALES POR SESIÃ“N
-- ===========================================
-- 3.1 ventas por forma de pago en ventana de sesiÃ³n
CREATE OR REPLACE VIEW selempos.selempos_vw_session_sales AS
WITH base AS (
  SELECT
    s.id AS session_id,
    t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC AS amount,
    pm.code AS payment_code
  FROM selempos.selempos_drawer_session s
  JOIN transactions t
    ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
   AND t.(SELECT selempos_col('selempos.tx_time_col')) < COALESCE(s.closed_at, now())
   AND t.terminal_id = s.terminal_id
   AND t.user_id     = s.cashier_user_id
  JOIN selempos.selempos_payment_map pm
    ON (t.(SELECT selempos_col('selempos.tx_pay_col'))  = pm.match_expr
     OR  t.(SELECT selempos_col('selempos.tx_type_col')) = pm.match_expr)
)
SELECT session_id, payment_code, SUM(amount) AS amount
FROM base
GROUP BY session_id, payment_code;
-- 3.2 descuentos (ajusta si tus descuentos estÃ¡n en otras tablas)
-- Si tus descuentos viven en ticket_discount/ticket_item_discount con timestamp y user/terminal:
CREATE OR REPLACE VIEW selempos.selempos_vw_session_discounts AS
SELECT s.id AS session_id, COALESCE(SUM(d.amount),0) AS discounts
FROM selempos.selempos_drawer_session s
LEFT JOIN ticket_discount d
  ON d.created_at >= s.opened_at
 AND d.created_at <  COALESCE(s.closed_at, now())
 AND d.terminal_id = s.terminal_id
 AND d.user_id     = s.cashier_user_id
GROUP BY s.id;
-- 3.3 anulaciones/devoluciones (VOID/REFUND) sobre ticket
CREATE OR REPLACE VIEW selempos.selempos_vw_session_voids AS
SELECT s.id AS session_id,
       COALESCE(SUM(CASE WHEN tk.status IN ('VOID','REFUND') THEN tk.total ELSE 0 END),0) AS void_total
FROM selempos.selempos_drawer_session s
LEFT JOIN ticket tk
  ON tk.(SELECT selempos_col('selempos.ticket_closed_col')) >= s.opened_at
 AND tk.(SELECT selempos_col('selempos.ticket_closed_col')) <  COALESCE(s.closed_at, now())
 AND tk.terminal_id = s.terminal_id
 AND tk.owner_id    = s.cashier_user_id
GROUP BY s.id;
-- 3.4 retiros/egresos (payouts/expenses) en ventana
CREATE OR REPLACE VIEW selempos.selempos_vw_session_payouts AS
SELECT s.id AS session_id, COALESCE(SUM(t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC),0) AS payouts
FROM selempos.selempos_drawer_session s
JOIN transactions t
  ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
 AND t.(SELECT selempos_col('selempos.tx_time_col')) <  COALESCE(s.closed_at, now())
 AND t.terminal_id = s.terminal_id
 AND t.user_id     = s.cashier_user_id
WHERE t.(SELECT selempos_col('selempos.tx_type_col')) IN ('PAYOUT','EXPENSE')
GROUP BY s.id;
-- 3.5 devoluciones EN EFECTIVO (si aplica)
CREATE OR REPLACE VIEW selempos.selempos_vw_session_cash_refunds AS
SELECT s.id AS session_id,
       COALESCE(SUM(t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC),0) AS cash_refunds
FROM selempos.selempos_drawer_session s
JOIN transactions t
  ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
 AND t.(SELECT selempos_col('selempos.tx_time_col')) <  COALESCE(s.closed_at, now())
 AND t.terminal_id = s.terminal_id
 AND t.user_id     = s.cashier_user_id
WHERE (t.(SELECT selempos_col('selempos.tx_type_col')) IN ('REFUND','RETURN') OR t.status='REFUND')
  AND (t.(SELECT selempos_col('selempos.tx_pay_col')) = 'CASH' OR t.(SELECT selempos_col('selempos.tx_type_col')) = 'CASH')
GROUP BY s.id;
-- 3.6 balance sintetizado con esperado en caja
CREATE OR REPLACE VIEW selempos.selempos_vw_session_balance AS
SELECT
  s.id AS session_id,
  s.terminal_id,
  s.cashier_user_id,
  s.opened_at,
  s.closed_at,
  s.status,
  s.opening_float,
  COALESCE(SUM(CASE WHEN sales.payment_code='CASH' THEN sales.amount END),0) AS sys_cash,
  COALESCE(SUM(CASE WHEN sales.payment_code IN ('DEBIT','CREDIT','TRANSFER') THEN sales.amount END),0) AS sys_non_cash,
  COALESCE(vd.discounts,0)  AS sys_discounts,
  COALESCE(vv.void_total,0) AS sys_voids,
  COALESCE(vp.payouts,0)    AS sys_payouts,
  COALESCE(vcr.cash_refunds,0) AS sys_cash_refunds,
  ( s.opening_float
    + COALESCE(SUM(CASE WHEN sales.payment_code='CASH' THEN sales.amount END),0)
    - COALESCE(vp.payouts,0)
    - COALESCE(vcr.cash_refunds,0)
  ) AS sys_expected_cash
FROM selempos.selempos_drawer_session s
LEFT JOIN selempos.selempos_vw_session_sales       sales ON sales.session_id = s.id
LEFT JOIN selempos.selempos_vw_session_discounts   vd    ON vd.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_voids       vv    ON vv.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_payouts     vp    ON vp.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_cash_refunds vcr  ON vcr.session_id   = s.id
GROUP BY s.id, s.terminal_id, s.cashier_user_id, s.opened_at, s.closed_at, s.status,
         s.opening_float, vd.discounts, vv.void_total, vp.payouts, vcr.cash_refunds;
-- ===========================================
-- 4) TRIGGERS DE SINCRONIZACIÃ“N CON ASIGNACIÃ“N DE CAJÃ“N
--    Al asignar: crea sesiÃ³n y toma snapshot de terminal.current_balance
--    Al liberar: cierra ventana y avanza estado
-- ===========================================
CREATE OR REPLACE FUNCTION selempos.selempos_fn_on_drawer_assigned_ins()
RETURNS TRIGGER LANGUAGE plpgsql AS
$$
DECLARE
  v_opening NUMERIC(12,2) := 0;
v_exists  BIGINT;
v_assigned_col TEXT := current_setting('selempos.dah_assigned_col', true);
v_bal_col      TEXT := current_setting('selempos.terminal_balance_col', true);
v_assigned_ts  TIMESTAMPTZ;
v_sql TEXT;
BEGIN
  -- obtener assigned_time (columna parametrizada)
  v_sql := format('SELECT ($1).%I::timestamptz', v_assigned_col);
EXECUTE v_sql USING NEW INTO v_assigned_ts;
-- snapshot del fondo en terminal.current_balance (columna parametrizada)
  v_sql := format('SELECT COALESCE(%I,0)::numeric FROM terminal WHERE id = $1', v_bal_col);
EXECUTE v_sql INTO v_opening USING NEW.terminal_id;
-- evitar duplicados por reintentos
  SELECT s.id INTO v_exists
  FROM selempos.selempos_drawer_session s
  WHERE s.terminal_id      = NEW.terminal_id
    AND s.cashier_user_id  = NEW.user_id
    AND s.opened_at        = COALESCE(v_assigned_ts, now());
IF v_exists IS NULL THEN
    INSERT INTO selempos.selempos_drawer_session(
      terminal_id, cashier_user_id, drawer_assigned_history_id,
      opened_at, status, opening_float, created_by
    )
    VALUES (
      NEW.terminal_id, NEW.user_id, NEW.id,
      COALESCE(v_assigned_ts, now()), 'ACTIVE', v_opening, NEW.user_id
    );
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_selempos_drawer_assigned_ins ON drawer_assigned_history;
-- Cierre de sesiÃ³n al liberar cajÃ³n
CREATE OR REPLACE FUNCTION selempos.selempos_fn_on_drawer_assigned_upd()
RETURNS TRIGGER LANGUAGE plpgsql AS
$$
DECLARE
  v_released_col TEXT := current_setting('selempos.dah_released_col', true);
v_released_ts  TIMESTAMPTZ;
v_sql TEXT;
BEGIN
  IF NEW IS DISTINCT FROM OLD THEN
    v_sql := format('SELECT ($1).%I::timestamptz', v_released_col);
EXECUTE v_sql USING NEW INTO v_released_ts;
IF v_released_ts IS NOT NULL THEN
      UPDATE selempos.selempos_drawer_session s
      SET closed_at = v_released_ts,
          status = CASE WHEN s.status='ACTIVE' THEN 'READY_FOR_CUT' ELSE s.status END
      WHERE s.drawer_assigned_history_id = NEW.id
        AND s.closed_at IS NULL;
END IF;
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_selempos_drawer_assigned_upd ON drawer_assigned_history;
-- ===========================================
-- 5) COMPROBACIONES RÃPIDAS
-- ===========================================
-- Â¿Sesiones activas?
-- SELECT * FROM selempos.selempos_drawer_session ORDER BY id DESC LIMIT 20;
-- Â¿Balance por sesiÃ³n?
-- SELECT * FROM selempos.selempos_vw_session_balance ORDER BY session_id DESC LIMIT 20;
-- ===========================================
-- FIN
-- ===========================================

\n-- END Triger_corte_final.sql\n
\n-- BEGIN triger_KDS.sql\n
-- Canal: kds_event
-- Requiere PostgreSQL >= 9.4 (usas 9.5, OK)

-- 1) FunciÃ³n de notificaciÃ³n
CREATE OR REPLACE FUNCTION public.kds_notify()
RETURNS trigger AS
$$
DECLARE
  v_ticket_id INT;
v_pg_id     INT;
v_item_id   INT;
v_status    TEXT;
v_total     INT;
v_ready     INT;
v_done      INT;
v_type      TEXT;
BEGIN
  /*
    Esta funciÃ³n se dispara desde:
    - kitchen_ticket_item (insert/update status)
    - ticket_item        (insert/update status)
  */

  IF TG_TABLE_NAME = 'kitchen_ticket_item' THEN
    -- Cambios en cocina
    v_item_id := COALESCE(NEW.ticket_item_id, NEW.id);
SELECT ti.ticket_id, ti.pg_id
      INTO v_ticket_id, v_pg_id
    FROM ticket_item ti
    WHERE ti.id = v_item_id;
v_status := UPPER(COALESCE(NEW.status,''));
v_type   := CASE WHEN TG_OP = 'INSERT' THEN 'item_upsert' ELSE 'item_status' END;
PERFORM pg_notify(
      'kds_event',
      json_build_object(
        'type',      v_type,
        'ticket_id', v_ticket_id,
        'pg',        v_pg_id,
        'item_id',   v_item_id,
        'status',    v_status,
        'ts',        now()
      )::text
    );
ELSIF TG_TABLE_NAME = 'ticket_item' THEN
    -- Nuevos Ã­tems o actualizaciones de estado en ticket_item
    v_item_id   := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id     := NEW.pg_id;
v_status    := UPPER(COALESCE(NEW.status,''));
IF TG_OP = 'INSERT' THEN
      v_type := 'item_insert';
ELSE
      v_type := 'item_status';
END IF;
PERFORM pg_notify(
      'kds_event',
      json_build_object(
        'type',      v_type,
        'ticket_id', v_ticket_id,
        'pg',        v_pg_id,
        'item_id',   v_item_id,
        'status',    v_status,
        'ts',        now()
      )::text
    );
END IF;
-- Si tenemos contexto de ticket y Ã¡rea (pg), verificamos agregados
  IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
    SELECT
      COUNT(*) AS total,
      COUNT(*) FILTER (
        WHERE UPPER(COALESCE(kti.status, ti.status, '')) IN ('READY','DONE')
      ) AS ready,
      COUNT(*) FILTER (
        WHERE UPPER(COALESCE(kti.status, ti.status, '')) = 'DONE'
      ) AS done
    INTO v_total, v_ready, v_done
    FROM ticket_item ti
    LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
    WHERE ti.ticket_id = v_ticket_id
      AND ti.pg_id     = v_pg_id;
-- Todos listos (READY o DONE)
    IF v_total > 0 AND v_total = v_ready THEN
      PERFORM pg_notify(
        'kds_event',
        json_build_object(
          'type',      'ticket_all_ready',
          'ticket_id', v_ticket_id,
          'pg',        v_pg_id,
          'ts',        now()
        )::text
      );
END IF;
-- Todos terminados (DONE) -> usado por voz-events.php
    IF v_total > 0 AND v_total = v_done THEN
      PERFORM pg_notify(
        'kds_event',
        json_build_object(
          'type',      'ticket_all_done',
          'ticket_id', v_ticket_id,
          'pg',        v_pg_id,
          'ts',        now()
        )::text
      );
END IF;
END IF;
RETURN NEW;
END;
$$ LANGUAGE plpgsql;
-- 2) Triggers (se rehacen por si existen)

-- kitchen_ticket_item: insert + update de status
DROP TRIGGER IF EXISTS trg_kds_notify_kti ON public.kitchen_ticket_item;
-- ticket_item: insert (aparecer al instante en KDS) + update de status (por si Floreant escribe ahÃ­)
DROP TRIGGER IF EXISTS trg_kds_notify_ti ON public.ticket_item;
\n-- END triger_KDS.sql\n

-- Compat PG95: triggers para subtotal en precorte cash (public y selempos)
DO $$ BEGIN
IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema='public' AND table_name='pc_precorte_cash_count') THEN
  EXECUTE $$CREATE OR REPLACE FUNCTION public.pc_precorte_cash_count_biu() RETURNS trigger AS $$ BEGIN NEW.subtotal := NEW.denom * NEW.qty; RETURN NEW; END; $$ LANGUAGE plpgsql;$$;
$$;
END IF;
IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema='selempos' AND table_name='selempos_precorte_cash') THEN
  EXECUTE $$CREATE OR REPLACE FUNCTION selempos.selempos_precorte_cash_biu() RETURNS trigger AS $$ BEGIN NEW.subtotal := NEW.denom * NEW.qty;
RETURN NEW;
END;
$$ LANGUAGE plpgsql;
$$;
EXECUTE $$DO $$ BEGIN BEGIN CREATE TRIGGER selempos_precorte_cash_biu BEFORE INSERT OR UPDATE ON selempos.selempos_precorte_cash FOR EACH ROW EXECUTE FUNCTION selempos.selempos_precorte_cash_biu(); EXCEPTION WHEN duplicate_object THEN NULL; END; END $$;
$$;
END IF;
END $$;
-- END DEPLOY_CONSOLIDADO_FULL_PG95-20251017-0953.sql

-- BEGIN DEPLOY_CONSOLIDADO_PG95-20251017-0949.sql
-- DEPLOY CONSOLIDADO PG95
-- Fecha: 10/17/2025 09:49:04
SET client_min_messages TO warning;
SET search_path TO selemti, public;
-- 2. CREAR USUARIO DEDICADO
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'selemti_user') THEN
        CREATE USER selemti_user WITH PASSWORD 'selemti_password_2024';
        RAISE NOTICE 'Usuario selemti_user creado exitosamente';
    ELSE
        RAISE NOTICE 'Usuario selemti_user ya existe';
    END IF;
END
$$;
-- 3. OTORGAR PERMISOS
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT CREATE ON SCHEMA selemti TO selemti_user;
-- 4. PERMISOS DE LECTURA ENTRE ESQUEMAS
GRANT USAGE ON SCHEMA public TO selemti_user;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO selemti_user;
-- 5. CONFIGURAR SEARCH PATH
ALTER USER selemti_user SET search_path = 'selemti, public';
RAISE NOTICE 'Script 00 ejecutado exitosamente';
\n-- END 00_esquema_selemti.sql\n
\n-- BEGIN 01_tablas_maestras.sql\n
-- =====================================================
-- SCRIPT 01: TABLAS MAESTRAS BASE
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
COMMENT ON TABLE selemti.users IS 'Usuarios del sistema con sus credenciales y estado';
COMMENT ON TABLE selemti.user_roles IS 'AsignaciÃ³n de roles a usuarios (RBAC)';
COMMENT ON TABLE selemti.items IS 'Maestro de todos los Ã­tems del sistema (insumos, productos terminados, categorÃ­as, ubicaciones)';
COMMENT ON TABLE selemti.inventory_batch IS 'Control de lotes para trazabilidad APPCC';
COMMENT ON TABLE selemti.mov_inv IS 'Kardex - Libro mayor de inventario. Cada movimiento genera un registro aquÃ­';
COMMENT ON TABLE selemti.audit_log IS 'Registro completo de auditorÃ­a para cumplimiento APPCC y seguridad';
-- INSERTAR CÃ“DIGOS DE ERROR ESTÃNDAR
INSERT INTO selemti.error_codes VALUES 
('INV-001', 'BUSINESS', 'HIGH', 'Stock insuficiente para el Ã­tem %s. Stock actual: %s, requerido: %s', 'Intento de movimiento que causarÃ­a stock negativo', 'Verificar inventario fÃ­sico o recibir mercancÃ­a'),
('INV-002', 'BUSINESS', 'CRITICAL', 'Lote %s estÃ¡ bloqueado por motivo: %s', 'Intento de usar lote con estado BLOQUEADO o RECALL', 'Contactar al auditor APPCC para liberar el lote'),
('SEC-001', 'SECURITY', 'HIGH', 'Intento de acceso no autorizado al recurso %s por usuario %s', 'ViolaciÃ³n de control de acceso RBAC', 'Verificar asignaciÃ³n de roles y permisos');
RAISE NOTICE 'Script 01 (Tablas maestras) ejecutado exitosamente';
\n-- END 01_tablas_maestras.sql\n
\n-- BEGIN 02_modulo_inventario.sql\n
-- =====================================================
-- SCRIPT 02: MÃ“DULO DE INVENTARIO (8 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA INVENTARIO
CREATE SEQUENCE selemti.recepcion_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.traspaso_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.ajuste_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.conteo_daily_seq START WITH 1 INCREMENT BY 1;
RAISE NOTICE 'Script 02 (MÃ³dulo Inventario - 8 tablas) ejecutado exitosamente';
\n-- END 02_modulo_inventario.sql\n
\n-- BEGIN 03_modulo_recetas.sql\n
-- =====================================================
-- SCRIPT 03: MÃ“DULO DE RECETAS/PRODUCCIÃ“N (6 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA RECETAS/PRODUCCIÃ“N
CREATE SEQUENCE selemti.op_daily_seq START WITH 1 INCREMENT BY 1;
COMMENT ON TABLE selemti.receta_cab IS 'Maestro de recetas/platos del menÃº del restaurante';
COMMENT ON TABLE selemti.receta_det IS 'Detalle de ingredientes y sub-recetas que componen una receta';
RAISE NOTICE 'Script 03 (MÃ³dulo Recetas - 6 tablas) ejecutado exitosamente';
\n-- END 03_modulo_recetas.sql\n
\n-- BEGIN 04_modulo_ventas.sql\n
-- =====================================================
-- SCRIPT 04: MÃ“DULO DE VENTAS/KDS (5 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR ESTACIONES POR DEFECTO
INSERT INTO selemti.kds_estaciones VALUES 
('COCINA_CALIENTE', 'Cocina Caliente', 'PreparaciÃ³n de platos que requieren cocciÃ³n', 'Ãrea principal cocina', NULL, 10, 15, true, NULL, NOW(), NOW()),
('COCINA_FRIA', 'Cocina FrÃ­a', 'PreparaciÃ³n de ensaladas y entradas frÃ­as', 'Ãrea refrigerada cocina', NULL, 8, 10, true, NULL, NOW(), NOW()),
('BARRA', 'Barra', 'PreparaciÃ³n de bebidas y cocteles', 'Barra principal', NULL, 12, 8, true, NULL, NOW(), NOW()),
('POSTRES', 'Postres', 'PreparaciÃ³n de postres y dulces', 'Ãrea postres', NULL, 6, 12, true, NULL, NOW(), NOW()),
('PANADERIA', 'PanaderÃ­a', 'PreparaciÃ³n de pan y reposterÃ­a', 'Ãrea hornos', NULL, 5, 20, true, NULL, NOW(), NOW());
RAISE NOTICE 'Script 04 (MÃ³dulo Ventas/KDS - 5 tablas) ejecutado exitosamente';
\n-- END 04_modulo_ventas.sql\n
\n-- BEGIN 05_modulo_caja.sql\n
-- =====================================================
-- SCRIPT 05: MÃ“DULO DE CAJA (3 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
RAISE NOTICE 'Script 05 (MÃ³dulo Caja - 3 tablas) ejecutado exitosamente';
\n-- END 05_modulo_caja.sql\n
\n-- BEGIN 06_modulo_appcc.sql\n
-- =====================================================
-- SCRIPT 06: MÃ“DULO APPCC (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR PUNTOS DE CONTROL APPCC BÃSICOS
INSERT INTO selemti.appcc_puntos_control VALUES 
(1, 'PCC-RECEP-001', 'RecepciÃ³n Productos Perecederos', 'RECEPCION', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control de temperatura', 'Temperatura <= 4Â°C para productos refrigerados', 'CADA LOTE', 'Personal AlmacÃ©n', 'Rechazar lote y notificar al proveedor', true, 1, NOW(), NULL, NOW(), NOW()),
(2, 'PCC-ALM-001', 'Almacenamiento Refrigerado', 'ALMACENAMIENTO', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control temperatura neveras', 'Temperatura entre 0Â°C y 4Â°C', 'CADA 4 HORAS', 'Personal Cocina', 'Ajustar temperatura y verificar productos', true, 1, NOW(), NULL, NOW(), NOW()),
(3, 'PCC-COC-001', 'CocciÃ³n de Alimentos', 'COCCION', 'Supervivencia de microorganismos', 'BIOLOGICO', 'Control temperatura interna', 'Temperatura interna >= 75Â°C por 2 minutos', 'CADA BATCH', 'Chef', 'Extender tiempo de cocciÃ³n', true, 1, NOW(), NULL, NOW(), NOW());
RAISE NOTICE 'Script 06 (MÃ³dulo APPCC - 4 tablas) ejecutado exitosamente';
\n-- END 06_modulo_appcc.sql\n
\n-- BEGIN 07_modulo_configuracion.sql\n
-- =====================================================
-- SCRIPT 07: MÃ“DULO DE CONFIGURACIÃ“N (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR PARÃMETROS CRÃTICOS DEL SISTEMA
INSERT INTO selemti.parametros_sistema VALUES 
(1, 'INV_TOLERANCIA_DIFERENCIA', 'Tolerancia para diferencias de inventario', '0.05', 'NUMERICO', 'INVENTARIO', 'Tolerancia permitida para diferencias en conteos fÃ­sicos (5%)', '0.05', true, false, NULL, NOW(), NOW()),
(2, 'CAJA_TOLERANCIA_EFECTIVO', 'Tolerancia para diferencias de efectivo', '50.00', 'NUMERICO', 'CAJA', 'Tolerancia en pesos para diferencias de caja sin requerir aprobaciÃ³n', '50.00', true, false, NULL, NOW(), NOW()),
(3, 'APPCC_FRECUENCIA_MONITOREO', 'Frecuencia de monitoreo APPCC', '4', 'NUMERICO', 'APPCC', 'Horas entre monitoreos de puntos crÃ­ticos', '4', true, true, NULL, NOW(), NOW()),
(4, 'KDS_TIEMPO_MAX_PREPARACION', 'Tiempo mÃ¡ximo de preparaciÃ³n', '30', 'NUMERICO', 'VENTAS', 'Tiempo mÃ¡ximo en minutos para preparaciÃ³n de platos', '30', true, false, NULL, NOW(), NOW()),
(5, 'SISTEMA_MODO_MANTENIMIENTO', 'Modo mantenimiento del sistema', 'false', 'BOOLEANO', 'GENERAL', 'Activa el modo mantenimiento del sistema', 'false', true, true, NULL, NOW(), NOW()),
(6, 'INV_POLITICA_CONSUMO', 'PolÃ­tica de consumo de inventario', 'FEFO', 'TEXTO', 'INVENTARIO', 'PolÃ­tica por defecto para consumo de inventario (FEFO/PEPS)', 'FEFO', true, false, NULL, NOW(), NOW());
-- INSERTAR UBICACIONES BÃSICAS
INSERT INTO selemti.ubicaciones VALUES 
('UBIC-BODEGA1', 'Bodega Principal', 'BODEGA', 'SUR', 18.0, 1000.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-REFRIG1', 'Refrigerador Carnes', 'REFRIGERADOR', 'SUR', 4.0, 200.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-CONGEL1', 'Congelador Pescados', 'CONGELADOR', 'SUR', -18.0, 150.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-BARRA', 'Barra Principal', 'BARRA', 'SUR', 8.0, 50.0, NULL, true, NULL, NOW(), Now());
-- INSERTAR CATEGORÃAS BÃSICAS
INSERT INTO selemti.categorias_items VALUES 
('CAT-PROTEINA', 'ProteÃ­nas', 'Carnes, pescados, aves', 'INSUMO', NULL, '1101', 5.0, 7, true, NOW(), NOW()),
('CAT-LACTEO', 'LÃ¡cteos', 'Leche, queso, yogurt', 'INSUMO', NULL, '1102', 3.0, 10, true, NOW(), NOW()),
('CAT-VERDURA', 'Verduras', 'Verduras frescas', 'INSUMO', NULL, '1103', 8.0, 5, true, NOW(), NOW()),
('CAT-BEBIDA', 'Bebidas', 'Refrescos, jugos, agua', 'INSUMO', NULL, '1104', 1.0, 30, true, NOW(), NOW()),
('CAT-MENU', 'Platos del MenÃº', 'Productos terminados para venta', 'PRODUCTO_TERMINADO', NULL, '2101', 2.0, 1, true, NOW(), NOW());
RAISE NOTICE 'Script 07 (MÃ³dulo ConfiguraciÃ³n - 4 tablas) ejecutado exitosamente';
\n-- END 07_modulo_configuracion.sql\n
\n-- BEGIN 08_datos_iniciales.sql\n
-- =====================================================
-- SCRIPT 08: DATOS INICIALES DEL SISTEMA
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- 1. CREAR USUARIO ADMINISTRADOR INICIAL
INSERT INTO selemti.users (username, password_hash, email, nombre_completo, sucursal_id, activo) VALUES 
('admin', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'admin@restaurante.com', 'Administrador del Sistema', 'SUR', true);
-- 2. ASIGNAR ROLES AL ADMINISTRADOR
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(1, 'GERENTE', 1),
(1, 'CHEF', 1),
(1, 'ALMACEN', 1),
(1, 'CAJERO', 1),
(1, 'AUDITOR', 1);
-- 3. CREAR USUARIOS DE EJEMPLO POR ROL
INSERT INTO selemti.users (username, password_hash, nombre_completo, sucursal_id, activo) VALUES 
('chef.juan', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Juan PÃ©rez - Chef', 'SUR', true),
('almacen.maria', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'MarÃ­a GarcÃ­a - AlmacÃ©n', 'SUR', true),
('caja.carlos', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Carlos LÃ³pez - Cajero', 'SUR', true);
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(2, 'CHEF', 1),
(3, 'ALMACEN', 1),
(4, 'CAJERO', 1);
-- 4. INSERTAR ÃTEMS DE EJEMPLO (MATERIAS PRIMAS)
INSERT INTO selemti.items (id, nombre, categoria_id, unidad_medida, perishable, temperatura_min, temperatura_max) VALUES 
('PROT-POLLO-PECHUGA-1KG', 'Pechuga de Pollo', 'CAT-PROTEINA', 'KG', true, 0, 4),
('PROT-SALMON-FRESCO-1KG', 'SalmÃ³n Fresco', 'CAT-PROTEINA', 'KG', true, -2, 2),
('VERD-LECHUGA-ROMA-1KG', 'Lechuga Romana', 'CAT-VERDURA', 'KG', true, 1, 4),
('VERD-TOMATE-ROJO-1KG', 'Tomate Rojo', 'CAT-VERDURA', 'KG', true, 10, 15),
('LACT-QUESO-MOZZARELLA-1KG', 'Queso Mozzarella', 'CAT-LACTEO', 'KG', true, 2, 6),
('BEBID-AGUA-1LT', 'Agua Purificada', 'CAT-BEBIDA', 'LT', false, NULL, NULL);
-- 5. INSERTAR RECETAS DE EJEMPLO
INSERT INTO selemti.receta_cab (id, codigo_plato_pos, nombre_plato, categoria_cocina, tipo_preparacion, tiempo_preparacion_min, rendimiento_porciones, nivel_dificultad, activo, usuario_creador, costo_standard_porcion, precio_venta_sugerido) VALUES 
('REC-CEVICHE-CLASICO', 'CEV-001', 'Ceviche ClÃ¡sico', 'PLATO_FUERTE', 'FRIA', 20, 4, 'MEDIA', true, 1, 45.00, 180.00),
('REC-ENSALADA-CESAR', 'ENS-001', 'Ensalada CÃ©sar', 'ENTRADA', 'FRIA', 15, 2, 'BAJA', true, 1, 35.00, 120.00);
-- 6. INSERTAR DETALLES DE RECETAS
INSERT INTO selemti.receta_det (receta_id, item_id, tipo_componente, cantidad_bruta, porcentaje_merma, cantidad_neta, orden_mezcla, tipo_medida) VALUES 
('REC-CEVICHE-CLASICO', 'PROT-SALMON-FRESCO-1KG', 'INGREDIENTE', 0.500, 10.00, 0.450, 1, 'PESO'),
('REC-CEVICHE-CLASICO', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.200, 5.00, 0.190, 2, 'PESO'),
('REC-ENSALADA-CESAR', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.300, 5.00, 0.285, 1, 'PESO'),
('REC-ENSALADA-CESAR', 'LACT-QUESO-MOZZARELLA-1KG', 'INGREDIENTE', 0.100, 2.00, 0.098, 2, 'PESO');
-- 7. ACTUALIZAR FOREIGN KEYS PENDIENTES
-- Actualizar recepcion_cab con referencia a proveedores
UPDATE selemti.recepcion_cab SET proveedor_id = 'PROV-CARNICOS-LA-PALMA' WHERE proveedor_id IS NOT NULL;
-- 8. CREAR PROVEEDORES DE EJEMPLO
INSERT INTO selemti.proveedores (codigo, nombre, tipo_proveedor, categoria_calidad, activo) VALUES 
('PROV-CARNICOS-LA-PALMA', 'CÃ¡rnicos La Palma', 'ALIMENTOS', 'A', true),
('PROV-PESCADOS-FRESCOS', 'Pescados Frescos del PacÃ­fico', 'ALIMENTOS', 'A', true),
('PROV-HORTALIZAS-ORGANICAS', 'Hortalizas OrgÃ¡nicas', 'ALIMENTOS', 'B', true);
RAISE NOTICE 'Script 08 (Datos iniciales) ejecutado exitosamente';
\n-- END 08_datos_iniciales.sql\n
\n-- BEGIN 09_indices_optimizacion.sql\n
-- =====================================================
-- SCRIPT 09: ÃNDICES DE OPTIMIZACIÃ“N
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- VISTAS PARA CONSULTAS FRECUENTES
CREATE OR REPLACE VIEW selemti.v_stock_actual AS
SELECT 
    item_id,
    ubicacion_id,
    SUM(CASE WHEN tipo_movimiento = 'E' THEN cantidad ELSE -cantidad END) as stock_actual
FROM selemti.mov_inv
GROUP BY item_id, ubicacion_id;
CREATE OR REPLACE VIEW selemti.v_stock_por_lote_fefo AS
SELECT 
    b.item_id,
    b.id as batch_id,
    b.lote_proveedor,
    b.fecha_caducidad,
    b.ubicacion_id,
    b.cantidad_actual as stock_lote,
    b.estado
FROM selemti.inventory_batch b
WHERE b.estado = 'ACTIVO' 
AND b.cantidad_actual > 0
ORDER BY b.fecha_caducidad ASC;
RAISE NOTICE 'Script 09 (Ãndices de optimizaciÃ³n) ejecutado exitosamente';
RAISE NOTICE 'âœ… ESQUEMA SELETI COMPLETADO - 30 TABLAS CREADAS';
\n-- END 09_indices_optimizacion.sql\n
\n-- BEGIN 010.delta_full_plus.sql\n
/* ======================================================================
   010.delta_full_plus.sql
   Selemti - Deltas finales de modelo para operaciÃ³n multi-UOM, elaborados,
   traspasos, stock policies y mermas. PG â‰¥ 9.5
   ====================================================================== */

SET client_min_messages = WARNING;
SET TIME ZONE 'America/Mexico_City';
SET search_path TO selemti, public;
/* --------------------------------------------------------------
   A) UOM original en movimientos (fidelidad operativa)
   -------------------------------------------------------------- */
-- Se asume que selemti.unidades_medida ya existe (GR, ML, PZ, etc.)

-- Kardex: cantidad en canÃ³nica ya existe (cantidad/qty). Agregamos
-- qty_original + uom_original_id para preservar la UOM de la transacciÃ³n.
ALTER TABLE IF EXISTS selemti.mov_inv
  ADD COLUMN IF NOT EXISTS qty_original NUMERIC(14,6),
  ADD COLUMN IF NOT EXISTS uom_original_id INT REFERENCES selemti.unidades_medida(id);
-- items: tipologÃ­a + UOM de salida (para recetas/OP)
ALTER TABLE IF EXISTS selemti.items
  ADD COLUMN IF NOT EXISTS tipo selemti.producto_tipo,
  ADD COLUMN IF NOT EXISTS unidad_salida_id INT REFERENCES selemti.unidades_medida(id);
-- ticket_venta_det: capturar los modificadores aplicados por lÃ­nea
ALTER TABLE IF EXISTS selemti.ticket_venta_det
  ADD COLUMN IF NOT EXISTS modificadores_aplicados JSONB;
/* --------------------------------------------------------------
   H) Vista de mermas por Ã­tem (operativa semanal)
   -------------------------------------------------------------- */
CREATE OR REPLACE VIEW selemti.v_merma_por_item AS
SELECT
  m.item_id,
  date_trunc('week', m.ts)::date AS semana,
  SUM(CASE WHEN m.tipo = 'MERMA' THEN m.cantidad ELSE 0 END)                AS qty_mermada,  -- en canÃ³nica
  SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) AS qty_recibida,
  CASE 
    WHEN SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END) > 0
    THEN ROUND(
      100.0 * SUM(CASE WHEN m.tipo='MERMA' THEN m.cantidad ELSE 0 END) /
      NULLIF(SUM(CASE WHEN m.tipo IN ('RECEPCION','COMPRA') THEN m.cantidad ELSE 0 END),0)
    , 2)
    ELSE 0
  END AS merma_pct
FROM selemti.mov_inv m
GROUP BY 1,2;
/* --------------------------------------------------------------
   K) Defaults razonables / semillas mÃ­nimas (opcional)
   -------------------------------------------------------------- */
-- FEFO como default para sucursal "PRINCIPAL" si no existe
INSERT INTO selemti.param_sucursal (sucursal_id, consumo)
SELECT 'PRINCIPAL', 'FEFO'
WHERE NOT EXISTS (SELECT 1 FROM selemti.param_sucursal WHERE sucursal_id='PRINCIPAL');
/* ======================================================================
   FIN 010.delta_full_plus.sql
   - Compatibilidad PG 9.5
   - No usa particiones ni funciones avanzadas de versiÃ³n posterior.
   - Ejecutable mÃºltiples veces sin romper consistencia.
   ====================================================================== */

\n-- END 010.delta_full_plus.sql\n
\n-- BEGIN 011.delta_merma_desperdicio_porciones.sql\n
/* ======================================================================
   011.delta_merma_desperdicio_porciones.sql
   Complemento: Merma vs Desperdicio + Porcionamiento de preparaciones
   Compatibilidad: PostgreSQL 9.5, idempotente
   Supone: esquema selemti, OP/lotes internos, mov_inv y ticket_venta_* existentes
   ====================================================================== */

SET client_min_messages = WARNING;
SET TIME ZONE 'America/Mexico_City';
SET search_path TO selemti, public;
/* --------------------------------------------------------------
   3) Cierre de lote preparado (remanente â†’ merma o desperdicio)
   -------------------------------------------------------------- */
-- Al finalizar el turno/dÃ­a o al vencimiento, registra el remanente de una
-- preparaciÃ³n (lote interno) como salida + log de pÃ©rdida con clase.
-- Esta funciÃ³n no hace cÃ¡lculos de FEFO/PEPS, asume lote explÃ­cito.
CREATE OR REPLACE FUNCTION selemti.cerrar_lote_preparado(
  p_lote_id       BIGINT,
  p_clase         selemti.merma_clase,      -- 'MERMA' o 'DESPERDICIO'
  p_motivo        TEXT,
  p_usuario_id    INT DEFAULT NULL,
  p_uom_id        INT DEFAULT NULL          -- si envÃ­as qty_original/uom
) RETURNS BIGINT AS $$
DECLARE
  v_item_id        TEXT;
v_qty_disponible NUMERIC(14,6);
v_mov_id         BIGINT;
BEGIN
  -- Disponibilidad del lote (en canÃ³nica)
  SELECT b.item_id,
         COALESCE(SUM(CASE WHEN m.signo IS NULL THEN 0 ELSE m.signo * m.cantidad END),0)
  INTO   v_item_id, v_qty_disponible
  FROM   selemti.inventory_batch b
  LEFT JOIN selemti.v_kardex_por_lote m ON m.lote_id = b.id        -- o suma de mov_inv por lote
  WHERE  b.id = p_lote_id
  GROUP  BY b.item_id;
IF v_item_id IS NULL THEN
    RAISE EXCEPTION 'Lote % no existe', p_lote_id;
END IF;
IF v_qty_disponible IS NULL OR v_qty_disponible <= 0 THEN
    RETURN 0;
-- nada que cerrar
  END IF;
-- 3.1) Registrar salida en kardex (MERMA operativa)
  INSERT INTO selemti.mov_inv (
    ts, item_id, lote_id, cantidad, qty_original, uom_original_id,
    tipo, ref_tipo, ref_id, sucursal_id
  )
  VALUES (
    now(), v_item_id, p_lote_id, 0 - v_qty_disponible, NULL, p_uom_id,
    'MERMA', 'CIERRE_PREP', p_lote_id, NULL
  )
  RETURNING id INTO v_mov_id;
-- 3.2) Log de pÃ©rdida con clase (MERMA/DESPERDICIO)
  INSERT INTO selemti.perdida_log (
    ts, item_id, lote_id, clase, motivo, qty_canonica, uom_original_id,
    usuario_id, ref_tipo, ref_id
  ) VALUES (
    now(), v_item_id, p_lote_id, p_clase, p_motivo, v_qty_disponible, p_uom_id,
    p_usuario_id, 'CIERRE_PREP', v_mov_id
  );
RETURN v_mov_id;
END;
$$ LANGUAGE plpgsql;
/* --------------------------------------------------------------
   4) Vistas KPI: Merma vs Desperdicio y Rendimiento de preparaciÃ³n
   -------------------------------------------------------------- */
-- 4.1) KPI por semana y clase (MERMA/DESPERDICIO)
CREATE OR REPLACE VIEW selemti.v_perdida_clase_semana AS
SELECT
  item_id,
  date_trunc('week', ts)::date AS semana,
  clase,
  SUM(qty_canonica) AS qty_canonica
FROM selemti.perdida_log
GROUP BY 1,2,3;
-- 4.2) Rendimiento de preparaciÃ³n: usa OP (teÃ³rico) vs entregado (real) y consumo registrado
-- Nota: ajusta nombres de tablas de OP/lotes internos segÃºn tu esquema.
-- Este es un esqueleto que asume:
--   - selemti.op_produccion (id, receta_id, qty_planeada, qty_real, lote_resultado_id, ts_cierre)
--   - v_kardex_por_lote suma mov_inv por lote.
CREATE OR REPLACE VIEW selemti.v_rendimiento_preparacion AS
SELECT
  op.id                       AS op_id,
  op.receta_id,
  op.lote_resultado_id        AS lote_id,
  op.qty_planeada,
  op.qty_real,
  (CASE WHEN op.qty_planeada IS NULL OR op.qty_planeada=0 THEN NULL
        ELSE ROUND(100.0 * op.qty_real / op.qty_planeada, 2) END) AS rendimiento_pct,
  kardex.saldo_final_canonica AS saldo_lote_canonica,
  (CASE WHEN op.qty_real IS NULL OR op.qty_real=0 THEN NULL
        ELSE ROUND(100.0 * kardex.saldo_final_canonica / op.qty_real, 2) END) AS sobrante_pct
FROM selemti.op_produccion op
LEFT JOIN (
  SELECT
    lote_id,
    SUM(CASE WHEN signo IS NULL THEN 0 ELSE signo * cantidad END) AS saldo_final_canonica
  FROM selemti.v_kardex_por_lote   -- o arma una suma de mov_inv por lote
  GROUP BY lote_id
) kardex ON kardex.lote_id = op.lote_resultado_id;
/* --------------------------------------------------------------
   5) Vista de porciones por ticket (para preparaciones compartidas)
   -------------------------------------------------------------- */
CREATE OR REPLACE VIEW selemti.v_porciones_por_ticket AS
SELECT
  tdc.ticket_id,
  tdc.ticket_det_id,
  tdc.item_id       AS insumo_preparado,
  tdc.lote_id,
  SUM(tdc.qty_canonica) AS qty_total_canonica,
  COUNT(*)              AS usos
FROM selemti.ticket_det_consumo tdc
GROUP BY 1,2,3,4;
\n-- END precorte.sql\n
\n-- BEGIN Triger_corte_final.sql\n
-- ===========================================
--  SELEM POS â€” Despliegue auxiliar (v0.1)
--  Compatibilidad: PostgreSQL 9.5+
--  Objetivo: conciliaciÃ³n por sesiÃ³n de cajÃ³n
--  Autor: Tavo+ChatGPT
-- ===========================================

-- ===========================================
-- 0) DIAGNÃ“STICO (opcional pero recomendado)
--    Esto NO crea objetos;
imprime cÃ³mo se llaman
--    las columnas relevantes para alinear mapeos.
-- ===========================================
DO $diag$
DECLARE
  tx_time_col TEXT;
tx_amt_col  TEXT;
tx_pay_col  TEXT;
tx_type_col TEXT;
tk_close_col TEXT;
dah_assign_col TEXT;
dah_release_col TEXT;
term_balance_col TEXT;
BEGIN
  RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (transactions) ===';
SELECT column_name INTO tx_time_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('tx_time','transaction_time','created','date','time','paid_time')
   ORDER BY CASE column_name
              WHEN 'tx_time' THEN 1
              WHEN 'transaction_time' THEN 2
              WHEN 'created' THEN 3
              WHEN 'date' THEN 4
              WHEN 'time' THEN 5
              WHEN 'paid_time' THEN 6
            END
   LIMIT 1;
SELECT column_name INTO tx_amt_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('amount','total','value','amt')
   LIMIT 1;
SELECT column_name INTO tx_pay_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('payment_type','tender_type','pay_type','method','payment_code')
   LIMIT 1;
SELECT column_name INTO tx_type_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('transaction_type','type','txn_type')
   LIMIT 1;
RAISE NOTICE 'transactions: tiempo=% , monto=% , payment=% , txn_type=%',
               COALESCE(tx_time_col,'(NO ENCONTRADO)'),
               COALESCE(tx_amt_col,'(NO ENCONTRADO)'),
               COALESCE(tx_pay_col,'(NO ENCONTRADO)'),
               COALESCE(tx_type_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (ticket) ===';
SELECT column_name INTO tk_close_col
    FROM information_schema.columns
   WHERE table_name='ticket'
     AND column_name IN ('closed_time','close_time','paid_time','modified_time','update_time')
   LIMIT 1;
RAISE NOTICE 'ticket: closed_time=%', COALESCE(tk_close_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (drawer_assigned_history) ===';
SELECT column_name INTO dah_assign_col
    FROM information_schema.columns
   WHERE table_name='drawer_assigned_history'
     AND column_name IN ('assigned_time','assigned_at','created','start_time')
   LIMIT 1;
SELECT column_name INTO dah_release_col
    FROM information_schema.columns
   WHERE table_name='drawer_assigned_history'
     AND column_name IN ('released_time','released_at','end_time','closed')
   LIMIT 1;
RAISE NOTICE 'drawer_assigned_history: assigned=% , released=%',
               COALESCE(dah_assign_col,'(NO ENCONTRADO)'),
               COALESCE(dah_release_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÃ“STICO DE ESQUEMA (terminal) ===';
SELECT column_name INTO term_balance_col
    FROM information_schema.columns
   WHERE table_name='terminal'
     AND column_name IN ('current_balance','opening_balance','balance')
   LIMIT 1;
RAISE NOTICE 'terminal: current_balance=%', COALESCE(term_balance_col,'(NO ENCONTRADO)');
END
$diag$;
-- ===========================================
-- 1) PARÃMETROS (ajusta SOLO si tu esquema difiere)
--    Si el diagnÃ³stico anterior te dio otros nombres,
--    cÃ¡mbialos aquÃ­ para que todo funcione.
-- ===========================================
DO $params$
BEGIN
  -- Mapa de columnas de transactions
  PERFORM set_config('selempos.tx_time_col',  'tx_time',            true);
PERFORM set_config('selempos.tx_amount_col','amount',             true);
PERFORM set_config('selempos.tx_pay_col',   'payment_type',       true);
PERFORM set_config('selempos.tx_type_col',  'transaction_type',   true);
-- ticket cerrado
  PERFORM set_config('selempos.ticket_closed_col','closed_time',    true);
-- drawer_assigned_history tiempos
  PERFORM set_config('selempos.dah_assigned_col','assigned_time',   true);
PERFORM set_config('selempos.dah_released_col','released_time',   true);
-- terminal balance
  PERFORM set_config('selempos.terminal_balance_col','current_balance', true);
END
$params$;
-- Helper para referenciar columnas configuradas
CREATE OR REPLACE FUNCTION selempos_col(name TEXT)
RETURNS TEXT LANGUAGE sql IMMUTABLE AS $$
  SELECT current_setting(name,true)
$$;
INSERT INTO selempos.selempos_payment_map(code, match_expr) VALUES
('CASH','CASH'),
('DEBIT','DEBIT'),
('CREDIT','CREDIT'),
('TRANSFER','TRANSFER')
ON CONFLICT DO NOTHING;
-- ===========================================
-- 3) VISTAS DE TOTALES POR SESIÃ“N
-- ===========================================
-- 3.1 ventas por forma de pago en ventana de sesiÃ³n
CREATE OR REPLACE VIEW selempos.selempos_vw_session_sales AS
WITH base AS (
  SELECT
    s.id AS session_id,
    t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC AS amount,
    pm.code AS payment_code
  FROM selempos.selempos_drawer_session s
  JOIN transactions t
    ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
   AND t.(SELECT selempos_col('selempos.tx_time_col')) < COALESCE(s.closed_at, now())
   AND t.terminal_id = s.terminal_id
   AND t.user_id     = s.cashier_user_id
  JOIN selempos.selempos_payment_map pm
    ON (t.(SELECT selempos_col('selempos.tx_pay_col'))  = pm.match_expr
     OR  t.(SELECT selempos_col('selempos.tx_type_col')) = pm.match_expr)
)
SELECT session_id, payment_code, SUM(amount) AS amount
FROM base
GROUP BY session_id, payment_code;
-- 3.2 descuentos (ajusta si tus descuentos estÃ¡n en otras tablas)
-- Si tus descuentos viven en ticket_discount/ticket_item_discount con timestamp y user/terminal:
CREATE OR REPLACE VIEW selempos.selempos_vw_session_discounts AS
SELECT s.id AS session_id, COALESCE(SUM(d.amount),0) AS discounts
FROM selempos.selempos_drawer_session s
LEFT JOIN ticket_discount d
  ON d.created_at >= s.opened_at
 AND d.created_at <  COALESCE(s.closed_at, now())
 AND d.terminal_id = s.terminal_id
 AND d.user_id     = s.cashier_user_id
GROUP BY s.id;
-- 3.3 anulaciones/devoluciones (VOID/REFUND) sobre ticket
CREATE OR REPLACE VIEW selempos.selempos_vw_session_voids AS
SELECT s.id AS session_id,
       COALESCE(SUM(CASE WHEN tk.status IN ('VOID','REFUND') THEN tk.total ELSE 0 END),0) AS void_total
FROM selempos.selempos_drawer_session s
LEFT JOIN ticket tk
  ON tk.(SELECT selempos_col('selempos.ticket_closed_col')) >= s.opened_at
 AND tk.(SELECT selempos_col('selempos.ticket_closed_col')) <  COALESCE(s.closed_at, now())
 AND tk.terminal_id = s.terminal_id
 AND tk.owner_id    = s.cashier_user_id
GROUP BY s.id;
-- 3.4 retiros/egresos (payouts/expenses) en ventana
CREATE OR REPLACE VIEW selempos.selempos_vw_session_payouts AS
SELECT s.id AS session_id, COALESCE(SUM(t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC),0) AS payouts
FROM selempos.selempos_drawer_session s
JOIN transactions t
  ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
 AND t.(SELECT selempos_col('selempos.tx_time_col')) <  COALESCE(s.closed_at, now())
 AND t.terminal_id = s.terminal_id
 AND t.user_id     = s.cashier_user_id
WHERE t.(SELECT selempos_col('selempos.tx_type_col')) IN ('PAYOUT','EXPENSE')
GROUP BY s.id;
-- 3.5 devoluciones EN EFECTIVO (si aplica)
CREATE OR REPLACE VIEW selempos.selempos_vw_session_cash_refunds AS
SELECT s.id AS session_id,
       COALESCE(SUM(t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC),0) AS cash_refunds
FROM selempos.selempos_drawer_session s
JOIN transactions t
  ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
 AND t.(SELECT selempos_col('selempos.tx_time_col')) <  COALESCE(s.closed_at, now())
 AND t.terminal_id = s.terminal_id
 AND t.user_id     = s.cashier_user_id
WHERE (t.(SELECT selempos_col('selempos.tx_type_col')) IN ('REFUND','RETURN') OR t.status='REFUND')
  AND (t.(SELECT selempos_col('selempos.tx_pay_col')) = 'CASH' OR t.(SELECT selempos_col('selempos.tx_type_col')) = 'CASH')
GROUP BY s.id;
-- 3.6 balance sintetizado con esperado en caja
CREATE OR REPLACE VIEW selempos.selempos_vw_session_balance AS
SELECT
  s.id AS session_id,
  s.terminal_id,
  s.cashier_user_id,
  s.opened_at,
  s.closed_at,
  s.status,
  s.opening_float,
  COALESCE(SUM(CASE WHEN sales.payment_code='CASH' THEN sales.amount END),0) AS sys_cash,
  COALESCE(SUM(CASE WHEN sales.payment_code IN ('DEBIT','CREDIT','TRANSFER') THEN sales.amount END),0) AS sys_non_cash,
  COALESCE(vd.discounts,0)  AS sys_discounts,
  COALESCE(vv.void_total,0) AS sys_voids,
  COALESCE(vp.payouts,0)    AS sys_payouts,
  COALESCE(vcr.cash_refunds,0) AS sys_cash_refunds,
  ( s.opening_float
    + COALESCE(SUM(CASE WHEN sales.payment_code='CASH' THEN sales.amount END),0)
    - COALESCE(vp.payouts,0)
    - COALESCE(vcr.cash_refunds,0)
  ) AS sys_expected_cash
FROM selempos.selempos_drawer_session s
LEFT JOIN selempos.selempos_vw_session_sales       sales ON sales.session_id = s.id
LEFT JOIN selempos.selempos_vw_session_discounts   vd    ON vd.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_voids       vv    ON vv.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_payouts     vp    ON vp.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_cash_refunds vcr  ON vcr.session_id   = s.id
GROUP BY s.id, s.terminal_id, s.cashier_user_id, s.opened_at, s.closed_at, s.status,
         s.opening_float, vd.discounts, vv.void_total, vp.payouts, vcr.cash_refunds;
-- ===========================================
-- 4) TRIGGERS DE SINCRONIZACIÃ“N CON ASIGNACIÃ“N DE CAJÃ“N
--    Al asignar: crea sesiÃ³n y toma snapshot de terminal.current_balance
--    Al liberar: cierra ventana y avanza estado
-- ===========================================
CREATE OR REPLACE FUNCTION selempos.selempos_fn_on_drawer_assigned_ins()
RETURNS TRIGGER LANGUAGE plpgsql AS
$$
DECLARE
  v_opening NUMERIC(12,2) := 0;
v_exists  BIGINT;
v_assigned_col TEXT := current_setting('selempos.dah_assigned_col', true);
v_bal_col      TEXT := current_setting('selempos.terminal_balance_col', true);
v_assigned_ts  TIMESTAMPTZ;
v_sql TEXT;
BEGIN
  -- obtener assigned_time (columna parametrizada)
  v_sql := format('SELECT ($1).%I::timestamptz', v_assigned_col);
EXECUTE v_sql USING NEW INTO v_assigned_ts;
-- snapshot del fondo en terminal.current_balance (columna parametrizada)
  v_sql := format('SELECT COALESCE(%I,0)::numeric FROM terminal WHERE id = $1', v_bal_col);
EXECUTE v_sql INTO v_opening USING NEW.terminal_id;
-- evitar duplicados por reintentos
  SELECT s.id INTO v_exists
  FROM selempos.selempos_drawer_session s
  WHERE s.terminal_id      = NEW.terminal_id
    AND s.cashier_user_id  = NEW.user_id
    AND s.opened_at        = COALESCE(v_assigned_ts, now());
IF v_exists IS NULL THEN
    INSERT INTO selempos.selempos_drawer_session(
      terminal_id, cashier_user_id, drawer_assigned_history_id,
      opened_at, status, opening_float, created_by
    )
    VALUES (
      NEW.terminal_id, NEW.user_id, NEW.id,
      COALESCE(v_assigned_ts, now()), 'ACTIVE', v_opening, NEW.user_id
    );
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_selempos_drawer_assigned_ins ON drawer_assigned_history;
-- Cierre de sesiÃ³n al liberar cajÃ³n
CREATE OR REPLACE FUNCTION selempos.selempos_fn_on_drawer_assigned_upd()
RETURNS TRIGGER LANGUAGE plpgsql AS
$$
DECLARE
  v_released_col TEXT := current_setting('selempos.dah_released_col', true);
v_released_ts  TIMESTAMPTZ;
v_sql TEXT;
BEGIN
  IF NEW IS DISTINCT FROM OLD THEN
    v_sql := format('SELECT ($1).%I::timestamptz', v_released_col);
EXECUTE v_sql USING NEW INTO v_released_ts;
IF v_released_ts IS NOT NULL THEN
      UPDATE selempos.selempos_drawer_session s
      SET closed_at = v_released_ts,
          status = CASE WHEN s.status='ACTIVE' THEN 'READY_FOR_CUT' ELSE s.status END
      WHERE s.drawer_assigned_history_id = NEW.id
        AND s.closed_at IS NULL;
END IF;
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_selempos_drawer_assigned_upd ON drawer_assigned_history;
-- ===========================================
-- 5) COMPROBACIONES RÃPIDAS
-- ===========================================
-- Â¿Sesiones activas?
-- SELECT * FROM selempos.selempos_drawer_session ORDER BY id DESC LIMIT 20;
-- Â¿Balance por sesiÃ³n?
-- SELECT * FROM selempos.selempos_vw_session_balance ORDER BY session_id DESC LIMIT 20;
-- ===========================================
-- FIN
-- ===========================================

\n-- END Triger_corte_final.sql\n
\n-- BEGIN triger_KDS.sql\n
-- Canal: kds_event
-- Requiere PostgreSQL >= 9.4 (usas 9.5, OK)

-- 1) FunciÃ³n de notificaciÃ³n
CREATE OR REPLACE FUNCTION public.kds_notify()
RETURNS trigger AS
$$
DECLARE
  v_ticket_id INT;
v_pg_id     INT;
v_item_id   INT;
v_status    TEXT;
v_total     INT;
v_ready     INT;
v_done      INT;
v_type      TEXT;
BEGIN
  /*
    Esta funciÃ³n se dispara desde:
    - kitchen_ticket_item (insert/update status)
    - ticket_item        (insert/update status)
  */

  IF TG_TABLE_NAME = 'kitchen_ticket_item' THEN
    -- Cambios en cocina
    v_item_id := COALESCE(NEW.ticket_item_id, NEW.id);
SELECT ti.ticket_id, ti.pg_id
      INTO v_ticket_id, v_pg_id
    FROM ticket_item ti
    WHERE ti.id = v_item_id;
v_status := UPPER(COALESCE(NEW.status,''));
v_type   := CASE WHEN TG_OP = 'INSERT' THEN 'item_upsert' ELSE 'item_status' END;
PERFORM pg_notify(
      'kds_event',
      json_build_object(
        'type',      v_type,
        'ticket_id', v_ticket_id,
        'pg',        v_pg_id,
        'item_id',   v_item_id,
        'status',    v_status,
        'ts',        now()
      )::text
    );
ELSIF TG_TABLE_NAME = 'ticket_item' THEN
    -- Nuevos Ã­tems o actualizaciones de estado en ticket_item
    v_item_id   := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id     := NEW.pg_id;
v_status    := UPPER(COALESCE(NEW.status,''));
IF TG_OP = 'INSERT' THEN
      v_type := 'item_insert';
ELSE
      v_type := 'item_status';
END IF;
PERFORM pg_notify(
      'kds_event',
      json_build_object(
        'type',      v_type,
        'ticket_id', v_ticket_id,
        'pg',        v_pg_id,
        'item_id',   v_item_id,
        'status',    v_status,
        'ts',        now()
      )::text
    );
END IF;
-- Si tenemos contexto de ticket y Ã¡rea (pg), verificamos agregados
  IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
    SELECT
      COUNT(*) AS total,
      COUNT(*) FILTER (
        WHERE UPPER(COALESCE(kti.status, ti.status, '')) IN ('READY','DONE')
      ) AS ready,
      COUNT(*) FILTER (
        WHERE UPPER(COALESCE(kti.status, ti.status, '')) = 'DONE'
      ) AS done
    INTO v_total, v_ready, v_done
    FROM ticket_item ti
    LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
    WHERE ti.ticket_id = v_ticket_id
      AND ti.pg_id     = v_pg_id;
-- Todos listos (READY o DONE)
    IF v_total > 0 AND v_total = v_ready THEN
      PERFORM pg_notify(
        'kds_event',
        json_build_object(
          'type',      'ticket_all_ready',
          'ticket_id', v_ticket_id,
          'pg',        v_pg_id,
          'ts',        now()
        )::text
      );
END IF;
-- Todos terminados (DONE) -> usado por voz-events.php
    IF v_total > 0 AND v_total = v_done THEN
      PERFORM pg_notify(
        'kds_event',
        json_build_object(
          'type',      'ticket_all_done',
          'ticket_id', v_ticket_id,
          'pg',        v_pg_id,
          'ts',        now()
        )::text
      );
END IF;
END IF;
RETURN NEW;
END;
$$ LANGUAGE plpgsql;
-- 2) Triggers (se rehacen por si existen)

-- kitchen_ticket_item: insert + update de status
DROP TRIGGER IF EXISTS trg_kds_notify_kti ON public.kitchen_ticket_item;
-- ticket_item: insert (aparecer al instante en KDS) + update de status (por si Floreant escribe ahÃ­)
DROP TRIGGER IF EXISTS trg_kds_notify_ti ON public.ticket_item;
-- 3.2 vw_conversion_sugerida â€” corregir ORDER BY para DISTINCT ON
DROP VIEW IF EXISTS selemti.vw_conversion_sugerida;
-- =====================================================================
--  FIN HOTFIX v2
-- =====================================================================

\n-- END selemti_hotfix_pg95_v2.sql\n
\n-- BEGIN selemti_post_hotfix_checks_v2.sql\n

-- Checks v2
SELECT 'alert_cfg_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='alert_cfg'
) AS ok;
SELECT 'merma_policy_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='merma_policy'
) AS ok;
SELECT 'ui_prefs_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='ui_prefs'
) AS ok;
SELECT 'vw_bom_menu_item_ok' AS check, pg_get_viewdef('selemti.vw_bom_menu_item'::regclass) ILIKE '%name::text%' 
  AND pg_get_viewdef('selemti.vw_bom_menu_item'::regclass) ILIKE '%percentage::numeric%' AS ok;
SELECT 'vw_conv_ok_order' AS check, pg_get_viewdef('selemti.vw_conversion_sugerida'::regclass) ILIKE '%ORDER BY ct.item_id, COALESCE(ct.vendor_id,-1), ct.presentacion, ct.preferred DESC, ct.id DESC%' AS ok;
-- Unique partials present
SELECT 'uq_alert_cfg_metric_null_scope' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_alert_cfg_metric_null_scope'
) AS ok;
SELECT 'uq_merma_policy_sucursal_categoria' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_merma_policy_sucursal_categoria'
) AS ok;
SELECT 'uq_ui_prefs_sucursal_key' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_ui_prefs_sucursal_key'
) AS ok;
\n-- END selemti_post_hotfix_checks_v2.sql\n

-- Compat PG95: trigger para subtotal en pc_precorte_cash_count
DO $$ BEGIN
IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema='public' AND table_name='pc_precorte_cash_count') THEN
  EXECUTE $$
    CREATE OR REPLACE FUNCTION public.pc_precorte_cash_count_biu() RETURNS trigger AS $$
    BEGIN NEW.subtotal := NEW.denom * NEW.qty; RETURN NEW; END; $$ LANGUAGE plpgsql;
  $$;
$$;
END IF;
END $$;
-- END DEPLOY_CONSOLIDADO_PG95-20251017-0949.sql

-- BEGIN Floreant_Insight_corte_15_09_2025.sql
--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.0
-- Dumped by pg_dump version 9.5.0

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
SET search_path = public, pg_catalog;
--
-- Data for Name: cash_drawer_reset_history;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY cash_drawer_reset_history (id, reset_time, user_id) FROM stdin;
30	2025-09-15 03:23:15.067	1
31	2025-09-15 03:50:51.958	1
32	2025-09-15 04:44:41.19	7
33	2025-09-15 04:49:33.073	1
34	2025-09-15 05:14:59.653	7
35	2025-09-15 07:11:57.932	1
36	2025-09-15 16:31:37.598	1
37	2025-09-15 20:24:21.418	1
38	2025-09-15 21:48:02.085	1
\.


--
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('cash_drawer_reset_history_id_seq', 38, true);
--
-- Data for Name: custom_payment;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY custom_payment (id, name, required_ref_number, ref_number_field_name) FROM stdin;
1	Tranferencia	t	Nombre
\.


--
-- Name: custom_payment_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('custom_payment_id_seq', 1, true);
--
-- Data for Name: drawer_assigned_history;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY drawer_assigned_history (id, "time", operation, a_user) FROM stdin;
1	2025-08-15 06:00:50.176	ASIGNAR	1
2	2025-08-15 12:21:24.808	ASIGNAR	7
3	2025-08-15 12:55:56.962	CERRAR	7
4	2025-08-15 12:57:34.556	CERRAR	1
5	2025-08-15 13:04:45.032	ASIGNAR	6
6	2025-08-15 13:04:51.516	CERRAR	6
7	2025-08-15 13:33:57.629	ASIGNAR	6
8	2025-08-15 13:40:42.266	CERRAR	6
9	2025-08-15 13:40:59.187	ASIGNAR	6
10	2025-08-15 14:06:24.506	ASIGNAR	6
11	2025-08-15 18:54:46.848	CERRAR	6
12	2025-08-16 08:31:01.765	CERRAR	6
13	2025-08-16 09:30:40.619	ASIGNAR	6
14	2025-08-16 09:43:10.427	ASIGNAR	7
15	2025-08-16 16:58:24.067	CERRAR	6
16	2025-08-16 17:15:10.01	CERRAR	7
17	2025-08-16 17:22:52.894	ASIGNAR	1
18	2025-08-18 08:24:07.202	ASIGNAR	6
19	2025-08-18 08:25:00.513	ASIGNAR	7
20	2025-08-18 18:27:24.265	CERRAR	7
21	2025-08-18 18:46:15.361	CERRAR	6
22	2025-08-19 09:05:22.407	ASIGNAR	6
23	2025-08-19 10:42:04.823	ASIGNAR	8
24	2025-08-19 18:42:43.713	CERRAR	6
25	2025-08-19 18:47:00.868	CERRAR	8
26	2025-08-20 09:10:26.782	ASIGNAR	6
27	2025-08-20 10:39:52.787	ASIGNAR	8
28	2025-08-20 19:11:36.357	CERRAR	6
29	2025-08-20 19:24:21.261	CERRAR	8
30	2025-09-06 12:00:13.49	CERRAR	1
31	2025-09-06 12:00:23.439	ASIGNAR	1
32	2025-09-06 12:02:11.03	CERRAR	1
33	2025-09-06 12:41:25.871	ASIGNAR	1
34	2025-09-08 09:48:29.382	CERRAR	1
35	2025-09-08 09:48:40.857	ASIGNAR	1
36	2025-09-10 12:06:59.291	CERRAR	1
37	2025-09-10 12:07:32.624	ASIGNAR	1
38	2025-09-11 00:26:49.689	CERRAR	1
39	2025-09-11 00:28:52.636	ASIGNAR	1
40	2025-09-12 04:59:12.848	CERRAR	1
41	2025-09-12 04:59:49.617	ASIGNAR	1
42	2025-09-12 19:53:01.416	CERRAR	1
43	2025-09-12 19:53:58.175	ASIGNAR	1
44	2025-09-13 01:43:02.907	CERRAR	1
45	2025-09-13 01:43:23.001	ASIGNAR	1
46	2025-09-14 18:40:29.403	CERRAR	1
47	2025-09-14 20:47:33.978	ASIGNAR	1
48	2025-09-14 20:52:25.525	CERRAR	1
49	2025-09-14 21:01:07.943	ASIGNAR	1
50	2025-09-14 22:39:52.953	CERRAR	1
51	2025-09-14 22:41:33.358	ASIGNAR	1
52	2025-09-14 22:47:21.021	CERRAR	1
53	2025-09-14 23:27:26.917	ASIGNAR	1
54	2025-09-15 02:59:54.308	CERRAR	1
55	2025-09-15 03:00:35.213	ASIGNAR	6
56	2025-09-15 03:05:46.307	CERRAR	6
57	2025-09-15 03:06:45.012	ASIGNAR	1
58	2025-09-15 03:08:07.505	CERRAR	1
59	2025-09-15 03:18:41.726	ASIGNAR	1
60	2025-09-15 03:23:15.124	CERRAR	1
61	2025-09-15 03:37:23.224	ASIGNAR	1
62	2025-09-15 03:50:52.011	CERRAR	1
63	2025-09-15 04:01:12.026	ASIGNAR	7
64	2025-09-15 04:44:41.197	CERRAR	7
65	2025-09-15 04:45:36.901	ASIGNAR	1
66	2025-09-15 04:49:33.073	CERRAR	1
67	2025-09-15 05:06:32.731	ASIGNAR	7
68	2025-09-15 05:14:59.657	CERRAR	7
69	2025-09-15 05:25:22.001	ASIGNAR	1
70	2025-09-15 07:11:57.936	CERRAR	1
71	2025-09-15 16:31:04.476	ASIGNAR	1
72	2025-09-15 16:31:37.598	CERRAR	1
73	2025-09-15 19:51:08.171	ASIGNAR	1
74	2025-09-15 20:24:21.418	CERRAR	1
75	2025-09-15 21:44:00.823	ASIGNAR	1
76	2025-09-15 21:48:02.091	CERRAR	1
\.


--
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('drawer_assigned_history_id_seq', 76, true);
--
-- Data for Name: drawer_pull_report;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY drawer_pull_report (id, report_time, reg, ticket_count, begin_cash, net_sales, sales_tax, cash_tax, total_revenue, gross_receipts, giftcertreturncount, giftcertreturnamount, giftcertchangeamount, cash_receipt_no, cash_receipt_amount, credit_card_receipt_no, credit_card_receipt_amount, debit_card_receipt_no, debit_card_receipt_amount, refund_receipt_count, refund_amount, receipt_differential, cash_back, cash_tips, charged_tips, tips_paid, tips_differential, pay_out_no, pay_out_amount, drawer_bleed_no, drawer_bleed_amount, drawer_accountable, cash_to_deposit, variance, delivery_charge, totalvoidwst, totalvoid, totaldiscountcount, totaldiscountamount, totaldiscountsales, totaldiscountguest, totaldiscountpartysize, totaldiscountchecksize, totaldiscountpercentage, totaldiscountratio, user_id, terminal_id) FROM stdin;
30	2025-09-15 03:23:14.957	\N	1	1500	135	0	0	135	135	0	0	0	1	135	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1635	635	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
31	2025-09-15 03:50:51.847	\N	1	0	130	0	0	130	130	0	0	0	1	130	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	130	630	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
32	2025-09-15 04:44:41.096	\N	1	0	180	0	0	180	180	0	0	0	1	180	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	180	680	0	0	0	0	0	0	0	0	0	0	0	0	7	9939
33	2025-09-15 04:49:32.92	\N	4	0	280	0	0	280	280	0	0	0	1	200	1	20	1	35	0	0	25	0	0	0	0	0	0	0	0	0	200	700	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
34	2025-09-15 05:14:59.463	\N	4	0	189	0	0	189	189	0	0	0	1	124	1	10	1	20	0	0	35	0	0	0	0	0	0	0	0	0	124	224	0	0	0	0	0	0	0	0	0	0	0	0	7	9939
35	2025-09-15 07:11:57.763	\N	3	0	158	0	0	158	158	0	0	0	1	55	1	25	1	78	0	0	0	0	0	0	0	0	1	20	1	10	25	525	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
36	2025-09-15 16:31:37.529	\N	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	500	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
37	2025-09-15 20:24:21.208	\N	6	0	445	0	0	445	445	0	0	0	2	115	1	50	1	75	0	0	205	0	0	0	0	0	0	0	0	0	115	315	0	0	0	0	0	0	0	0	0	0	0	0	1	9939
38	2025-09-15 21:48:01.881	\N	5	0	792	0	0	792	792	0	0	0	2	342	1	100	1	150	0	0	200	0	0	0	0	0	0	0	0	0	342	1542	0	0	0	0	1	100	0	1	1	1	0	0	1	9939
\.


--
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('drawer_pull_report_id_seq', 38, true);
--
-- Data for Name: drawer_pull_report_voidtickets;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY drawer_pull_report_voidtickets (dpreport_id, code, reason, hast, quantity, amount) FROM stdin;
\.


--
-- Data for Name: menu_item;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY menu_item (id, name, description, unit_name, translated_name, barcode, buy_price, stock_amount, price, discount_rate, visible, disable_when_stock_amount_is_zero, sort_order, btn_color, text_color, image, show_image_only, fractional_unit, pizza_type, default_sell_portion, group_id, tax_group_id, recepie, pg_id, tax_id) FROM stdin;
66	Agua de Sabor			Agua de Sabor		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
60	Agua Embotellada 1 L			Agua Embotellada 1 L		0	0	15	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
61	Agua Embotellada 500 ML			Agua Embotellada 500 ML		0	0	10	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
43	Americano			Americano		0	0	30	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
21	Boneless 10 pz			Boneless 10 pz		0	0	110	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	6	\N	\N	1	\N
22	Boneless 17 pz			Boneless 17 pz		0	0	158	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	6	\N	\N	1	\N
20	Boneless 5 pz			Boneless 5 pz		0	0	68	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	6	\N	\N	1	\N
87	CACAHUATE HORNEADO			CACAHUATE HORNEADO		12	0	18	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
44	Capuchino			Capuchino		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
50	CHAI LATTE			CHAI LATTE		0	0	55	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
69	Cheesecake Frambuesa			Cheesecake Frambuesa		0	0	40	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
70	Cheesecake Tortuga			Cheesecake Tortuga		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
33	Chilaquiles			Chilaquiles		0	0	50	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	9	\N	\N	1	\N
34	Chilaquiles Terrena			Chilaquiles Terrena		0	0	85	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	9	\N	\N	1	\N
71	Chocoflan			Chocoflan		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
51	Chocolatito			Chocolatito		0	0	40	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	16	\N	\N	2	\N
59	Chocomilk			Chocomilk		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	20	\N	\N	1	\N
25	Club Sándwich			Club Sándwich		0	0	60	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	7	\N	\N	1	\N
40	CÓCTEL DE FRUTAS			CÓCTEL DE FRUTAS		0	0	28	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	12	\N	\N	1	\N
41	CÓCTEL PREPARADO			CÓCTEL PREPARADO		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	12	\N	\N	1	\N
26	Cuernito Jamón con Queso			Cuernito Jamón/Queso		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	7	\N	\N	1	\N
65	Electrolit			Electrolit		0	0	30	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
6	Empanada			Empanada		0	0	16	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
9	Enchiladas			Enchiladas		0	0	50	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	2	\N	\N	1	\N
10	Enchiladas Terrena			Enchiladas Terrena		0	0	85	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	2	\N	\N	1	\N
35	Enfrijoladas			Enfrijoladas		0	0	50	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	10	\N	\N	1	\N
11	Enmoladas			Enmoladas		0	0	55	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	2	\N	\N	1	\N
17	Ensalada Atún			Ensalada Atún		0	0	95	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	3	\N	\N	1	\N
18	Ensalada Dulce			Ensalada Dulce		0	0	88	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	3	\N	\N	1	\N
19	Ensalada Pollo			Ensalada Pollo		0	0	95	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	3	\N	\N	1	\N
45	Espresso			Espresso		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
46	Espresso Cortado			Espresso Cortado		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
72	Galleta Chispas			Galleta Chispas		0	0	13	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
73	Gelatina con Yogurt			Gelatina con Yogurt		0	0	16	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
85	GREEN MOUNTAIN BARRA			GREEN MOUNTAIN BARRA		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
83	Halls			Halls		15	0	15	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	67	\N	\N	\N	\N
38	Hot Cakes			Hot Cakes		0	0	42	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	11	\N	\N	1	\N
39	Hot Cakes Terrena			Hot Cakes Terrena		0	0	58	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	11	\N	\N	1	\N
29	Huevos al Gusto			Huevos al Gusto		0	0	63	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
32	Huevos Divorciados			Huevos Divorciados		0	0	65	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
31	Huevos Rancheros			Huevos Rancheros		0	0	65	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
28	Huevos Sencillos			Huevos Sencillos		0	0	50	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
30	Huevos Tirados			Huevos Tirados		0	0	65	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
54	Jugo Naranja			Jugo Naranja		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	19	\N	\N	1	\N
56	Jugo Verde			Jugo Verde		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	19	\N	\N	1	\N
55	Jugo Zanahoria			Jugo Zanahoria		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	19	\N	\N	1	\N
84	KIRLAND BARRA PROTEINA			KIRLAND BARRA PROTEINA		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
47	Latte			Latte		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
48	Latte Sabor			Latte Sabor		0	0	55	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
58	Licuado			Licuado		0	0	38	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	20	\N	\N	1	\N
67	Limonada			Limonada		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
78	Limonada Mineral			Limonada Mineral		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	2	\N
80	MALANGA			MALANGA		0	0	28	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
57	Malteada			Malteada		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	20	\N	\N	1	\N
49	Matcha Latte			Matcha Latte		0	0	55	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	14	\N	\N	2	\N
86	MENU DEL DIA 			MENU DEL DIA 		0	0	65	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	4	\N	\N	1	\N
62	Mineral 600 ml			Mineral 600 ml		0	0	22	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
63	Mineral Twist 600 ml			Mineral Twist 600 ml		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
23	Mollete			Mollete		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	7	\N	\N	1	\N
74	Muffin			Muffin		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
68	Naranjada			Naranjada		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
79	Naranjada Mineral			Naranjada Mineral		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	2	\N
37	Omelette Espinacas & Champiñón			Omelette Espinacas & Champiñón		0	0	85	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
36	Omelette Jamon & Tocino			Omelette Jamon & Tocino		0	0	82	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	8	\N	\N	1	\N
81	Papas			Papas		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
15	Pasta Boloñesa			Pasta Boloñesa		0	0	82	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	4	\N	\N	1	\N
16	Pasta Pomodoro			Pasta Pomodoro		0	0	78	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	4	\N	\N	1	\N
75	Pastel Chocolate Matilda			Pastel Chocolate Matilda		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
76	Pastel Zanahoria			Pastel Zanahoria		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
77	Pay Limón			Pay Limón		0	0	35	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	21	\N	\N	\N	\N
2	Picada			Picada		0	0	38	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
8	Picada Terrena			Picada Terrena		0	0	68	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
82	Platanos			Platanos		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	66	\N	\N	\N	\N
13	Puchero de Pollo			Puchero de Pollo		0	0	50	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	4	\N	\N	1	\N
5	Quesadilla			Quesadilla		0	0	22	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
24	Sándwich			Sándwich		0	0	45	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	7	\N	\N	1	\N
14	Sopa Azteca			Sopa Azteca		0	0	52	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	4	\N	\N	1	\N
7	Taco de Guisado			Taco de Guisado		0	0	19	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
3	Taco Dorado			Taco Dorado		0	0	15	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	13	\N	\N	1	\N
42	Tacos de Guisado			Tacos de Guisado		0	0	19	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	13	\N	\N	1	\N
12	Tampiqueña			Tampiqueña		0	0	90	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	2	\N	\N	1	\N
53	Té (Sabores)			Té (Sabores)		0	0	20	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	16	\N	\N	2	\N
52	Té Manzana con Especias			Té Manzana con Especias		0	0	30	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	16	\N	\N	2	\N
64	Topo Chico 600 ml			Topo Chico 600 ml		0	0	25	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	18	\N	\N	\N	\N
27	Torta			Torta		0	0	38	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	7	\N	\N	1	\N
4	Tostadas			Tostadas		0	0	33	0	t	f	9999	-1250856	-16777216	\N	f	f	f	0	1	\N	\N	1	\N
\.


--
-- Name: menu_item_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('menu_item_id_seq', 87, true);
--
-- Data for Name: menu_modifier;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY menu_modifier (id, name, translated_name, price, extra_price, sort_order, btn_color, text_color, enable, fixed_price, print_to_kitchen, section_wise_pricing, pizza_modifier, group_id, tax_id) FROM stdin;
1	Pollo	Pollo	0	0	9999	-1250856	-16777216	f	f	t	f	f	3	2
6	Pollo	Pollo	0	0	9999	-1250856	-16777216	f	f	t	f	f	5	2
7	Jamón	Jamón	0	0	9999	-1250856	-16777216	f	f	t	f	f	5	2
2	Picadillo	Picadillo	0	0	9999	-1250856	-16777216	f	f	t	f	f	3	2
3	Queso	Queso	0	0	9999	-1250856	-16777216	f	f	t	f	f	3	2
4	Pollo	Pollo	0	0	9999	-1250856	-16777216	f	f	t	f	f	4	2
5	Papa	Papa	0	0	9999	-1250856	-16777216	f	f	t	f	f	4	2
8	Maíz	Maíz	0	0	9999	-1250856	-16777216	f	f	t	f	f	6	2
9	Harina	Harina	0	0	9999	-1250856	-16777216	f	f	t	f	f	6	2
10	Jamón	Jamón	0	0	9999	-1250856	-16777216	f	f	t	f	f	7	2
11	Chorizo	Chorizo	3	0	9999	-1250856	-16777216	f	f	t	f	f	7	2
12	Pastor	Pastor	13	0	9999	-1250856	-16777216	f	f	t	f	f	7	2
13	Champiñones	Champiñones	13	0	9999	-1250856	-16777216	f	f	t	f	f	7	2
67	Lechera	Lechera	0	0	9999	-1250856	-16777216	f	f	t	f	f	30	2
14	Verde	Verde	0	0	9999	-1250856	-16777216	f	f	t	f	f	8	2
15	Roja	Roja	0	0	9999	-1250856	-16777216	f	f	t	f	f	8	2
16	Chileseco	Chileseco	0	0	9999	-1250856	-16777216	f	f	t	f	f	8	2
17	Frijoles	Frijoles	0	0	9999	-1250856	-16777216	f	f	t	f	f	8	2
18	Sencilla	Sencilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	9	2
19	Huevo	Huevo	17	0	9999	-1250856	-16777216	f	f	t	f	f	9	2
20	Pollo	Pollo	20	0	9999	-1250856	-16777216	f	f	t	f	f	9	2
21	Chorizo	Chorizo	20	0	9999	-1250856	-16777216	f	f	t	f	f	9	2
27	Roja	Roja	0	0	9999	-1250856	-16777216	f	f	t	f	f	11	2
28	Verde	Verde	0	0	9999	-1250856	-16777216	f	f	t	f	f	11	2
29	Sencillas	Sencillas	0	0	9999	-1250856	-16777216	f	f	t	f	f	12	2
30	Pollo	Pollo	15	0	9999	-1250856	-16777216	f	f	t	f	f	12	2
31	Huevo	Huevo	15	0	9999	-1250856	-16777216	f	f	t	f	f	12	2
32	Jamón	Jamón	18	0	9999	-1250856	-16777216	f	f	t	f	f	12	2
33	Queso de Hebra	Queso de Hebra	18	0	9999	-1250856	-16777216	f	f	t	f	f	12	2
34	Milanesa	Milanesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	13	2
35	Pechuga	Pechuga	0	0	9999	-1250856	-16777216	f	f	t	f	f	13	2
36	Cecina	Cecina	10	0	9999	-1250856	-16777216	f	f	t	f	f	13	2
37	Arrachera	Arrachera	13	0	9999	-1250856	-16777216	f	f	t	f	f	13	2
42	Pechuga	Pechuga	0	0	9999	-1250856	-16777216	f	f	t	f	f	16	2
43	Cecina	Cecina	20	0	9999	-1250856	-16777216	f	f	t	f	f	16	2
44	Arrachera	Arrachera	30	0	9999	-1250856	-16777216	f	f	t	f	f	16	2
45	Milanesa	Milanesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	16	2
46	Estrellado	Estrellado	0	0	9999	-1250856	-16777216	f	f	t	f	f	17	2
47	Revuelto	Revuelto	0	0	9999	-1250856	-16777216	f	f	t	f	f	17	2
50	Cocido	Cocido	0	0	9999	-1250856	-16777216	f	f	t	f	f	18	2
48	Tierno	Tierno	0	0	9999	-1250856	-16777216	f	f	t	f	f	18	2
49	Medio	Medio	0	0	9999	-1250856	-16777216	f	f	t	f	f	18	2
51	Sencillas	Sencillas	0	0	9999	-1250856	-16777216	f	f	t	f	f	19	2
52	Pollo	Pollo	18	0	9999	-1250856	-16777216	f	f	t	f	f	19	2
53	Chorizo	Chorizo	18	0	9999	-1250856	-16777216	f	f	t	f	f	19	2
54	Huevo	Huevo	15	0	9999	-1250856	-16777216	f	f	t	f	f	19	2
55	Roja	Roja	0	0	9999	-1250856	-16777216	f	f	t	f	f	20	2
56	Verde	Verde	0	0	9999	-1250856	-16777216	f	f	t	f	f	20	2
57	Mole	Mole	0	0	9999	-1250856	-16777216	f	f	t	f	f	20	2
58	Huevo	Huevo	15	0	9999	-1250856	-16777216	f	f	t	f	f	21	2
59	Pollo	Pollo	15	0	9999	-1250856	-16777216	f	f	t	f	f	21	2
60	Jamón	Jamón	18	0	9999	-1250856	-16777216	f	f	t	f	f	21	2
61	Queso de Hebra	Queso de Hebra	18	0	9999	-1250856	-16777216	f	f	t	f	f	21	2
62	Milanesa	Milanesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	22	2
63	Pechuga	Pechuga	0	0	9999	-1250856	-16777216	f	f	t	f	f	22	2
64	Pastor	Pastor	0	0	9999	-1250856	-16777216	f	f	t	f	f	22	2
65	Cecina	Cecina	10	0	9999	-1250856	-16777216	f	f	t	f	f	22	2
66	Arrachera	Arrachera	13	0	9999	-1250856	-16777216	f	f	t	f	f	22	2
68	Cajeta	Cajeta	0	0	9999	-1250856	-16777216	f	f	t	f	f	30	2
69	Maple	Maple	0	0	9999	-1250856	-16777216	f	f	t	f	f	30	2
70	Mermelada de Fresa	Mermelada de Fresa	0	0	9999	-1250856	-16777216	f	f	t	f	f	30	2
71	Sencillo	Sencillo	0	0	9999	-1250856	-16777216	f	f	t	f	f	23	2
72	Chorizo	Chorizo	7	0	9999	-1250856	-16777216	f	f	t	f	f	23	2
73	Jamón y Queso	Jamón y Queso	7	0	9999	-1250856	-16777216	f	f	t	f	f	23	2
74	Jamón y Queso	Jamón y Queso	0	0	9999	-1250856	-16777216	f	f	t	f	f	24	2
75	Pollo	Pollo	2	0	9999	-1250856	-16777216	f	f	t	f	f	24	2
76	Pierna	Pierna	5	0	9999	-1250856	-16777216	f	f	t	f	f	24	2
77	Atún	Atún	5	0	9999	-1250856	-16777216	f	f	t	f	f	24	2
81	Pollo	Pollo	0	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
80	Jamón y Queso	Jamón y Queso	0	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
82	Choriqueso	Choriqueso	0	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
83	Huevo	Huevo	0	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
84	Chilaquiles	Chilaquiles	0	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
87	Carga extra Café	Carga extra Café	5	0	9999	-1250856	-16777216	f	f	t	f	f	26	2
39	Huevo	Huevo	13	0	9999	-1250856	-16777216	f	f	t	f	f	14	2
40	Jamón	Jamón	15	0	9999	-1250856	-16777216	f	f	t	f	f	14	2
38	Pollo	Pollo	13	0	9999	-1250856	-16777216	f	f	t	f	f	14	2
88	Chocolate	Chocolate	0	0	9999	-1250856	-16777216	f	f	t	f	f	27	2
79	Pierna	Pierna	7	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
78	Milanesa	Milanesa	7	0	9999	-1250856	-16777216	f	f	t	f	f	25	2
89	Vainilla	Vainilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	27	2
90	Choco-Plátano	Choco-Plátano	0	0	9999	-1250856	-16777216	f	f	t	f	f	28	2
91	Plátano	Plátano	0	0	9999	-1250856	-16777216	f	f	t	f	f	28	2
92	Fresa	Fresa	0	0	9999	-1250856	-16777216	f	f	t	f	f	28	2
93	Frutos rojos	Frutos rojos	4	0	9999	-1250856	-16777216	f	f	t	f	f	28	2
94	Chocolate	Chocolate	0	0	9999	-1250856	-16777216	f	f	t	f	f	29	2
95	Vainilla	Vainilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	29	2
96	2 Picadas	2 Picadas	0	0	9999	-1250856	-16777216	f	f	t	f	f	15	2
97	2 Enchiladas	2 Enchiladas	0	0	9999	-1250856	-16777216	f	f	t	f	f	15	2
98	2 Enmoladas	2 Enmoladas	0	0	9999	-1250856	-16777216	f	f	t	f	f	15	2
99	Jamón	Jamón	0	0	9999	-1250856	-16777216	f	f	t	f	f	31	2
100	Chorizo	Chorizo	0	0	9999	-1250856	-16777216	f	f	t	f	f	31	2
101	A la Mexicana	A la Mexicana	0	0	9999	-1250856	-16777216	f	f	t	f	f	31	2
102	Tocino	Tocino	0	0	9999	-1250856	-16777216	f	f	t	f	f	31	2
103	Ensalada	Ensalada	0	0	9999	-1250856	-16777216	f	f	t	f	f	32	2
104	Verduras	Verduras	0	0	9999	-1250856	-16777216	f	f	t	f	f	32	2
105	Fruta	Fruta	0	0	9999	-1250856	-16777216	f	f	t	f	f	32	2
106	Frijoles	Frijoles	0	0	9999	-1250856	-16777216	f	f	t	f	f	32	2
107	Papa con Chorizo	Papa con Chorizo	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
108	Milanesa	Milanesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
109	Pastor	Pastor	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
110	Pollo	Pollo	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
111	Mexicana	Mexicana	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
112	Molida	Molida	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
113	Costilla	Costilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
114	Huevo con Jamon	Huevo con Jamon	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
115	Huevo con Chorizo	Huevo con Chorizo	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
116	Rajas	Rajas	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
117	Salchicha	Salchicha	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
118	Carnitas	Carnitas	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
119	Chuleta	Chuleta	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
120	Huevo en Salsa	Huevo en Salsa	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
121	Chicharron	Chicharron	0	0	9999	-1250856	-16777216	f	f	t	f	f	33	2
25	Chorizo	Chorizo	0	0	9999	-1250856	-16777216	f	f	t	f	f	10	2
26	Arrachera	Arrachera	0	0	9999	-1250856	-16777216	f	f	t	f	f	10	2
23	Cecina	Cecina	0	0	9999	-1250856	-16777216	f	f	t	f	f	10	2
24	Pechuga	Pechuga	0	0	9999	-1250856	-16777216	f	f	t	f	f	10	2
22	Milanesa	Milanesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	10	2
122	Sencilla	Sencilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	14	2
41	Queso de Hebra	Queso de Hebra	15	0	9999	-1250856	-16777216	f	f	t	f	f	14	2
123	Caramelo	Caramelo	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
124	Cookies & Cream	Cookies & Cream	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
125	Crema de Avellana	Crema de Avellana	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
126	Crema Irlandesa	Crema Irlandesa	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
127	Moka	Moka	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
128	Vainilla	Vainilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	39	2
129	Vainilla	Vainilla	0	0	9999	-1250856	-16777216	f	f	t	f	f	40	2
130	Negro	Negro	0	0	9999	-1250856	-16777216	f	f	t	f	f	40	2
131	Verde	Verde	0	0	9999	-1250856	-16777216	f	f	t	f	f	40	2
132	Natrural	Natural	0	0	9999	-1250856	-16777216	f	f	t	f	f	41	2
133	Mineral	Mineral	5	0	9999	-1250856	-16777216	f	f	t	f	f	41	2
134	BBQ	BBQ	0	0	9999	-1250856	-16777216	f	f	t	f	f	34	2
135	Búfalo	Búfalo	0	0	9999	-1250856	-16777216	f	f	t	f	f	34	2
136	Mango-Habanero	Mango-Habanero	0	0	9999	-1250856	-16777216	f	f	t	f	f	34	2
137	Parmesano	Parmesano	0	0	9999	-1250856	-16777216	f	f	t	f	f	34	2
138	Habanero		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
139	Chipotle		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
140	Fuego		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
141	Jalapeño		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
142	Especias		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
143	Adobadas		0	0	9999	-1250856	-16777216	f	f	t	f	f	42	2
144	Mora azul		0	0	9999	-1250856	-16777216	f	f	t	f	f	\N	2
145	Fresa kiwi		0	0	9999	-1250856	-16777216	f	f	t	f	f	\N	2
146	Naranja mandarina		0	0	9999	-1250856	-16777216	f	f	t	f	f	\N	2
147	Ponche de frutas		0	0	9999	-1250856	-16777216	f	f	t	f	f	\N	2
148	Uva		0	0	9999	-1250856	-16777216	f	f	t	f	f	\N	2
150	Sencillos	Sencillos	0	0	9999	-1250856	-16777216	f	f	t	f	f	21	2
151	Fresa-Kiwi	Fresa-Kiwi	0	0	9999	-1250856	-16777216	f	f	t	f	f	43	2
153	Ponche de Frutas	Ponche de Frutas	0	0	9999	-1250856	-16777216	f	f	t	f	f	43	2
154	Fresa	Fresa	0	0	9999	-1250856	-16777216	f	f	t	f	f	43	2
155	Mora-Azul	Mora-Azul	0	0	9999	-1250856	-16777216	f	f	t	f	f	43	2
152	Naranja-Mandarina	Naranja-Mandarina	0	0	9999	-1250856	-16777216	f	f	t	f	f	43	2
156	C SALADO	C SALADO	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
157	C NATURAL	C NATURAL	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
158	C SAL Y LIMON	C SAL Y LIMON	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
159	C JALAPEÑO	C JALAPEÑO	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
160	C QUEXO	C QUEXO	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
163	C TOREADOS 	C TOREADOS 	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
164	C AJO CON CHILE 	C AJO CON CHILE 	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
165	C AL AJO 	C AL AJO 	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
161	C HABANERO AMARILLO	C HABANERO AMARILLO	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
162	C HABANERO VERDE 	C HABANERO VERDE	0	0	9999	-1250856	-16777216	f	f	t	f	f	47	2
\.


--
-- Data for Name: menu_modifier_group;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY menu_modifier_group (id, name, translated_name, enabled, exclusived, required) FROM stdin;
3	Relleno Empanada		f	f	f
4	Relleno Taco Dorado		f	f	f
5	Topping Tostada		f	f	f
6	Tortilla Quesadilla		f	f	f
7	Proteína Quesadilla		f	f	f
8	Salsa Picada		f	f	f
9	Proteína Picada		f	f	f
11	Salsa Enchiladas		f	f	f
12	Proteína Enchiladas Rellenas		f	f	f
13	Proteína Enchiladas Terrena		f	f	f
14	Proteína Enmoladas Rellenas		f	f	f
15	Opción Tampiqueña		f	f	f
16	Proteína Tampiqueña		f	f	f
17	Huevos – Tipo		f	f	f
18	Huevos – Término		f	f	f
19	Proteína Enfrijoladas		f	f	f
20	Salsa Chilaquiles		f	f	f
21	Proteína Chilaquiles		f	f	f
22	Proteína Chilaquiles Terrena		f	f	f
23	Proteína Mollete		f	f	f
24	Proteína Sándwich		f	f	f
25	Proteína Torta		f	f	f
26	Carga extra Café		f	f	f
27	Sabor Malteada		f	f	f
28	Sabor Licuado		f	f	f
29	Sabor Muffin		f	f	f
30	Topping Hot Cakes	Topping Hot Cakes	f	f	f
31	Proteína Huevo	Proteína Huevo	f	f	f
32	Guarnición Omelette	Guarnición Omelette	f	f	f
33	Tacos de Guisado	Tacos de Guisado	f	f	f
10	Proteína Picada Terrena	Proteína Picada Terrena	f	f	f
34	Salsas Boneless	Salsas Boneless	f	f	f
35	Proteína Enchilada	Proteína Enchilada	f	f	f
36	Complemento Huevo	Complemento Huevo	f	f	f
37	Extra Hot Cakes	Extra Hot Cakes	f	f	f
38	Relleno Taco Mañanero	Relleno Taco Mañanero	f	f	f
39	Sabor Latte	Sabor Latte	f	f	f
40	Sabor Chai Latte	Sabor Chai Latte	f	f	f
41	Opción Limonada / Naranjada	Opción Limonada / Naranjada	f	f	f
42	Sabor malanga		f	f	f
44	Sabor cacahuate		f	f	f
45	Sabor proteina		f	f	f
46	Sabor halls	Sabor halls	f	f	f
43	Sabor electrolit	Sabor electrolit	f	f	f
47	CACAHUATES HORNEADOS 		f	f	f
\.


--
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('menu_modifier_group_id_seq', 47, true);
--
-- Name: menu_modifier_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('menu_modifier_id_seq', 165, true);
--
-- Data for Name: payout_reasons;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY payout_reasons (id, reason) FROM stdin;
\.


--
-- Name: payout_reasons_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('payout_reasons_id_seq', 1, false);
--
-- Data for Name: payout_recepients;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY payout_recepients (id, name) FROM stdin;
\.


--
-- Name: payout_recepients_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('payout_recepients_id_seq', 1, false);
--
-- Data for Name: terminal;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY terminal (id, name, terminal_key, opening_balance, current_balance, has_cash_drawer, in_use, active, location, floor_id, assigned_user) FROM stdin;
301	301	bbd1d074-edf2-413f-bffc-20445966ff98	0	0	t	f	f	\N	0	\N
1090	Terminal 1090	f3b8703b-219e-4043-b8ee-20a4f3befe70	0	0	t	f	f	\N	0	\N
1091	Terminal 1091	d7dc0821-bdb4-468f-8b35-56f595a1affb	0	0	t	f	f	\N	0	\N
101	101	4e8a4290-b76c-444c-a37d-efe85b38968e	0	0	t	f	f	Principal	0	\N
102	102	dd332e72-2063-4355-9eaf-f17e1993b11c	0	0	t	f	f	Principal	0	\N
9939	Terminal 9939	073e81ee-ee1f-4de4-808f-498bee09fc1f	0	0	t	f	f	SelemTI	0	\N
\.


--
-- Data for Name: ticket_discount;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY ticket_discount (id, discount_id, name, type, auto_apply, minimum_amount, value, ticket_id) FROM stdin;
10	6	Rector	1	f	100	100	1020
\.


--
-- Name: ticket_discount_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('ticket_discount_id_seq', 10, true);
--
-- Data for Name: ticket_item;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY ticket_item (id, item_id, item_count, item_quantity, item_name, item_unit_name, group_name, category_name, item_price, item_tax_rate, sub_total, sub_total_without_modifiers, discount, tax_amount, tax_amount_without_modifiers, total_price, total_price_without_modifiers, beverage, inventory_handled, print_to_kitchen, treat_as_seat, seat_number, fractional_unit, has_modiiers, printed_to_kitchen, status, stock_amount_adjusted, pizza_type, size_modifier_id, ticket_id, pg_id, pizza_section_mode) FROM stdin;
1736	61	1	0	Agua Embotellada 500 ML	\N	REFRESCANTES	BEBIDAS FRÍAS	10	0	10	10	0	0	0	10	10	t	f	f	f	0	f	f	f	\N	t	f	\N	1005	\N	0
1726	48	1	0	Latte Sabor	\N	CAFÉ	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	999	2	0
1727	60	9	0	Agua Embotellada 1 L	\N	REFRESCANTES	BEBIDAS FRÍAS	15	0	135	135	0	0	0	135	135	t	f	f	f	0	f	f	f	\N	t	f	\N	999	\N	0
1715	50	1	0	CHAI LATTE	\N	CAFÉ	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	996	2	0
1745	81	1	0	Papas	\N	SNACKS	OTROS	25	0	25	25	0	0	0	25	25	f	f	t	f	0	f	f	t	Ready	t	f	\N	1009	\N	0
1746	82	1	0	Platanos	\N	SNACKS	OTROS	25	0	25	25	0	0	0	25	25	f	f	t	f	0	f	f	t	Ready	t	f	\N	1009	\N	0
1717	46	1	0	Espresso Cortado	\N	CAFÉ	BEBIDAS CALIENTES	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	t	f	\N	t	f	\N	997	2	0
1718	49	1	0	Matcha Latte	\N	CAFÉ	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	f	\N	t	f	\N	997	2	0
1719	46	1	0	Espresso Cortado	\N	CAFÉ	BEBIDAS CALIENTES	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	t	f	\N	t	f	\N	997	2	0
1720	46	1	0	Espresso Cortado	\N	CAFÉ	BEBIDAS CALIENTES	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	t	f	\N	t	f	\N	997	2	0
1728	61	1	0	Agua Embotellada 500 ML	\N	REFRESCANTES	BEBIDAS FRÍAS	10	0	10	10	0	0	0	10	10	t	f	f	f	0	f	f	f	\N	t	f	\N	999	\N	0
1729	68	1	0	Naranjada	\N	REFRESCANTES	BEBIDAS FRÍAS	20	0	20	20	0	0	0	20	20	t	f	f	f	0	f	f	f	\N	t	f	\N	1000	\N	0
1721	50	1	0	CHAI LATTE	\N	CAFÉ	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	998	2	0
1722	48	1	0	Latte Sabor	\N	CAFÉ	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	998	2	0
1723	66	1	0	Agua de Sabor	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	998	\N	0
1724	68	1	0	Naranjada	\N	REFRESCANTES	BEBIDAS FRÍAS	20	0	20	20	0	0	0	20	20	t	f	f	f	0	f	f	f	\N	t	f	\N	998	\N	0
1725	63	1	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	998	\N	0
1730	68	1	0	Naranjada	\N	REFRESCANTES	BEBIDAS FRÍAS	20	0	20	20	0	0	0	20	20	t	f	f	f	0	f	f	f	\N	t	f	\N	1001	\N	0
1731	60	1	0	Agua Embotellada 1 L	\N	REFRESCANTES	BEBIDAS FRÍAS	15	0	15	15	0	0	0	15	15	t	f	f	f	0	f	f	f	\N	t	f	\N	1001	\N	0
1732	63	1	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	1002	\N	0
1733	61	1	0	Agua Embotellada 500 ML	\N	REFRESCANTES	BEBIDAS FRÍAS	10	0	10	10	0	0	0	10	10	t	f	f	f	0	f	f	f	\N	t	f	\N	1003	\N	0
1734	68	1	0	Naranjada	\N	REFRESCANTES	BEBIDAS FRÍAS	20	0	20	20	0	0	0	20	20	t	f	f	f	0	f	f	f	\N	t	f	\N	1004	\N	0
1735	78	1	0	Limonada Mineral	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	1005	2	0
1743	50	1	0	CHAI LATTE	\N	CAFÉ	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	1007	2	0
1748	66	4	0	Agua de Sabor	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	100	100	0	0	0	100	100	t	f	f	f	0	f	f	f	\N	t	f	\N	1010	\N	0
1747	80	1	0	MALANGA	\N	SNACKS	OTROS	28	0	28	28	0	0	0	28	28	f	f	t	f	0	f	f	t	Ready	t	f	\N	1009	\N	0
1737	60	1	0	Agua Embotellada 1 L	\N	REFRESCANTES	BEBIDAS FRÍAS	15	0	15	15	0	0	0	15	15	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1738	68	1	0	Naranjada	\N	REFRESCANTES	BEBIDAS FRÍAS	20	0	20	20	8	0	0	12	12	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1739	66	1	0	Agua de Sabor	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1740	63	1	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1741	64	1	0	Topo Chico 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1742	62	1	0	Mineral 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	22	0	22	22	0	0	0	22	22	t	f	f	f	0	f	f	f	\N	t	f	\N	1006	\N	0
1744	81	1	0	Papas	\N	SNACKS	OTROS	25	0	25	25	0	0	0	25	25	f	f	t	f	0	f	f	t	Ready	t	f	\N	1008	\N	0
1714	47	1	0	Latte	\N	CAFÉ	BEBIDAS CALIENTES	45	0	45	45	0	0	0	45	45	t	f	f	f	0	f	f	f	\N	t	f	\N	996	2	0
1716	77	1	0	Pay Limón	\N	POSTRES	POSTRES	35	0	35	35	0	0	0	35	35	f	f	t	f	0	f	f	t	Ready	t	f	\N	996	\N	0
1749	64	2	0	Topo Chico 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	50	50	0	0	0	50	50	t	f	f	f	0	f	f	f	\N	t	f	\N	1011	\N	0
1750	63	3	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	75	75	0	0	0	75	75	t	f	f	f	0	f	f	f	\N	t	f	\N	1012	\N	0
1751	63	1	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	25	25	10	0	0	15	15	t	f	f	f	0	f	f	f	\N	t	f	\N	1013	\N	0
1752	63	5	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	125	125	0	0	0	125	125	t	f	f	f	0	f	f	f	\N	t	f	\N	1014	\N	0
1753	46	1	0	Espresso Cortado	\N	CAFÉ	BEBIDAS CALIENTES	25	0	25	25	0	0	0	25	25	t	f	f	f	0	f	t	t	\N	t	f	\N	1015	2	0
1754	48	1	0	Latte Sabor	\N	CAFÉ	BEBIDAS CALIENTES	55	0	55	55	0	0	0	55	55	t	f	f	f	0	f	t	t	\N	t	f	\N	1015	2	0
1755	60	7	0	Agua Embotellada 1 L	\N	REFRESCANTES	BEBIDAS FRÍAS	15	0	105	105	0	0	0	105	105	t	f	f	f	0	f	f	f	\N	t	f	\N	1016	\N	0
1756	63	4	0	Mineral Twist 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	100	100	0	0	0	100	100	t	f	f	f	0	f	f	f	\N	t	f	\N	1017	\N	0
1757	64	6	0	Topo Chico 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	150	150	0	0	0	150	150	t	f	f	f	0	f	f	f	\N	t	f	\N	1018	\N	0
1758	64	8	0	Topo Chico 600 ml	\N	REFRESCANTES	BEBIDAS FRÍAS	25	0	200	200	0	0	0	200	200	t	f	f	f	0	f	f	f	\N	t	f	\N	1019	\N	0
1759	80	5	0	MALANGA	\N	SNACKS	OTROS	28	0	140	140	0	0	0	140	140	f	f	t	f	0	f	f	t	\N	t	f	\N	1020	\N	0
1760	81	1	0	Papas	\N	SNACKS	OTROS	25	0	25	25	0	0	0	25	25	f	f	t	f	0	f	f	t	\N	t	f	\N	1020	\N	0
1761	82	9	0	Platanos	\N	SNACKS	OTROS	25	0	225	225	0	0	0	225	225	f	f	t	f	0	f	f	t	\N	t	f	\N	1021	\N	0
1762	85	1	0	GREEN MOUNTAIN BARRA	\N	SNACKS	OTROS	20	0	20	20	8	0	0	12	12	f	f	t	f	0	f	f	t	\N	t	f	\N	1021	\N	0
\.


--
-- Name: ticket_item_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('ticket_item_id_seq', 1762, true);
--
-- Data for Name: transactions;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY transactions (id, payment_type, global_id, transaction_time, amount, tips_amount, tips_exceed_amount, tender_amount, transaction_type, custom_payment_name, custom_payment_ref, custom_payment_field_name, payment_sub_type, captured, voided, authorizable, card_holder_name, card_number, card_auth_code, card_type, card_transaction_id, card_merchant_gateway, card_reader, card_aid, card_arqc, card_ext_data, gift_cert_number, gift_cert_face_value, gift_cert_paid_amount, gift_cert_cash_back_amount, drawer_resetted, note, terminal_id, ticket_id, user_id, payout_reason_id, payout_recepient_id) FROM stdin;
979	CASH	gjy1758621025705	2025-09-15 03:37:49.171	130	0	0	200	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	997	1	\N	\N
980	CASH	quq1758878292542	2025-09-15 04:01:40.532	180	0	0	180	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	998	7	\N	\N
984	CUSTOM_PAYMENT	kzz1759176928268	2025-09-15 04:47:23.011	25	0	0	25	CREDIT	Tranferencia	333	Nombre	CUSTOM PAYMENT	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1002	7	\N	\N
983	DEBIT_CARD	rny1754955660247	2025-09-15 04:47:11.88	35	0	0	35	CREDIT	\N	\N	\N	VISA	t	f	t	\N	\N	34	VISA	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1001	7	\N	\N
982	CREDIT_CARD	sof1756674630612	2025-09-15 04:46:44.339	20	0	0	20	CREDIT	\N	\N	\N	MASTER CARD	t	f	t	\N	\N	3	MASTER CARD	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1000	7	\N	\N
981	CASH	dfl1759651155964	2025-09-15 04:46:20.343	200	0	0	200	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	999	7	\N	\N
988	CASH	rwt1757305379851	2025-09-15 05:09:03.621	124	0	0	124	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1006	7	\N	\N
987	CUSTOM_PAYMENT	kpd1758119119567	2025-09-15 05:07:38.341	35	0	0	35	CREDIT	Tranferencia	4444	Nombre	CUSTOM PAYMENT	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1005	7	\N	\N
986	DEBIT_CARD	tii1759568030646	2025-09-15 05:07:22.853	20	0	0	20	CREDIT	\N	\N	\N	VISA	t	f	t	\N	\N	y	VISA	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1004	7	\N	\N
985	CREDIT_CARD	lnq1759180703154	2025-09-15 05:07:14.56	10	0	0	10	CREDIT	\N	\N	\N	AMEX	t	f	t	\N	\N	4	AMEX	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1003	7	\N	\N
993	DEBIT_CARD	npy1759095390939	2025-09-15 05:26:57.37	78	0	0	78	CREDIT	\N	\N	\N	VISA	t	f	t	\N	\N	7	VISA	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1009	1	\N	\N
992	CREDIT_CARD	ogj1758517995549	2025-09-15 05:26:33.415	25	0	0	25	CREDIT	\N	\N	\N	MASTER CARD	t	f	t	\N	\N	4	MASTER CARD	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1008	1	\N	\N
978	CASH	irs1756615382813	2025-09-15 03:18:47.314	135	0	0	135	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	996	1	\N	\N
991	PAY_OUT	vdq1758004100789	2025-09-15 05:25:59.288	20	0	0	0	DEBIT	\N	\N	\N	CASH	f	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t		9939	\N	1	\N	\N
990	CASH_DROP	uju1760493785106	2025-09-15 05:25:43.944	10	0	0	0	CREDIT	\N	\N	\N	CASH	f	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	\N	1	\N	\N
989	CASH	rho1755764039518	2025-09-15 05:25:30.591	55	0	0	55	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1007	1	\N	\N
1004	CASH	xsm1763397376836	2025-09-15 21:45:18.856	0	0	0	0	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1020	1	\N	\N
1005	CASH	nku1760255851474	2025-09-15 21:45:51.764	237	0	0	237	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1021	1	\N	\N
1000	CASH	ara1760093059342	2025-09-15 21:44:23.163	105	0	0	105	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1016	1	\N	\N
994	CASH	lhk1759187772455	2025-09-15 19:57:33.464	100	0	0	100	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1010	1	\N	\N
995	CREDIT_CARD	gvv1757208108996	2025-09-15 19:57:45.826	50	0	0	50	CREDIT	\N	\N	\N	AMEX	t	f	t	\N	\N	50	AMEX	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1011	1	\N	\N
996	DEBIT_CARD	mkt1759522180891	2025-09-15 19:58:13.452	75	0	0	75	CREDIT	\N	\N	\N	VISA	t	f	t	\N	\N	yy	VISA	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1012	1	\N	\N
997	CASH	wck1758619161633	2025-09-15 19:58:36.336	15	0	0	15	CREDIT	\N	\N	\N	CASH	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1013	1	\N	\N
998	CUSTOM_PAYMENT	xoi1761621612033	2025-09-15 19:58:53.434	125	0	0	125	CREDIT	Tranferencia	tavo	Nombre	CUSTOM PAYMENT	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1014	1	\N	\N
999	CUSTOM_PAYMENT	jhk1757993670627	2025-09-15 19:59:56.766	80	0	0	80	CREDIT	Tranferencia	4	Nombre	CUSTOM PAYMENT	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1015	1	\N	\N
1001	CREDIT_CARD	euj1756880644760	2025-09-15 21:44:36.675	100	0	0	100	CREDIT	\N	\N	\N	AMEX	t	f	t	\N	\N	44	AMEX	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1017	1	\N	\N
1002	DEBIT_CARD	gth1758129400597	2025-09-15 21:44:47.202	150	0	0	150	CREDIT	\N	\N	\N	VISA	t	f	t	\N	\N	777	VISA	\N	\N	EXTERNAL_TERMINAL	\N	\N	\N	\N	0	0	0	t	\N	9939	1018	1	\N	\N
1003	CUSTOM_PAYMENT	lhn1755030494363	2025-09-15 21:45:02.429	200	0	0	200	CREDIT	Tranferencia	ttt	Nombre	CUSTOM PAYMENT	t	f	f	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	0	0	t	\N	9939	1019	1	\N	\N
\.


--
-- Name: transactions_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('transactions_id_seq', 1005, true);
--
-- Data for Name: users;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY users (auto_id, user_id, user_pass, first_name, last_name, ssn, cost_per_hour, clocked_in, last_clock_in_time, last_clock_out_time, phone_no, is_driver, available_for_delivery, active, shift_id, currentterminal, n_user_type) FROM stdin;
9	20101	1988	Isabella	Fernández Román 		0	f	\N	\N		f	f	t	\N	\N	3
11	30101	230519	juan david	marinez tejeda		0	f	\N	\N		f	f	t	\N	\N	3
8	10100	2334	JOSE	HUESCA		0	t	2025-08-15 10:23:30.265	\N		f	f	t	1	102	2
7	10102	2222	Aldo Abraham 	Martinez Tejeda		0	t	2025-08-15 10:24:29.199	\N		f	f	t	1	102	3
10	20102	268405	Alexis Manuel	Ramirez Grajales		0	t	2025-08-15 12:33:16.846	\N		f	f	t	1	102	3
1	123	1111	Admin	System	123	0	t	2025-08-15 12:40:32.601	\N	\N	f	f	t	1	101	1
6	10101	211920	Jose Eumir 	Rodriguez Rranco		0	t	2025-08-15 10:58:16.273	\N		f	f	t	1	102	2
\.


--
-- Name: users_auto_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('users_auto_id_seq', 11, true);
--
-- Data for Name: void_reasons;
Type: TABLE DATA;
Schema: public;
Owner: floreant
--

COPY void_reasons (id, reason_text) FROM stdin;
1	rr
\.


--
-- Name: void_reasons_id_seq;
Type: SEQUENCE SET;
Schema: public;
Owner: floreant
--

SELECT pg_catalog.setval('void_reasons_id_seq', 1, true);
SET search_path = selemti, pg_catalog;
--
-- Data for Name: postcorte;
Type: TABLE DATA;
Schema: selemti;
Owner: postgres
--

COPY postcorte (id, sesion_id, sistema_efectivo_esperado, declarado_efectivo, diferencia_efectivo, veredicto_efectivo, sistema_tarjetas, declarado_tarjetas, diferencia_tarjetas, veredicto_tarjetas, creado_en, creado_por, notas) FROM stdin;
1	28	0.00	1500.00	1500.00	A_FAVOR	0.00	2.00	2.00	A_FAVOR	2025-09-15 19:49:37.527543-05	1	
2	29	0.00	315.00	315.00	A_FAVOR	0.00	125.00	125.00	A_FAVOR	2025-09-15 20:24:50.069671-05	1	
3	28	0.00	1500.00	1500.00	A_FAVOR	0.00	2.00	2.00	A_FAVOR	2025-09-15 20:30:09.694346-05	1	
4	28	0.00	1500.00	1500.00	A_FAVOR	0.00	2.00	2.00	A_FAVOR	2025-09-15 20:53:56.50664-05	1	
5	28	0.00	1500.00	1500.00	A_FAVOR	0.00	2.00	2.00	A_FAVOR	2025-09-15 20:54:13.141123-05	1	
6	30	0.00	1542.00	1542.00	A_FAVOR	0.00	250.00	250.00	A_FAVOR	2025-09-15 21:48:59.372951-05	1	
\.


--
-- Name: postcorte_id_seq;
Type: SEQUENCE SET;
Schema: selemti;
Owner: postgres
--

SELECT pg_catalog.setval('postcorte_id_seq', 6, true);
--
-- Data for Name: precorte;
Type: TABLE DATA;
Schema: selemti;
Owner: postgres
--

COPY precorte (id, sesion_id, declarado_efectivo, declarado_otros, estatus, creado_en, creado_por, ip_cliente, notas) FROM stdin;
14	22	0.00	0.00	ENVIADO	2025-09-15 03:23:17.715304-05	\N	\N	\N
15	23	0.00	0.00	ENVIADO	2025-09-15 03:37:28.341676-05	\N	\N	\N
16	24	0.00	0.00	ENVIADO	2025-09-15 04:01:17.388065-05	\N	\N	\N
17	25	0.00	0.00	ENVIADO	2025-09-15 04:45:42.429012-05	\N	\N	\N
18	26	0.00	0.00	ENVIADO	2025-09-15 05:08:08.522708-05	\N	\N	\N
19	27	188.00	103.00	ENVIADO	2025-09-15 05:49:08.979568-05	\N	\N	Prueba
20	28	1500.00	3.00	ENVIADO	2025-09-15 16:31:08.394322-05	\N	\N	\N
21	29	315.00	330.00	ENVIADO	2025-09-15 19:51:13.139291-05	\N	\N	\N
22	30	1542.00	450.00	ENVIADO	2025-09-15 21:46:24.518123-05	\N	\N	\N
\.


--
-- Data for Name: precorte_efectivo;
Type: TABLE DATA;
Schema: selemti;
Owner: postgres
--

COPY precorte_efectivo (id, precorte_id, denominacion, cantidad, subtotal) FROM stdin;
41	14	1000.00	1	1000.00
42	14	500.00	1	500.00
43	15	1000.00	2	2000.00
44	15	200.00	2	400.00
45	16	500.00	1	500.00
46	16	100.00	1	100.00
47	16	20.00	1	20.00
48	16	10.00	1	10.00
49	16	50.00	1	50.00
50	17	500.00	1	500.00
51	17	200.00	1	200.00
52	18	100.00	1	100.00
53	18	50.00	2	100.00
54	18	20.00	1	20.00
55	18	2.00	2	4.00
84	19	100.00	1	100.00
85	19	50.00	1	50.00
86	19	20.00	1	20.00
87	19	10.00	1	10.00
88	19	2.00	1	2.00
89	19	5.00	1	5.00
90	19	1.00	1	1.00
91	20	1000.00	1	1000.00
92	20	500.00	1	500.00
93	21	200.00	1	200.00
94	21	100.00	1	100.00
95	21	10.00	1	10.00
96	21	5.00	1	5.00
97	22	1000.00	1	1000.00
98	22	500.00	1	500.00
99	22	20.00	2	40.00
100	22	2.00	1	2.00
\.


--
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE SET;
Schema: selemti;
Owner: postgres
--

SELECT pg_catalog.setval('precorte_efectivo_id_seq', 100, true);
--
-- Name: precorte_id_seq;
Type: SEQUENCE SET;
Schema: selemti;
Owner: postgres
--

SELECT pg_catalog.setval('precorte_id_seq', 22, true);
--
-- Data for Name: precorte_otros;
Type: TABLE DATA;
Schema: selemti;
Owner: postgres
--

COPY precorte_otros (id, precorte_id, tipo, monto, referencia, evidencia_url, notas, creado_en) FROM stdin;
34	14	CREDITO	0.00	\N	\N	\N	2025-09-15 03:23:34.135319-05
35	14	DEBITO	0.00	\N	\N	\N	2025-09-15 03:23:34.135319-05
36	14	TRANSFER	0.00	\N	\N	\N	2025-09-15 03:23:34.135319-05
37	15	CREDITO	0.00	\N	\N	\N	2025-09-15 03:38:23.376297-05
38	15	DEBITO	0.00	\N	\N	\N	2025-09-15 03:38:23.376297-05
39	15	TRANSFER	0.00	\N	\N	\N	2025-09-15 03:38:23.376297-05
40	16	CREDITO	0.00	\N	\N	\N	2025-09-15 04:02:21.933151-05
41	16	DEBITO	0.00	\N	\N	\N	2025-09-15 04:02:21.933151-05
42	16	TRANSFER	0.00	\N	\N	\N	2025-09-15 04:02:21.933151-05
43	17	CREDITO	20.00	\N	\N	\N	2025-09-15 04:49:23.782207-05
44	17	DEBITO	35.00	\N	\N	\N	2025-09-15 04:49:23.782207-05
45	17	TRANSFER	25.00	\N	\N	\N	2025-09-15 04:49:23.782207-05
46	18	CREDITO	10.00	\N	\N	\N	2025-09-15 05:12:35.908008-05
47	18	DEBITO	20.00	\N	\N	\N	2025-09-15 05:12:35.908008-05
48	18	TRANSFER	35.00	\N	\N	\N	2025-09-15 05:12:35.908008-05
57	19	CREDITO	25.00	\N	\N	Prueba	2025-09-15 07:08:29.172838-05
58	19	DEBITO	78.00	\N	\N	Prueba	2025-09-15 07:08:29.172838-05
59	20	CREDITO	1.00	\N	\N		2025-09-15 16:31:23.200203-05
60	20	DEBITO	1.00	\N	\N		2025-09-15 16:31:23.200203-05
61	20	TRANSFER	1.00	\N	\N		2025-09-15 16:31:23.200203-05
62	21	CREDITO	50.00	\N	\N		2025-09-15 20:01:47.781826-05
63	21	DEBITO	75.00	\N	\N		2025-09-15 20:01:47.781826-05
64	21	TRANSFER	205.00	\N	\N		2025-09-15 20:01:47.781826-05
65	22	CREDITO	100.00	\N	\N		2025-09-15 21:47:44.57108-05
66	22	DEBITO	150.00	\N	\N		2025-09-15 21:47:44.57108-05
67	22	TRANSFER	200.00	\N	\N		2025-09-15 21:47:44.57108-05
\.


--
-- Name: precorte_otros_id_seq;
Type: SEQUENCE SET;
Schema: selemti;
Owner: postgres
--

SELECT pg_catalog.setval('precorte_otros_id_seq', 67, true);
--
-- Data for Name: sesion_cajon;
Type: TABLE DATA;
Schema: selemti;
Owner: postgres
--

COPY sesion_cajon (id, sucursal, terminal_id, terminal_nombre, cajero_usuario_id, apertura_ts, cierre_ts, estatus, opening_float, closing_float, dah_evento_id) FROM stdin;
22	SelemTI	9939	Terminal 9939	1	2025-09-15 03:18:41.728633-05	2025-09-15 03:23:15.124-05	LISTO_PARA_CORTE	500.00	635.00	60
23	SelemTI	9939	Terminal 9939	1	2025-09-15 03:37:23.228183-05	2025-09-15 03:50:52.011-05	LISTO_PARA_CORTE	500.00	630.00	62
24	SelemTI	9939	Terminal 9939	7	2025-09-15 04:01:12.032433-05	2025-09-15 04:44:41.197-05	LISTO_PARA_CORTE	500.00	680.00	64
25	SelemTI	9939	Terminal 9939	1	2025-09-15 04:45:36.902844-05	2025-09-15 04:49:33.073-05	LISTO_PARA_CORTE	500.00	700.00	66
26	SelemTI	9939	Terminal 9939	7	2025-09-15 05:06:32.732674-05	2025-09-15 05:14:59.657-05	LISTO_PARA_CORTE	100.00	224.00	68
27	SelemTI	9939	Terminal 9939	1	2025-09-15 05:25:22.002894-05	2025-09-15 07:11:57.936-05	LISTO_PARA_CORTE	500.00	525.00	70
28	SelemTI	9939	Terminal 9939	1	2025-09-15 16:31:04.478021-05	2025-09-15 16:31:37.598-05	LISTO_PARA_CORTE	500.00	500.00	72
29	SelemTI	9939	Terminal 9939	1	2025-09-15 19:51:08.172155-05	2025-09-15 20:24:21.418-05	LISTO_PARA_CORTE	200.00	315.00	74
30	SelemTI	9939	Terminal 9939	1	2025-09-15 21:44:00.824475-05	2025-09-15 21:48:02.091-05	LISTO_PARA_CORTE	1200.00	1542.00	76
\.


--
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE SET;
Schema: selemti;
Owner: postgres
--

SELECT pg_catalog.setval('sesion_cajon_id_seq', 30, true);
--
-- PostgreSQL database dump complete
--
-- END Floreant_Insight_corte_15_09_2025.sql

-- BEGIN folio_diario_floreant_optimizado_final_v6_OK_txt.sql
BEGIN;
-- =========================================
-- FASE 0: Verificación previa para evitar errores
-- =========================================
DO $$
BEGIN
    IF EXISTS (
        SELECT 1
        FROM public.kitchen_ticket_item
        WHERE ticket_item_id IS NULL
        LIMIT 1
    ) THEN
        RAISE EXCEPTION 'Existen filas con ticket_item_id NULL en kitchen_ticket_item. Corrija antes de continuar.';
    END IF;
END $$;
ALTER TABLE public.daily_folio_counter OWNER TO floreant;
-- =========================================
-- FASE 1.B) Columnas nuevas en ticket (idempotente para PG 9.5)
-- =========================================
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1
        FROM information_schema.columns
        WHERE table_schema = 'public'
        AND table_name = 'ticket'
        AND column_name = 'folio_date'
    ) THEN
        ALTER TABLE public.ticket ADD COLUMN folio_date DATE;
    END IF;
    IF NOT EXISTS (
        SELECT 1
        FROM information_schema.columns
        WHERE table_schema = 'public'
        AND table_name = 'ticket'
        AND column_name = 'branch_key'
    ) THEN
        ALTER TABLE public.ticket ADD COLUMN branch_key TEXT;
    END IF;
    IF NOT EXISTS (
        SELECT 1
        FROM information_schema.columns
        WHERE table_schema = 'public'
        AND table_name = 'ticket'
        AND column_name = 'daily_folio'
    ) THEN
        ALTER TABLE public.ticket ADD COLUMN daily_folio INTEGER;
    END IF;
END $$;
-- Constraint para ticket_item_id NOT NULL en kitchen_ticket_item
ALTER TABLE public.kitchen_ticket_item
    ALTER COLUMN ticket_item_id SET NOT NULL;
-- =========================================
-- FASE 1.C) Función trigger con normalización consistente
-- =========================================
CREATE OR REPLACE FUNCTION public.assign_daily_folio()
RETURNS TRIGGER AS $$
DECLARE
    v_branch   TEXT;
v_date     DATE;
v_next     INTEGER;
BEGIN
    IF NEW.terminal_id IS NULL THEN
        RAISE EXCEPTION 'No se puede crear ticket sin terminal_id';
END IF;
IF NEW.create_date IS NULL THEN
        NEW.create_date := NOW();
END IF;
v_date := (NEW.create_date AT TIME ZONE 'America/Mexico_City')::DATE;
SELECT COALESCE(NULLIF(UPPER(BTRIM(t.location)), ''), '') INTO v_branch
    FROM public.terminal t
    WHERE t.id = NEW.terminal_id;
IF NOT FOUND THEN
        RAISE EXCEPTION 'Terminal % no existe en la base de datos', NEW.terminal_id;
END IF;
IF NEW.daily_folio IS NOT NULL AND NEW.folio_date IS NOT NULL AND NEW.branch_key IS NOT NULL THEN
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE folio_date = NEW.folio_date
            AND branch_key = NEW.branch_key
            AND daily_folio = NEW.daily_folio
            AND id != NEW.id
        ) THEN
            RAISE EXCEPTION 'Folio % ya existe para % en %', NEW.daily_folio, NEW.branch_key, NEW.folio_date;
END IF;
RETURN NEW;
END IF;
WITH up AS (
        INSERT INTO public.daily_folio_counter (folio_date, branch_key, last_value)
        VALUES (v_date, v_branch, 1)
        ON CONFLICT (folio_date, branch_key)
        DO UPDATE SET last_value = public.daily_folio_counter.last_value + 1
        RETURNING last_value
    )
    SELECT last_value INTO v_next FROM up;
NEW.folio_date := v_date;
NEW.branch_key := v_branch;
NEW.daily_folio := v_next;
RETURN NEW;
END
$$ LANGUAGE plpgsql;
ALTER FUNCTION public.assign_daily_folio() OWNER TO floreant;
-- Trigger (PG 9.5 => EXECUTE PROCEDURE)
DROP TRIGGER IF EXISTS trg_assign_daily_folio ON public.ticket;
-- =========================================
-- FASE 1.E) kds_notify para notificaciones KDS/voceo
-- =========================================
CREATE OR REPLACE FUNCTION public.kds_notify() RETURNS TRIGGER
LANGUAGE plpgsql
AS $$
DECLARE
    v_ticket_id   INT;
v_pg_id       INT;
v_item_id     INT;
v_status      TEXT;
v_total       INT;
v_ready       INT;
v_done        INT;
v_type        TEXT;
v_daily_folio INT;
v_branch_key  TEXT;
v_folio_fmt   TEXT;
BEGIN
    IF TG_TABLE_NAME = 'kitchen_ticket_item' THEN
        IF NEW.ticket_item_id IS NULL THEN
            RAISE EXCEPTION 'ticket_item_id no puede ser NULL en kitchen_ticket_item';
END IF;
v_item_id := NEW.ticket_item_id;
SELECT ti.ticket_id, ti.pg_id INTO v_ticket_id, v_pg_id
        FROM ticket_item ti WHERE ti.id = v_item_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket_item % no existe', v_item_id;
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket % no existe', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, '0');
v_status := UPPER(COALESCE(NEW.status, ''));
v_type := CASE WHEN TG_OP = 'INSERT' THEN 'item_upsert' ELSE 'item_status' END;
PERFORM pg_notify(
            'kds_event',
            json_build_object(
                'type',        v_type,
                'ticket_id',   v_ticket_id,
                'pg',          v_pg_id,
                'item_id',     v_item_id,
                'status',      v_status,
                'daily_folio', v_daily_folio,
                'branch_key',  v_branch_key,
                'folio_fmt',   v_folio_fmt,
                'ts',          NOW()
            )::TEXT
        );
ELSIF TG_TABLE_NAME = 'ticket_item' THEN
        v_item_id := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id := NEW.pg_id;
IF v_ticket_id IS NULL THEN
            RAISE EXCEPTION 'ticket_id no puede ser NULL en ticket_item';
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket % no existe', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, '0');
v_status := UPPER(COALESCE(NEW.status, ''));
v_type := CASE WHEN TG_OP = 'INSERT' THEN 'item_insert' ELSE 'item_status' END;
PERFORM pg_notify(
            'kds_event',
            json_build_object(
                'type',        v_type,
                'ticket_id',   v_ticket_id,
                'pg',          v_pg_id,
                'item_id',     v_item_id,
                'status',      v_status,
                'daily_folio', v_daily_folio,
                'branch_key',  v_branch_key,
                'folio_fmt',   v_folio_fmt,
                'ts',          NOW()
            )::TEXT
        );
END IF;
IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
        WITH s AS (
            SELECT
                ti.id AS item_id,
                UPPER(COALESCE(kti.status, ti.status, '')) AS st
            FROM ticket_item ti
            LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
            WHERE ti.ticket_id = v_ticket_id AND ti.pg_id = v_pg_id
            GROUP BY ti.id, st
        )
        SELECT
            COUNT(DISTINCT item_id) AS total,
            COUNT(DISTINCT item_id) FILTER (WHERE st IN ('READY', 'DONE')) AS ready,
            COUNT(DISTINCT item_id) FILTER (WHERE st = 'DONE') AS done
        INTO v_total, v_ready, v_done
        FROM s;
IF v_total > 0 AND v_total = v_ready THEN
            PERFORM pg_notify(
                'kds_event',
                json_build_object(
                    'type',        'ticket_all_ready',
                    'ticket_id',   v_ticket_id,
                    'pg',          v_pg_id,
                    'daily_folio', v_daily_folio,
                    'branch_key',  v_branch_key,
                    'folio_fmt',   v_folio_fmt,
                    'ts',          NOW()
                )::TEXT
            );
END IF;
IF v_total > 0 AND v_total = v_done THEN
            PERFORM pg_notify(
                'kds_event',
                json_build_object(
                    'type',        'ticket_all_done',
                    'ticket_id',   v_ticket_id,
                    'pg',          v_pg_id,
                    'daily_folio', v_daily_folio,
                    'branch_key',  v_branch_key,
                    'folio_fmt',   v_folio_fmt,
                    'ts',          NOW()
                )::TEXT
            );
END IF;
END IF;
RETURN NEW;
END;
$$;
ALTER FUNCTION public.kds_notify() OWNER TO floreant;
-- Triggers para kds_notify (PG 9.5 => EXECUTE PROCEDURE)
DROP TRIGGER IF EXISTS trg_kds_notify_ti ON public.ticket_item;
DROP TRIGGER IF EXISTS trg_kds_notify_kti ON public.kitchen_ticket_item;
-- =========================================
-- FASE 1.F) Vista KDS con prioridad voceo
-- =========================================
CREATE OR REPLACE VIEW public.kds_orders_enhanced AS
SELECT
    kt.id AS kitchen_ticket_id,
    kt.ticket_id,
    kt.create_date AS kds_created_at,
    kt.sequence_number,
    t.daily_folio,
    t.folio_date,
    t.branch_key,
    LPAD(t.daily_folio::TEXT, 4, '0') AS folio_display,
    t.number_of_guests,
    t.ticket_type,
    term.name AS terminal_name,
    CASE
        WHEN t.daily_folio BETWEEN 1 AND 20 THEN 'PRIORITARIO'
        WHEN t.daily_folio BETWEEN 21 AND 50 THEN 'NORMAL'
        ELSE 'ALTO_VOLUMEN'
    END AS prioridad_voceo
FROM public.kitchen_ticket kt
JOIN public.ticket t ON t.id = kt.ticket_id
LEFT JOIN public.terminal term ON t.terminal_id = term.id;
ALTER VIEW public.kds_orders_enhanced OWNER TO floreant;
-- =========================================
-- FASE 1.G) Vista para reportes/inventarios
-- =========================================
CREATE OR REPLACE VIEW public.ticket_folio_complete AS
SELECT
    t.id,
    t.daily_folio,
    t.folio_date,
    t.branch_key,
    t.total_price,
    t.paid_amount,
    t.create_date,
    TO_CHAR(t.folio_date, 'DD/MM/YYYY') AS folio_date_txt,
    LPAD(t.daily_folio::TEXT, 4, '0') AS folio_display,
    COALESCE(term.location, 'DEFAULT') AS sucursal_completa,
    term.name AS terminal_name,
    TO_CHAR(t.folio_date, 'YYYY-MM') AS periodo_mes,
    EXTRACT(HOUR FROM t.create_date) AS hora_venta, -- Asume que create_date está en hora local
    -- Si necesitas forzar zona (e.g., BD en UTC), usa: EXTRACT(HOUR FROM t.create_date AT TIME ZONE 'America/Mexico_City')
    EXTRACT(DOW FROM t.folio_date) AS dia_semana,
    CASE
        WHEN t.voided THEN 'CANCELADO'
        WHEN t.paid_amount > 0 THEN 'PAGADO'
        ELSE 'PENDIENTE'
    END AS status_simple
FROM public.ticket t
LEFT JOIN public.terminal term ON t.terminal_id = term.id;
ALTER VIEW public.ticket_folio_complete OWNER TO floreant;
-- =========================================
-- FASE 1.H) Función helper para Java/Jaspersoft
-- =========================================
CREATE OR REPLACE FUNCTION public.get_ticket_folio_info(p_ticket_id INTEGER)
RETURNS TABLE(
    daily_folio INTEGER,
    folio_date DATE,
    branch_key TEXT,
    folio_date_txt TEXT,
    folio_display TEXT,
    sucursal_completa TEXT,
    terminal_name TEXT
)
LANGUAGE SQL STABLE
AS $$
    SELECT
        t.daily_folio,
        t.folio_date,
        t.branch_key,
        TO_CHAR(t.folio_date, 'DD/MM/YYYY') AS folio_date_txt,
        LPAD(t.daily_folio::TEXT, 4, '0') AS folio_display,
        COALESCE(term.location, 'DEFAULT') AS sucursal_completa,
        term.name AS terminal_name
    FROM public.ticket t
    LEFT JOIN public.terminal term ON t.terminal_id = term.id
    WHERE t.id = p_ticket_id;
$$;
ALTER FUNCTION public.get_ticket_folio_info(integer) OWNER TO floreant;
-- =========================================
-- FASE 1.I) Stats diarias para inventarios
-- =========================================
CREATE OR REPLACE FUNCTION public.get_daily_stats(p_date DATE DEFAULT CURRENT_DATE)
RETURNS TABLE(
    sucursal TEXT,
    total_ordenes INTEGER,
    total_ventas NUMERIC,
    primer_orden TIME,
    ultima_orden TIME,
    promedio_por_hora NUMERIC
)
LANGUAGE SQL STABLE
AS $$
    SELECT
        tfc.branch_key,
        COUNT(*)::INTEGER AS total_ordenes,
        SUM(tfc.total_price)::NUMERIC AS total_ventas,
        MIN(tfc.create_date::TIME) AS primer_orden,
        MAX(tfc.create_date::TIME) AS ultima_orden,
        ROUND(
            (COUNT(*)::NUMERIC /
            GREATEST(EXTRACT(EPOCH FROM (MAX(tfc.create_date) - MIN(tfc.create_date))) / 3600.0, 1))::NUMERIC,
            2
        ) AS promedio_por_hora
    FROM public.ticket_folio_complete tfc
    WHERE tfc.folio_date = p_date
    AND tfc.status_simple != 'CANCELADO'
    GROUP BY tfc.branch_key
    ORDER BY tfc.branch_key;
$$;
ALTER FUNCTION public.get_daily_stats(date) OWNER TO floreant;
-- =========================================
-- FASE 2.A) Backfill histórico (determinista, opcional)
-- =========================================
-- COMENTADO: Ejecutar manualmente después si es necesario, para evitar fallos
/*
WITH sub AS (
    SELECT
        t.id,
        COALESCE(UPPER(BTRIM(term.location)), 'DEFAULT') AS branch_key,
        DATE(t.create_date AT TIME ZONE 'America/Mexico_City') AS folio_date,
        ROW_NUMBER() OVER (
            PARTITION BY COALESCE(UPPER(BTRIM(term.location)), 'DEFAULT'),
                         DATE(t.create_date AT TIME ZONE 'America/Mexico_City')
            ORDER BY t.create_date ASC, t.id ASC
        ) AS row_num
    FROM public.ticket t
    LEFT JOIN public.terminal term ON t.terminal_id = term.id
    WHERE t.daily_folio IS NULL
)
UPDATE public.ticket t
SET
    folio_date = sub.folio_date,
    branch_key = sub.branch_key,
    daily_folio = sub.row_num
FROM sub
WHERE t.id = sub.id;
*/

-- =========================================
-- FASE 2.B) Reset smart multi-sucursal
-- =========================================
CREATE OR REPLACE FUNCTION public.reset_daily_folio_smart(p_branch TEXT DEFAULT NULL)
RETURNS TABLE(branch_reset TEXT, tickets_affected INTEGER)
LANGUAGE plpgsql
AS $$
DECLARE
    v_current_date DATE := CURRENT_DATE;
v_branch TEXT;
v_has_rows BOOLEAN;
BEGIN
    SELECT EXISTS (
        SELECT 1 FROM public.daily_folio_counter
        WHERE folio_date = v_current_date
        AND (p_branch IS NULL OR branch_key = UPPER(BTRIM(p_branch)))
    ) INTO v_has_rows;
IF NOT v_has_rows THEN
        branch_reset := 'none';
tickets_affected := 0;
RETURN NEXT;
RETURN;
END IF;
FOR v_branch IN
        SELECT DISTINCT
            CASE
                WHEN p_branch IS NULL THEN dfc.branch_key
                ELSE UPPER(BTRIM(p_branch))
            END
        FROM public.daily_folio_counter dfc
        WHERE dfc.folio_date = v_current_date
        AND (p_branch IS NULL OR dfc.branch_key = UPPER(BTRIM(p_branch)))
    LOOP
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE branch_key = v_branch
            AND folio_date = v_current_date
        ) THEN
            RAISE NOTICE 'ADVERTENCIA: Sucursal % ya tiene % tickets hoy - NO reseteable',
                v_branch,
                (SELECT COUNT(*) FROM public.ticket WHERE branch_key = v_branch AND folio_date = v_current_date);
CONTINUE;
END IF;
DELETE FROM public.daily_folio_counter
        WHERE branch_key = v_branch AND folio_date = v_current_date;
branch_reset := v_branch;
tickets_affected := 0;
RETURN NEXT;
END LOOP;
RETURN;
END
$$;
ALTER FUNCTION public.reset_daily_folio_smart(text) OWNER TO floreant;
-- =========================================
-- Permisos
-- =========================================
GRANT SELECT, INSERT, UPDATE, DELETE ON public.daily_folio_counter TO floreant;
GRANT SELECT ON public.ticket_folio_complete, public.kds_orders_enhanced TO floreant;
GRANT EXECUTE ON FUNCTION public.assign_daily_folio() TO floreant;
GRANT EXECUTE ON FUNCTION public.get_daily_stats(date) TO floreant;
GRANT EXECUTE ON FUNCTION public.get_ticket_folio_info(integer) TO floreant;
GRANT EXECUTE ON FUNCTION public.reset_daily_folio_smart(text) TO floreant;
COMMIT;
-- =========================================
-- Post-Deploy: Normalizar branch_key
-- =========================================
UPDATE public.terminal SET location = UPPER(BTRIM(location)) WHERE location IS NOT NULL;
UPDATE public.ticket SET branch_key = UPPER(BTRIM(branch_key)) WHERE branch_key IS NOT NULL;
-- =========================================
-- Backfill Manual (Ejecutar si es necesario)
-- =========================================
/*
-- Ejecutar en batches si hay muchos tickets, e.g., por mes
WITH sub AS (
    SELECT
        t.id,
        COALESCE(UPPER(BTRIM(term.location)), 'DEFAULT') AS branch_key,
        DATE(t.create_date AT TIME ZONE 'America/Mexico_City') AS folio_date,
        ROW_NUMBER() OVER (
            PARTITION BY COALESCE(UPPER(BTRIM(term.location)), 'DEFAULT'),
                         DATE(t.create_date AT TIME ZONE 'America/Mexico_City')
            ORDER BY t.create_date ASC, t.id ASC
        ) AS row_num
    FROM public.ticket t
    LEFT JOIN public.terminal term ON t.terminal_id = term.id
    WHERE t.daily_folio IS NULL
    AND t.create_date BETWEEN '2025-01-01' AND '2025-01-31'
)
UPDATE public.ticket t
SET
    folio_date = sub.folio_date,
    branch_key = sub.branch_key,
    daily_folio = sub.row_num
FROM sub
WHERE t.id = sub.id;
*/
-- END folio_diario_floreant_optimizado_final_v6_OK_txt.sql

-- BEGIN Full_Recetas.sql
-- 2. CREAR USUARIO DEDICADO
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'selemti_user') THEN
        CREATE USER selemti_user WITH PASSWORD 'selemti_password_2024';
        RAISE NOTICE 'Usuario selemti_user creado exitosamente';
    ELSE
        RAISE NOTICE 'Usuario selemti_user ya existe';
    END IF;
END
$$;
-- 3. OTORGAR PERMISOS
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT CREATE ON SCHEMA selemti TO selemti_user;
-- 4. PERMISOS DE LECTURA ENTRE ESQUEMAS
GRANT USAGE ON SCHEMA public TO selemti_user;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO selemti_user;
-- 5. CONFIGURAR SEARCH PATH
ALTER USER selemti_user SET search_path = 'selemti, public';
RAISE NOTICE 'Script 00 ejecutado exitosamente';
-- =====================================================
-- SCRIPT 01: TABLAS MAESTRAS BASE
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
COMMENT ON TABLE selemti.users IS 'Usuarios del sistema con sus credenciales y estado';
COMMENT ON TABLE selemti.user_roles IS 'Asignación de roles a usuarios (RBAC)';
COMMENT ON TABLE selemti.items IS 'Maestro de todos los ítems del sistema (insumos, productos terminados, categorías, ubicaciones)';
COMMENT ON TABLE selemti.inventory_batch IS 'Control de lotes para trazabilidad APPCC';
COMMENT ON TABLE selemti.mov_inv IS 'Kardex - Libro mayor de inventario. Cada movimiento genera un registro aquí';
COMMENT ON TABLE selemti.audit_log IS 'Registro completo de auditoría para cumplimiento APPCC y seguridad';
-- INSERTAR CÓDIGOS DE ERROR ESTÁNDAR
INSERT INTO selemti.error_codes VALUES 
('INV-001', 'BUSINESS', 'HIGH', 'Stock insuficiente para el ítem %s. Stock actual: %s, requerido: %s', 'Intento de movimiento que causaría stock negativo', 'Verificar inventario físico o recibir mercancía'),
('INV-002', 'BUSINESS', 'CRITICAL', 'Lote %s está bloqueado por motivo: %s', 'Intento de usar lote con estado BLOQUEADO o RECALL', 'Contactar al auditor APPCC para liberar el lote'),
('SEC-001', 'SECURITY', 'HIGH', 'Intento de acceso no autorizado al recurso %s por usuario %s', 'Violación de control de acceso RBAC', 'Verificar asignación de roles y permisos');
RAISE NOTICE 'Script 01 (Tablas maestras) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 02: MÓDULO DE INVENTARIO (8 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA INVENTARIO
CREATE SEQUENCE selemti.recepcion_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.traspaso_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.ajuste_daily_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE selemti.conteo_daily_seq START WITH 1 INCREMENT BY 1;
RAISE NOTICE 'Script 02 (Módulo Inventario - 8 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 03: MÓDULO DE RECETAS/PRODUCCIÓN (6 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- SECUENCIAS PARA RECETAS/PRODUCCIÓN
CREATE SEQUENCE selemti.op_daily_seq START WITH 1 INCREMENT BY 1;
COMMENT ON TABLE selemti.receta_cab IS 'Maestro de recetas/platos del menú del restaurante';
COMMENT ON TABLE selemti.receta_det IS 'Detalle de ingredientes y sub-recetas que componen una receta';
RAISE NOTICE 'Script 03 (Módulo Recetas - 6 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 04: MÓDULO DE VENTAS/KDS (5 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR ESTACIONES POR DEFECTO
INSERT INTO selemti.kds_estaciones VALUES 
('COCINA_CALIENTE', 'Cocina Caliente', 'Preparación de platos que requieren cocción', 'Área principal cocina', NULL, 10, 15, true, NULL, NOW(), NOW()),
('COCINA_FRIA', 'Cocina Fría', 'Preparación de ensaladas y entradas frías', 'Área refrigerada cocina', NULL, 8, 10, true, NULL, NOW(), NOW()),
('BARRA', 'Barra', 'Preparación de bebidas y cocteles', 'Barra principal', NULL, 12, 8, true, NULL, NOW(), NOW()),
('POSTRES', 'Postres', 'Preparación de postres y dulces', 'Área postres', NULL, 6, 12, true, NULL, NOW(), NOW()),
('PANADERIA', 'Panadería', 'Preparación de pan y repostería', 'Área hornos', NULL, 5, 20, true, NULL, NOW(), NOW());
RAISE NOTICE 'Script 04 (Módulo Ventas/KDS - 5 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 05: MÓDULO DE CAJA (3 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
RAISE NOTICE 'Script 05 (Módulo Caja - 3 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 06: MÓDULO APPCC (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR PUNTOS DE CONTROL APPCC BÁSICOS
INSERT INTO selemti.appcc_puntos_control VALUES 
(1, 'PCC-RECEP-001', 'Recepción Productos Perecederos', 'RECEPCION', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control de temperatura', 'Temperatura <= 4°C para productos refrigerados', 'CADA LOTE', 'Personal Almacén', 'Rechazar lote y notificar al proveedor', true, 1, NOW(), NULL, NOW(), NOW()),
(2, 'PCC-ALM-001', 'Almacenamiento Refrigerado', 'ALMACENAMIENTO', 'Crecimiento bacteriano', 'BIOLOGICO', 'Control temperatura neveras', 'Temperatura entre 0°C y 4°C', 'CADA 4 HORAS', 'Personal Cocina', 'Ajustar temperatura y verificar productos', true, 1, NOW(), NULL, NOW(), NOW()),
(3, 'PCC-COC-001', 'Cocción de Alimentos', 'COCCION', 'Supervivencia de microorganismos', 'BIOLOGICO', 'Control temperatura interna', 'Temperatura interna >= 75°C por 2 minutos', 'CADA BATCH', 'Chef', 'Extender tiempo de cocción', true, 1, NOW(), NULL, NOW(), NOW());
RAISE NOTICE 'Script 06 (Módulo APPCC - 4 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 07: MÓDULO DE CONFIGURACIÓN (4 TABLAS)
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- INSERTAR PARÁMETROS CRÍTICOS DEL SISTEMA
INSERT INTO selemti.parametros_sistema VALUES 
(1, 'INV_TOLERANCIA_DIFERENCIA', 'Tolerancia para diferencias de inventario', '0.05', 'NUMERICO', 'INVENTARIO', 'Tolerancia permitida para diferencias en conteos físicos (5%)', '0.05', true, false, NULL, NOW(), NOW()),
(2, 'CAJA_TOLERANCIA_EFECTIVO', 'Tolerancia para diferencias de efectivo', '50.00', 'NUMERICO', 'CAJA', 'Tolerancia en pesos para diferencias de caja sin requerir aprobación', '50.00', true, false, NULL, NOW(), NOW()),
(3, 'APPCC_FRECUENCIA_MONITOREO', 'Frecuencia de monitoreo APPCC', '4', 'NUMERICO', 'APPCC', 'Horas entre monitoreos de puntos críticos', '4', true, true, NULL, NOW(), NOW()),
(4, 'KDS_TIEMPO_MAX_PREPARACION', 'Tiempo máximo de preparación', '30', 'NUMERICO', 'VENTAS', 'Tiempo máximo en minutos para preparación de platos', '30', true, false, NULL, NOW(), NOW()),
(5, 'SISTEMA_MODO_MANTENIMIENTO', 'Modo mantenimiento del sistema', 'false', 'BOOLEANO', 'GENERAL', 'Activa el modo mantenimiento del sistema', 'false', true, true, NULL, NOW(), NOW()),
(6, 'INV_POLITICA_CONSUMO', 'Política de consumo de inventario', 'FEFO', 'TEXTO', 'INVENTARIO', 'Política por defecto para consumo de inventario (FEFO/PEPS)', 'FEFO', true, false, NULL, NOW(), NOW());
-- INSERTAR UBICACIONES BÁSICAS
INSERT INTO selemti.ubicaciones VALUES 
('UBIC-BODEGA1', 'Bodega Principal', 'BODEGA', 'SUR', 18.0, 1000.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-REFRIG1', 'Refrigerador Carnes', 'REFRIGERADOR', 'SUR', 4.0, 200.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-CONGEL1', 'Congelador Pescados', 'CONGELADOR', 'SUR', -18.0, 150.0, NULL, true, NULL, NOW(), NOW()),
('UBIC-BARRA', 'Barra Principal', 'BARRA', 'SUR', 8.0, 50.0, NULL, true, NULL, NOW(), Now());
-- INSERTAR CATEGORÍAS BÁSICAS
INSERT INTO selemti.categorias_items VALUES 
('CAT-PROTEINA', 'Proteínas', 'Carnes, pescados, aves', 'INSUMO', NULL, '1101', 5.0, 7, true, NOW(), NOW()),
('CAT-LACTEO', 'Lácteos', 'Leche, queso, yogurt', 'INSUMO', NULL, '1102', 3.0, 10, true, NOW(), NOW()),
('CAT-VERDURA', 'Verduras', 'Verduras frescas', 'INSUMO', NULL, '1103', 8.0, 5, true, NOW(), NOW()),
('CAT-BEBIDA', 'Bebidas', 'Refrescos, jugos, agua', 'INSUMO', NULL, '1104', 1.0, 30, true, NOW(), NOW()),
('CAT-MENU', 'Platos del Menú', 'Productos terminados para venta', 'PRODUCTO_TERMINADO', NULL, '2101', 2.0, 1, true, NOW(), NOW());
RAISE NOTICE 'Script 07 (Módulo Configuración - 4 tablas) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 08: DATOS INICIALES DEL SISTEMA
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- 1. CREAR USUARIO ADMINISTRADOR INICIAL
INSERT INTO selemti.users (username, password_hash, email, nombre_completo, sucursal_id, activo) VALUES 
('admin', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'admin@restaurante.com', 'Administrador del Sistema', 'SUR', true);
-- 2. ASIGNAR ROLES AL ADMINISTRADOR
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(1, 'GERENTE', 1),
(1, 'CHEF', 1),
(1, 'ALMACEN', 1),
(1, 'CAJERO', 1),
(1, 'AUDITOR', 1);
-- 3. CREAR USUARIOS DE EJEMPLO POR ROL
INSERT INTO selemti.users (username, password_hash, nombre_completo, sucursal_id, activo) VALUES 
('chef.juan', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Juan Pérez - Chef', 'SUR', true),
('almacen.maria', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'María García - Almacén', 'SUR', true),
('caja.carlos', '$2b$10$ExampleHashOf60CharactersLength123456789012', 'Carlos López - Cajero', 'SUR', true);
INSERT INTO selemti.user_roles (user_id, role_id, assigned_by) VALUES 
(2, 'CHEF', 1),
(3, 'ALMACEN', 1),
(4, 'CAJERO', 1);
-- 4. INSERTAR ÍTEMS DE EJEMPLO (MATERIAS PRIMAS)
INSERT INTO selemti.items (id, nombre, categoria_id, unidad_medida, perishable, temperatura_min, temperatura_max) VALUES 
('PROT-POLLO-PECHUGA-1KG', 'Pechuga de Pollo', 'CAT-PROTEINA', 'KG', true, 0, 4),
('PROT-SALMON-FRESCO-1KG', 'Salmón Fresco', 'CAT-PROTEINA', 'KG', true, -2, 2),
('VERD-LECHUGA-ROMA-1KG', 'Lechuga Romana', 'CAT-VERDURA', 'KG', true, 1, 4),
('VERD-TOMATE-ROJO-1KG', 'Tomate Rojo', 'CAT-VERDURA', 'KG', true, 10, 15),
('LACT-QUESO-MOZZARELLA-1KG', 'Queso Mozzarella', 'CAT-LACTEO', 'KG', true, 2, 6),
('BEBID-AGUA-1LT', 'Agua Purificada', 'CAT-BEBIDA', 'LT', false, NULL, NULL);
-- 5. INSERTAR RECETAS DE EJEMPLO
INSERT INTO selemti.receta_cab (id, codigo_plato_pos, nombre_plato, categoria_cocina, tipo_preparacion, tiempo_preparacion_min, rendimiento_porciones, nivel_dificultad, activo, usuario_creador, costo_standard_porcion, precio_venta_sugerido) VALUES 
('REC-CEVICHE-CLASICO', 'CEV-001', 'Ceviche Clásico', 'PLATO_FUERTE', 'FRIA', 20, 4, 'MEDIA', true, 1, 45.00, 180.00),
('REC-ENSALADA-CESAR', 'ENS-001', 'Ensalada César', 'ENTRADA', 'FRIA', 15, 2, 'BAJA', true, 1, 35.00, 120.00);
-- 6. INSERTAR DETALLES DE RECETAS
INSERT INTO selemti.receta_det (receta_id, item_id, tipo_componente, cantidad_bruta, porcentaje_merma, cantidad_neta, orden_mezcla, tipo_medida) VALUES 
('REC-CEVICHE-CLASICO', 'PROT-SALMON-FRESCO-1KG', 'INGREDIENTE', 0.500, 10.00, 0.450, 1, 'PESO'),
('REC-CEVICHE-CLASICO', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.200, 5.00, 0.190, 2, 'PESO'),
('REC-ENSALADA-CESAR', 'VERD-LECHUGA-ROMA-1KG', 'INGREDIENTE', 0.300, 5.00, 0.285, 1, 'PESO'),
('REC-ENSALADA-CESAR', 'LACT-QUESO-MOZZARELLA-1KG', 'INGREDIENTE', 0.100, 2.00, 0.098, 2, 'PESO');
-- 7. ACTUALIZAR FOREIGN KEYS PENDIENTES
-- Actualizar recepcion_cab con referencia a proveedores
UPDATE selemti.recepcion_cab SET proveedor_id = 'PROV-CARNICOS-LA-PALMA' WHERE proveedor_id IS NOT NULL;
-- 8. CREAR PROVEEDORES DE EJEMPLO
INSERT INTO selemti.proveedores (codigo, nombre, tipo_proveedor, categoria_calidad, activo) VALUES 
('PROV-CARNICOS-LA-PALMA', 'Cárnicos La Palma', 'ALIMENTOS', 'A', true),
('PROV-PESCADOS-FRESCOS', 'Pescados Frescos del Pacífico', 'ALIMENTOS', 'A', true),
('PROV-HORTALIZAS-ORGANICAS', 'Hortalizas Orgánicas', 'ALIMENTOS', 'B', true);
RAISE NOTICE 'Script 08 (Datos iniciales) ejecutado exitosamente';
-- =====================================================
-- SCRIPT 09: ÍNDICES DE OPTIMIZACIÓN
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
-- VISTAS PARA CONSULTAS FRECUENTES
CREATE OR REPLACE VIEW selemti.v_stock_actual AS
SELECT 
    item_id,
    ubicacion_id,
    SUM(CASE WHEN tipo_movimiento = 'E' THEN cantidad ELSE -cantidad END) as stock_actual
FROM selemti.mov_inv
GROUP BY item_id, ubicacion_id;
CREATE OR REPLACE VIEW selemti.v_stock_por_lote_fefo AS
SELECT 
    b.item_id,
    b.id as batch_id,
    b.lote_proveedor,
    b.fecha_caducidad,
    b.ubicacion_id,
    b.cantidad_actual as stock_lote,
    b.estado
FROM selemti.inventory_batch b
WHERE b.estado = 'ACTIVO' 
AND b.cantidad_actual > 0
ORDER BY b.fecha_caducidad ASC;
RAISE NOTICE 'Script 09 (Índices de optimización) ejecutado exitosamente';
RAISE NOTICE '✅ ESQUEMA SELETI COMPLETADO - 30 TABLAS CREADAS';
-- END Full_Recetas.sql

-- BEGIN Full_Recetas_V2.sql
-- =====================================================================
-- Script Fusionado: Full_Recetas.sql + Rediseño Trazabilidad/Reprocesamiento
-- Fecha: September 25, 2025
-- Base: PostgreSQL 9.5+ (compatible con migración a 16)
-- Idempotente: Sí
-- Ejecutar en orden;
-- 2. CREAR USUARIO DEDICADO
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'selemti_user') THEN
        CREATE USER selemti_user WITH PASSWORD 'selemti_password_2024';
        RAISE NOTICE 'Usuario selemti_user creado exitosamente';
    ELSE
        RAISE NOTICE 'Usuario selemti_user ya existe';
    END IF;
END
$$;
-- 3. OTORGAR PERMISOS
GRANT USAGE ON SCHEMA selemti TO selemti_user;
GRANT CREATE ON SCHEMA selemti TO selemti_user;
-- 4. PERMISOS DE LECTURA ENTRE ESQUEMAS
GRANT USAGE ON SCHEMA public TO selemti_user;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO selemti_user;
-- 5. CONFIGURAR SEARCH PATH
ALTER USER selemti_user SET search_path = 'selemti, public';
RAISE NOTICE 'Script 00 ejecutado exitosamente';
-- =====================================================
-- SCRIPT 01: TABLAS MAESTRAS BASE
-- =====================================================

\set ON_ERROR_STOP on
SET search_path TO selemti, public;
COMMENT ON TABLE selemti.users IS 'Usuarios del sistema con sus credenciales y estado';
COMMENT ON TABLE selemti.user_roles IS 'Asignación de roles a usuarios (RBAC)';
COMMENT ON TABLE selemti.items IS 'Maestro de todos los ítems del sistema (insumos, productos terminados, categorías, ubicaciones)';
COMMENT ON TABLE selemti.inventory_batch IS 'Lotes de inventario con trazabilidad completa';
CREATE OR REPLACE VIEW selemti.v_stock_actual AS
-- ... (resto de vistas)

RAISE NOTICE 'Full_Recetas.sql ejecutado exitosamente';
INSERT INTO selemti.unidades_medida (codigo, nombre, tipo, categoria, es_base, factor_conversion_base, decimales)
VALUES 
('GR', 'Gramo', 'PESO', 'METRICO', true, 1.0, 2),
('KG', 'Kilogramo', 'PESO', 'METRICO', false, 1000.0, 2),
('ML', 'Mililitro', 'VOLUMEN', 'METRICO', true, 1.0, 2),
('LT', 'Litro', 'VOLUMEN', 'METRICO', false, 1000.0, 2),
('PZ', 'Pieza', 'UNIDAD', 'CULINARIO', true, 1.0, 0),
('OZ', 'Onza', 'PESO', 'IMPERIAL', false, 28.3495, 2),
('LB', 'Libra', 'PESO', 'IMPERIAL', false, 453.592, 2)
ON CONFLICT (codigo) DO NOTHING;
-- Migración para Items (de UOM antigua VARCHAR a nueva ID)
ALTER TABLE selemti.items 
ADD COLUMN IF NOT EXISTS unidad_medida_id INTEGER REFERENCES selemti.unidades_medida(id),
ADD COLUMN IF NOT EXISTS factor_conversion NUMERIC(12,6) DEFAULT 1.0,
ADD COLUMN IF NOT EXISTS unidad_compra_id INTEGER REFERENCES selemti.unidades_medida(id),
ADD COLUMN IF NOT EXISTS factor_compra NUMERIC(12,6) DEFAULT 1.0;
-- Ejemplo migración datos existentes (ejecutar manualmente si aplica)
-- UPDATE selemti.items SET unidad_medida_id = (SELECT id FROM selemti.unidades_medida WHERE codigo = UPPER(unidad_medida)) WHERE unidad_medida_id IS NULL;
CREATE OR REPLACE VIEW selemti.v_items_con_unidades AS
SELECT 
    i.*,
    um.codigo as unidad_codigo,
    um.nombre as unidad_nombre,
    um.tipo as unidad_tipo,
    uc.codigo as unidad_compra_codigo,
    (i.factor_compra / i.factor_conversion) as factor_compra_a_uso
FROM selemti.items i
LEFT JOIN selemti.unidades_medida um ON i.unidad_medida_id = um.id
LEFT JOIN selemti.unidades_medida uc ON i.unidad_compra_id = uc.id;
ALTER TABLE selemti.ticket_venta_det 
ADD COLUMN IF NOT EXISTS receta_shadow_id INTEGER REFERENCES selemti.receta_shadow(id),
ADD COLUMN IF NOT EXISTS reprocesado BOOLEAN DEFAULT FALSE,
ADD COLUMN IF NOT EXISTS version_reproceso INTEGER DEFAULT 1;
ALTER TABLE selemti.ticket_venta_det ADD COLUMN IF NOT EXISTS modificadores_aplicados JSONB;
-- 8) Funciones de Reprocesamiento
CREATE OR REPLACE FUNCTION selemti.reprocesar_costos_historicos(
    p_fecha_desde DATE,
    p_fecha_hasta DATE DEFAULT NULL,
    p_algoritmo VARCHAR(10) DEFAULT 'WAC',
    p_usuario_id INTEGER DEFAULT 1
) RETURNS INTEGER AS $$
DECLARE
    v_lote_id INTEGER;
v_total_actualizados INTEGER := 0;
v_item_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
INSERT INTO selemti.job_recalc_queue (
        scope_type, scope_from, scope_to, reason, status
    ) VALUES (
        'PERIODO', p_fecha_desde, p_fecha_hasta, 'Reproceso costos ' || p_algoritmo, 'RUNNING'
    ) RETURNING id INTO v_lote_id;
FOR v_item_record IN 
        SELECT DISTINCT item_id 
        FROM selemti.mov_inv 
        WHERE ts BETWEEN p_fecha_desde AND p_fecha_hasta
    LOOP
        UPDATE selemti.historial_costos_item
        SET costo_wac = (SELECT AVG(costo_unit * qty_canonica) / SUM(qty_canonica) 
                         FROM selemti.mov_inv 
                         WHERE item_id = v_item_record.item_id AND ts BETWEEN p_fecha_desde AND p_fecha_hasta AND tipo IN ('COMPRA', 'RECEPCION'))
        WHERE item_id = v_item_record.item_id AND fecha_efectiva BETWEEN p_fecha_desde AND p_fecha_hasta;
v_total_actualizados := v_total_actualizados + 1;
END LOOP;
UPDATE selemti.job_recalc_queue 
    SET status = 'DONE', result = jsonb_build_object('actualizados', v_total_actualizados)
    WHERE id = v_lote_id;
RETURN v_total_actualizados;
EXCEPTION
    WHEN OTHERS THEN
        UPDATE selemti.job_recalc_queue SET status = 'FAILED', result = jsonb_build_object('error', SQLERRM) WHERE id = v_lote_id;
RAISE;
END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION selemti.inferir_recetas_de_ventas(
    p_fecha_desde DATE,
    p_fecha_hasta DATE DEFAULT NULL
) RETURNS INTEGER AS $$
DECLARE
    v_recetas_inferidas INTEGER := 0;
v_plato_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
FOR v_plato_record IN 
        SELECT DISTINCT td.item_id, COUNT(*) as total_ventas
        FROM selemti.ticket_venta_det td
        JOIN selemti.ticket_venta_cab tc ON td.ticket_id = tc.id
        WHERE tc.fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta
          AND td.receta_shadow_id IS NULL
        GROUP BY td.item_id
        HAVING COUNT(*) >= 5
    LOOP
        INSERT INTO selemti.receta_shadow (codigo_plato_pos, nombre_plato, total_ventas_analizadas, fecha_primer_venta, fecha_ultima_venta)
        VALUES (v_plato_record.item_id, 'Inferida_' || v_plato_record.item_id, v_plato_record.total_ventas, p_fecha_desde, p_fecha_hasta)
        RETURNING id INTO v_recetas_inferidas;
UPDATE selemti.ticket_venta_det
        SET receta_shadow_id = v_recetas_inferidas, reprocesado = TRUE, version_reproceso = 1
        WHERE item_id = v_plato_record.item_id
          AND ticket_id IN (SELECT id FROM selemti.ticket_venta_cab WHERE fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta);
v_recetas_inferidas := v_recetas_inferidas + 1;
END LOOP;
RETURN v_recetas_inferidas;
END;
$$ LANGUAGE plpgsql;
-- 9) Vistas para Ingeniería de Menú
CREATE OR REPLACE VIEW selemti.v_ingenieria_menu_completa AS
SELECT 
    rc.id as receta_id,
    rc.nombre_plato,
    rc.codigo_plato_pos,
    rc.precio_venta_sugerido,
    rc.costo_standard_porcion as costo_actual,
    (rc.precio_venta_sugerido - rc.costo_standard_porcion) as margen_actual,
    (SELECT AVG(hcr.costo_porcion) 
     FROM selemti.historial_costos_receta hcr
     WHERE hcr.receta_version_id = rv.id
     AND hcr.fecha_calculo >= CURRENT_DATE - INTERVAL '30 days') as costo_promedio_30d,
    (SELECT COUNT(*) 
     FROM selemti.ticket_venta_det td
     JOIN selemti.ticket_venta_cab tc ON td.ticket_id = tc.id
     WHERE td.item_id = rc.id
     AND tc.fecha_venta >= CURRENT_DATE - INTERVAL '30 days') as ventas_ultimos_30d,
    CASE WHEN rc.precio_venta_sugerido > 0 THEN 
        (rc.precio_venta_sugerido - rc.costo_standard_porcion) / rc.precio_venta_sugerido * 100 ELSE 0 END as porcentaje_margen,
    rc.costo_standard_porcion > (rc.precio_venta_sugerido * 0.4) as alerta_costo_alto,
    (SELECT COUNT(*) FROM selemti.ticket_venta_det td WHERE td.item_id = rc.id) = 0 as alerta_sin_ventas
FROM selemti.receta_cab rc
JOIN selemti.receta_version rv ON rc.id = rv.receta_id AND rv.version_publicada = true
WHERE rc.activo = true;
-- Fin del Script Fusionado. Ejecuta y verifica con SELECT * FROM pg_tables WHERE schemaname = 'selemti';
RAISE NOTICE 'Script fusionado ejecutado exitosamente';
-- END Full_Recetas_V2.sql

-- BEGIN Local_Recetas_25_09_2025.sql
--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.0
-- Dumped by pg_dump version 9.5.0

-- Started on 2025-09-26 03:31:50

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
DROP DATABASE pos;
--
-- TOC entry 4145 (class 1262 OID 67811)
-- Name: pos;
Type: DATABASE;
Schema: -;
Owner: floreant
--

CREATE DATABASE pos WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'Spanish_Mexico.1252' LC_CTYPE = 'Spanish_Mexico.1252';
ALTER DATABASE pos OWNER TO floreant;
\connect pos

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
--
-- TOC entry 7 (class 2615 OID 2200)
-- Name: public;
Type: SCHEMA;
Schema: -;
ALTER SCHEMA public OWNER TO postgres;
--
-- TOC entry 4146 (class 0 OID 0)
-- Dependencies: 7
-- Name: SCHEMA public;
Type: COMMENT;
Schema: -;
Owner: postgres
--

COMMENT ON SCHEMA public IS 'standard public schema';
--
-- TOC entry 6 (class 2615 OID 67812)
-- Name: selemti;
Type: SCHEMA;
Schema: -;
ALTER SCHEMA selemti OWNER TO floreant;
--
-- TOC entry 455 (class 3079 OID 12355)
-- Name: plpgsql;
Type: EXTENSION;
Schema: -;
Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;
--
-- TOC entry 4149 (class 0 OID 0)
-- Dependencies: 455
-- Name: EXTENSION plpgsql;
Type: COMMENT;
Schema: -;
Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';
SET search_path = selemti, pg_catalog;
--
-- TOC entry 1474 (class 1247 OID 77525)
-- Name: consumo_policy;
Type: TYPE;
Schema: selemti;
ALTER TYPE consumo_policy OWNER TO postgres;
--
-- TOC entry 1492 (class 1247 OID 77583)
-- Name: merma_clase;
Type: TYPE;
Schema: selemti;
ALTER TYPE merma_clase OWNER TO postgres;
--
-- TOC entry 1471 (class 1247 OID 77513)
-- Name: producto_tipo;
Type: TYPE;
Schema: selemti;
ALTER TYPE producto_tipo OWNER TO postgres;
SET search_path = public, pg_catalog;
--
-- TOC entry 456 (class 1255 OID 67813)
-- Name: _last_assign_window(integer, integer, timestamp with time zone);
Type: FUNCTION;
Schema: public;
';
ALTER FUNCTION public._last_assign_window(_terminal_id integer, _user_id integer, _ref_time timestamp with time zone) OWNER TO postgres;
--
-- TOC entry 470 (class 1255 OID 67814)
-- Name: assign_daily_folio();
Type: FUNCTION;
Schema: public;
v_date     DATE;
v_next     INTEGER;
BEGIN
    IF NEW.terminal_id IS NULL THEN
        RAISE EXCEPTION ''No se puede crear ticket sin terminal_id'';
END IF;
IF NEW.create_date IS NULL THEN
        NEW.create_date := NOW();
END IF;
v_date := (NEW.create_date AT TIME ZONE ''America/Mexico_City'')::DATE;
SELECT COALESCE(NULLIF(UPPER(BTRIM(t.location)), ''''), '''') INTO v_branch
    FROM public.terminal t
    WHERE t.id = NEW.terminal_id;
IF NOT FOUND THEN
        RAISE EXCEPTION ''Terminal % no existe en la base de datos'', NEW.terminal_id;
END IF;
IF NEW.daily_folio IS NOT NULL AND NEW.folio_date IS NOT NULL AND NEW.branch_key IS NOT NULL THEN
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE folio_date = NEW.folio_date
            AND branch_key = NEW.branch_key
            AND daily_folio = NEW.daily_folio
            AND id != NEW.id
        ) THEN
            RAISE EXCEPTION ''Folio % ya existe para % en %'', NEW.daily_folio, NEW.branch_key, NEW.folio_date;
END IF;
RETURN NEW;
END IF;
WITH up AS (
        INSERT INTO public.daily_folio_counter (folio_date, branch_key, last_value)
        VALUES (v_date, v_branch, 1)
        ON CONFLICT (folio_date, branch_key)
        DO UPDATE SET last_value = public.daily_folio_counter.last_value + 1
        RETURNING last_value
    )
    SELECT last_value INTO v_next FROM up;
NEW.folio_date := v_date;
NEW.branch_key := v_branch;
NEW.daily_folio := v_next;
RETURN NEW;
END
';
ALTER FUNCTION public.assign_daily_folio() OWNER TO floreant;
--
-- TOC entry 482 (class 1255 OID 69478)
-- Name: fn_correct_drawer_report(date);
Type: FUNCTION;
Schema: public;
END';
ALTER FUNCTION public.fn_correct_drawer_report(report_date date) OWNER TO postgres;
--
-- TOC entry 483 (class 1255 OID 69476)
-- Name: fn_daily_reconciliation(date);
Type: FUNCTION;
Schema: public;
END';
ALTER FUNCTION public.fn_daily_reconciliation(report_date date) OWNER TO postgres;
--
-- TOC entry 481 (class 1255 OID 69477)
-- Name: fn_reconciliation_detail(date);
Type: FUNCTION;
Schema: public;
END';
ALTER FUNCTION public.fn_reconciliation_detail(report_date date) OWNER TO postgres;
--
-- TOC entry 471 (class 1255 OID 67815)
-- Name: get_daily_stats(date);
Type: FUNCTION;
Schema: public;
';
ALTER FUNCTION public.get_daily_stats(p_date date) OWNER TO floreant;
--
-- TOC entry 472 (class 1255 OID 67816)
-- Name: get_ticket_folio_info(integer);
Type: FUNCTION;
Schema: public;
';
ALTER FUNCTION public.get_ticket_folio_info(p_ticket_id integer) OWNER TO floreant;
--
-- TOC entry 473 (class 1255 OID 67817)
-- Name: kds_notify();
Type: FUNCTION;
Schema: public;
v_pg_id       INT;
v_item_id     INT;
v_status      TEXT;
v_total       INT;
v_ready       INT;
v_done        INT;
v_type        TEXT;
v_daily_folio INT;
v_branch_key  TEXT;
v_folio_fmt   TEXT;
BEGIN
    IF TG_TABLE_NAME = ''kitchen_ticket_item'' THEN
        IF NEW.ticket_item_id IS NULL THEN
            RAISE EXCEPTION ''ticket_item_id no puede ser NULL en kitchen_ticket_item'';
END IF;
v_item_id := NEW.ticket_item_id;
SELECT ti.ticket_id, ti.pg_id INTO v_ticket_id, v_pg_id
        FROM ticket_item ti WHERE ti.id = v_item_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket_item % no existe'', v_item_id;
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket % no existe'', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, ''0'');
v_status := UPPER(COALESCE(NEW.status, ''''));
v_type := CASE WHEN TG_OP = ''INSERT'' THEN ''item_upsert'' ELSE ''item_status'' END;
PERFORM pg_notify(
            ''kds_event'',
            json_build_object(
                ''type'',        v_type,
                ''ticket_id'',   v_ticket_id,
                ''pg'',          v_pg_id,
                ''item_id'',     v_item_id,
                ''status'',      v_status,
                ''daily_folio'', v_daily_folio,
                ''branch_key'',  v_branch_key,
                ''folio_fmt'',   v_folio_fmt,
                ''ts'',          NOW()
            )::TEXT
        );
ELSIF TG_TABLE_NAME = ''ticket_item'' THEN
        v_item_id := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id := NEW.pg_id;
IF v_ticket_id IS NULL THEN
            RAISE EXCEPTION ''ticket_id no puede ser NULL en ticket_item'';
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket % no existe'', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, ''0'');
v_status := UPPER(COALESCE(NEW.status, ''''));
v_type := CASE WHEN TG_OP = ''INSERT'' THEN ''item_insert'' ELSE ''item_status'' END;
PERFORM pg_notify(
            ''kds_event'',
            json_build_object(
                ''type'',        v_type,
                ''ticket_id'',   v_ticket_id,
                ''pg'',          v_pg_id,
                ''item_id'',     v_item_id,
                ''status'',      v_status,
                ''daily_folio'', v_daily_folio,
                ''branch_key'',  v_branch_key,
                ''folio_fmt'',   v_folio_fmt,
                ''ts'',          NOW()
            )::TEXT
        );
END IF;
IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
        WITH s AS (
            SELECT
                ti.id AS item_id,
                UPPER(COALESCE(kti.status, ti.status, '''')) AS st
            FROM ticket_item ti
            LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
            WHERE ti.ticket_id = v_ticket_id AND ti.pg_id = v_pg_id
            GROUP BY ti.id, st
        )
        SELECT
            COUNT(DISTINCT item_id) AS total,
            COUNT(DISTINCT item_id) FILTER (WHERE st IN (''READY'', ''DONE'')) AS ready,
            COUNT(DISTINCT item_id) FILTER (WHERE st = ''DONE'') AS done
        INTO v_total, v_ready, v_done
        FROM s;
IF v_total > 0 AND v_total = v_ready THEN
            PERFORM pg_notify(
                ''kds_event'',
                json_build_object(
                    ''type'',        ''ticket_all_ready'',
                    ''ticket_id'',   v_ticket_id,
                    ''pg'',          v_pg_id,
                    ''daily_folio'', v_daily_folio,
                    ''branch_key'',  v_branch_key,
                    ''folio_fmt'',   v_folio_fmt,
                    ''ts'',          NOW()
                )::TEXT
            );
END IF;
IF v_total > 0 AND v_total = v_done THEN
            PERFORM pg_notify(
                ''kds_event'',
                json_build_object(
                    ''type'',        ''ticket_all_done'',
                    ''ticket_id'',   v_ticket_id,
                    ''pg'',          v_pg_id,
                    ''daily_folio'', v_daily_folio,
                    ''branch_key'',  v_branch_key,
                    ''folio_fmt'',   v_folio_fmt,
                    ''ts'',          NOW()
                )::TEXT
            );
END IF;
END IF;
RETURN NEW;
END;
';
ALTER FUNCTION public.kds_notify() OWNER TO floreant;
--
-- TOC entry 474 (class 1255 OID 67818)
-- Name: reset_daily_folio_smart(text);
Type: FUNCTION;
Schema: public;
v_branch TEXT;
v_has_rows BOOLEAN;
BEGIN
    SELECT EXISTS (
        SELECT 1 FROM public.daily_folio_counter
        WHERE folio_date = v_current_date
        AND (p_branch IS NULL OR branch_key = UPPER(BTRIM(p_branch)))
    ) INTO v_has_rows;
IF NOT v_has_rows THEN
        branch_reset := ''none'';
tickets_affected := 0;
RETURN NEXT;
RETURN;
END IF;
FOR v_branch IN
        SELECT DISTINCT
            CASE
                WHEN p_branch IS NULL THEN dfc.branch_key
                ELSE UPPER(BTRIM(p_branch))
            END
        FROM public.daily_folio_counter dfc
        WHERE dfc.folio_date = v_current_date
        AND (p_branch IS NULL OR dfc.branch_key = UPPER(BTRIM(p_branch)))
    LOOP
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE branch_key = v_branch
            AND folio_date = v_current_date
        ) THEN
            RAISE NOTICE ''ADVERTENCIA: Sucursal % ya tiene % tickets hoy - NO reseteable'',
                v_branch,
                (SELECT COUNT(*) FROM public.ticket WHERE branch_key = v_branch AND folio_date = v_current_date);
CONTINUE;
END IF;
DELETE FROM public.daily_folio_counter
        WHERE branch_key = v_branch AND folio_date = v_current_date;
branch_reset := v_branch;
tickets_affected := 0;
RETURN NEXT;
END LOOP;
RETURN;
END
';
ALTER FUNCTION public.reset_daily_folio_smart(p_branch text) OWNER TO floreant;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 486 (class 1255 OID 77664)
-- Name: cerrar_lote_preparado(bigint, merma_clase, text, integer, integer);
Type: FUNCTION;
Schema: selemti;
v_qty_disponible NUMERIC(14,6);
v_mov_id BIGINT;
BEGIN
    SELECT b.item_id, b.cantidad_actual
    INTO v_item_id, v_qty_disponible
    FROM selemti.inventory_batch b
    WHERE b.id = p_lote_id;
IF v_item_id IS NULL THEN
        RAISE EXCEPTION ''Lote % no existe'', p_lote_id;
END IF;
IF v_qty_disponible IS NULL OR v_qty_disponible <= 0 THEN
        RETURN 0;
END IF;
INSERT INTO selemti.mov_inv (ts, item_id, lote_id, cantidad, tipo, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, 0 - v_qty_disponible, ''MERMA'', ''CIERRE_PREP'', p_lote_id)
    RETURNING id INTO v_mov_id;
INSERT INTO selemti.perdida_log (ts, item_id, lote_id, clase, motivo, qty_canonica, usuario_id, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, p_clase, p_motivo, v_qty_disponible, p_usuario_id, ''CIERRE_PREP'', v_mov_id);
RETURN v_mov_id;
END;
';
ALTER FUNCTION selemti.cerrar_lote_preparado(p_lote_id bigint, p_clase merma_clase, p_motivo text, p_usuario_id integer, p_uom_id integer) OWNER TO postgres;
--
-- TOC entry 475 (class 1255 OID 67819)
-- Name: fn_dah_after_insert();
Type: FUNCTION;
Schema: selemti;
BEGIN
  IF NEW.operation = ''ASIGNAR'' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
IF v_term IS NULL THEN
      INSERT INTO selemti.auditoria(quien,que,payload)
      VALUES(NEW.a_user,''NO_SE_PUDO_RESOLVER_TERMINAL'',
             jsonb_build_object(''dah_id'',NEW.id,''operation'',NEW.operation,''time'',NEW."time"));
RETURN NEW;
END IF;
INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id
    ) VALUES (
      v_term.id, COALESCE(v_term.name,''Terminal ''||v_term.id), COALESCE(v_term.location,''''),
      NEW.a_user, COALESCE(NEW."time", now()), ''ACTIVA'', COALESCE(v_term.current_balance,0), NEW.id
    );
ELSIF NEW.operation = ''CERRAR'' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
UPDATE selemti.sesion_cajon
       SET cierre_ts     = COALESCE(NEW."time", now()),
           estatus       = ''LISTO_PARA_CORTE'',
           closing_float = COALESCE(v_term.current_balance,0),
           dah_evento_id = COALESCE(dah_evento_id, NEW.id)
     WHERE terminal_id = COALESCE(v_term.id, terminal_id)
       AND cajero_usuario_id = NEW.a_user
       AND cierre_ts IS NULL;
END IF;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_dah_after_insert() OWNER TO floreant;
--
-- TOC entry 476 (class 1255 OID 67820)
-- Name: fn_normalizar_forma_pago(text, text, text, text);
Type: FUNCTION;
Schema: selemti;
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN (''CASH'',''CREDIT'',''DEBIT'',''TRANSFER'') THEN
    RETURN pt;
ELSIF pt = ''CUSTOM_PAYMENT'' THEN
    IF cn IS NOT NULL THEN RETURN ''CUSTOM:''||cn;
ELSE RETURN ''CUSTOM'';
END IF;
ELSIF pt IN (''REFUND'',''PAY_OUT'',''CASH_DROP'') THEN
    RETURN pt;
-- egresos/ajustes estandarizados
  ELSE
    RETURN pt;
END IF;
END ';
ALTER FUNCTION selemti.fn_normalizar_forma_pago(p_payment_type text, p_transaction_type text, p_payment_sub_type text, p_custom_name text) OWNER TO floreant;
--
-- TOC entry 469 (class 1255 OID 67821)
-- Name: fn_precorte_efectivo_bi();
Type: FUNCTION;
Schema: selemti;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_precorte_efectivo_bi() OWNER TO floreant;
--
-- TOC entry 477 (class 1255 OID 67822)
-- Name: fn_reparar_sesion_apertura(integer, integer);
Type: FUNCTION;
Schema: selemti;
BEGIN
  IF EXISTS (
    SELECT 1 FROM selemti.sesion_cajon
    WHERE terminal_id=p_terminal_id AND cajero_usuario_id=p_usuario AND cierre_ts IS NULL
  ) THEN
    RETURN ''YA_EXISTE_SESION_ABIERTA'';
END IF;
SELECT * INTO v_term FROM public.terminal WHERE id=p_terminal_id;
IF v_term IS NULL THEN RETURN ''TERMINAL_NO_ENCONTRADA'';
END IF;
INSERT INTO selemti.sesion_cajon(
    terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
    apertura_ts, estatus, opening_float
  ) VALUES (
    p_terminal_id, COALESCE(v_term.name,''Terminal ''||p_terminal_id), COALESCE(v_term.location,''''),
    p_usuario, now(), ''ACTIVA'', COALESCE(v_term.current_balance,0)
  );
RETURN ''CREADA'';
END ';
ALTER FUNCTION selemti.fn_reparar_sesion_apertura(p_terminal_id integer, p_usuario integer) OWNER TO floreant;
--
-- TOC entry 478 (class 1255 OID 67823)
-- Name: fn_slug(text);
Type: FUNCTION;
Schema: selemti;
BEGIN
  s := translate(s, ''ÁÉÍÓÚÜÑáéíóúüñ'', ''AEIOUUNaeiouun'');
s := regexp_replace(s, ''[^a-z0-9]+'', ''-'', ''g'');
s := regexp_replace(s, ''(^-|-$)'', '''', ''g'');
IF s = '''' THEN RETURN NULL;
END IF;
RETURN s;
END ';
ALTER FUNCTION selemti.fn_slug(in_text text) OWNER TO floreant;
--
-- TOC entry 479 (class 1255 OID 67824)
-- Name: fn_terminal_bu_snapshot_cierre();
Type: FUNCTION;
Schema: selemti;
v_has_new boolean := (NEW.assigned_user IS NOT NULL);
BEGIN
  /* CIERRE: había cajero y ahora ya no */
  IF (v_has_old AND NOT v_has_new) THEN
    UPDATE selemti.sesion_cajon AS sc
       SET cierre_ts      = now(),
           estatus        = ''LISTO_PARA_CORTE'',
           closing_float  = COALESCE(OLD.current_balance, 0),
           -- bandera: true si NO hubo precorte para esta sesión
           skipped_precorte = NOT EXISTS (
             SELECT 1
             FROM selemti.precorte p
             WHERE p.sesion_id = sc.id
           )
     WHERE sc.terminal_id       = OLD.id
       AND sc.cajero_usuario_id = OLD.assigned_user
       AND sc.cierre_ts         IS NULL;
END IF;
/* APERTURA: no había cajero y ahora sí */
  IF (NOT v_has_old AND v_has_new) THEN
    INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id, skipped_precorte
    )
    VALUES(
      NEW.id,
      COALESCE(NEW.name, ''Terminal ''||NEW.id),
      COALESCE(NEW.location, ''''),
      NEW.assigned_user,
      now(),
      ''ACTIVA'',
      COALESCE(NEW.current_balance, 0),
      NULL,
      FALSE  -- por defecto, en apertura no está saltado
    );
END IF;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_terminal_bu_snapshot_cierre() OWNER TO floreant;
--
-- TOC entry 480 (class 1255 OID 67825)
-- Name: fn_tx_after_insert_forma_pago();
Type: FUNCTION;
Schema: selemti;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
    NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name
  );
INSERT INTO selemti.formas_pago(
    codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref
  )
  VALUES (
    v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref
  )
  ON CONFLICT DO NOTHING;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_tx_after_insert_forma_pago() OWNER TO floreant;
--
-- TOC entry 485 (class 1255 OID 77663)
-- Name: inferir_recetas_de_ventas(date, date);
Type: FUNCTION;
Schema: selemti;
v_plato_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
FOR v_plato_record IN 
        SELECT DISTINCT td.item_id, COUNT(*) as total_ventas
        FROM selemti.ticket_venta_det td
        JOIN selemti.ticket_venta_cab tc ON td.ticket_id = tc.id
        WHERE tc.fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta
          AND td.receta_shadow_id IS NULL
        GROUP BY td.item_id
        HAVING COUNT(*) >= 5
    LOOP
        INSERT INTO selemti.receta_shadow (codigo_plato_pos, nombre_plato, total_ventas_analizadas, fecha_primer_venta, fecha_ultima_venta)
        VALUES (v_plato_record.item_id, ''Inferida_'' || v_plato_record.item_id, v_plato_record.total_ventas, p_fecha_desde, p_fecha_hasta);
UPDATE selemti.ticket_venta_det
        SET receta_shadow_id = currval(''selemti.receta_shadow_id_seq''), reprocesado = TRUE, version_reproceso = 1
        WHERE item_id = v_plato_record.item_id
          AND ticket_id IN (SELECT id FROM selemti.ticket_venta_cab WHERE fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta);
v_recetas_inferidas := v_recetas_inferidas + 1;
END LOOP;
RETURN v_recetas_inferidas;
END;
';
ALTER FUNCTION selemti.inferir_recetas_de_ventas(p_fecha_desde date, p_fecha_hasta date) OWNER TO postgres;
--
-- TOC entry 484 (class 1255 OID 77662)
-- Name: reprocesar_costos_historicos(date, date, character varying, integer);
Type: FUNCTION;
Schema: selemti;
v_total_actualizados INTEGER := 0;
v_item_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
INSERT INTO selemti.job_recalc_queue (scope_type, scope_from, scope_to, reason, status)
    VALUES (''PERIODO'', p_fecha_desde, p_fecha_hasta, ''Reproceso costos '' || p_algoritmo, ''RUNNING'')
    RETURNING id INTO v_lote_id;
FOR v_item_record IN 
        SELECT DISTINCT item_id 
        FROM selemti.mov_inv 
        WHERE ts BETWEEN p_fecha_desde AND p_fecha_hasta
    LOOP
        UPDATE selemti.historial_costos_item
        SET costo_wac = (
            SELECT AVG(costo_unit * cantidad) / NULLIF(SUM(cantidad), 0)
            FROM selemti.mov_inv 
            WHERE item_id = v_item_record.item_id 
            AND ts BETWEEN p_fecha_desde AND p_fecha_hasta 
            AND tipo IN (''COMPRA'', ''RECEPCION'')
        )
        WHERE item_id = v_item_record.item_id AND fecha_efectiva BETWEEN p_fecha_desde AND p_fecha_hasta;
v_total_actualizados := v_total_actualizados + 1;
END LOOP;
UPDATE selemti.job_recalc_queue 
    SET status = ''DONE'', 
        result = (''{"actualizados": '' || v_total_actualizados || ''}'')::json
    WHERE id = v_lote_id;
RETURN v_total_actualizados;
EXCEPTION
    WHEN OTHERS THEN
        UPDATE selemti.job_recalc_queue 
        SET status = ''FAILED'', 
            result = (''{"error": "'' || REPLACE(SQLERRM, ''"'', ''\"'') || ''"}'')::json
        WHERE id = v_lote_id;
RAISE;
END;
';
ALTER FUNCTION selemti.reprocesar_costos_historicos(p_fecha_desde date, p_fecha_hasta date, p_algoritmo character varying, p_usuario_id integer) OWNER TO postgres;
SET search_path = public, pg_catalog;
SET default_tablespace = '';
SET default_with_oids = false;
--
-- TOC entry 181 (class 1259 OID 67826)
-- Name: action_history;
Type: TABLE;
Schema: public;
ALTER TABLE action_history OWNER TO floreant;
--
-- TOC entry 182 (class 1259 OID 67832)
-- Name: action_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE action_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE action_history_id_seq OWNER TO floreant;
--
-- TOC entry 4151 (class 0 OID 0)
-- Dependencies: 182
-- Name: action_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE action_history_id_seq OWNED BY action_history.id;
--
-- TOC entry 183 (class 1259 OID 67834)
-- Name: attendence_history;
Type: TABLE;
Schema: public;
ALTER TABLE attendence_history OWNER TO floreant;
--
-- TOC entry 184 (class 1259 OID 67837)
-- Name: attendence_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE attendence_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE attendence_history_id_seq OWNER TO floreant;
--
-- TOC entry 4153 (class 0 OID 0)
-- Dependencies: 184
-- Name: attendence_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE attendence_history_id_seq OWNED BY attendence_history.id;
--
-- TOC entry 185 (class 1259 OID 67839)
-- Name: cash_drawer;
Type: TABLE;
Schema: public;
ALTER TABLE cash_drawer OWNER TO floreant;
--
-- TOC entry 186 (class 1259 OID 67842)
-- Name: cash_drawer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_id_seq OWNER TO floreant;
--
-- TOC entry 4155 (class 0 OID 0)
-- Dependencies: 186
-- Name: cash_drawer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_id_seq OWNED BY cash_drawer.id;
--
-- TOC entry 187 (class 1259 OID 67844)
-- Name: cash_drawer_reset_history;
Type: TABLE;
Schema: public;
ALTER TABLE cash_drawer_reset_history OWNER TO floreant;
--
-- TOC entry 188 (class 1259 OID 67847)
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_reset_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_reset_history_id_seq OWNER TO floreant;
--
-- TOC entry 4157 (class 0 OID 0)
-- Dependencies: 188
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_reset_history_id_seq OWNED BY cash_drawer_reset_history.id;
--
-- TOC entry 189 (class 1259 OID 67849)
-- Name: cooking_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE cooking_instruction OWNER TO floreant;
--
-- TOC entry 190 (class 1259 OID 67852)
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cooking_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cooking_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 4159 (class 0 OID 0)
-- Dependencies: 190
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cooking_instruction_id_seq OWNED BY cooking_instruction.id;
--
-- TOC entry 191 (class 1259 OID 67854)
-- Name: coupon_and_discount;
Type: TABLE;
Schema: public;
ALTER TABLE coupon_and_discount OWNER TO floreant;
--
-- TOC entry 192 (class 1259 OID 67857)
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE coupon_and_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE coupon_and_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4161 (class 0 OID 0)
-- Dependencies: 192
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE coupon_and_discount_id_seq OWNED BY coupon_and_discount.id;
--
-- TOC entry 193 (class 1259 OID 67859)
-- Name: currency;
Type: TABLE;
Schema: public;
ALTER TABLE currency OWNER TO floreant;
--
-- TOC entry 194 (class 1259 OID 67862)
-- Name: currency_balance;
Type: TABLE;
Schema: public;
ALTER TABLE currency_balance OWNER TO floreant;
--
-- TOC entry 195 (class 1259 OID 67865)
-- Name: currency_balance_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_balance_id_seq OWNER TO floreant;
--
-- TOC entry 4164 (class 0 OID 0)
-- Dependencies: 195
-- Name: currency_balance_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_balance_id_seq OWNED BY currency_balance.id;
--
-- TOC entry 196 (class 1259 OID 67867)
-- Name: currency_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_id_seq OWNER TO floreant;
--
-- TOC entry 4165 (class 0 OID 0)
-- Dependencies: 196
-- Name: currency_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_id_seq OWNED BY currency.id;
--
-- TOC entry 197 (class 1259 OID 67869)
-- Name: custom_payment;
Type: TABLE;
Schema: public;
ALTER TABLE custom_payment OWNER TO floreant;
--
-- TOC entry 198 (class 1259 OID 67872)
-- Name: custom_payment_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE custom_payment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE custom_payment_id_seq OWNER TO floreant;
--
-- TOC entry 4167 (class 0 OID 0)
-- Dependencies: 198
-- Name: custom_payment_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE custom_payment_id_seq OWNED BY custom_payment.id;
--
-- TOC entry 199 (class 1259 OID 67874)
-- Name: customer;
Type: TABLE;
Schema: public;
ALTER TABLE customer OWNER TO floreant;
--
-- TOC entry 200 (class 1259 OID 67880)
-- Name: customer_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE customer_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE customer_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4169 (class 0 OID 0)
-- Dependencies: 200
-- Name: customer_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE customer_auto_id_seq OWNED BY customer.auto_id;
--
-- TOC entry 201 (class 1259 OID 67882)
-- Name: customer_properties;
Type: TABLE;
Schema: public;
ALTER TABLE customer_properties OWNER TO floreant;
--
-- TOC entry 202 (class 1259 OID 67888)
-- Name: daily_folio_counter;
Type: TABLE;
Schema: public;
ALTER TABLE daily_folio_counter OWNER TO floreant;
--
-- TOC entry 203 (class 1259 OID 67895)
-- Name: data_update_info;
Type: TABLE;
Schema: public;
ALTER TABLE data_update_info OWNER TO floreant;
--
-- TOC entry 204 (class 1259 OID 67898)
-- Name: data_update_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE data_update_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE data_update_info_id_seq OWNER TO floreant;
--
-- TOC entry 4173 (class 0 OID 0)
-- Dependencies: 204
-- Name: data_update_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE data_update_info_id_seq OWNED BY data_update_info.id;
--
-- TOC entry 205 (class 1259 OID 67900)
-- Name: delivery_address;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_address OWNER TO floreant;
--
-- TOC entry 206 (class 1259 OID 67903)
-- Name: delivery_address_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_address_id_seq OWNER TO floreant;
--
-- TOC entry 4175 (class 0 OID 0)
-- Dependencies: 206
-- Name: delivery_address_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_address_id_seq OWNED BY delivery_address.id;
--
-- TOC entry 207 (class 1259 OID 67905)
-- Name: delivery_charge;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_charge OWNER TO floreant;
--
-- TOC entry 208 (class 1259 OID 67908)
-- Name: delivery_charge_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_charge_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_charge_id_seq OWNER TO floreant;
--
-- TOC entry 4177 (class 0 OID 0)
-- Dependencies: 208
-- Name: delivery_charge_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_charge_id_seq OWNED BY delivery_charge.id;
--
-- TOC entry 209 (class 1259 OID 67910)
-- Name: delivery_configuration;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_configuration OWNER TO floreant;
--
-- TOC entry 210 (class 1259 OID 67913)
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_configuration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_configuration_id_seq OWNER TO floreant;
--
-- TOC entry 4179 (class 0 OID 0)
-- Dependencies: 210
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_configuration_id_seq OWNED BY delivery_configuration.id;
--
-- TOC entry 211 (class 1259 OID 67915)
-- Name: delivery_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_instruction OWNER TO floreant;
--
-- TOC entry 212 (class 1259 OID 67918)
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 4181 (class 0 OID 0)
-- Dependencies: 212
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_instruction_id_seq OWNED BY delivery_instruction.id;
--
-- TOC entry 213 (class 1259 OID 67920)
-- Name: drawer_assigned_history;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_assigned_history OWNER TO floreant;
--
-- TOC entry 214 (class 1259 OID 67923)
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_assigned_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_assigned_history_id_seq OWNER TO floreant;
--
-- TOC entry 4183 (class 0 OID 0)
-- Dependencies: 214
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_assigned_history_id_seq OWNED BY drawer_assigned_history.id;
--
-- TOC entry 215 (class 1259 OID 67925)
-- Name: drawer_pull_report;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_pull_report OWNER TO floreant;
--
-- TOC entry 216 (class 1259 OID 67928)
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_pull_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_pull_report_id_seq OWNER TO floreant;
--
-- TOC entry 4185 (class 0 OID 0)
-- Dependencies: 216
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_pull_report_id_seq OWNED BY drawer_pull_report.id;
--
-- TOC entry 217 (class 1259 OID 67930)
-- Name: drawer_pull_report_voidtickets;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_pull_report_voidtickets OWNER TO floreant;
--
-- TOC entry 218 (class 1259 OID 67936)
-- Name: employee_in_out_history;
Type: TABLE;
Schema: public;
ALTER TABLE employee_in_out_history OWNER TO floreant;
--
-- TOC entry 219 (class 1259 OID 67939)
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE employee_in_out_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE employee_in_out_history_id_seq OWNER TO floreant;
--
-- TOC entry 4188 (class 0 OID 0)
-- Dependencies: 219
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE employee_in_out_history_id_seq OWNED BY employee_in_out_history.id;
--
-- TOC entry 220 (class 1259 OID 67941)
-- Name: global_config;
Type: TABLE;
Schema: public;
ALTER TABLE global_config OWNER TO floreant;
--
-- TOC entry 221 (class 1259 OID 67944)
-- Name: global_config_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE global_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE global_config_id_seq OWNER TO floreant;
--
-- TOC entry 4190 (class 0 OID 0)
-- Dependencies: 221
-- Name: global_config_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE global_config_id_seq OWNED BY global_config.id;
--
-- TOC entry 222 (class 1259 OID 67946)
-- Name: gratuity;
Type: TABLE;
Schema: public;
ALTER TABLE gratuity OWNER TO floreant;
--
-- TOC entry 223 (class 1259 OID 67949)
-- Name: gratuity_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE gratuity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE gratuity_id_seq OWNER TO floreant;
--
-- TOC entry 4192 (class 0 OID 0)
-- Dependencies: 223
-- Name: gratuity_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE gratuity_id_seq OWNED BY gratuity.id;
--
-- TOC entry 224 (class 1259 OID 67951)
-- Name: group_taxes;
Type: TABLE;
Schema: public;
ALTER TABLE group_taxes OWNER TO floreant;
--
-- TOC entry 225 (class 1259 OID 67954)
-- Name: guest_check_print;
Type: TABLE;
Schema: public;
ALTER TABLE guest_check_print OWNER TO floreant;
--
-- TOC entry 226 (class 1259 OID 67957)
-- Name: guest_check_print_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE guest_check_print_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE guest_check_print_id_seq OWNER TO floreant;
--
-- TOC entry 4195 (class 0 OID 0)
-- Dependencies: 226
-- Name: guest_check_print_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE guest_check_print_id_seq OWNED BY guest_check_print.id;
--
-- TOC entry 227 (class 1259 OID 67959)
-- Name: inventory_group;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_group OWNER TO floreant;
--
-- TOC entry 228 (class 1259 OID 67962)
-- Name: inventory_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_group_id_seq OWNER TO floreant;
--
-- TOC entry 4197 (class 0 OID 0)
-- Dependencies: 228
-- Name: inventory_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_group_id_seq OWNED BY inventory_group.id;
--
-- TOC entry 229 (class 1259 OID 67964)
-- Name: inventory_item;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_item OWNER TO floreant;
--
-- TOC entry 230 (class 1259 OID 67967)
-- Name: inventory_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_item_id_seq OWNER TO floreant;
--
-- TOC entry 4199 (class 0 OID 0)
-- Dependencies: 230
-- Name: inventory_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_item_id_seq OWNED BY inventory_item.id;
--
-- TOC entry 231 (class 1259 OID 67969)
-- Name: inventory_location;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_location OWNER TO floreant;
--
-- TOC entry 232 (class 1259 OID 67972)
-- Name: inventory_location_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_location_id_seq OWNER TO floreant;
--
-- TOC entry 4201 (class 0 OID 0)
-- Dependencies: 232
-- Name: inventory_location_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_location_id_seq OWNED BY inventory_location.id;
--
-- TOC entry 233 (class 1259 OID 67974)
-- Name: inventory_meta_code;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_meta_code OWNER TO floreant;
--
-- TOC entry 234 (class 1259 OID 67980)
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_meta_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_meta_code_id_seq OWNER TO floreant;
--
-- TOC entry 4203 (class 0 OID 0)
-- Dependencies: 234
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_meta_code_id_seq OWNED BY inventory_meta_code.id;
--
-- TOC entry 235 (class 1259 OID 67982)
-- Name: inventory_transaction;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_transaction OWNER TO floreant;
--
-- TOC entry 236 (class 1259 OID 67985)
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_transaction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_transaction_id_seq OWNER TO floreant;
--
-- TOC entry 4205 (class 0 OID 0)
-- Dependencies: 236
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_transaction_id_seq OWNED BY inventory_transaction.id;
--
-- TOC entry 237 (class 1259 OID 67987)
-- Name: inventory_unit;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_unit OWNER TO floreant;
--
-- TOC entry 238 (class 1259 OID 67993)
-- Name: inventory_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_unit_id_seq OWNER TO floreant;
--
-- TOC entry 4207 (class 0 OID 0)
-- Dependencies: 238
-- Name: inventory_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_unit_id_seq OWNED BY inventory_unit.id;
--
-- TOC entry 239 (class 1259 OID 67995)
-- Name: inventory_vendor;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_vendor OWNER TO floreant;
--
-- TOC entry 240 (class 1259 OID 68001)
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_vendor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_vendor_id_seq OWNER TO floreant;
--
-- TOC entry 4209 (class 0 OID 0)
-- Dependencies: 240
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_vendor_id_seq OWNED BY inventory_vendor.id;
--
-- TOC entry 241 (class 1259 OID 68003)
-- Name: inventory_warehouse;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_warehouse OWNER TO floreant;
--
-- TOC entry 242 (class 1259 OID 68006)
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_warehouse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_warehouse_id_seq OWNER TO floreant;
--
-- TOC entry 4211 (class 0 OID 0)
-- Dependencies: 242
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_warehouse_id_seq OWNED BY inventory_warehouse.id;
--
-- TOC entry 243 (class 1259 OID 68008)
-- Name: item_order_type;
Type: TABLE;
Schema: public;
ALTER TABLE item_order_type OWNER TO floreant;
--
-- TOC entry 244 (class 1259 OID 68011)
-- Name: kitchen_ticket;
Type: TABLE;
Schema: public;
ALTER TABLE kitchen_ticket OWNER TO floreant;
--
-- TOC entry 245 (class 1259 OID 68014)
-- Name: terminal;
Type: TABLE;
Schema: public;
ALTER TABLE terminal OWNER TO floreant;
--
-- TOC entry 246 (class 1259 OID 68020)
-- Name: ticket;
Type: TABLE;
Schema: public;
ALTER TABLE ticket OWNER TO floreant;
--
-- TOC entry 247 (class 1259 OID 68027)
-- Name: kds_orders_enhanced;
Type: VIEW;
Schema: public;
ALTER TABLE kds_orders_enhanced OWNER TO floreant;
--
-- TOC entry 248 (class 1259 OID 68032)
-- Name: kds_ready_log;
Type: TABLE;
Schema: public;
ALTER TABLE kds_ready_log OWNER TO floreant;
--
-- TOC entry 249 (class 1259 OID 68036)
-- Name: kit_ticket_table_num;
Type: TABLE;
Schema: public;
ALTER TABLE kit_ticket_table_num OWNER TO floreant;
--
-- TOC entry 250 (class 1259 OID 68039)
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_id_seq OWNER TO floreant;
--
-- TOC entry 4219 (class 0 OID 0)
-- Dependencies: 250
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_id_seq OWNED BY kitchen_ticket.id;
--
-- TOC entry 251 (class 1259 OID 68041)
-- Name: kitchen_ticket_item;
Type: TABLE;
Schema: public;
ALTER TABLE kitchen_ticket_item OWNER TO floreant;
--
-- TOC entry 252 (class 1259 OID 68047)
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 4221 (class 0 OID 0)
-- Dependencies: 252
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_item_id_seq OWNED BY kitchen_ticket_item.id;
--
-- TOC entry 253 (class 1259 OID 68049)
-- Name: menu_category;
Type: TABLE;
Schema: public;
ALTER TABLE menu_category OWNER TO floreant;
--
-- TOC entry 254 (class 1259 OID 68052)
-- Name: menu_category_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_category_id_seq OWNER TO floreant;
--
-- TOC entry 4223 (class 0 OID 0)
-- Dependencies: 254
-- Name: menu_category_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_category_id_seq OWNED BY menu_category.id;
--
-- TOC entry 255 (class 1259 OID 68054)
-- Name: menu_group;
Type: TABLE;
Schema: public;
ALTER TABLE menu_group OWNER TO floreant;
--
-- TOC entry 256 (class 1259 OID 68057)
-- Name: menu_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_group_id_seq OWNER TO floreant;
--
-- TOC entry 4225 (class 0 OID 0)
-- Dependencies: 256
-- Name: menu_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_group_id_seq OWNED BY menu_group.id;
--
-- TOC entry 257 (class 1259 OID 68059)
-- Name: menu_item;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item OWNER TO floreant;
--
-- TOC entry 258 (class 1259 OID 68065)
-- Name: menu_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_id_seq OWNER TO floreant;
--
-- TOC entry 4227 (class 0 OID 0)
-- Dependencies: 258
-- Name: menu_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_id_seq OWNED BY menu_item.id;
--
-- TOC entry 259 (class 1259 OID 68067)
-- Name: menu_item_properties;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_properties OWNER TO floreant;
--
-- TOC entry 260 (class 1259 OID 68070)
-- Name: menu_item_size;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_size OWNER TO floreant;
--
-- TOC entry 261 (class 1259 OID 68073)
-- Name: menu_item_size_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_size_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_size_id_seq OWNER TO floreant;
--
-- TOC entry 4230 (class 0 OID 0)
-- Dependencies: 261
-- Name: menu_item_size_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_size_id_seq OWNED BY menu_item_size.id;
--
-- TOC entry 262 (class 1259 OID 68075)
-- Name: menu_item_terminal_ref;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_terminal_ref OWNER TO floreant;
--
-- TOC entry 263 (class 1259 OID 68078)
-- Name: menu_modifier;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier OWNER TO floreant;
--
-- TOC entry 264 (class 1259 OID 68081)
-- Name: menu_modifier_group;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier_group OWNER TO floreant;
--
-- TOC entry 265 (class 1259 OID 68084)
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_group_id_seq OWNER TO floreant;
--
-- TOC entry 4234 (class 0 OID 0)
-- Dependencies: 265
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_group_id_seq OWNED BY menu_modifier_group.id;
--
-- TOC entry 266 (class 1259 OID 68086)
-- Name: menu_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 4235 (class 0 OID 0)
-- Dependencies: 266
-- Name: menu_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_id_seq OWNED BY menu_modifier.id;
--
-- TOC entry 267 (class 1259 OID 68088)
-- Name: menu_modifier_properties;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier_properties OWNER TO floreant;
--
-- TOC entry 268 (class 1259 OID 68091)
-- Name: menucategory_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menucategory_discount OWNER TO floreant;
--
-- TOC entry 269 (class 1259 OID 68094)
-- Name: menugroup_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menugroup_discount OWNER TO floreant;
--
-- TOC entry 270 (class 1259 OID 68097)
-- Name: menuitem_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_discount OWNER TO floreant;
--
-- TOC entry 271 (class 1259 OID 68100)
-- Name: menuitem_modifiergroup;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_modifiergroup OWNER TO floreant;
--
-- TOC entry 272 (class 1259 OID 68103)
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_modifiergroup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_modifiergroup_id_seq OWNER TO floreant;
--
-- TOC entry 4241 (class 0 OID 0)
-- Dependencies: 272
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_modifiergroup_id_seq OWNED BY menuitem_modifiergroup.id;
--
-- TOC entry 273 (class 1259 OID 68105)
-- Name: menuitem_pizzapirce;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_pizzapirce OWNER TO floreant;
--
-- TOC entry 274 (class 1259 OID 68108)
-- Name: menuitem_shift;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_shift OWNER TO floreant;
--
-- TOC entry 275 (class 1259 OID 68111)
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_shift_id_seq OWNER TO floreant;
--
-- TOC entry 4244 (class 0 OID 0)
-- Dependencies: 275
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_shift_id_seq OWNED BY menuitem_shift.id;
--
-- TOC entry 276 (class 1259 OID 68113)
-- Name: menumodifier_pizzamodifierprice;
Type: TABLE;
Schema: public;
ALTER TABLE menumodifier_pizzamodifierprice OWNER TO floreant;
--
-- TOC entry 389 (class 1259 OID 73602)
-- Name: migrations;
Type: TABLE;
Schema: public;
ALTER TABLE migrations OWNER TO postgres;
--
-- TOC entry 388 (class 1259 OID 73600)
-- Name: migrations_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: postgres
--

CREATE SEQUENCE migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE migrations_id_seq OWNER TO postgres;
--
-- TOC entry 4247 (class 0 OID 0)
-- Dependencies: 388
-- Name: migrations_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: postgres
--

ALTER SEQUENCE migrations_id_seq OWNED BY migrations.id;
--
-- TOC entry 277 (class 1259 OID 68116)
-- Name: modifier_multiplier_price;
Type: TABLE;
Schema: public;
ALTER TABLE modifier_multiplier_price OWNER TO floreant;
--
-- TOC entry 278 (class 1259 OID 68119)
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE modifier_multiplier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE modifier_multiplier_price_id_seq OWNER TO floreant;
--
-- TOC entry 4249 (class 0 OID 0)
-- Dependencies: 278
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE modifier_multiplier_price_id_seq OWNED BY modifier_multiplier_price.id;
--
-- TOC entry 279 (class 1259 OID 68121)
-- Name: multiplier;
Type: TABLE;
Schema: public;
ALTER TABLE multiplier OWNER TO floreant;
--
-- TOC entry 280 (class 1259 OID 68124)
-- Name: order_type;
Type: TABLE;
Schema: public;
ALTER TABLE order_type OWNER TO floreant;
--
-- TOC entry 281 (class 1259 OID 68130)
-- Name: order_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE order_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE order_type_id_seq OWNER TO floreant;
--
-- TOC entry 4252 (class 0 OID 0)
-- Dependencies: 281
-- Name: order_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE order_type_id_seq OWNED BY order_type.id;
--
-- TOC entry 282 (class 1259 OID 68132)
-- Name: packaging_unit;
Type: TABLE;
Schema: public;
ALTER TABLE packaging_unit OWNER TO floreant;
--
-- TOC entry 283 (class 1259 OID 68135)
-- Name: packaging_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE packaging_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE packaging_unit_id_seq OWNER TO floreant;
--
-- TOC entry 4254 (class 0 OID 0)
-- Dependencies: 283
-- Name: packaging_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE packaging_unit_id_seq OWNED BY packaging_unit.id;
--
-- TOC entry 284 (class 1259 OID 68137)
-- Name: payout_reasons;
Type: TABLE;
Schema: public;
ALTER TABLE payout_reasons OWNER TO floreant;
--
-- TOC entry 285 (class 1259 OID 68140)
-- Name: payout_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 4256 (class 0 OID 0)
-- Dependencies: 285
-- Name: payout_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_reasons_id_seq OWNED BY payout_reasons.id;
--
-- TOC entry 286 (class 1259 OID 68142)
-- Name: payout_recepients;
Type: TABLE;
Schema: public;
ALTER TABLE payout_recepients OWNER TO floreant;
--
-- TOC entry 287 (class 1259 OID 68145)
-- Name: payout_recepients_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_recepients_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_recepients_id_seq OWNER TO floreant;
--
-- TOC entry 4258 (class 0 OID 0)
-- Dependencies: 287
-- Name: payout_recepients_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_recepients_id_seq OWNED BY payout_recepients.id;
--
-- TOC entry 288 (class 1259 OID 68147)
-- Name: pizza_crust;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_crust OWNER TO floreant;
--
-- TOC entry 289 (class 1259 OID 68150)
-- Name: pizza_crust_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_crust_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_crust_id_seq OWNER TO floreant;
--
-- TOC entry 4260 (class 0 OID 0)
-- Dependencies: 289
-- Name: pizza_crust_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_crust_id_seq OWNED BY pizza_crust.id;
--
-- TOC entry 290 (class 1259 OID 68152)
-- Name: pizza_modifier_price;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_modifier_price OWNER TO floreant;
--
-- TOC entry 291 (class 1259 OID 68155)
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_modifier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_modifier_price_id_seq OWNER TO floreant;
--
-- TOC entry 4262 (class 0 OID 0)
-- Dependencies: 291
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_modifier_price_id_seq OWNED BY pizza_modifier_price.id;
--
-- TOC entry 292 (class 1259 OID 68157)
-- Name: pizza_price;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_price OWNER TO floreant;
--
-- TOC entry 293 (class 1259 OID 68160)
-- Name: pizza_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_price_id_seq OWNER TO floreant;
--
-- TOC entry 4264 (class 0 OID 0)
-- Dependencies: 293
-- Name: pizza_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_price_id_seq OWNED BY pizza_price.id;
--
-- TOC entry 294 (class 1259 OID 68162)
-- Name: printer_configuration;
Type: TABLE;
Schema: public;
ALTER TABLE printer_configuration OWNER TO floreant;
--
-- TOC entry 295 (class 1259 OID 68168)
-- Name: printer_group;
Type: TABLE;
Schema: public;
ALTER TABLE printer_group OWNER TO floreant;
--
-- TOC entry 296 (class 1259 OID 68171)
-- Name: printer_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE printer_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE printer_group_id_seq OWNER TO floreant;
--
-- TOC entry 4267 (class 0 OID 0)
-- Dependencies: 296
-- Name: printer_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE printer_group_id_seq OWNED BY printer_group.id;
--
-- TOC entry 297 (class 1259 OID 68173)
-- Name: printer_group_printers;
Type: TABLE;
Schema: public;
ALTER TABLE printer_group_printers OWNER TO floreant;
--
-- TOC entry 298 (class 1259 OID 68176)
-- Name: purchase_order;
Type: TABLE;
Schema: public;
ALTER TABLE purchase_order OWNER TO floreant;
--
-- TOC entry 299 (class 1259 OID 68179)
-- Name: purchase_order_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE purchase_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE purchase_order_id_seq OWNER TO floreant;
--
-- TOC entry 4270 (class 0 OID 0)
-- Dependencies: 299
-- Name: purchase_order_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE purchase_order_id_seq OWNED BY purchase_order.id;
--
-- TOC entry 300 (class 1259 OID 68181)
-- Name: recepie;
Type: TABLE;
Schema: public;
ALTER TABLE recepie OWNER TO floreant;
--
-- TOC entry 301 (class 1259 OID 68184)
-- Name: recepie_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_id_seq OWNER TO floreant;
--
-- TOC entry 4272 (class 0 OID 0)
-- Dependencies: 301
-- Name: recepie_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_id_seq OWNED BY recepie.id;
--
-- TOC entry 302 (class 1259 OID 68186)
-- Name: recepie_item;
Type: TABLE;
Schema: public;
ALTER TABLE recepie_item OWNER TO floreant;
--
-- TOC entry 303 (class 1259 OID 68189)
-- Name: recepie_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_item_id_seq OWNER TO floreant;
--
-- TOC entry 4274 (class 0 OID 0)
-- Dependencies: 303
-- Name: recepie_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_item_id_seq OWNED BY recepie_item.id;
--
-- TOC entry 304 (class 1259 OID 68191)
-- Name: restaurant;
Type: TABLE;
Schema: public;
ALTER TABLE restaurant OWNER TO floreant;
--
-- TOC entry 305 (class 1259 OID 68194)
-- Name: restaurant_properties;
Type: TABLE;
Schema: public;
ALTER TABLE restaurant_properties OWNER TO floreant;
--
-- TOC entry 306 (class 1259 OID 68200)
-- Name: shift;
Type: TABLE;
Schema: public;
ALTER TABLE shift OWNER TO floreant;
--
-- TOC entry 307 (class 1259 OID 68203)
-- Name: shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shift_id_seq OWNER TO floreant;
--
-- TOC entry 4278 (class 0 OID 0)
-- Dependencies: 307
-- Name: shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shift_id_seq OWNED BY shift.id;
--
-- TOC entry 308 (class 1259 OID 68205)
-- Name: shop_floor;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor OWNER TO floreant;
--
-- TOC entry 309 (class 1259 OID 68208)
-- Name: shop_floor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_id_seq OWNER TO floreant;
--
-- TOC entry 4280 (class 0 OID 0)
-- Dependencies: 309
-- Name: shop_floor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_id_seq OWNED BY shop_floor.id;
--
-- TOC entry 310 (class 1259 OID 68210)
-- Name: shop_floor_template;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor_template OWNER TO floreant;
--
-- TOC entry 311 (class 1259 OID 68213)
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_template_id_seq OWNER TO floreant;
--
-- TOC entry 4282 (class 0 OID 0)
-- Dependencies: 311
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_template_id_seq OWNED BY shop_floor_template.id;
--
-- TOC entry 312 (class 1259 OID 68215)
-- Name: shop_floor_template_properties;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor_template_properties OWNER TO floreant;
--
-- TOC entry 313 (class 1259 OID 68218)
-- Name: shop_table;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table OWNER TO floreant;
--
-- TOC entry 314 (class 1259 OID 68221)
-- Name: shop_table_status;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table_status OWNER TO floreant;
--
-- TOC entry 315 (class 1259 OID 68224)
-- Name: shop_table_type;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table_type OWNER TO floreant;
--
-- TOC entry 316 (class 1259 OID 68227)
-- Name: shop_table_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_table_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_table_type_id_seq OWNER TO floreant;
--
-- TOC entry 4287 (class 0 OID 0)
-- Dependencies: 316
-- Name: shop_table_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_table_type_id_seq OWNED BY shop_table_type.id;
--
-- TOC entry 317 (class 1259 OID 68229)
-- Name: table_booking_info;
Type: TABLE;
Schema: public;
ALTER TABLE table_booking_info OWNER TO floreant;
--
-- TOC entry 318 (class 1259 OID 68232)
-- Name: table_booking_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE table_booking_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE table_booking_info_id_seq OWNER TO floreant;
--
-- TOC entry 4289 (class 0 OID 0)
-- Dependencies: 318
-- Name: table_booking_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE table_booking_info_id_seq OWNED BY table_booking_info.id;
--
-- TOC entry 319 (class 1259 OID 68234)
-- Name: table_booking_mapping;
Type: TABLE;
Schema: public;
ALTER TABLE table_booking_mapping OWNER TO floreant;
--
-- TOC entry 320 (class 1259 OID 68237)
-- Name: table_ticket_num;
Type: TABLE;
Schema: public;
ALTER TABLE table_ticket_num OWNER TO floreant;
--
-- TOC entry 321 (class 1259 OID 68240)
-- Name: table_type_relation;
Type: TABLE;
Schema: public;
ALTER TABLE table_type_relation OWNER TO floreant;
--
-- TOC entry 322 (class 1259 OID 68243)
-- Name: tax;
Type: TABLE;
Schema: public;
ALTER TABLE tax OWNER TO floreant;
--
-- TOC entry 323 (class 1259 OID 68246)
-- Name: tax_group;
Type: TABLE;
Schema: public;
ALTER TABLE tax_group OWNER TO floreant;
--
-- TOC entry 324 (class 1259 OID 68249)
-- Name: tax_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE tax_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE tax_id_seq OWNER TO floreant;
--
-- TOC entry 4295 (class 0 OID 0)
-- Dependencies: 324
-- Name: tax_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE tax_id_seq OWNED BY tax.id;
--
-- TOC entry 325 (class 1259 OID 68251)
-- Name: terminal_printers;
Type: TABLE;
Schema: public;
ALTER TABLE terminal_printers OWNER TO floreant;
--
-- TOC entry 326 (class 1259 OID 68254)
-- Name: terminal_printers_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE terminal_printers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE terminal_printers_id_seq OWNER TO floreant;
--
-- TOC entry 4297 (class 0 OID 0)
-- Dependencies: 326
-- Name: terminal_printers_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE terminal_printers_id_seq OWNED BY terminal_printers.id;
--
-- TOC entry 327 (class 1259 OID 68256)
-- Name: terminal_properties;
Type: TABLE;
Schema: public;
ALTER TABLE terminal_properties OWNER TO floreant;
--
-- TOC entry 328 (class 1259 OID 68262)
-- Name: ticket_discount;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_discount OWNER TO floreant;
--
-- TOC entry 329 (class 1259 OID 68265)
-- Name: ticket_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4300 (class 0 OID 0)
-- Dependencies: 329
-- Name: ticket_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_discount_id_seq OWNED BY ticket_discount.id;
--
-- TOC entry 330 (class 1259 OID 68267)
-- Name: ticket_folio_complete;
Type: VIEW;
Schema: public;
ALTER TABLE ticket_folio_complete OWNER TO floreant;
--
-- TOC entry 331 (class 1259 OID 68272)
-- Name: ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_id_seq OWNER TO floreant;
--
-- TOC entry 4302 (class 0 OID 0)
-- Dependencies: 331
-- Name: ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_id_seq OWNED BY ticket.id;
--
-- TOC entry 332 (class 1259 OID 68274)
-- Name: ticket_item;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item OWNER TO floreant;
--
-- TOC entry 333 (class 1259 OID 68280)
-- Name: ticket_item_addon_relation;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_addon_relation OWNER TO floreant;
--
-- TOC entry 334 (class 1259 OID 68283)
-- Name: ticket_item_cooking_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_cooking_instruction OWNER TO floreant;
--
-- TOC entry 335 (class 1259 OID 68286)
-- Name: ticket_item_discount;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_discount OWNER TO floreant;
--
-- TOC entry 336 (class 1259 OID 68289)
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4307 (class 0 OID 0)
-- Dependencies: 336
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_discount_id_seq OWNED BY ticket_item_discount.id;
--
-- TOC entry 337 (class 1259 OID 68291)
-- Name: ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 4308 (class 0 OID 0)
-- Dependencies: 337
-- Name: ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_id_seq OWNED BY ticket_item.id;
--
-- TOC entry 338 (class 1259 OID 68293)
-- Name: ticket_item_modifier;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_modifier OWNER TO floreant;
--
-- TOC entry 339 (class 1259 OID 68296)
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 4310 (class 0 OID 0)
-- Dependencies: 339
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_modifier_id_seq OWNED BY ticket_item_modifier.id;
--
-- TOC entry 340 (class 1259 OID 68298)
-- Name: ticket_item_modifier_relation;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_modifier_relation OWNER TO floreant;
--
-- TOC entry 341 (class 1259 OID 68301)
-- Name: ticket_properties;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_properties OWNER TO floreant;
--
-- TOC entry 342 (class 1259 OID 68307)
-- Name: ticket_table_num;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_table_num OWNER TO floreant;
--
-- TOC entry 343 (class 1259 OID 68310)
-- Name: transaction_properties;
Type: TABLE;
Schema: public;
ALTER TABLE transaction_properties OWNER TO floreant;
--
-- TOC entry 344 (class 1259 OID 68316)
-- Name: transactions;
Type: TABLE;
Schema: public;
ALTER TABLE transactions OWNER TO floreant;
--
-- TOC entry 345 (class 1259 OID 68322)
-- Name: transactions_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE transactions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE transactions_id_seq OWNER TO floreant;
--
-- TOC entry 4316 (class 0 OID 0)
-- Dependencies: 345
-- Name: transactions_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE transactions_id_seq OWNED BY transactions.id;
--
-- TOC entry 346 (class 1259 OID 68324)
-- Name: user_permission;
Type: TABLE;
Schema: public;
ALTER TABLE user_permission OWNER TO floreant;
--
-- TOC entry 347 (class 1259 OID 68327)
-- Name: user_type;
Type: TABLE;
Schema: public;
ALTER TABLE user_type OWNER TO floreant;
--
-- TOC entry 348 (class 1259 OID 68330)
-- Name: user_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE user_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE user_type_id_seq OWNER TO floreant;
--
-- TOC entry 4319 (class 0 OID 0)
-- Dependencies: 348
-- Name: user_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE user_type_id_seq OWNED BY user_type.id;
--
-- TOC entry 349 (class 1259 OID 68332)
-- Name: user_user_permission;
Type: TABLE;
Schema: public;
ALTER TABLE user_user_permission OWNER TO floreant;
--
-- TOC entry 350 (class 1259 OID 68335)
-- Name: users;
Type: TABLE;
Schema: public;
ALTER TABLE users OWNER TO floreant;
--
-- TOC entry 351 (class 1259 OID 68338)
-- Name: users_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE users_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE users_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4322 (class 0 OID 0)
-- Dependencies: 351
-- Name: users_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE users_auto_id_seq OWNED BY users.auto_id;
--
-- TOC entry 352 (class 1259 OID 68340)
-- Name: virtual_printer;
Type: TABLE;
Schema: public;
ALTER TABLE virtual_printer OWNER TO floreant;
--
-- TOC entry 353 (class 1259 OID 68343)
-- Name: virtual_printer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE virtual_printer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE virtual_printer_id_seq OWNER TO floreant;
--
-- TOC entry 4324 (class 0 OID 0)
-- Dependencies: 353
-- Name: virtual_printer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE virtual_printer_id_seq OWNED BY virtual_printer.id;
--
-- TOC entry 354 (class 1259 OID 68345)
-- Name: virtualprinter_order_type;
Type: TABLE;
Schema: public;
ALTER TABLE virtualprinter_order_type OWNER TO floreant;
--
-- TOC entry 355 (class 1259 OID 68348)
-- Name: void_reasons;
Type: TABLE;
Schema: public;
ALTER TABLE void_reasons OWNER TO floreant;
--
-- TOC entry 356 (class 1259 OID 68351)
-- Name: void_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE void_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE void_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 4327 (class 0 OID 0)
-- Dependencies: 356
-- Name: void_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE void_reasons_id_seq OWNED BY void_reasons.id;
--
-- TOC entry 381 (class 1259 OID 69479)
-- Name: vw_reconciliation_status;
Type: VIEW;
Schema: public;
ALTER TABLE vw_reconciliation_status OWNER TO postgres;
--
-- TOC entry 357 (class 1259 OID 68353)
-- Name: zip_code_vs_delivery_charge;
Type: TABLE;
Schema: public;
ALTER TABLE zip_code_vs_delivery_charge OWNER TO floreant;
--
-- TOC entry 358 (class 1259 OID 68356)
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE zip_code_vs_delivery_charge_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE zip_code_vs_delivery_charge_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4330 (class 0 OID 0)
-- Dependencies: 358
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE zip_code_vs_delivery_charge_auto_id_seq OWNED BY zip_code_vs_delivery_charge.auto_id;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 359 (class 1259 OID 68358)
-- Name: auditoria;
Type: TABLE;
Schema: selemti;
ALTER TABLE auditoria OWNER TO floreant;
--
-- TOC entry 360 (class 1259 OID 68365)
-- Name: auditoria_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE auditoria_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE auditoria_id_seq OWNER TO floreant;
--
-- TOC entry 4331 (class 0 OID 0)
-- Dependencies: 360
-- Name: auditoria_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE auditoria_id_seq OWNED BY auditoria.id;
--
-- TOC entry 394 (class 1259 OID 73651)
-- Name: cache;
Type: TABLE;
Schema: selemti;
ALTER TABLE cache OWNER TO postgres;
--
-- TOC entry 395 (class 1259 OID 73659)
-- Name: cache_locks;
Type: TABLE;
Schema: selemti;
ALTER TABLE cache_locks OWNER TO postgres;
--
-- TOC entry 402 (class 1259 OID 73704)
-- Name: cat_unidades;
Type: TABLE;
Schema: selemti;
ALTER TABLE cat_unidades OWNER TO postgres;
--
-- TOC entry 401 (class 1259 OID 73702)
-- Name: cat_unidades_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE cat_unidades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cat_unidades_id_seq OWNER TO postgres;
--
-- TOC entry 4332 (class 0 OID 0)
-- Dependencies: 401
-- Name: cat_unidades_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE cat_unidades_id_seq OWNED BY cat_unidades.id;
--
-- TOC entry 423 (class 1259 OID 77265)
-- Name: conversiones_unidad;
Type: TABLE;
Schema: selemti;
ALTER TABLE conversiones_unidad OWNER TO postgres;
--
-- TOC entry 422 (class 1259 OID 77263)
-- Name: conversiones_unidad_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE conversiones_unidad_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE conversiones_unidad_id_seq OWNER TO postgres;
--
-- TOC entry 4333 (class 0 OID 0)
-- Dependencies: 422
-- Name: conversiones_unidad_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE conversiones_unidad_id_seq OWNED BY conversiones_unidad.id;
--
-- TOC entry 431 (class 1259 OID 77393)
-- Name: cost_layer;
Type: TABLE;
Schema: selemti;
ALTER TABLE cost_layer OWNER TO postgres;
--
-- TOC entry 430 (class 1259 OID 77391)
-- Name: cost_layer_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE cost_layer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cost_layer_id_seq OWNER TO postgres;
--
-- TOC entry 4334 (class 0 OID 0)
-- Dependencies: 430
-- Name: cost_layer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE cost_layer_id_seq OWNED BY cost_layer.id;
--
-- TOC entry 400 (class 1259 OID 73689)
-- Name: failed_jobs;
Type: TABLE;
Schema: selemti;
ALTER TABLE failed_jobs OWNER TO postgres;
--
-- TOC entry 399 (class 1259 OID 73687)
-- Name: failed_jobs_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE failed_jobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE failed_jobs_id_seq OWNER TO postgres;
--
-- TOC entry 4335 (class 0 OID 0)
-- Dependencies: 399
-- Name: failed_jobs_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE failed_jobs_id_seq OWNED BY failed_jobs.id;
--
-- TOC entry 361 (class 1259 OID 68367)
-- Name: formas_pago;
Type: TABLE;
Schema: selemti;
ALTER TABLE formas_pago OWNER TO floreant;
--
-- TOC entry 362 (class 1259 OID 68376)
-- Name: formas_pago_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE formas_pago_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE formas_pago_id_seq OWNER TO floreant;
--
-- TOC entry 4336 (class 0 OID 0)
-- Dependencies: 362
-- Name: formas_pago_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE formas_pago_id_seq OWNED BY formas_pago.id;
--
-- TOC entry 425 (class 1259 OID 77319)
-- Name: historial_costos_item;
Type: TABLE;
Schema: selemti;
ALTER TABLE historial_costos_item OWNER TO postgres;
--
-- TOC entry 424 (class 1259 OID 77317)
-- Name: historial_costos_item_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE historial_costos_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE historial_costos_item_id_seq OWNER TO postgres;
--
-- TOC entry 4337 (class 0 OID 0)
-- Dependencies: 424
-- Name: historial_costos_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE historial_costos_item_id_seq OWNED BY historial_costos_item.id;
--
-- TOC entry 427 (class 1259 OID 77351)
-- Name: historial_costos_receta;
Type: TABLE;
Schema: selemti;
ALTER TABLE historial_costos_receta OWNER TO postgres;
--
-- TOC entry 426 (class 1259 OID 77349)
-- Name: historial_costos_receta_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE historial_costos_receta_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE historial_costos_receta_id_seq OWNER TO postgres;
--
-- TOC entry 4338 (class 0 OID 0)
-- Dependencies: 426
-- Name: historial_costos_receta_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE historial_costos_receta_id_seq OWNED BY historial_costos_receta.id;
--
-- TOC entry 406 (class 1259 OID 77073)
-- Name: inventory_batch;
Type: TABLE;
Schema: selemti;
ALTER TABLE inventory_batch OWNER TO postgres;
--
-- TOC entry 4339 (class 0 OID 0)
-- Dependencies: 406
-- Name: TABLE inventory_batch;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE inventory_batch IS 'Lotes de inventario con trazabilidad completa';
--
-- TOC entry 405 (class 1259 OID 77071)
-- Name: inventory_batch_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE inventory_batch_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_batch_id_seq OWNER TO postgres;
--
-- TOC entry 4340 (class 0 OID 0)
-- Dependencies: 405
-- Name: inventory_batch_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE inventory_batch_id_seq OWNED BY inventory_batch.id;
--
-- TOC entry 439 (class 1259 OID 77489)
-- Name: item_vendor;
Type: TABLE;
Schema: selemti;
ALTER TABLE item_vendor OWNER TO postgres;
--
-- TOC entry 404 (class 1259 OID 77052)
-- Name: items;
Type: TABLE;
Schema: selemti;
ALTER TABLE items OWNER TO postgres;
--
-- TOC entry 4341 (class 0 OID 0)
-- Dependencies: 404
-- Name: TABLE items;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE items IS 'Maestro de todos los ítems del sistema';
--
-- TOC entry 398 (class 1259 OID 73679)
-- Name: job_batches;
Type: TABLE;
Schema: selemti;
ALTER TABLE job_batches OWNER TO postgres;
--
-- TOC entry 436 (class 1259 OID 77460)
-- Name: job_recalc_queue;
Type: TABLE;
Schema: selemti;
ALTER TABLE job_recalc_queue OWNER TO postgres;
--
-- TOC entry 435 (class 1259 OID 77458)
-- Name: job_recalc_queue_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE job_recalc_queue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE job_recalc_queue_id_seq OWNER TO postgres;
--
-- TOC entry 4342 (class 0 OID 0)
-- Dependencies: 435
-- Name: job_recalc_queue_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE job_recalc_queue_id_seq OWNED BY job_recalc_queue.id;
--
-- TOC entry 397 (class 1259 OID 73669)
-- Name: jobs;
Type: TABLE;
Schema: selemti;
ALTER TABLE jobs OWNER TO postgres;
--
-- TOC entry 396 (class 1259 OID 73667)
-- Name: jobs_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE jobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE jobs_id_seq OWNER TO postgres;
--
-- TOC entry 4343 (class 0 OID 0)
-- Dependencies: 396
-- Name: jobs_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE jobs_id_seq OWNED BY jobs.id;
--
-- TOC entry 391 (class 1259 OID 73614)
-- Name: migrations;
Type: TABLE;
Schema: selemti;
ALTER TABLE migrations OWNER TO postgres;
--
-- TOC entry 390 (class 1259 OID 73612)
-- Name: migrations_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE migrations_id_seq OWNER TO postgres;
--
-- TOC entry 4344 (class 0 OID 0)
-- Dependencies: 390
-- Name: migrations_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE migrations_id_seq OWNED BY migrations.id;
--
-- TOC entry 434 (class 1259 OID 77424)
-- Name: modificadores_pos;
Type: TABLE;
Schema: selemti;
ALTER TABLE modificadores_pos OWNER TO postgres;
--
-- TOC entry 433 (class 1259 OID 77422)
-- Name: modificadores_pos_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE modificadores_pos_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE modificadores_pos_id_seq OWNER TO postgres;
--
-- TOC entry 4345 (class 0 OID 0)
-- Dependencies: 433
-- Name: modificadores_pos_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE modificadores_pos_id_seq OWNED BY modificadores_pos.id;
--
-- TOC entry 408 (class 1259 OID 77097)
-- Name: mov_inv;
Type: TABLE;
Schema: selemti;
ALTER TABLE mov_inv OWNER TO postgres;
--
-- TOC entry 4346 (class 0 OID 0)
-- Dependencies: 408
-- Name: TABLE mov_inv;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE mov_inv IS 'Kardex completo de movimientos de inventario';
--
-- TOC entry 407 (class 1259 OID 77095)
-- Name: mov_inv_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE mov_inv_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE mov_inv_id_seq OWNER TO postgres;
--
-- TOC entry 4347 (class 0 OID 0)
-- Dependencies: 407
-- Name: mov_inv_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE mov_inv_id_seq OWNED BY mov_inv.id;
--
-- TOC entry 415 (class 1259 OID 77194)
-- Name: op_produccion_cab;
Type: TABLE;
Schema: selemti;
ALTER TABLE op_produccion_cab OWNER TO postgres;
--
-- TOC entry 4348 (class 0 OID 0)
-- Dependencies: 415
-- Name: TABLE op_produccion_cab;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE op_produccion_cab IS 'Órdenes de producción para elaborados';
--
-- TOC entry 414 (class 1259 OID 77192)
-- Name: op_produccion_cab_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE op_produccion_cab_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE op_produccion_cab_id_seq OWNER TO postgres;
--
-- TOC entry 4349 (class 0 OID 0)
-- Dependencies: 414
-- Name: op_produccion_cab_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE op_produccion_cab_id_seq OWNED BY op_produccion_cab.id;
--
-- TOC entry 441 (class 1259 OID 77531)
-- Name: param_sucursal;
Type: TABLE;
Schema: selemti;
ALTER TABLE param_sucursal OWNER TO postgres;
--
-- TOC entry 440 (class 1259 OID 77529)
-- Name: param_sucursal_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE param_sucursal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE param_sucursal_id_seq OWNER TO postgres;
--
-- TOC entry 4350 (class 0 OID 0)
-- Dependencies: 440
-- Name: param_sucursal_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE param_sucursal_id_seq OWNED BY param_sucursal.id;
--
-- TOC entry 392 (class 1259 OID 73633)
-- Name: password_reset_tokens;
Type: TABLE;
Schema: selemti;
ALTER TABLE password_reset_tokens OWNER TO postgres;
--
-- TOC entry 447 (class 1259 OID 77589)
-- Name: perdida_log;
Type: TABLE;
Schema: selemti;
ALTER TABLE perdida_log OWNER TO postgres;
--
-- TOC entry 446 (class 1259 OID 77587)
-- Name: perdida_log_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE perdida_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE perdida_log_id_seq OWNER TO postgres;
--
-- TOC entry 4351 (class 0 OID 0)
-- Dependencies: 446
-- Name: perdida_log_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE perdida_log_id_seq OWNED BY perdida_log.id;
--
-- TOC entry 432 (class 1259 OID 77412)
-- Name: pos_map;
Type: TABLE;
Schema: selemti;
ALTER TABLE pos_map OWNER TO postgres;
--
-- TOC entry 363 (class 1259 OID 68378)
-- Name: postcorte;
Type: TABLE;
Schema: selemti;
ALTER TABLE postcorte OWNER TO floreant;
--
-- TOC entry 4352 (class 0 OID 0)
-- Dependencies: 363
-- Name: COLUMN postcorte.validado;
Type: COMMENT;
Schema: selemti;
Owner: floreant
--

COMMENT ON COLUMN postcorte.validado IS 'TRUE cuando el supervisor valida/cierra el postcorte';
--
-- TOC entry 364 (class 1259 OID 68401)
-- Name: postcorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE postcorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE postcorte_id_seq OWNER TO floreant;
--
-- TOC entry 4353 (class 0 OID 0)
-- Dependencies: 364
-- Name: postcorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE postcorte_id_seq OWNED BY postcorte.id;
--
-- TOC entry 365 (class 1259 OID 68403)
-- Name: precorte;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte OWNER TO floreant;
--
-- TOC entry 366 (class 1259 OID 68414)
-- Name: precorte_efectivo;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte_efectivo OWNER TO floreant;
--
-- TOC entry 367 (class 1259 OID 68418)
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_efectivo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_efectivo_id_seq OWNER TO floreant;
--
-- TOC entry 4354 (class 0 OID 0)
-- Dependencies: 367
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_efectivo_id_seq OWNED BY precorte_efectivo.id;
--
-- TOC entry 368 (class 1259 OID 68420)
-- Name: precorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_id_seq OWNER TO floreant;
--
-- TOC entry 4355 (class 0 OID 0)
-- Dependencies: 368
-- Name: precorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_id_seq OWNED BY precorte.id;
--
-- TOC entry 369 (class 1259 OID 68422)
-- Name: precorte_otros;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte_otros OWNER TO floreant;
--
-- TOC entry 370 (class 1259 OID 68430)
-- Name: precorte_otros_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_otros_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_otros_id_seq OWNER TO floreant;
--
-- TOC entry 4356 (class 0 OID 0)
-- Dependencies: 370
-- Name: precorte_otros_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_otros_id_seq OWNED BY precorte_otros.id;
--
-- TOC entry 438 (class 1259 OID 77475)
-- Name: recalc_log;
Type: TABLE;
Schema: selemti;
ALTER TABLE recalc_log OWNER TO postgres;
--
-- TOC entry 437 (class 1259 OID 77473)
-- Name: recalc_log_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE recalc_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recalc_log_id_seq OWNER TO postgres;
--
-- TOC entry 4357 (class 0 OID 0)
-- Dependencies: 437
-- Name: recalc_log_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE recalc_log_id_seq OWNED BY recalc_log.id;
--
-- TOC entry 409 (class 1259 OID 77122)
-- Name: receta_cab;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_cab OWNER TO postgres;
--
-- TOC entry 4358 (class 0 OID 0)
-- Dependencies: 409
-- Name: TABLE receta_cab;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_cab IS 'Cabecera de recetas y platos del menú';
--
-- TOC entry 413 (class 1259 OID 77168)
-- Name: receta_det;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_det OWNER TO postgres;
--
-- TOC entry 4359 (class 0 OID 0)
-- Dependencies: 413
-- Name: TABLE receta_det;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_det IS 'Detalle de ingredientes por versión de receta';
--
-- TOC entry 412 (class 1259 OID 77166)
-- Name: receta_det_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_det_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_det_id_seq OWNER TO postgres;
--
-- TOC entry 4360 (class 0 OID 0)
-- Dependencies: 412
-- Name: receta_det_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_det_id_seq OWNED BY receta_det.id;
--
-- TOC entry 429 (class 1259 OID 77370)
-- Name: receta_shadow;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_shadow OWNER TO postgres;
--
-- TOC entry 428 (class 1259 OID 77368)
-- Name: receta_shadow_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_shadow_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_shadow_id_seq OWNER TO postgres;
--
-- TOC entry 4361 (class 0 OID 0)
-- Dependencies: 428
-- Name: receta_shadow_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_shadow_id_seq OWNED BY receta_shadow.id;
--
-- TOC entry 411 (class 1259 OID 77142)
-- Name: receta_version;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_version OWNER TO postgres;
--
-- TOC entry 4362 (class 0 OID 0)
-- Dependencies: 411
-- Name: TABLE receta_version;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_version IS 'Control de versiones de recetas';
--
-- TOC entry 410 (class 1259 OID 77140)
-- Name: receta_version_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_version_id_seq OWNER TO postgres;
--
-- TOC entry 4363 (class 0 OID 0)
-- Dependencies: 410
-- Name: receta_version_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_version_id_seq OWNED BY receta_version.id;
--
-- TOC entry 371 (class 1259 OID 68432)
-- Name: sesion_cajon;
Type: TABLE;
Schema: selemti;
ALTER TABLE sesion_cajon OWNER TO floreant;
--
-- TOC entry 372 (class 1259 OID 68443)
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE sesion_cajon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE sesion_cajon_id_seq OWNER TO floreant;
--
-- TOC entry 4364 (class 0 OID 0)
-- Dependencies: 372
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE sesion_cajon_id_seq OWNED BY sesion_cajon.id;
--
-- TOC entry 393 (class 1259 OID 73641)
-- Name: sessions;
Type: TABLE;
Schema: selemti;
ALTER TABLE sessions OWNER TO postgres;
--
-- TOC entry 443 (class 1259 OID 77549)
-- Name: stock_policy;
Type: TABLE;
Schema: selemti;
ALTER TABLE stock_policy OWNER TO postgres;
--
-- TOC entry 442 (class 1259 OID 77547)
-- Name: stock_policy_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE stock_policy_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE stock_policy_id_seq OWNER TO postgres;
--
-- TOC entry 4365 (class 0 OID 0)
-- Dependencies: 442
-- Name: stock_policy_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE stock_policy_id_seq OWNED BY stock_policy.id;
--
-- TOC entry 445 (class 1259 OID 77570)
-- Name: sucursal_almacen_terminal;
Type: TABLE;
Schema: selemti;
ALTER TABLE sucursal_almacen_terminal OWNER TO postgres;
--
-- TOC entry 444 (class 1259 OID 77568)
-- Name: sucursal_almacen_terminal_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE sucursal_almacen_terminal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE sucursal_almacen_terminal_id_seq OWNER TO postgres;
--
-- TOC entry 4366 (class 0 OID 0)
-- Dependencies: 444
-- Name: sucursal_almacen_terminal_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE sucursal_almacen_terminal_id_seq OWNED BY sucursal_almacen_terminal.id;
--
-- TOC entry 449 (class 1259 OID 77623)
-- Name: ticket_det_consumo;
Type: TABLE;
Schema: selemti;
ALTER TABLE ticket_det_consumo OWNER TO postgres;
--
-- TOC entry 448 (class 1259 OID 77621)
-- Name: ticket_det_consumo_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_det_consumo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_det_consumo_id_seq OWNER TO postgres;
--
-- TOC entry 4367 (class 0 OID 0)
-- Dependencies: 448
-- Name: ticket_det_consumo_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_det_consumo_id_seq OWNED BY ticket_det_consumo.id;
--
-- TOC entry 417 (class 1259 OID 77217)
-- Name: ticket_venta_cab;
Type: TABLE;
Schema: selemti;
ALTER TABLE ticket_venta_cab OWNER TO postgres;
--
-- TOC entry 416 (class 1259 OID 77215)
-- Name: ticket_venta_cab_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_venta_cab_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_venta_cab_id_seq OWNER TO postgres;
--
-- TOC entry 4368 (class 0 OID 0)
-- Dependencies: 416
-- Name: ticket_venta_cab_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_venta_cab_id_seq OWNED BY ticket_venta_cab.id;
--
-- TOC entry 419 (class 1259 OID 77232)
-- Name: ticket_venta_det;
Type: TABLE;
Schema: selemti;
ALTER TABLE ticket_venta_det OWNER TO postgres;
--
-- TOC entry 418 (class 1259 OID 77230)
-- Name: ticket_venta_det_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_venta_det_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_venta_det_id_seq OWNER TO postgres;
--
-- TOC entry 4369 (class 0 OID 0)
-- Dependencies: 418
-- Name: ticket_venta_det_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_venta_det_id_seq OWNED BY ticket_venta_det.id;
--
-- TOC entry 421 (class 1259 OID 77247)
-- Name: unidades_medida;
Type: TABLE;
Schema: selemti;
ALTER TABLE unidades_medida OWNER TO postgres;
--
-- TOC entry 420 (class 1259 OID 77245)
-- Name: unidades_medida_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE unidades_medida_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE unidades_medida_id_seq OWNER TO postgres;
--
-- TOC entry 4370 (class 0 OID 0)
-- Dependencies: 420
-- Name: unidades_medida_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE unidades_medida_id_seq OWNED BY unidades_medida.id;
--
-- TOC entry 403 (class 1259 OID 77035)
-- Name: user_roles;
Type: TABLE;
Schema: selemti;
ALTER TABLE user_roles OWNER TO postgres;
--
-- TOC entry 4371 (class 0 OID 0)
-- Dependencies: 403
-- Name: TABLE user_roles;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE user_roles IS 'Asignación de roles a usuarios (RBAC)';
--
-- TOC entry 454 (class 1259 OID 77685)
-- Name: users;
Type: TABLE;
Schema: selemti;
ALTER TABLE users OWNER TO postgres;
--
-- TOC entry 4372 (class 0 OID 0)
-- Dependencies: 454
-- Name: TABLE users;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE users IS 'Usuarios del sistema con sus credenciales y estado';
--
-- TOC entry 453 (class 1259 OID 77683)
-- Name: users_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE users_id_seq OWNER TO postgres;
--
-- TOC entry 4373 (class 0 OID 0)
-- Dependencies: 453
-- Name: users_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;
--
-- TOC entry 451 (class 1259 OID 77670)
-- Name: v_ingenieria_menu_completa;
Type: VIEW;
Schema: selemti;
ALTER TABLE v_ingenieria_menu_completa OWNER TO postgres;
--
-- TOC entry 452 (class 1259 OID 77675)
-- Name: v_merma_por_item;
Type: VIEW;
Schema: selemti;
ALTER TABLE v_merma_por_item OWNER TO postgres;
--
-- TOC entry 450 (class 1259 OID 77665)
-- Name: v_stock_actual;
Type: VIEW;
Schema: selemti;
ALTER TABLE v_stock_actual OWNER TO postgres;
--
-- TOC entry 383 (class 1259 OID 69489)
-- Name: vw_anulaciones_por_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_anulaciones_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 375 (class 1259 OID 68455)
-- Name: vw_sesion_reembolsos_efectivo;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_reembolsos_efectivo OWNER TO floreant;
--
-- TOC entry 376 (class 1259 OID 68460)
-- Name: vw_sesion_retiros;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_retiros OWNER TO floreant;
--
-- TOC entry 377 (class 1259 OID 68465)
-- Name: vw_sesion_ventas;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_ventas OWNER TO postgres;
--
-- TOC entry 386 (class 1259 OID 69504)
-- Name: vw_conciliacion_efectivo;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_conciliacion_efectivo OWNER TO postgres;
--
-- TOC entry 373 (class 1259 OID 68445)
-- Name: vw_sesion_descuentos;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_descuentos OWNER TO floreant;
--
-- TOC entry 374 (class 1259 OID 68450)
-- Name: vw_sesion_dpr;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_dpr OWNER TO postgres;
--
-- TOC entry 378 (class 1259 OID 68470)
-- Name: vw_conciliacion_sesion;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_conciliacion_sesion OWNER TO floreant;
--
-- TOC entry 385 (class 1259 OID 69499)
-- Name: vw_conciliacion_tarjetas;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_conciliacion_tarjetas OWNER TO postgres;
--
-- TOC entry 382 (class 1259 OID 69484)
-- Name: vw_descuentos_por_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_descuentos_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 379 (class 1259 OID 68475)
-- Name: vw_fast_tickets;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_fast_tickets OWNER TO postgres;
--
-- TOC entry 380 (class 1259 OID 68479)
-- Name: vw_fast_tx;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_fast_tx OWNER TO postgres;
--
-- TOC entry 384 (class 1259 OID 69494)
-- Name: vw_pagos_por_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_pagos_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 387 (class 1259 OID 69523)
-- Name: vw_resumen_conciliacion_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_resumen_conciliacion_terminal_dia OWNER TO postgres;
SET search_path = public, pg_catalog;
--
-- TOC entry 2947 (class 2604 OID 68483)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history ALTER COLUMN id SET DEFAULT nextval('action_history_id_seq'::regclass);
--
-- TOC entry 2948 (class 2604 OID 68484)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history ALTER COLUMN id SET DEFAULT nextval('attendence_history_id_seq'::regclass);
--
-- TOC entry 2949 (class 2604 OID 68485)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer ALTER COLUMN id SET DEFAULT nextval('cash_drawer_id_seq'::regclass);
--
-- TOC entry 2950 (class 2604 OID 68486)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history ALTER COLUMN id SET DEFAULT nextval('cash_drawer_reset_history_id_seq'::regclass);
--
-- TOC entry 2951 (class 2604 OID 68487)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction ALTER COLUMN id SET DEFAULT nextval('cooking_instruction_id_seq'::regclass);
--
-- TOC entry 2952 (class 2604 OID 68488)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount ALTER COLUMN id SET DEFAULT nextval('coupon_and_discount_id_seq'::regclass);
--
-- TOC entry 2953 (class 2604 OID 68489)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency ALTER COLUMN id SET DEFAULT nextval('currency_id_seq'::regclass);
--
-- TOC entry 2954 (class 2604 OID 68490)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance ALTER COLUMN id SET DEFAULT nextval('currency_balance_id_seq'::regclass);
--
-- TOC entry 2955 (class 2604 OID 68491)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment ALTER COLUMN id SET DEFAULT nextval('custom_payment_id_seq'::regclass);
--
-- TOC entry 2956 (class 2604 OID 68492)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer ALTER COLUMN auto_id SET DEFAULT nextval('customer_auto_id_seq'::regclass);
--
-- TOC entry 2958 (class 2604 OID 68493)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info ALTER COLUMN id SET DEFAULT nextval('data_update_info_id_seq'::regclass);
--
-- TOC entry 2959 (class 2604 OID 68494)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address ALTER COLUMN id SET DEFAULT nextval('delivery_address_id_seq'::regclass);
--
-- TOC entry 2960 (class 2604 OID 68495)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge ALTER COLUMN id SET DEFAULT nextval('delivery_charge_id_seq'::regclass);
--
-- TOC entry 2961 (class 2604 OID 68496)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration ALTER COLUMN id SET DEFAULT nextval('delivery_configuration_id_seq'::regclass);
--
-- TOC entry 2962 (class 2604 OID 68497)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction ALTER COLUMN id SET DEFAULT nextval('delivery_instruction_id_seq'::regclass);
--
-- TOC entry 2963 (class 2604 OID 68498)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history ALTER COLUMN id SET DEFAULT nextval('drawer_assigned_history_id_seq'::regclass);
--
-- TOC entry 2964 (class 2604 OID 68499)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report ALTER COLUMN id SET DEFAULT nextval('drawer_pull_report_id_seq'::regclass);
--
-- TOC entry 2965 (class 2604 OID 68500)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history ALTER COLUMN id SET DEFAULT nextval('employee_in_out_history_id_seq'::regclass);
--
-- TOC entry 2966 (class 2604 OID 68501)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config ALTER COLUMN id SET DEFAULT nextval('global_config_id_seq'::regclass);
--
-- TOC entry 2967 (class 2604 OID 68502)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity ALTER COLUMN id SET DEFAULT nextval('gratuity_id_seq'::regclass);
--
-- TOC entry 2968 (class 2604 OID 68503)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print ALTER COLUMN id SET DEFAULT nextval('guest_check_print_id_seq'::regclass);
--
-- TOC entry 2969 (class 2604 OID 68504)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group ALTER COLUMN id SET DEFAULT nextval('inventory_group_id_seq'::regclass);
--
-- TOC entry 2970 (class 2604 OID 68505)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item ALTER COLUMN id SET DEFAULT nextval('inventory_item_id_seq'::regclass);
--
-- TOC entry 2971 (class 2604 OID 68506)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location ALTER COLUMN id SET DEFAULT nextval('inventory_location_id_seq'::regclass);
--
-- TOC entry 2972 (class 2604 OID 68507)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code ALTER COLUMN id SET DEFAULT nextval('inventory_meta_code_id_seq'::regclass);
--
-- TOC entry 2973 (class 2604 OID 68508)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction ALTER COLUMN id SET DEFAULT nextval('inventory_transaction_id_seq'::regclass);
--
-- TOC entry 2974 (class 2604 OID 68509)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit ALTER COLUMN id SET DEFAULT nextval('inventory_unit_id_seq'::regclass);
--
-- TOC entry 2975 (class 2604 OID 68510)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor ALTER COLUMN id SET DEFAULT nextval('inventory_vendor_id_seq'::regclass);
--
-- TOC entry 2976 (class 2604 OID 68511)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse ALTER COLUMN id SET DEFAULT nextval('inventory_warehouse_id_seq'::regclass);
--
-- TOC entry 2977 (class 2604 OID 68512)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_id_seq'::regclass);
--
-- TOC entry 2981 (class 2604 OID 68513)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_item_id_seq'::regclass);
--
-- TOC entry 2982 (class 2604 OID 68514)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category ALTER COLUMN id SET DEFAULT nextval('menu_category_id_seq'::regclass);
--
-- TOC entry 2983 (class 2604 OID 68515)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group ALTER COLUMN id SET DEFAULT nextval('menu_group_id_seq'::regclass);
--
-- TOC entry 2984 (class 2604 OID 68516)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item ALTER COLUMN id SET DEFAULT nextval('menu_item_id_seq'::regclass);
--
-- TOC entry 2985 (class 2604 OID 68517)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size ALTER COLUMN id SET DEFAULT nextval('menu_item_size_id_seq'::regclass);
--
-- TOC entry 2986 (class 2604 OID 68518)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier ALTER COLUMN id SET DEFAULT nextval('menu_modifier_id_seq'::regclass);
--
-- TOC entry 2987 (class 2604 OID 68519)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group ALTER COLUMN id SET DEFAULT nextval('menu_modifier_group_id_seq'::regclass);
--
-- TOC entry 2988 (class 2604 OID 68520)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup ALTER COLUMN id SET DEFAULT nextval('menuitem_modifiergroup_id_seq'::regclass);
--
-- TOC entry 2989 (class 2604 OID 68521)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift ALTER COLUMN id SET DEFAULT nextval('menuitem_shift_id_seq'::regclass);
--
-- TOC entry 3060 (class 2604 OID 73605)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: postgres
--

ALTER TABLE ONLY migrations ALTER COLUMN id SET DEFAULT nextval('migrations_id_seq'::regclass);
--
-- TOC entry 2990 (class 2604 OID 68522)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price ALTER COLUMN id SET DEFAULT nextval('modifier_multiplier_price_id_seq'::regclass);
--
-- TOC entry 2991 (class 2604 OID 68523)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type ALTER COLUMN id SET DEFAULT nextval('order_type_id_seq'::regclass);
--
-- TOC entry 2992 (class 2604 OID 68524)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit ALTER COLUMN id SET DEFAULT nextval('packaging_unit_id_seq'::regclass);
--
-- TOC entry 2993 (class 2604 OID 68525)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons ALTER COLUMN id SET DEFAULT nextval('payout_reasons_id_seq'::regclass);
--
-- TOC entry 2994 (class 2604 OID 68526)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients ALTER COLUMN id SET DEFAULT nextval('payout_recepients_id_seq'::regclass);
--
-- TOC entry 2995 (class 2604 OID 68527)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust ALTER COLUMN id SET DEFAULT nextval('pizza_crust_id_seq'::regclass);
--
-- TOC entry 2996 (class 2604 OID 68528)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price ALTER COLUMN id SET DEFAULT nextval('pizza_modifier_price_id_seq'::regclass);
--
-- TOC entry 2997 (class 2604 OID 68529)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price ALTER COLUMN id SET DEFAULT nextval('pizza_price_id_seq'::regclass);
--
-- TOC entry 2998 (class 2604 OID 68530)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group ALTER COLUMN id SET DEFAULT nextval('printer_group_id_seq'::regclass);
--
-- TOC entry 2999 (class 2604 OID 68531)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order ALTER COLUMN id SET DEFAULT nextval('purchase_order_id_seq'::regclass);
--
-- TOC entry 3000 (class 2604 OID 68532)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie ALTER COLUMN id SET DEFAULT nextval('recepie_id_seq'::regclass);
--
-- TOC entry 3001 (class 2604 OID 68533)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item ALTER COLUMN id SET DEFAULT nextval('recepie_item_id_seq'::regclass);
--
-- TOC entry 3002 (class 2604 OID 68534)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift ALTER COLUMN id SET DEFAULT nextval('shift_id_seq'::regclass);
--
-- TOC entry 3003 (class 2604 OID 68535)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor ALTER COLUMN id SET DEFAULT nextval('shop_floor_id_seq'::regclass);
--
-- TOC entry 3004 (class 2604 OID 68536)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template ALTER COLUMN id SET DEFAULT nextval('shop_floor_template_id_seq'::regclass);
--
-- TOC entry 3005 (class 2604 OID 68537)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type ALTER COLUMN id SET DEFAULT nextval('shop_table_type_id_seq'::regclass);
--
-- TOC entry 3006 (class 2604 OID 68538)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info ALTER COLUMN id SET DEFAULT nextval('table_booking_info_id_seq'::regclass);
--
-- TOC entry 3007 (class 2604 OID 68539)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax ALTER COLUMN id SET DEFAULT nextval('tax_id_seq'::regclass);
--
-- TOC entry 3008 (class 2604 OID 68540)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers ALTER COLUMN id SET DEFAULT nextval('terminal_printers_id_seq'::regclass);
--
-- TOC entry 2978 (class 2604 OID 68541)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket ALTER COLUMN id SET DEFAULT nextval('ticket_id_seq'::regclass);
--
-- TOC entry 3009 (class 2604 OID 68542)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount ALTER COLUMN id SET DEFAULT nextval('ticket_discount_id_seq'::regclass);
--
-- TOC entry 3010 (class 2604 OID 68543)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item ALTER COLUMN id SET DEFAULT nextval('ticket_item_id_seq'::regclass);
--
-- TOC entry 3011 (class 2604 OID 68544)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount ALTER COLUMN id SET DEFAULT nextval('ticket_item_discount_id_seq'::regclass);
--
-- TOC entry 3012 (class 2604 OID 68545)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier ALTER COLUMN id SET DEFAULT nextval('ticket_item_modifier_id_seq'::regclass);
--
-- TOC entry 3013 (class 2604 OID 68546)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions ALTER COLUMN id SET DEFAULT nextval('transactions_id_seq'::regclass);
--
-- TOC entry 3014 (class 2604 OID 68547)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type ALTER COLUMN id SET DEFAULT nextval('user_type_id_seq'::regclass);
--
-- TOC entry 3015 (class 2604 OID 68548)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users ALTER COLUMN auto_id SET DEFAULT nextval('users_auto_id_seq'::regclass);
--
-- TOC entry 3016 (class 2604 OID 68549)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer ALTER COLUMN id SET DEFAULT nextval('virtual_printer_id_seq'::regclass);
--
-- TOC entry 3017 (class 2604 OID 68550)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons ALTER COLUMN id SET DEFAULT nextval('void_reasons_id_seq'::regclass);
--
-- TOC entry 3018 (class 2604 OID 68551)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge ALTER COLUMN auto_id SET DEFAULT nextval('zip_code_vs_delivery_charge_auto_id_seq'::regclass);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3019 (class 2604 OID 68552)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria ALTER COLUMN id SET DEFAULT nextval('auditoria_id_seq'::regclass);
--
-- TOC entry 3065 (class 2604 OID 73707)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cat_unidades ALTER COLUMN id SET DEFAULT nextval('cat_unidades_id_seq'::regclass);
--
-- TOC entry 3142 (class 2604 OID 77268)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad ALTER COLUMN id SET DEFAULT nextval('conversiones_unidad_id_seq'::regclass);
--
-- TOC entry 3170 (class 2604 OID 77396)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer ALTER COLUMN id SET DEFAULT nextval('cost_layer_id_seq'::regclass);
--
-- TOC entry 3063 (class 2604 OID 73692)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs ALTER COLUMN id SET DEFAULT nextval('failed_jobs_id_seq'::regclass);
--
-- TOC entry 3024 (class 2604 OID 68553)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago ALTER COLUMN id SET DEFAULT nextval('formas_pago_id_seq'::regclass);
--
-- TOC entry 3150 (class 2604 OID 77322)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item ALTER COLUMN id SET DEFAULT nextval('historial_costos_item_id_seq'::regclass);
--
-- TOC entry 3158 (class 2604 OID 77354)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta ALTER COLUMN id SET DEFAULT nextval('historial_costos_receta_id_seq'::regclass);
--
-- TOC entry 3081 (class 2604 OID 77076)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch ALTER COLUMN id SET DEFAULT nextval('inventory_batch_id_seq'::regclass);
--
-- TOC entry 3177 (class 2604 OID 77463)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_recalc_queue ALTER COLUMN id SET DEFAULT nextval('job_recalc_queue_id_seq'::regclass);
--
-- TOC entry 3062 (class 2604 OID 73672)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY jobs ALTER COLUMN id SET DEFAULT nextval('jobs_id_seq'::regclass);
--
-- TOC entry 3061 (class 2604 OID 73617)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY migrations ALTER COLUMN id SET DEFAULT nextval('migrations_id_seq'::regclass);
--
-- TOC entry 3173 (class 2604 OID 77427)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos ALTER COLUMN id SET DEFAULT nextval('modificadores_pos_id_seq'::regclass);
--
-- TOC entry 3093 (class 2604 OID 77100)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv ALTER COLUMN id SET DEFAULT nextval('mov_inv_id_seq'::regclass);
--
-- TOC entry 3116 (class 2604 OID 77197)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab ALTER COLUMN id SET DEFAULT nextval('op_produccion_cab_id_seq'::regclass);
--
-- TOC entry 3188 (class 2604 OID 77534)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal ALTER COLUMN id SET DEFAULT nextval('param_sucursal_id_seq'::regclass);
--
-- TOC entry 3202 (class 2604 OID 77592)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log ALTER COLUMN id SET DEFAULT nextval('perdida_log_id_seq'::regclass);
--
-- TOC entry 3039 (class 2604 OID 68554)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte ALTER COLUMN id SET DEFAULT nextval('postcorte_id_seq'::regclass);
--
-- TOC entry 3047 (class 2604 OID 68555)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte ALTER COLUMN id SET DEFAULT nextval('precorte_id_seq'::regclass);
--
-- TOC entry 3049 (class 2604 OID 68556)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo ALTER COLUMN id SET DEFAULT nextval('precorte_efectivo_id_seq'::regclass);
--
-- TOC entry 3053 (class 2604 OID 68557)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros ALTER COLUMN id SET DEFAULT nextval('precorte_otros_id_seq'::regclass);
--
-- TOC entry 3182 (class 2604 OID 77478)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log ALTER COLUMN id SET DEFAULT nextval('recalc_log_id_seq'::regclass);
--
-- TOC entry 3110 (class 2604 OID 77171)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det ALTER COLUMN id SET DEFAULT nextval('receta_det_id_seq'::regclass);
--
-- TOC entry 3162 (class 2604 OID 77373)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_shadow ALTER COLUMN id SET DEFAULT nextval('receta_shadow_id_seq'::regclass);
--
-- TOC entry 3106 (class 2604 OID 77145)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version ALTER COLUMN id SET DEFAULT nextval('receta_version_id_seq'::regclass);
--
-- TOC entry 3058 (class 2604 OID 68558)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon ALTER COLUMN id SET DEFAULT nextval('sesion_cajon_id_seq'::regclass);
--
-- TOC entry 3194 (class 2604 OID 77552)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy ALTER COLUMN id SET DEFAULT nextval('stock_policy_id_seq'::regclass);
--
-- TOC entry 3199 (class 2604 OID 77573)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sucursal_almacen_terminal ALTER COLUMN id SET DEFAULT nextval('sucursal_almacen_terminal_id_seq'::regclass);
--
-- TOC entry 3206 (class 2604 OID 77626)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo ALTER COLUMN id SET DEFAULT nextval('ticket_det_consumo_id_seq'::regclass);
--
-- TOC entry 3122 (class 2604 OID 77220)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab ALTER COLUMN id SET DEFAULT nextval('ticket_venta_cab_id_seq'::regclass);
--
-- TOC entry 3128 (class 2604 OID 77235)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det ALTER COLUMN id SET DEFAULT nextval('ticket_venta_det_id_seq'::regclass);
--
-- TOC entry 3133 (class 2604 OID 77250)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida ALTER COLUMN id SET DEFAULT nextval('unidades_medida_id_seq'::regclass);
--
-- TOC entry 3209 (class 2604 OID 77688)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);
SET search_path = public, pg_catalog;
--
-- TOC entry 3221 (class 2606 OID 68562)
-- Name: action_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT action_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3223 (class 2606 OID 68564)
-- Name: attendence_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT attendence_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3225 (class 2606 OID 68566)
-- Name: cash_drawer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT cash_drawer_pkey PRIMARY KEY (id);
--
-- TOC entry 3227 (class 2606 OID 68568)
-- Name: cash_drawer_reset_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT cash_drawer_reset_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3229 (class 2606 OID 68570)
-- Name: cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction
    ADD CONSTRAINT cooking_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 3231 (class 2606 OID 68572)
-- Name: coupon_and_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3233 (class 2606 OID 68574)
-- Name: coupon_and_discount_uuid_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_uuid_key UNIQUE (uuid);
--
-- TOC entry 3237 (class 2606 OID 68576)
-- Name: currency_balance_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT currency_balance_pkey PRIMARY KEY (id);
--
-- TOC entry 3235 (class 2606 OID 68578)
-- Name: currency_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency
    ADD CONSTRAINT currency_pkey PRIMARY KEY (id);
--
-- TOC entry 3239 (class 2606 OID 68580)
-- Name: custom_payment_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment
    ADD CONSTRAINT custom_payment_pkey PRIMARY KEY (id);
--
-- TOC entry 3241 (class 2606 OID 68582)
-- Name: customer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer
    ADD CONSTRAINT customer_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 3243 (class 2606 OID 68584)
-- Name: customer_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT customer_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3245 (class 2606 OID 68586)
-- Name: daily_folio_counter_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY daily_folio_counter
    ADD CONSTRAINT daily_folio_counter_pkey PRIMARY KEY (folio_date, branch_key);
--
-- TOC entry 3247 (class 2606 OID 68588)
-- Name: data_update_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info
    ADD CONSTRAINT data_update_info_pkey PRIMARY KEY (id);
--
-- TOC entry 3249 (class 2606 OID 68590)
-- Name: delivery_address_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT delivery_address_pkey PRIMARY KEY (id);
--
-- TOC entry 3251 (class 2606 OID 68592)
-- Name: delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge
    ADD CONSTRAINT delivery_charge_pkey PRIMARY KEY (id);
--
-- TOC entry 3253 (class 2606 OID 68594)
-- Name: delivery_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration
    ADD CONSTRAINT delivery_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 3255 (class 2606 OID 68596)
-- Name: delivery_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT delivery_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 3257 (class 2606 OID 68598)
-- Name: drawer_assigned_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT drawer_assigned_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3261 (class 2606 OID 68600)
-- Name: drawer_pull_report_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT drawer_pull_report_pkey PRIMARY KEY (id);
--
-- TOC entry 3264 (class 2606 OID 68602)
-- Name: employee_in_out_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT employee_in_out_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3266 (class 2606 OID 68604)
-- Name: global_config_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pkey PRIMARY KEY (id);
--
-- TOC entry 3268 (class 2606 OID 68606)
-- Name: global_config_pos_key_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pos_key_key UNIQUE (pos_key);
--
-- TOC entry 3270 (class 2606 OID 68608)
-- Name: gratuity_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT gratuity_pkey PRIMARY KEY (id);
--
-- TOC entry 3272 (class 2606 OID 68610)
-- Name: guest_check_print_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT guest_check_print_pkey PRIMARY KEY (id);
--
-- TOC entry 3274 (class 2606 OID 68612)
-- Name: inventory_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group
    ADD CONSTRAINT inventory_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3276 (class 2606 OID 68614)
-- Name: inventory_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT inventory_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3278 (class 2606 OID 68616)
-- Name: inventory_location_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT inventory_location_pkey PRIMARY KEY (id);
--
-- TOC entry 3280 (class 2606 OID 68618)
-- Name: inventory_meta_code_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code
    ADD CONSTRAINT inventory_meta_code_pkey PRIMARY KEY (id);
--
-- TOC entry 3282 (class 2606 OID 68620)
-- Name: inventory_transaction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT inventory_transaction_pkey PRIMARY KEY (id);
--
-- TOC entry 3284 (class 2606 OID 68622)
-- Name: inventory_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit
    ADD CONSTRAINT inventory_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 3286 (class 2606 OID 68624)
-- Name: inventory_vendor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor
    ADD CONSTRAINT inventory_vendor_pkey PRIMARY KEY (id);
--
-- TOC entry 3288 (class 2606 OID 68626)
-- Name: inventory_warehouse_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse
    ADD CONSTRAINT inventory_warehouse_pkey PRIMARY KEY (id);
--
-- TOC entry 3312 (class 2606 OID 68628)
-- Name: kds_ready_log_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kds_ready_log
    ADD CONSTRAINT kds_ready_log_pkey PRIMARY KEY (ticket_id);
--
-- TOC entry 3315 (class 2606 OID 68630)
-- Name: kitchen_ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT kitchen_ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3291 (class 2606 OID 68632)
-- Name: kitchen_ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT kitchen_ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 3318 (class 2606 OID 68634)
-- Name: menu_category_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category
    ADD CONSTRAINT menu_category_pkey PRIMARY KEY (id);
--
-- TOC entry 3320 (class 2606 OID 68636)
-- Name: menu_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT menu_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3323 (class 2606 OID 68638)
-- Name: menu_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT menu_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3325 (class 2606 OID 68640)
-- Name: menu_item_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT menu_item_properties_pkey PRIMARY KEY (menu_item_id, property_name);
--
-- TOC entry 3327 (class 2606 OID 68642)
-- Name: menu_item_size_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size
    ADD CONSTRAINT menu_item_size_pkey PRIMARY KEY (id);
--
-- TOC entry 3332 (class 2606 OID 68644)
-- Name: menu_modifier_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group
    ADD CONSTRAINT menu_modifier_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3329 (class 2606 OID 68646)
-- Name: menu_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT menu_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 3335 (class 2606 OID 68648)
-- Name: menu_modifier_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT menu_modifier_properties_pkey PRIMARY KEY (menu_modifier_id, property_name);
--
-- TOC entry 3337 (class 2606 OID 68650)
-- Name: menuitem_modifiergroup_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT menuitem_modifiergroup_pkey PRIMARY KEY (id);
--
-- TOC entry 3339 (class 2606 OID 68652)
-- Name: menuitem_shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT menuitem_shift_pkey PRIMARY KEY (id);
--
-- TOC entry 3476 (class 2606 OID 73607)
-- Name: migrations_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: postgres
--

ALTER TABLE ONLY migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);
--
-- TOC entry 3341 (class 2606 OID 68654)
-- Name: modifier_multiplier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT modifier_multiplier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3343 (class 2606 OID 68656)
-- Name: multiplier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY multiplier
    ADD CONSTRAINT multiplier_pkey PRIMARY KEY (name);
--
-- TOC entry 3345 (class 2606 OID 68658)
-- Name: order_type_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_name_key UNIQUE (name);
--
-- TOC entry 3347 (class 2606 OID 68660)
-- Name: order_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3349 (class 2606 OID 68662)
-- Name: packaging_unit_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_name_key UNIQUE (name);
--
-- TOC entry 3351 (class 2606 OID 68664)
-- Name: packaging_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 3353 (class 2606 OID 68666)
-- Name: payout_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons
    ADD CONSTRAINT payout_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 3355 (class 2606 OID 68668)
-- Name: payout_recepients_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients
    ADD CONSTRAINT payout_recepients_pkey PRIMARY KEY (id);
--
-- TOC entry 3357 (class 2606 OID 68670)
-- Name: pizza_crust_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust
    ADD CONSTRAINT pizza_crust_pkey PRIMARY KEY (id);
--
-- TOC entry 3359 (class 2606 OID 68672)
-- Name: pizza_modifier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT pizza_modifier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3361 (class 2606 OID 68674)
-- Name: pizza_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT pizza_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3363 (class 2606 OID 68676)
-- Name: printer_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_configuration
    ADD CONSTRAINT printer_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 3365 (class 2606 OID 68678)
-- Name: printer_group_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_name_key UNIQUE (name);
--
-- TOC entry 3367 (class 2606 OID 68680)
-- Name: printer_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3369 (class 2606 OID 68682)
-- Name: purchase_order_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_pkey PRIMARY KEY (id);
--
-- TOC entry 3373 (class 2606 OID 68684)
-- Name: recepie_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT recepie_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3371 (class 2606 OID 68686)
-- Name: recepie_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT recepie_pkey PRIMARY KEY (id);
--
-- TOC entry 3375 (class 2606 OID 68688)
-- Name: restaurant_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant
    ADD CONSTRAINT restaurant_pkey PRIMARY KEY (id);
--
-- TOC entry 3377 (class 2606 OID 68690)
-- Name: restaurant_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT restaurant_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3379 (class 2606 OID 68692)
-- Name: shift_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_name_key UNIQUE (name);
--
-- TOC entry 3381 (class 2606 OID 68694)
-- Name: shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_pkey PRIMARY KEY (id);
--
-- TOC entry 3383 (class 2606 OID 68696)
-- Name: shop_floor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor
    ADD CONSTRAINT shop_floor_pkey PRIMARY KEY (id);
--
-- TOC entry 3385 (class 2606 OID 68698)
-- Name: shop_floor_template_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT shop_floor_template_pkey PRIMARY KEY (id);
--
-- TOC entry 3387 (class 2606 OID 68700)
-- Name: shop_floor_template_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT shop_floor_template_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3389 (class 2606 OID 68702)
-- Name: shop_table_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT shop_table_pkey PRIMARY KEY (id);
--
-- TOC entry 3391 (class 2606 OID 68704)
-- Name: shop_table_status_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_status
    ADD CONSTRAINT shop_table_status_pkey PRIMARY KEY (id);
--
-- TOC entry 3393 (class 2606 OID 68706)
-- Name: shop_table_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type
    ADD CONSTRAINT shop_table_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3396 (class 2606 OID 68708)
-- Name: table_booking_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT table_booking_info_pkey PRIMARY KEY (id);
--
-- TOC entry 3401 (class 2606 OID 68710)
-- Name: tax_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax_group
    ADD CONSTRAINT tax_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3399 (class 2606 OID 68712)
-- Name: tax_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax
    ADD CONSTRAINT tax_pkey PRIMARY KEY (id);
--
-- TOC entry 3293 (class 2606 OID 68714)
-- Name: terminal_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT terminal_pkey PRIMARY KEY (id);
--
-- TOC entry 3403 (class 2606 OID 68716)
-- Name: terminal_printers_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT terminal_printers_pkey PRIMARY KEY (id);
--
-- TOC entry 3405 (class 2606 OID 68718)
-- Name: terminal_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT terminal_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3407 (class 2606 OID 68720)
-- Name: ticket_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT ticket_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3301 (class 2606 OID 68722)
-- Name: ticket_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_global_id_key UNIQUE (global_id);
--
-- TOC entry 3412 (class 2606 OID 68724)
-- Name: ticket_item_addon_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT ticket_item_addon_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 3414 (class 2606 OID 68726)
-- Name: ticket_item_cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT ticket_item_cooking_instruction_pkey PRIMARY KEY (ticket_item_id, item_order);
--
-- TOC entry 3416 (class 2606 OID 68728)
-- Name: ticket_item_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT ticket_item_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3418 (class 2606 OID 68730)
-- Name: ticket_item_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT ticket_item_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 3420 (class 2606 OID 68732)
-- Name: ticket_item_modifier_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT ticket_item_modifier_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 3410 (class 2606 OID 68734)
-- Name: ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3303 (class 2606 OID 68736)
-- Name: ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 3422 (class 2606 OID 68738)
-- Name: ticket_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT ticket_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3424 (class 2606 OID 68740)
-- Name: transaction_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT transaction_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3428 (class 2606 OID 68742)
-- Name: transactions_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_global_id_key UNIQUE (global_id);
--
-- TOC entry 3430 (class 2606 OID 68744)
-- Name: transactions_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_pkey PRIMARY KEY (id);
--
-- TOC entry 3432 (class 2606 OID 68746)
-- Name: user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_permission
    ADD CONSTRAINT user_permission_pkey PRIMARY KEY (name);
--
-- TOC entry 3434 (class 2606 OID 68748)
-- Name: user_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type
    ADD CONSTRAINT user_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3436 (class 2606 OID 68750)
-- Name: user_user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT user_user_permission_pkey PRIMARY KEY (permissionid, elt);
--
-- TOC entry 3438 (class 2606 OID 68752)
-- Name: users_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 3440 (class 2606 OID 68754)
-- Name: users_user_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_id_key UNIQUE (user_id);
--
-- TOC entry 3442 (class 2606 OID 68756)
-- Name: users_user_pass_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_pass_key UNIQUE (user_pass);
--
-- TOC entry 3444 (class 2606 OID 68758)
-- Name: virtual_printer_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_name_key UNIQUE (name);
--
-- TOC entry 3446 (class 2606 OID 68760)
-- Name: virtual_printer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_pkey PRIMARY KEY (id);
--
-- TOC entry 3448 (class 2606 OID 68762)
-- Name: void_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons
    ADD CONSTRAINT void_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 3450 (class 2606 OID 68764)
-- Name: zip_code_vs_delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge
    ADD CONSTRAINT zip_code_vs_delivery_charge_pkey PRIMARY KEY (auto_id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3452 (class 2606 OID 68766)
-- Name: auditoria_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria
    ADD CONSTRAINT auditoria_pkey PRIMARY KEY (id);
--
-- TOC entry 3488 (class 2606 OID 73666)
-- Name: cache_locks_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cache_locks
    ADD CONSTRAINT cache_locks_pkey PRIMARY KEY (key);
--
-- TOC entry 3486 (class 2606 OID 73658)
-- Name: cache_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cache
    ADD CONSTRAINT cache_pkey PRIMARY KEY (key);
--
-- TOC entry 3499 (class 2606 OID 73709)
-- Name: cat_unidades_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cat_unidades
    ADD CONSTRAINT cat_unidades_pkey PRIMARY KEY (id);
--
-- TOC entry 3537 (class 2606 OID 77278)
-- Name: conversiones_unidad_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_pkey PRIMARY KEY (id);
--
-- TOC entry 3539 (class 2606 OID 77280)
-- Name: conversiones_unidad_unidad_origen_id_unidad_destino_id_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_origen_id_unidad_destino_id_key UNIQUE (unidad_origen_id, unidad_destino_id);
--
-- TOC entry 3550 (class 2606 OID 77401)
-- Name: cost_layer_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_pkey PRIMARY KEY (id);
--
-- TOC entry 3495 (class 2606 OID 73698)
-- Name: failed_jobs_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs
    ADD CONSTRAINT failed_jobs_pkey PRIMARY KEY (id);
--
-- TOC entry 3497 (class 2606 OID 73700)
-- Name: failed_jobs_uuid_unique;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs
    ADD CONSTRAINT failed_jobs_uuid_unique UNIQUE (uuid);
--
-- TOC entry 3454 (class 2606 OID 68768)
-- Name: formas_pago_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago
    ADD CONSTRAINT formas_pago_pkey PRIMARY KEY (id);
--
-- TOC entry 3541 (class 2606 OID 77338)
-- Name: historial_costos_item_item_id_fecha_efectiva_version_datos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_item_id_fecha_efectiva_version_datos_key UNIQUE (item_id, fecha_efectiva, version_datos);
--
-- TOC entry 3543 (class 2606 OID 77336)
-- Name: historial_costos_item_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3546 (class 2606 OID 77362)
-- Name: historial_costos_receta_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta
    ADD CONSTRAINT historial_costos_receta_pkey PRIMARY KEY (id);
--
-- TOC entry 3507 (class 2606 OID 77089)
-- Name: inventory_batch_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch
    ADD CONSTRAINT inventory_batch_pkey PRIMARY KEY (id);
--
-- TOC entry 3563 (class 2606 OID 77501)
-- Name: item_vendor_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_pkey PRIMARY KEY (item_id, vendor_id, presentacion);
--
-- TOC entry 3503 (class 2606 OID 77070)
-- Name: items_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_pkey PRIMARY KEY (id);
--
-- TOC entry 3493 (class 2606 OID 73686)
-- Name: job_batches_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_batches
    ADD CONSTRAINT job_batches_pkey PRIMARY KEY (id);
--
-- TOC entry 3559 (class 2606 OID 77472)
-- Name: job_recalc_queue_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_recalc_queue
    ADD CONSTRAINT job_recalc_queue_pkey PRIMARY KEY (id);
--
-- TOC entry 3490 (class 2606 OID 73677)
-- Name: jobs_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY jobs
    ADD CONSTRAINT jobs_pkey PRIMARY KEY (id);
--
-- TOC entry 3478 (class 2606 OID 73619)
-- Name: migrations_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);
--
-- TOC entry 3555 (class 2606 OID 77434)
-- Name: modificadores_pos_codigo_pos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_codigo_pos_key UNIQUE (codigo_pos);
--
-- TOC entry 3557 (class 2606 OID 77432)
-- Name: modificadores_pos_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_pkey PRIMARY KEY (id);
--
-- TOC entry 3511 (class 2606 OID 77106)
-- Name: mov_inv_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_pkey PRIMARY KEY (id);
--
-- TOC entry 3524 (class 2606 OID 77204)
-- Name: op_produccion_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab
    ADD CONSTRAINT op_produccion_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3565 (class 2606 OID 77544)
-- Name: param_sucursal_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal
    ADD CONSTRAINT param_sucursal_pkey PRIMARY KEY (id);
--
-- TOC entry 3567 (class 2606 OID 77546)
-- Name: param_sucursal_sucursal_id_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal
    ADD CONSTRAINT param_sucursal_sucursal_id_key UNIQUE (sucursal_id);
--
-- TOC entry 3480 (class 2606 OID 73640)
-- Name: password_reset_tokens_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY password_reset_tokens
    ADD CONSTRAINT password_reset_tokens_pkey PRIMARY KEY (email);
--
-- TOC entry 3577 (class 2606 OID 77600)
-- Name: perdida_log_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_pkey PRIMARY KEY (id);
--
-- TOC entry 3553 (class 2606 OID 77421)
-- Name: pos_map_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY pos_map
    ADD CONSTRAINT pos_map_pkey PRIMARY KEY (pos_system, plu, valid_from, sys_from);
--
-- TOC entry 3457 (class 2606 OID 68770)
-- Name: postcorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3465 (class 2606 OID 68772)
-- Name: precorte_efectivo_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_pkey PRIMARY KEY (id);
--
-- TOC entry 3468 (class 2606 OID 68774)
-- Name: precorte_otros_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_pkey PRIMARY KEY (id);
--
-- TOC entry 3462 (class 2606 OID 68776)
-- Name: precorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3561 (class 2606 OID 77483)
-- Name: recalc_log_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log
    ADD CONSTRAINT recalc_log_pkey PRIMARY KEY (id);
--
-- TOC entry 3513 (class 2606 OID 77139)
-- Name: receta_cab_codigo_plato_pos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_cab
    ADD CONSTRAINT receta_cab_codigo_plato_pos_key UNIQUE (codigo_plato_pos);
--
-- TOC entry 3515 (class 2606 OID 77137)
-- Name: receta_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_cab
    ADD CONSTRAINT receta_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3522 (class 2606 OID 77181)
-- Name: receta_det_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_pkey PRIMARY KEY (id);
--
-- TOC entry 3548 (class 2606 OID 77385)
-- Name: receta_shadow_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_shadow
    ADD CONSTRAINT receta_shadow_pkey PRIMARY KEY (id);
--
-- TOC entry 3518 (class 2606 OID 77153)
-- Name: receta_version_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_pkey PRIMARY KEY (id);
--
-- TOC entry 3520 (class 2606 OID 77155)
-- Name: receta_version_receta_id_version_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_receta_id_version_key UNIQUE (receta_id, version);
--
-- TOC entry 3472 (class 2606 OID 68778)
-- Name: sesion_cajon_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_pkey PRIMARY KEY (id);
--
-- TOC entry 3474 (class 2606 OID 68780)
-- Name: sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key UNIQUE (terminal_id, cajero_usuario_id, apertura_ts);
--
-- TOC entry 3483 (class 2606 OID 73648)
-- Name: sessions_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);
--
-- TOC entry 3571 (class 2606 OID 77561)
-- Name: stock_policy_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy
    ADD CONSTRAINT stock_policy_pkey PRIMARY KEY (id);
--
-- TOC entry 3574 (class 2606 OID 77580)
-- Name: sucursal_almacen_terminal_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sucursal_almacen_terminal
    ADD CONSTRAINT sucursal_almacen_terminal_pkey PRIMARY KEY (id);
--
-- TOC entry 3582 (class 2606 OID 77633)
-- Name: ticket_det_consumo_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_pkey PRIMARY KEY (id);
--
-- TOC entry 3527 (class 2606 OID 77229)
-- Name: ticket_venta_cab_numero_ticket_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab
    ADD CONSTRAINT ticket_venta_cab_numero_ticket_key UNIQUE (numero_ticket);
--
-- TOC entry 3529 (class 2606 OID 77227)
-- Name: ticket_venta_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab
    ADD CONSTRAINT ticket_venta_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3531 (class 2606 OID 77239)
-- Name: ticket_venta_det_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_pkey PRIMARY KEY (id);
--
-- TOC entry 3533 (class 2606 OID 77262)
-- Name: unidades_medida_codigo_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida
    ADD CONSTRAINT unidades_medida_codigo_key UNIQUE (codigo);
--
-- TOC entry 3535 (class 2606 OID 77260)
-- Name: unidades_medida_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida
    ADD CONSTRAINT unidades_medida_pkey PRIMARY KEY (id);
--
-- TOC entry 3459 (class 2606 OID 68782)
-- Name: uq_postcorte_sesion_id;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT uq_postcorte_sesion_id UNIQUE (sesion_id);
--
-- TOC entry 3501 (class 2606 OID 77041)
-- Name: user_roles_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY user_roles
    ADD CONSTRAINT user_roles_pkey PRIMARY KEY (user_id, role_id);
--
-- TOC entry 3584 (class 2606 OID 77703)
-- Name: users_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);
--
-- TOC entry 3586 (class 2606 OID 77705)
-- Name: users_username_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_username_key UNIQUE (username);
SET search_path = public, pg_catalog;
--
-- TOC entry 3294 (class 1259 OID 68783)
-- Name: creationhour;
Type: INDEX;
Schema: public;
--
-- TOC entry 3295 (class 1259 OID 68784)
-- Name: deliverydate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3262 (class 1259 OID 68785)
-- Name: drawer_report_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3296 (class 1259 OID 68786)
-- Name: drawerresetted;
Type: INDEX;
Schema: public;
--
-- TOC entry 3316 (class 1259 OID 68787)
-- Name: food_category_visible;
Type: INDEX;
Schema: public;
--
-- TOC entry 3394 (class 1259 OID 68788)
-- Name: fromdate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3258 (class 1259 OID 68789)
-- Name: idx_dah_user_op_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3259 (class 1259 OID 68790)
-- Name: idx_drawer_assigned_history_user_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3297 (class 1259 OID 68791)
-- Name: idx_ticket_close_term_owner;
Type: INDEX;
Schema: public;
--
-- TOC entry 3425 (class 1259 OID 68792)
-- Name: idx_tx_term_user_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3313 (class 1259 OID 68793)
-- Name: ix_kitchen_ticket_item_item_id;
Type: INDEX;
Schema: public;
--
-- TOC entry 3289 (class 1259 OID 68794)
-- Name: ix_kitchen_ticket_ticket_id;
Type: INDEX;
Schema: public;
--
-- TOC entry 3298 (class 1259 OID 68795)
-- Name: ix_ticket_branch_key;
Type: INDEX;
Schema: public;
--
-- TOC entry 3299 (class 1259 OID 68796)
-- Name: ix_ticket_folio_date;
Type: INDEX;
Schema: public;
--
-- TOC entry 3408 (class 1259 OID 68797)
-- Name: ix_ticket_item_ticket_pg;
Type: INDEX;
Schema: public;
--
-- TOC entry 3321 (class 1259 OID 68798)
-- Name: menugroupvisible;
Type: INDEX;
Schema: public;
--
-- TOC entry 3333 (class 1259 OID 68799)
-- Name: mg_enable;
Type: INDEX;
Schema: public;
--
-- TOC entry 3330 (class 1259 OID 68800)
-- Name: modifierenabled;
Type: INDEX;
Schema: public;
--
-- TOC entry 3304 (class 1259 OID 68801)
-- Name: ticketactivedate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3305 (class 1259 OID 68802)
-- Name: ticketclosingdate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3306 (class 1259 OID 68803)
-- Name: ticketcreatedate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3307 (class 1259 OID 68804)
-- Name: ticketpaid;
Type: INDEX;
Schema: public;
--
-- TOC entry 3308 (class 1259 OID 68805)
-- Name: ticketsettled;
Type: INDEX;
Schema: public;
--
-- TOC entry 3309 (class 1259 OID 68806)
-- Name: ticketvoided;
Type: INDEX;
Schema: public;
--
-- TOC entry 3397 (class 1259 OID 68807)
-- Name: todate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3426 (class 1259 OID 68808)
-- Name: tran_drawer_resetted;
Type: INDEX;
Schema: public;
--
-- TOC entry 3310 (class 1259 OID 68809)
-- Name: ux_ticket_dailyfolio;
Type: INDEX;
Schema: public;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3544 (class 1259 OID 77656)
-- Name: idx_historial_costos_item_fecha;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3504 (class 1259 OID 77653)
-- Name: idx_inventory_batch_caducidad;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3505 (class 1259 OID 77652)
-- Name: idx_inventory_batch_item;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3508 (class 1259 OID 77651)
-- Name: idx_mov_inv_item_ts;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3509 (class 1259 OID 77650)
-- Name: idx_mov_inv_tipo_fecha;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3575 (class 1259 OID 77658)
-- Name: idx_perdida_item_ts;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3460 (class 1259 OID 68810)
-- Name: idx_precorte_sesion_id;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3516 (class 1259 OID 77654)
-- Name: idx_receta_version_publicada;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3568 (class 1259 OID 77657)
-- Name: idx_stock_policy_item_suc;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3569 (class 1259 OID 77567)
-- Name: idx_stock_policy_unique;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3572 (class 1259 OID 77581)
-- Name: idx_suc_alm_term_unique;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3578 (class 1259 OID 77649)
-- Name: idx_tick_cons_unique;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3579 (class 1259 OID 77660)
-- Name: idx_tickcons_lote;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3580 (class 1259 OID 77659)
-- Name: idx_tickcons_ticket;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3525 (class 1259 OID 77655)
-- Name: idx_ticket_venta_fecha;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3551 (class 1259 OID 77661)
-- Name: ix_layer_item_suc;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3466 (class 1259 OID 68811)
-- Name: ix_precorte_otros_precorte;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3469 (class 1259 OID 68812)
-- Name: ix_sesion_cajon_cajero;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3470 (class 1259 OID 68813)
-- Name: ix_sesion_cajon_terminal;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3491 (class 1259 OID 73678)
-- Name: jobs_queue_index;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3463 (class 1259 OID 68814)
-- Name: precorte_sesion_id_idx;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3481 (class 1259 OID 73650)
-- Name: sessions_last_activity_index;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3484 (class 1259 OID 73649)
-- Name: sessions_user_id_index;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3455 (class 1259 OID 68815)
-- Name: uq_fp_huella_expr;
Type: INDEX;
Schema: selemti;
SET search_path = public, pg_catalog;
--
-- TOC entry 3748 (class 2620 OID 68816)
-- Name: trg_assign_daily_folio;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3749 (class 2620 OID 68817)
-- Name: trg_kds_notify_kti;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3750 (class 2620 OID 68818)
-- Name: trg_kds_notify_ti;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3746 (class 2620 OID 68819)
-- Name: trg_selemti_dah_ai;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3747 (class 2620 OID 68820)
-- Name: trg_selemti_terminal_bu_snapshot;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3751 (class 2620 OID 68821)
-- Name: trg_selemti_tx_ai_forma_pago;
Type: TRIGGER;
Schema: public;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3752 (class 2620 OID 68822)
-- Name: trg_precorte_efectivo_bi;
Type: TRIGGER;
Schema: selemti;
SET search_path = public, pg_catalog;
--
-- TOC entry 3647 (class 2606 OID 68823)
-- Name: fk1273b4bbb79c6270;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT fk1273b4bbb79c6270 FOREIGN KEY (menu_modifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3634 (class 2606 OID 68828)
-- Name: fk1462f02bcb07faa3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT fk1462f02bcb07faa3 FOREIGN KEY (kithen_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3658 (class 2606 OID 68833)
-- Name: fk17bd51a089fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a089fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3657 (class 2606 OID 68838)
-- Name: fk17bd51a0ae5d580;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a0ae5d580 FOREIGN KEY (pizza_price_id) REFERENCES pizza_price(id);
--
-- TOC entry 3688 (class 2606 OID 68843)
-- Name: fk1fa465141df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT fk1fa465141df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3677 (class 2606 OID 68848)
-- Name: fk2458e9258979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT fk2458e9258979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3597 (class 2606 OID 68853)
-- Name: fk29aca6899e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT fk29aca6899e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3598 (class 2606 OID 68858)
-- Name: fk29d9ca39e1c3d97;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT fk29d9ca39e1c3d97 FOREIGN KEY (customer_no) REFERENCES customer(auto_id);
--
-- TOC entry 3595 (class 2606 OID 68863)
-- Name: fk2cc0e08e28dd6c11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e28dd6c11 FOREIGN KEY (currency_id) REFERENCES currency(id);
--
-- TOC entry 3594 (class 2606 OID 68868)
-- Name: fk2cc0e08e9006558;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e9006558 FOREIGN KEY (cash_drawer_id) REFERENCES cash_drawer(id);
--
-- TOC entry 3593 (class 2606 OID 68873)
-- Name: fk2cc0e08efb910735;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08efb910735 FOREIGN KEY (dpr_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3708 (class 2606 OID 68878)
-- Name: fk2dbeaa4f283ecc6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f283ecc6 FOREIGN KEY (permissionid) REFERENCES user_type(id);
--
-- TOC entry 3707 (class 2606 OID 68883)
-- Name: fk2dbeaa4f8f23f5e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f8f23f5e FOREIGN KEY (elt) REFERENCES user_permission(name);
--
-- TOC entry 3679 (class 2606 OID 68888)
-- Name: fk301c4de53e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de53e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3678 (class 2606 OID 68893)
-- Name: fk301c4de59e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de59e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3656 (class 2606 OID 68898)
-- Name: fk312b355b40fda3c9;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b40fda3c9 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3655 (class 2606 OID 68903)
-- Name: fk312b355b6e7b8b68;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b6e7b8b68 FOREIGN KEY (menuitem_modifiergroup_id) REFERENCES menu_item(id);
--
-- TOC entry 3654 (class 2606 OID 68908)
-- Name: fk312b355b7f2f368;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b7f2f368 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3625 (class 2606 OID 68913)
-- Name: fk341cbc275cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT fk341cbc275cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3608 (class 2606 OID 68918)
-- Name: fk34e4e3771df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3771df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3607 (class 2606 OID 68923)
-- Name: fk34e4e3772ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3772ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3606 (class 2606 OID 68928)
-- Name: fk34e4e377aa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e377aa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3694 (class 2606 OID 68933)
-- Name: fk3825f9d0dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT fk3825f9d0dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3695 (class 2606 OID 68938)
-- Name: fk3df5d4fab9276e77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT fk3df5d4fab9276e77 FOREIGN KEY (ticket_itemid) REFERENCES ticket_item(id);
--
-- TOC entry 3587 (class 2606 OID 68943)
-- Name: fk3f3af36b3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT fk3f3af36b3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3640 (class 2606 OID 68948)
-- Name: fk4cd5a1f35188aa24;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35188aa24 FOREIGN KEY (group_id) REFERENCES menu_group(id);
--
-- TOC entry 3639 (class 2606 OID 68953)
-- Name: fk4cd5a1f35cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3638 (class 2606 OID 68958)
-- Name: fk4cd5a1f35ee9f27a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35ee9f27a FOREIGN KEY (tax_group_id) REFERENCES tax_group(id);
--
-- TOC entry 3637 (class 2606 OID 68963)
-- Name: fk4cd5a1f3a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3636 (class 2606 OID 68968)
-- Name: fk4cd5a1f3f3b77c57;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3f3b77c57 FOREIGN KEY (recepie) REFERENCES recepie(id);
--
-- TOC entry 3711 (class 2606 OID 68973)
-- Name: fk4d495e87660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e87660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3710 (class 2606 OID 68978)
-- Name: fk4d495e8897b1e39;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8897b1e39 FOREIGN KEY (n_user_type) REFERENCES user_type(id);
--
-- TOC entry 3709 (class 2606 OID 68983)
-- Name: fk4d495e8d9409968;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8d9409968 FOREIGN KEY (currentterminal) REFERENCES terminal(id);
--
-- TOC entry 3635 (class 2606 OID 68988)
-- Name: fk4dc1ab7f2e347ff0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT fk4dc1ab7f2e347ff0 FOREIGN KEY (category_id) REFERENCES menu_category(id);
--
-- TOC entry 3649 (class 2606 OID 68993)
-- Name: fk4f8523e38d9ea931;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e38d9ea931 FOREIGN KEY (menucategory_id) REFERENCES menu_category(id);
--
-- TOC entry 3648 (class 2606 OID 68998)
-- Name: fk4f8523e3d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e3d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3633 (class 2606 OID 69003)
-- Name: fk5696584bb73e273e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kit_ticket_table_num
    ADD CONSTRAINT fk5696584bb73e273e FOREIGN KEY (kit_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3662 (class 2606 OID 69008)
-- Name: fk572726f374be2c71;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f374be2c71 FOREIGN KEY (pizzamodifierprice_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3661 (class 2606 OID 69013)
-- Name: fk572726f3ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f3ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3617 (class 2606 OID 69018)
-- Name: fk59073b58c46a9c15;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT fk59073b58c46a9c15 FOREIGN KEY (warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3646 (class 2606 OID 69023)
-- Name: fk59b6b1b72501cb2c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b72501cb2c FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3645 (class 2606 OID 69028)
-- Name: fk59b6b1b75e0c7b8d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b75e0c7b8d FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3644 (class 2606 OID 69033)
-- Name: fk59b6b1b7a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b7a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3599 (class 2606 OID 69038)
-- Name: fk5a823c91f1dd782b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT fk5a823c91f1dd782b FOREIGN KEY (a_user) REFERENCES users(auto_id);
--
-- TOC entry 3698 (class 2606 OID 69043)
-- Name: fk5d3f9acb6c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acb6c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3697 (class 2606 OID 69048)
-- Name: fk5d3f9acbdec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acbdec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3591 (class 2606 OID 69053)
-- Name: fk6221077d2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT fk6221077d2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3700 (class 2606 OID 69058)
-- Name: fk65af15e21df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_table_num
    ADD CONSTRAINT fk65af15e21df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3671 (class 2606 OID 69063)
-- Name: fk6b4e177764931efc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT fk6b4e177764931efc FOREIGN KEY (menu_item) REFERENCES menu_item(id);
--
-- TOC entry 3681 (class 2606 OID 69068)
-- Name: fk6bc51417160de3b1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417160de3b1 FOREIGN KEY (booking_id) REFERENCES table_booking_info(id);
--
-- TOC entry 3680 (class 2606 OID 69073)
-- Name: fk6bc51417dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3605 (class 2606 OID 69078)
-- Name: fk6d5db9fa2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3604 (class 2606 OID 69083)
-- Name: fk6d5db9fa3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3603 (class 2606 OID 69088)
-- Name: fk6d5db9fa7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3699 (class 2606 OID 69093)
-- Name: fk70ecd046223049de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT fk70ecd046223049de FOREIGN KEY (id) REFERENCES ticket(id);
--
-- TOC entry 3592 (class 2606 OID 69098)
-- Name: fk719418223e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT fk719418223e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3616 (class 2606 OID 69103)
-- Name: fk7dc968362cd583c1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968362cd583c1 FOREIGN KEY (item_group_id) REFERENCES inventory_group(id);
--
-- TOC entry 3615 (class 2606 OID 69108)
-- Name: fk7dc968363525e956;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968363525e956 FOREIGN KEY (punit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3614 (class 2606 OID 69113)
-- Name: fk7dc968366848d615;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968366848d615 FOREIGN KEY (recipe_unit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3613 (class 2606 OID 69118)
-- Name: fk7dc9683695e455d3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc9683695e455d3 FOREIGN KEY (item_location_id) REFERENCES inventory_location(id);
--
-- TOC entry 3612 (class 2606 OID 69123)
-- Name: fk7dc968369e60c333;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968369e60c333 FOREIGN KEY (item_vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3674 (class 2606 OID 69128)
-- Name: fk80ad9f75fc64768f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT fk80ad9f75fc64768f FOREIGN KEY (id) REFERENCES restaurant(id);
--
-- TOC entry 3673 (class 2606 OID 69133)
-- Name: fk855626db1682b10e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626db1682b10e FOREIGN KEY (inventory_item) REFERENCES inventory_item(id);
--
-- TOC entry 3672 (class 2606 OID 69138)
-- Name: fk855626dbcae89b83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626dbcae89b83 FOREIGN KEY (recepie_id) REFERENCES recepie(id);
--
-- TOC entry 3665 (class 2606 OID 69143)
-- Name: fk8a16099391d62c51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a16099391d62c51 FOREIGN KEY (multiplier_id) REFERENCES multiplier(name);
--
-- TOC entry 3664 (class 2606 OID 69148)
-- Name: fk8a1609939c9e4883;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a1609939c9e4883 FOREIGN KEY (pizza_modifier_price_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3663 (class 2606 OID 69153)
-- Name: fk8a160993ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a160993ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3696 (class 2606 OID 69158)
-- Name: fk8fd6290dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT fk8fd6290dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3632 (class 2606 OID 69163)
-- Name: fk937b5f0c1f6a9a4a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c1f6a9a4a FOREIGN KEY (void_by_user) REFERENCES users(auto_id);
--
-- TOC entry 3631 (class 2606 OID 69168)
-- Name: fk937b5f0c2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3630 (class 2606 OID 69173)
-- Name: fk937b5f0c7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3629 (class 2606 OID 69178)
-- Name: fk937b5f0caa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0caa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3628 (class 2606 OID 69183)
-- Name: fk937b5f0cc188ea51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cc188ea51 FOREIGN KEY (gratuity_id) REFERENCES gratuity(id);
--
-- TOC entry 3627 (class 2606 OID 69188)
-- Name: fk937b5f0cf575c7d4;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cf575c7d4 FOREIGN KEY (driver_id) REFERENCES users(auto_id);
--
-- TOC entry 3684 (class 2606 OID 69193)
-- Name: fk93802290dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3683 (class 2606 OID 69198)
-- Name: fk93802290f5d6e47b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290f5d6e47b FOREIGN KEY (type_id) REFERENCES shop_table_type(id);
--
-- TOC entry 3687 (class 2606 OID 69203)
-- Name: fk963f26d69d31df8e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT fk963f26d69d31df8e FOREIGN KEY (id) REFERENCES terminal(id);
--
-- TOC entry 3691 (class 2606 OID 69208)
-- Name: fk979f54661df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54661df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3690 (class 2606 OID 69213)
-- Name: fk979f546633e5d3b2;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f546633e5d3b2 FOREIGN KEY (size_modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3689 (class 2606 OID 69218)
-- Name: fk979f54665cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54665cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3602 (class 2606 OID 69223)
-- Name: fk98cf9b143ef4cd9b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report_voidtickets
    ADD CONSTRAINT fk98cf9b143ef4cd9b FOREIGN KEY (dpreport_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3686 (class 2606 OID 69228)
-- Name: fk99ede5fc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3685 (class 2606 OID 69233)
-- Name: fk99ede5fcc433e65a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fcc433e65a FOREIGN KEY (virtual_printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3712 (class 2606 OID 69238)
-- Name: fk9af7853bcf15f4a6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtualprinter_order_type
    ADD CONSTRAINT fk9af7853bcf15f4a6 FOREIGN KEY (printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3643 (class 2606 OID 69243)
-- Name: fk9ea1afc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3642 (class 2606 OID 69248)
-- Name: fk9ea1afc89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3693 (class 2606 OID 69253)
-- Name: fk9f1996346c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f1996346c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3692 (class 2606 OID 69258)
-- Name: fk9f199634dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f199634dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3601 (class 2606 OID 69263)
-- Name: fkaec362202ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362202ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3600 (class 2606 OID 69268)
-- Name: fkaec362203e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362203e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3622 (class 2606 OID 69273)
-- Name: fkaf48f43b5b397c5;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b5b397c5 FOREIGN KEY (reference_id) REFERENCES purchase_order(id);
--
-- TOC entry 3621 (class 2606 OID 69278)
-- Name: fkaf48f43b96a3d6bf;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b96a3d6bf FOREIGN KEY (item_id) REFERENCES inventory_item(id);
--
-- TOC entry 3620 (class 2606 OID 69283)
-- Name: fkaf48f43bd152c95f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bd152c95f FOREIGN KEY (vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3619 (class 2606 OID 69288)
-- Name: fkaf48f43beda09759;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43beda09759 FOREIGN KEY (to_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3618 (class 2606 OID 69293)
-- Name: fkaf48f43bff3f328a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bff3f328a FOREIGN KEY (from_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3675 (class 2606 OID 69298)
-- Name: fkba6efbd68979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT fkba6efbd68979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3670 (class 2606 OID 69303)
-- Name: fkc05b805e5f31265c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group_printers
    ADD CONSTRAINT fkc05b805e5f31265c FOREIGN KEY (printer_id) REFERENCES printer_group(id);
--
-- TOC entry 3682 (class 2606 OID 69308)
-- Name: fkcbeff0e454031ec1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_ticket_num
    ADD CONSTRAINT fkcbeff0e454031ec1 FOREIGN KEY (shop_table_status_id) REFERENCES shop_table_status(id);
--
-- TOC entry 3611 (class 2606 OID 69313)
-- Name: fkce827c6f3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT fkce827c6f3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3666 (class 2606 OID 69318)
-- Name: fkd3de7e7896183657;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT fkd3de7e7896183657 FOREIGN KEY (item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3596 (class 2606 OID 69323)
-- Name: fkd43068347bbccf0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT fkd43068347bbccf0 FOREIGN KEY (id) REFERENCES customer(auto_id);
--
-- TOC entry 3676 (class 2606 OID 69328)
-- Name: fkd70c313ca36ab054;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT fkd70c313ca36ab054 FOREIGN KEY (id) REFERENCES shop_floor_template(id);
--
-- TOC entry 3653 (class 2606 OID 69333)
-- Name: fkd89ccdee33662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdee33662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3652 (class 2606 OID 69338)
-- Name: fkd89ccdeed3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdeed3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3590 (class 2606 OID 69343)
-- Name: fkdfe829a2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3589 (class 2606 OID 69348)
-- Name: fkdfe829a3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3588 (class 2606 OID 69353)
-- Name: fkdfe829a7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3660 (class 2606 OID 69358)
-- Name: fke03c92d533662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d533662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3659 (class 2606 OID 69363)
-- Name: fke03c92d57660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d57660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3624 (class 2606 OID 69368)
-- Name: fke2b846573ac1d2e0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b846573ac1d2e0 FOREIGN KEY (order_type_id) REFERENCES order_type(id);
--
-- TOC entry 3623 (class 2606 OID 69373)
-- Name: fke2b8465789fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b8465789fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3651 (class 2606 OID 69378)
-- Name: fke3790e40113bf083;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40113bf083 FOREIGN KEY (menugroup_id) REFERENCES menu_group(id);
--
-- TOC entry 3650 (class 2606 OID 69383)
-- Name: fke3790e40d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3701 (class 2606 OID 69388)
-- Name: fke3de65548e8203bc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT fke3de65548e8203bc FOREIGN KEY (id) REFERENCES transactions(id);
--
-- TOC entry 3626 (class 2606 OID 69393)
-- Name: fke83d827c969c6de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT fke83d827c969c6de FOREIGN KEY (assigned_user) REFERENCES users(auto_id);
--
-- TOC entry 3669 (class 2606 OID 69398)
-- Name: fkeac112927c59441d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac112927c59441d FOREIGN KEY (crust) REFERENCES pizza_crust(id);
--
-- TOC entry 3668 (class 2606 OID 69403)
-- Name: fkeac11292a56d141c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292a56d141c FOREIGN KEY (order_type) REFERENCES order_type(id);
--
-- TOC entry 3667 (class 2606 OID 69408)
-- Name: fkeac11292dd545b77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292dd545b77 FOREIGN KEY (menu_item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3610 (class 2606 OID 69413)
-- Name: fkf8a37399d900aa01;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399d900aa01 FOREIGN KEY (elt) REFERENCES tax(id);
--
-- TOC entry 3609 (class 2606 OID 69418)
-- Name: fkf8a37399eff11066;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399eff11066 FOREIGN KEY (group_id) REFERENCES tax_group(id);
--
-- TOC entry 3641 (class 2606 OID 69423)
-- Name: fkf94186ff89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT fkf94186ff89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3706 (class 2606 OID 69428)
-- Name: fkfe9871551df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871551df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3705 (class 2606 OID 69433)
-- Name: fkfe9871552ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871552ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3704 (class 2606 OID 69438)
-- Name: fkfe9871553e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871553e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3703 (class 2606 OID 69443)
-- Name: fkfe987155ca43b6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155ca43b6 FOREIGN KEY (payout_recepient_id) REFERENCES payout_recepients(id);
--
-- TOC entry 3702 (class 2606 OID 69448)
-- Name: fkfe987155fc697d9e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155fc697d9e FOREIGN KEY (payout_reason_id) REFERENCES payout_reasons(id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3729 (class 2606 OID 77286)
-- Name: conversiones_unidad_unidad_destino_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_destino_id_fkey FOREIGN KEY (unidad_destino_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3730 (class 2606 OID 77281)
-- Name: conversiones_unidad_unidad_origen_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_origen_id_fkey FOREIGN KEY (unidad_origen_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3733 (class 2606 OID 77407)
-- Name: cost_layer_batch_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_batch_id_fkey FOREIGN KEY (batch_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3734 (class 2606 OID 77402)
-- Name: cost_layer_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3731 (class 2606 OID 77339)
-- Name: historial_costos_item_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3732 (class 2606 OID 77363)
-- Name: historial_costos_receta_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta
    ADD CONSTRAINT historial_costos_receta_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3720 (class 2606 OID 77090)
-- Name: inventory_batch_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch
    ADD CONSTRAINT inventory_batch_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3738 (class 2606 OID 77502)
-- Name: item_vendor_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3737 (class 2606 OID 77507)
-- Name: item_vendor_unidad_presentacion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_unidad_presentacion_id_fkey FOREIGN KEY (unidad_presentacion_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3718 (class 2606 OID 77304)
-- Name: items_unidad_compra_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_compra_id_fkey FOREIGN KEY (unidad_compra_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3717 (class 2606 OID 77291)
-- Name: items_unidad_medida_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_medida_id_fkey FOREIGN KEY (unidad_medida_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3719 (class 2606 OID 77519)
-- Name: items_unidad_salida_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_salida_id_fkey FOREIGN KEY (unidad_salida_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3735 (class 2606 OID 77435)
-- Name: modificadores_pos_receta_modificador_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_receta_modificador_id_fkey FOREIGN KEY (receta_modificador_id) REFERENCES receta_cab(id);
--
-- TOC entry 3722 (class 2606 OID 77107)
-- Name: mov_inv_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3721 (class 2606 OID 77112)
-- Name: mov_inv_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3726 (class 2606 OID 77205)
-- Name: op_produccion_cab_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab
    ADD CONSTRAINT op_produccion_cab_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3742 (class 2606 OID 77601)
-- Name: perdida_log_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3741 (class 2606 OID 77606)
-- Name: perdida_log_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3740 (class 2606 OID 77611)
-- Name: perdida_log_uom_original_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_uom_original_id_fkey FOREIGN KEY (uom_original_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3713 (class 2606 OID 69453)
-- Name: postcorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3715 (class 2606 OID 69458)
-- Name: precorte_efectivo_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3716 (class 2606 OID 69463)
-- Name: precorte_otros_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3714 (class 2606 OID 69468)
-- Name: precorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3736 (class 2606 OID 77484)
-- Name: recalc_log_job_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log
    ADD CONSTRAINT recalc_log_job_id_fkey FOREIGN KEY (job_id) REFERENCES job_recalc_queue(id);
--
-- TOC entry 3724 (class 2606 OID 77187)
-- Name: receta_det_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3725 (class 2606 OID 77182)
-- Name: receta_det_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3723 (class 2606 OID 77156)
-- Name: receta_version_receta_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_receta_id_fkey FOREIGN KEY (receta_id) REFERENCES receta_cab(id);
--
-- TOC entry 3739 (class 2606 OID 77562)
-- Name: stock_policy_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy
    ADD CONSTRAINT stock_policy_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3745 (class 2606 OID 77634)
-- Name: ticket_det_consumo_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3744 (class 2606 OID 77639)
-- Name: ticket_det_consumo_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3743 (class 2606 OID 77644)
-- Name: ticket_det_consumo_uom_original_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_uom_original_id_fkey FOREIGN KEY (uom_original_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3727 (class 2606 OID 77440)
-- Name: ticket_venta_det_receta_shadow_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_receta_shadow_id_fkey FOREIGN KEY (receta_shadow_id) REFERENCES receta_shadow(id);
--
-- TOC entry 3728 (class 2606 OID 77240)
-- Name: ticket_venta_det_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 4147 (class 0 OID 0)
-- Dependencies: 7
-- Name: public;
Type: ACL;
Schema: -;
Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;
GRANT USAGE ON SCHEMA public TO selemti_user;
--
-- TOC entry 4148 (class 0 OID 0)
-- Dependencies: 6
-- Name: selemti;
Type: ACL;
Schema: -;
Owner: floreant
--

REVOKE ALL ON SCHEMA selemti FROM PUBLIC;
REVOKE ALL ON SCHEMA selemti FROM floreant;
GRANT ALL ON SCHEMA selemti TO floreant;
GRANT ALL ON SCHEMA selemti TO selemti_user;
SET search_path = public, pg_catalog;
--
-- TOC entry 4150 (class 0 OID 0)
-- Dependencies: 181
-- Name: action_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE action_history FROM PUBLIC;
REVOKE ALL ON TABLE action_history FROM floreant;
GRANT ALL ON TABLE action_history TO floreant;
GRANT SELECT ON TABLE action_history TO selemti_user;
--
-- TOC entry 4152 (class 0 OID 0)
-- Dependencies: 183
-- Name: attendence_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE attendence_history FROM PUBLIC;
REVOKE ALL ON TABLE attendence_history FROM floreant;
GRANT ALL ON TABLE attendence_history TO floreant;
GRANT SELECT ON TABLE attendence_history TO selemti_user;
--
-- TOC entry 4154 (class 0 OID 0)
-- Dependencies: 185
-- Name: cash_drawer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cash_drawer FROM PUBLIC;
REVOKE ALL ON TABLE cash_drawer FROM floreant;
GRANT ALL ON TABLE cash_drawer TO floreant;
GRANT SELECT ON TABLE cash_drawer TO selemti_user;
--
-- TOC entry 4156 (class 0 OID 0)
-- Dependencies: 187
-- Name: cash_drawer_reset_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cash_drawer_reset_history FROM PUBLIC;
REVOKE ALL ON TABLE cash_drawer_reset_history FROM floreant;
GRANT ALL ON TABLE cash_drawer_reset_history TO floreant;
GRANT SELECT ON TABLE cash_drawer_reset_history TO selemti_user;
--
-- TOC entry 4158 (class 0 OID 0)
-- Dependencies: 189
-- Name: cooking_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cooking_instruction FROM PUBLIC;
REVOKE ALL ON TABLE cooking_instruction FROM floreant;
GRANT ALL ON TABLE cooking_instruction TO floreant;
GRANT SELECT ON TABLE cooking_instruction TO selemti_user;
--
-- TOC entry 4160 (class 0 OID 0)
-- Dependencies: 191
-- Name: coupon_and_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE coupon_and_discount FROM PUBLIC;
REVOKE ALL ON TABLE coupon_and_discount FROM floreant;
GRANT ALL ON TABLE coupon_and_discount TO floreant;
GRANT SELECT ON TABLE coupon_and_discount TO selemti_user;
--
-- TOC entry 4162 (class 0 OID 0)
-- Dependencies: 193
-- Name: currency;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE currency FROM PUBLIC;
REVOKE ALL ON TABLE currency FROM floreant;
GRANT ALL ON TABLE currency TO floreant;
GRANT SELECT ON TABLE currency TO selemti_user;
--
-- TOC entry 4163 (class 0 OID 0)
-- Dependencies: 194
-- Name: currency_balance;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE currency_balance FROM PUBLIC;
REVOKE ALL ON TABLE currency_balance FROM floreant;
GRANT ALL ON TABLE currency_balance TO floreant;
GRANT SELECT ON TABLE currency_balance TO selemti_user;
--
-- TOC entry 4166 (class 0 OID 0)
-- Dependencies: 197
-- Name: custom_payment;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE custom_payment FROM PUBLIC;
REVOKE ALL ON TABLE custom_payment FROM floreant;
GRANT ALL ON TABLE custom_payment TO floreant;
GRANT SELECT ON TABLE custom_payment TO selemti_user;
--
-- TOC entry 4168 (class 0 OID 0)
-- Dependencies: 199
-- Name: customer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE customer FROM PUBLIC;
REVOKE ALL ON TABLE customer FROM floreant;
GRANT ALL ON TABLE customer TO floreant;
GRANT SELECT ON TABLE customer TO selemti_user;
--
-- TOC entry 4170 (class 0 OID 0)
-- Dependencies: 201
-- Name: customer_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE customer_properties FROM PUBLIC;
REVOKE ALL ON TABLE customer_properties FROM floreant;
GRANT ALL ON TABLE customer_properties TO floreant;
GRANT SELECT ON TABLE customer_properties TO selemti_user;
--
-- TOC entry 4171 (class 0 OID 0)
-- Dependencies: 202
-- Name: daily_folio_counter;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE daily_folio_counter FROM PUBLIC;
REVOKE ALL ON TABLE daily_folio_counter FROM floreant;
GRANT ALL ON TABLE daily_folio_counter TO floreant;
GRANT SELECT ON TABLE daily_folio_counter TO selemti_user;
--
-- TOC entry 4172 (class 0 OID 0)
-- Dependencies: 203
-- Name: data_update_info;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE data_update_info FROM PUBLIC;
REVOKE ALL ON TABLE data_update_info FROM floreant;
GRANT ALL ON TABLE data_update_info TO floreant;
GRANT SELECT ON TABLE data_update_info TO selemti_user;
--
-- TOC entry 4174 (class 0 OID 0)
-- Dependencies: 205
-- Name: delivery_address;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_address FROM PUBLIC;
REVOKE ALL ON TABLE delivery_address FROM floreant;
GRANT ALL ON TABLE delivery_address TO floreant;
GRANT SELECT ON TABLE delivery_address TO selemti_user;
--
-- TOC entry 4176 (class 0 OID 0)
-- Dependencies: 207
-- Name: delivery_charge;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_charge FROM PUBLIC;
REVOKE ALL ON TABLE delivery_charge FROM floreant;
GRANT ALL ON TABLE delivery_charge TO floreant;
GRANT SELECT ON TABLE delivery_charge TO selemti_user;
--
-- TOC entry 4178 (class 0 OID 0)
-- Dependencies: 209
-- Name: delivery_configuration;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_configuration FROM PUBLIC;
REVOKE ALL ON TABLE delivery_configuration FROM floreant;
GRANT ALL ON TABLE delivery_configuration TO floreant;
GRANT SELECT ON TABLE delivery_configuration TO selemti_user;
--
-- TOC entry 4180 (class 0 OID 0)
-- Dependencies: 211
-- Name: delivery_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_instruction FROM PUBLIC;
REVOKE ALL ON TABLE delivery_instruction FROM floreant;
GRANT ALL ON TABLE delivery_instruction TO floreant;
GRANT SELECT ON TABLE delivery_instruction TO selemti_user;
--
-- TOC entry 4182 (class 0 OID 0)
-- Dependencies: 213
-- Name: drawer_assigned_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_assigned_history FROM PUBLIC;
REVOKE ALL ON TABLE drawer_assigned_history FROM floreant;
GRANT ALL ON TABLE drawer_assigned_history TO floreant;
GRANT SELECT ON TABLE drawer_assigned_history TO selemti_user;
--
-- TOC entry 4184 (class 0 OID 0)
-- Dependencies: 215
-- Name: drawer_pull_report;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_pull_report FROM PUBLIC;
REVOKE ALL ON TABLE drawer_pull_report FROM floreant;
GRANT ALL ON TABLE drawer_pull_report TO floreant;
GRANT SELECT ON TABLE drawer_pull_report TO selemti_user;
--
-- TOC entry 4186 (class 0 OID 0)
-- Dependencies: 217
-- Name: drawer_pull_report_voidtickets;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_pull_report_voidtickets FROM PUBLIC;
REVOKE ALL ON TABLE drawer_pull_report_voidtickets FROM floreant;
GRANT ALL ON TABLE drawer_pull_report_voidtickets TO floreant;
GRANT SELECT ON TABLE drawer_pull_report_voidtickets TO selemti_user;
--
-- TOC entry 4187 (class 0 OID 0)
-- Dependencies: 218
-- Name: employee_in_out_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE employee_in_out_history FROM PUBLIC;
REVOKE ALL ON TABLE employee_in_out_history FROM floreant;
GRANT ALL ON TABLE employee_in_out_history TO floreant;
GRANT SELECT ON TABLE employee_in_out_history TO selemti_user;
--
-- TOC entry 4189 (class 0 OID 0)
-- Dependencies: 220
-- Name: global_config;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE global_config FROM PUBLIC;
REVOKE ALL ON TABLE global_config FROM floreant;
GRANT ALL ON TABLE global_config TO floreant;
GRANT SELECT ON TABLE global_config TO selemti_user;
--
-- TOC entry 4191 (class 0 OID 0)
-- Dependencies: 222
-- Name: gratuity;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE gratuity FROM PUBLIC;
REVOKE ALL ON TABLE gratuity FROM floreant;
GRANT ALL ON TABLE gratuity TO floreant;
GRANT SELECT ON TABLE gratuity TO selemti_user;
--
-- TOC entry 4193 (class 0 OID 0)
-- Dependencies: 224
-- Name: group_taxes;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE group_taxes FROM PUBLIC;
REVOKE ALL ON TABLE group_taxes FROM floreant;
GRANT ALL ON TABLE group_taxes TO floreant;
GRANT SELECT ON TABLE group_taxes TO selemti_user;
--
-- TOC entry 4194 (class 0 OID 0)
-- Dependencies: 225
-- Name: guest_check_print;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE guest_check_print FROM PUBLIC;
REVOKE ALL ON TABLE guest_check_print FROM floreant;
GRANT ALL ON TABLE guest_check_print TO floreant;
GRANT SELECT ON TABLE guest_check_print TO selemti_user;
--
-- TOC entry 4196 (class 0 OID 0)
-- Dependencies: 227
-- Name: inventory_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_group FROM PUBLIC;
REVOKE ALL ON TABLE inventory_group FROM floreant;
GRANT ALL ON TABLE inventory_group TO floreant;
GRANT SELECT ON TABLE inventory_group TO selemti_user;
--
-- TOC entry 4198 (class 0 OID 0)
-- Dependencies: 229
-- Name: inventory_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_item FROM PUBLIC;
REVOKE ALL ON TABLE inventory_item FROM floreant;
GRANT ALL ON TABLE inventory_item TO floreant;
GRANT SELECT ON TABLE inventory_item TO selemti_user;
--
-- TOC entry 4200 (class 0 OID 0)
-- Dependencies: 231
-- Name: inventory_location;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_location FROM PUBLIC;
REVOKE ALL ON TABLE inventory_location FROM floreant;
GRANT ALL ON TABLE inventory_location TO floreant;
GRANT SELECT ON TABLE inventory_location TO selemti_user;
--
-- TOC entry 4202 (class 0 OID 0)
-- Dependencies: 233
-- Name: inventory_meta_code;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_meta_code FROM PUBLIC;
REVOKE ALL ON TABLE inventory_meta_code FROM floreant;
GRANT ALL ON TABLE inventory_meta_code TO floreant;
GRANT SELECT ON TABLE inventory_meta_code TO selemti_user;
--
-- TOC entry 4204 (class 0 OID 0)
-- Dependencies: 235
-- Name: inventory_transaction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_transaction FROM PUBLIC;
REVOKE ALL ON TABLE inventory_transaction FROM floreant;
GRANT ALL ON TABLE inventory_transaction TO floreant;
GRANT SELECT ON TABLE inventory_transaction TO selemti_user;
--
-- TOC entry 4206 (class 0 OID 0)
-- Dependencies: 237
-- Name: inventory_unit;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_unit FROM PUBLIC;
REVOKE ALL ON TABLE inventory_unit FROM floreant;
GRANT ALL ON TABLE inventory_unit TO floreant;
GRANT SELECT ON TABLE inventory_unit TO selemti_user;
--
-- TOC entry 4208 (class 0 OID 0)
-- Dependencies: 239
-- Name: inventory_vendor;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_vendor FROM PUBLIC;
REVOKE ALL ON TABLE inventory_vendor FROM floreant;
GRANT ALL ON TABLE inventory_vendor TO floreant;
GRANT SELECT ON TABLE inventory_vendor TO selemti_user;
--
-- TOC entry 4210 (class 0 OID 0)
-- Dependencies: 241
-- Name: inventory_warehouse;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_warehouse FROM PUBLIC;
REVOKE ALL ON TABLE inventory_warehouse FROM floreant;
GRANT ALL ON TABLE inventory_warehouse TO floreant;
GRANT SELECT ON TABLE inventory_warehouse TO selemti_user;
--
-- TOC entry 4212 (class 0 OID 0)
-- Dependencies: 243
-- Name: item_order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE item_order_type FROM PUBLIC;
REVOKE ALL ON TABLE item_order_type FROM floreant;
GRANT ALL ON TABLE item_order_type TO floreant;
GRANT SELECT ON TABLE item_order_type TO selemti_user;
--
-- TOC entry 4213 (class 0 OID 0)
-- Dependencies: 244
-- Name: kitchen_ticket;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kitchen_ticket FROM PUBLIC;
REVOKE ALL ON TABLE kitchen_ticket FROM floreant;
GRANT ALL ON TABLE kitchen_ticket TO floreant;
GRANT SELECT ON TABLE kitchen_ticket TO selemti_user;
--
-- TOC entry 4214 (class 0 OID 0)
-- Dependencies: 245
-- Name: terminal;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal FROM PUBLIC;
REVOKE ALL ON TABLE terminal FROM floreant;
GRANT ALL ON TABLE terminal TO floreant;
GRANT SELECT ON TABLE terminal TO selemti_user;
--
-- TOC entry 4215 (class 0 OID 0)
-- Dependencies: 246
-- Name: ticket;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket FROM PUBLIC;
REVOKE ALL ON TABLE ticket FROM floreant;
GRANT ALL ON TABLE ticket TO floreant;
GRANT SELECT ON TABLE ticket TO selemti_user;
--
-- TOC entry 4216 (class 0 OID 0)
-- Dependencies: 247
-- Name: kds_orders_enhanced;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kds_orders_enhanced FROM PUBLIC;
REVOKE ALL ON TABLE kds_orders_enhanced FROM floreant;
GRANT ALL ON TABLE kds_orders_enhanced TO floreant;
GRANT SELECT ON TABLE kds_orders_enhanced TO selemti_user;
--
-- TOC entry 4217 (class 0 OID 0)
-- Dependencies: 248
-- Name: kds_ready_log;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kds_ready_log FROM PUBLIC;
REVOKE ALL ON TABLE kds_ready_log FROM floreant;
GRANT ALL ON TABLE kds_ready_log TO floreant;
GRANT SELECT ON TABLE kds_ready_log TO selemti_user;
--
-- TOC entry 4218 (class 0 OID 0)
-- Dependencies: 249
-- Name: kit_ticket_table_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kit_ticket_table_num FROM PUBLIC;
REVOKE ALL ON TABLE kit_ticket_table_num FROM floreant;
GRANT ALL ON TABLE kit_ticket_table_num TO floreant;
GRANT SELECT ON TABLE kit_ticket_table_num TO selemti_user;
--
-- TOC entry 4220 (class 0 OID 0)
-- Dependencies: 251
-- Name: kitchen_ticket_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kitchen_ticket_item FROM PUBLIC;
REVOKE ALL ON TABLE kitchen_ticket_item FROM floreant;
GRANT ALL ON TABLE kitchen_ticket_item TO floreant;
GRANT SELECT ON TABLE kitchen_ticket_item TO selemti_user;
--
-- TOC entry 4222 (class 0 OID 0)
-- Dependencies: 253
-- Name: menu_category;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_category FROM PUBLIC;
REVOKE ALL ON TABLE menu_category FROM floreant;
GRANT ALL ON TABLE menu_category TO floreant;
GRANT SELECT ON TABLE menu_category TO selemti_user;
--
-- TOC entry 4224 (class 0 OID 0)
-- Dependencies: 255
-- Name: menu_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_group FROM PUBLIC;
REVOKE ALL ON TABLE menu_group FROM floreant;
GRANT ALL ON TABLE menu_group TO floreant;
GRANT SELECT ON TABLE menu_group TO selemti_user;
--
-- TOC entry 4226 (class 0 OID 0)
-- Dependencies: 257
-- Name: menu_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item FROM PUBLIC;
REVOKE ALL ON TABLE menu_item FROM floreant;
GRANT ALL ON TABLE menu_item TO floreant;
GRANT SELECT ON TABLE menu_item TO selemti_user;
--
-- TOC entry 4228 (class 0 OID 0)
-- Dependencies: 259
-- Name: menu_item_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_properties FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_properties FROM floreant;
GRANT ALL ON TABLE menu_item_properties TO floreant;
GRANT SELECT ON TABLE menu_item_properties TO selemti_user;
--
-- TOC entry 4229 (class 0 OID 0)
-- Dependencies: 260
-- Name: menu_item_size;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_size FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_size FROM floreant;
GRANT ALL ON TABLE menu_item_size TO floreant;
GRANT SELECT ON TABLE menu_item_size TO selemti_user;
--
-- TOC entry 4231 (class 0 OID 0)
-- Dependencies: 262
-- Name: menu_item_terminal_ref;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_terminal_ref FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_terminal_ref FROM floreant;
GRANT ALL ON TABLE menu_item_terminal_ref TO floreant;
GRANT SELECT ON TABLE menu_item_terminal_ref TO selemti_user;
--
-- TOC entry 4232 (class 0 OID 0)
-- Dependencies: 263
-- Name: menu_modifier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier FROM floreant;
GRANT ALL ON TABLE menu_modifier TO floreant;
GRANT SELECT ON TABLE menu_modifier TO selemti_user;
--
-- TOC entry 4233 (class 0 OID 0)
-- Dependencies: 264
-- Name: menu_modifier_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier_group FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier_group FROM floreant;
GRANT ALL ON TABLE menu_modifier_group TO floreant;
GRANT SELECT ON TABLE menu_modifier_group TO selemti_user;
--
-- TOC entry 4236 (class 0 OID 0)
-- Dependencies: 267
-- Name: menu_modifier_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier_properties FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier_properties FROM floreant;
GRANT ALL ON TABLE menu_modifier_properties TO floreant;
GRANT SELECT ON TABLE menu_modifier_properties TO selemti_user;
--
-- TOC entry 4237 (class 0 OID 0)
-- Dependencies: 268
-- Name: menucategory_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menucategory_discount FROM PUBLIC;
REVOKE ALL ON TABLE menucategory_discount FROM floreant;
GRANT ALL ON TABLE menucategory_discount TO floreant;
GRANT SELECT ON TABLE menucategory_discount TO selemti_user;
--
-- TOC entry 4238 (class 0 OID 0)
-- Dependencies: 269
-- Name: menugroup_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menugroup_discount FROM PUBLIC;
REVOKE ALL ON TABLE menugroup_discount FROM floreant;
GRANT ALL ON TABLE menugroup_discount TO floreant;
GRANT SELECT ON TABLE menugroup_discount TO selemti_user;
--
-- TOC entry 4239 (class 0 OID 0)
-- Dependencies: 270
-- Name: menuitem_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_discount FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_discount FROM floreant;
GRANT ALL ON TABLE menuitem_discount TO floreant;
GRANT SELECT ON TABLE menuitem_discount TO selemti_user;
--
-- TOC entry 4240 (class 0 OID 0)
-- Dependencies: 271
-- Name: menuitem_modifiergroup;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_modifiergroup FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_modifiergroup FROM floreant;
GRANT ALL ON TABLE menuitem_modifiergroup TO floreant;
GRANT SELECT ON TABLE menuitem_modifiergroup TO selemti_user;
--
-- TOC entry 4242 (class 0 OID 0)
-- Dependencies: 273
-- Name: menuitem_pizzapirce;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_pizzapirce FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_pizzapirce FROM floreant;
GRANT ALL ON TABLE menuitem_pizzapirce TO floreant;
GRANT SELECT ON TABLE menuitem_pizzapirce TO selemti_user;
--
-- TOC entry 4243 (class 0 OID 0)
-- Dependencies: 274
-- Name: menuitem_shift;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_shift FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_shift FROM floreant;
GRANT ALL ON TABLE menuitem_shift TO floreant;
GRANT SELECT ON TABLE menuitem_shift TO selemti_user;
--
-- TOC entry 4245 (class 0 OID 0)
-- Dependencies: 276
-- Name: menumodifier_pizzamodifierprice;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menumodifier_pizzamodifierprice FROM PUBLIC;
REVOKE ALL ON TABLE menumodifier_pizzamodifierprice FROM floreant;
GRANT ALL ON TABLE menumodifier_pizzamodifierprice TO floreant;
GRANT SELECT ON TABLE menumodifier_pizzamodifierprice TO selemti_user;
--
-- TOC entry 4246 (class 0 OID 0)
-- Dependencies: 389
-- Name: migrations;
Type: ACL;
Schema: public;
Owner: postgres
--

REVOKE ALL ON TABLE migrations FROM PUBLIC;
REVOKE ALL ON TABLE migrations FROM postgres;
GRANT ALL ON TABLE migrations TO postgres;
GRANT SELECT ON TABLE migrations TO selemti_user;
--
-- TOC entry 4248 (class 0 OID 0)
-- Dependencies: 277
-- Name: modifier_multiplier_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE modifier_multiplier_price FROM PUBLIC;
REVOKE ALL ON TABLE modifier_multiplier_price FROM floreant;
GRANT ALL ON TABLE modifier_multiplier_price TO floreant;
GRANT SELECT ON TABLE modifier_multiplier_price TO selemti_user;
--
-- TOC entry 4250 (class 0 OID 0)
-- Dependencies: 279
-- Name: multiplier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE multiplier FROM PUBLIC;
REVOKE ALL ON TABLE multiplier FROM floreant;
GRANT ALL ON TABLE multiplier TO floreant;
GRANT SELECT ON TABLE multiplier TO selemti_user;
--
-- TOC entry 4251 (class 0 OID 0)
-- Dependencies: 280
-- Name: order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE order_type FROM PUBLIC;
REVOKE ALL ON TABLE order_type FROM floreant;
GRANT ALL ON TABLE order_type TO floreant;
GRANT SELECT ON TABLE order_type TO selemti_user;
--
-- TOC entry 4253 (class 0 OID 0)
-- Dependencies: 282
-- Name: packaging_unit;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE packaging_unit FROM PUBLIC;
REVOKE ALL ON TABLE packaging_unit FROM floreant;
GRANT ALL ON TABLE packaging_unit TO floreant;
GRANT SELECT ON TABLE packaging_unit TO selemti_user;
--
-- TOC entry 4255 (class 0 OID 0)
-- Dependencies: 284
-- Name: payout_reasons;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE payout_reasons FROM PUBLIC;
REVOKE ALL ON TABLE payout_reasons FROM floreant;
GRANT ALL ON TABLE payout_reasons TO floreant;
GRANT SELECT ON TABLE payout_reasons TO selemti_user;
--
-- TOC entry 4257 (class 0 OID 0)
-- Dependencies: 286
-- Name: payout_recepients;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE payout_recepients FROM PUBLIC;
REVOKE ALL ON TABLE payout_recepients FROM floreant;
GRANT ALL ON TABLE payout_recepients TO floreant;
GRANT SELECT ON TABLE payout_recepients TO selemti_user;
--
-- TOC entry 4259 (class 0 OID 0)
-- Dependencies: 288
-- Name: pizza_crust;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_crust FROM PUBLIC;
REVOKE ALL ON TABLE pizza_crust FROM floreant;
GRANT ALL ON TABLE pizza_crust TO floreant;
GRANT SELECT ON TABLE pizza_crust TO selemti_user;
--
-- TOC entry 4261 (class 0 OID 0)
-- Dependencies: 290
-- Name: pizza_modifier_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_modifier_price FROM PUBLIC;
REVOKE ALL ON TABLE pizza_modifier_price FROM floreant;
GRANT ALL ON TABLE pizza_modifier_price TO floreant;
GRANT SELECT ON TABLE pizza_modifier_price TO selemti_user;
--
-- TOC entry 4263 (class 0 OID 0)
-- Dependencies: 292
-- Name: pizza_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_price FROM PUBLIC;
REVOKE ALL ON TABLE pizza_price FROM floreant;
GRANT ALL ON TABLE pizza_price TO floreant;
GRANT SELECT ON TABLE pizza_price TO selemti_user;
--
-- TOC entry 4265 (class 0 OID 0)
-- Dependencies: 294
-- Name: printer_configuration;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_configuration FROM PUBLIC;
REVOKE ALL ON TABLE printer_configuration FROM floreant;
GRANT ALL ON TABLE printer_configuration TO floreant;
GRANT SELECT ON TABLE printer_configuration TO selemti_user;
--
-- TOC entry 4266 (class 0 OID 0)
-- Dependencies: 295
-- Name: printer_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_group FROM PUBLIC;
REVOKE ALL ON TABLE printer_group FROM floreant;
GRANT ALL ON TABLE printer_group TO floreant;
GRANT SELECT ON TABLE printer_group TO selemti_user;
--
-- TOC entry 4268 (class 0 OID 0)
-- Dependencies: 297
-- Name: printer_group_printers;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_group_printers FROM PUBLIC;
REVOKE ALL ON TABLE printer_group_printers FROM floreant;
GRANT ALL ON TABLE printer_group_printers TO floreant;
GRANT SELECT ON TABLE printer_group_printers TO selemti_user;
--
-- TOC entry 4269 (class 0 OID 0)
-- Dependencies: 298
-- Name: purchase_order;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE purchase_order FROM PUBLIC;
REVOKE ALL ON TABLE purchase_order FROM floreant;
GRANT ALL ON TABLE purchase_order TO floreant;
GRANT SELECT ON TABLE purchase_order TO selemti_user;
--
-- TOC entry 4271 (class 0 OID 0)
-- Dependencies: 300
-- Name: recepie;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE recepie FROM PUBLIC;
REVOKE ALL ON TABLE recepie FROM floreant;
GRANT ALL ON TABLE recepie TO floreant;
GRANT SELECT ON TABLE recepie TO selemti_user;
--
-- TOC entry 4273 (class 0 OID 0)
-- Dependencies: 302
-- Name: recepie_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE recepie_item FROM PUBLIC;
REVOKE ALL ON TABLE recepie_item FROM floreant;
GRANT ALL ON TABLE recepie_item TO floreant;
GRANT SELECT ON TABLE recepie_item TO selemti_user;
--
-- TOC entry 4275 (class 0 OID 0)
-- Dependencies: 304
-- Name: restaurant;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE restaurant FROM PUBLIC;
REVOKE ALL ON TABLE restaurant FROM floreant;
GRANT ALL ON TABLE restaurant TO floreant;
GRANT SELECT ON TABLE restaurant TO selemti_user;
--
-- TOC entry 4276 (class 0 OID 0)
-- Dependencies: 305
-- Name: restaurant_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE restaurant_properties FROM PUBLIC;
REVOKE ALL ON TABLE restaurant_properties FROM floreant;
GRANT ALL ON TABLE restaurant_properties TO floreant;
GRANT SELECT ON TABLE restaurant_properties TO selemti_user;
--
-- TOC entry 4277 (class 0 OID 0)
-- Dependencies: 306
-- Name: shift;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shift FROM PUBLIC;
REVOKE ALL ON TABLE shift FROM floreant;
GRANT ALL ON TABLE shift TO floreant;
GRANT SELECT ON TABLE shift TO selemti_user;
--
-- TOC entry 4279 (class 0 OID 0)
-- Dependencies: 308
-- Name: shop_floor;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor FROM floreant;
GRANT ALL ON TABLE shop_floor TO floreant;
GRANT SELECT ON TABLE shop_floor TO selemti_user;
--
-- TOC entry 4281 (class 0 OID 0)
-- Dependencies: 310
-- Name: shop_floor_template;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor_template FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor_template FROM floreant;
GRANT ALL ON TABLE shop_floor_template TO floreant;
GRANT SELECT ON TABLE shop_floor_template TO selemti_user;
--
-- TOC entry 4283 (class 0 OID 0)
-- Dependencies: 312
-- Name: shop_floor_template_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor_template_properties FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor_template_properties FROM floreant;
GRANT ALL ON TABLE shop_floor_template_properties TO floreant;
GRANT SELECT ON TABLE shop_floor_template_properties TO selemti_user;
--
-- TOC entry 4284 (class 0 OID 0)
-- Dependencies: 313
-- Name: shop_table;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table FROM PUBLIC;
REVOKE ALL ON TABLE shop_table FROM floreant;
GRANT ALL ON TABLE shop_table TO floreant;
GRANT SELECT ON TABLE shop_table TO selemti_user;
--
-- TOC entry 4285 (class 0 OID 0)
-- Dependencies: 314
-- Name: shop_table_status;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table_status FROM PUBLIC;
REVOKE ALL ON TABLE shop_table_status FROM floreant;
GRANT ALL ON TABLE shop_table_status TO floreant;
GRANT SELECT ON TABLE shop_table_status TO selemti_user;
--
-- TOC entry 4286 (class 0 OID 0)
-- Dependencies: 315
-- Name: shop_table_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table_type FROM PUBLIC;
REVOKE ALL ON TABLE shop_table_type FROM floreant;
GRANT ALL ON TABLE shop_table_type TO floreant;
GRANT SELECT ON TABLE shop_table_type TO selemti_user;
--
-- TOC entry 4288 (class 0 OID 0)
-- Dependencies: 317
-- Name: table_booking_info;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_booking_info FROM PUBLIC;
REVOKE ALL ON TABLE table_booking_info FROM floreant;
GRANT ALL ON TABLE table_booking_info TO floreant;
GRANT SELECT ON TABLE table_booking_info TO selemti_user;
--
-- TOC entry 4290 (class 0 OID 0)
-- Dependencies: 319
-- Name: table_booking_mapping;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_booking_mapping FROM PUBLIC;
REVOKE ALL ON TABLE table_booking_mapping FROM floreant;
GRANT ALL ON TABLE table_booking_mapping TO floreant;
GRANT SELECT ON TABLE table_booking_mapping TO selemti_user;
--
-- TOC entry 4291 (class 0 OID 0)
-- Dependencies: 320
-- Name: table_ticket_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_ticket_num FROM PUBLIC;
REVOKE ALL ON TABLE table_ticket_num FROM floreant;
GRANT ALL ON TABLE table_ticket_num TO floreant;
GRANT SELECT ON TABLE table_ticket_num TO selemti_user;
--
-- TOC entry 4292 (class 0 OID 0)
-- Dependencies: 321
-- Name: table_type_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_type_relation FROM PUBLIC;
REVOKE ALL ON TABLE table_type_relation FROM floreant;
GRANT ALL ON TABLE table_type_relation TO floreant;
GRANT SELECT ON TABLE table_type_relation TO selemti_user;
--
-- TOC entry 4293 (class 0 OID 0)
-- Dependencies: 322
-- Name: tax;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE tax FROM PUBLIC;
REVOKE ALL ON TABLE tax FROM floreant;
GRANT ALL ON TABLE tax TO floreant;
GRANT SELECT ON TABLE tax TO selemti_user;
--
-- TOC entry 4294 (class 0 OID 0)
-- Dependencies: 323
-- Name: tax_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE tax_group FROM PUBLIC;
REVOKE ALL ON TABLE tax_group FROM floreant;
GRANT ALL ON TABLE tax_group TO floreant;
GRANT SELECT ON TABLE tax_group TO selemti_user;
--
-- TOC entry 4296 (class 0 OID 0)
-- Dependencies: 325
-- Name: terminal_printers;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal_printers FROM PUBLIC;
REVOKE ALL ON TABLE terminal_printers FROM floreant;
GRANT ALL ON TABLE terminal_printers TO floreant;
GRANT SELECT ON TABLE terminal_printers TO selemti_user;
--
-- TOC entry 4298 (class 0 OID 0)
-- Dependencies: 327
-- Name: terminal_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal_properties FROM PUBLIC;
REVOKE ALL ON TABLE terminal_properties FROM floreant;
GRANT ALL ON TABLE terminal_properties TO floreant;
GRANT SELECT ON TABLE terminal_properties TO selemti_user;
--
-- TOC entry 4299 (class 0 OID 0)
-- Dependencies: 328
-- Name: ticket_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_discount FROM PUBLIC;
REVOKE ALL ON TABLE ticket_discount FROM floreant;
GRANT ALL ON TABLE ticket_discount TO floreant;
GRANT SELECT ON TABLE ticket_discount TO selemti_user;
--
-- TOC entry 4301 (class 0 OID 0)
-- Dependencies: 330
-- Name: ticket_folio_complete;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_folio_complete FROM PUBLIC;
REVOKE ALL ON TABLE ticket_folio_complete FROM floreant;
GRANT ALL ON TABLE ticket_folio_complete TO floreant;
GRANT SELECT ON TABLE ticket_folio_complete TO selemti_user;
--
-- TOC entry 4303 (class 0 OID 0)
-- Dependencies: 332
-- Name: ticket_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item FROM floreant;
GRANT ALL ON TABLE ticket_item TO floreant;
GRANT SELECT ON TABLE ticket_item TO selemti_user;
--
-- TOC entry 4304 (class 0 OID 0)
-- Dependencies: 333
-- Name: ticket_item_addon_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_addon_relation FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_addon_relation FROM floreant;
GRANT ALL ON TABLE ticket_item_addon_relation TO floreant;
GRANT SELECT ON TABLE ticket_item_addon_relation TO selemti_user;
--
-- TOC entry 4305 (class 0 OID 0)
-- Dependencies: 334
-- Name: ticket_item_cooking_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_cooking_instruction FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_cooking_instruction FROM floreant;
GRANT ALL ON TABLE ticket_item_cooking_instruction TO floreant;
GRANT SELECT ON TABLE ticket_item_cooking_instruction TO selemti_user;
--
-- TOC entry 4306 (class 0 OID 0)
-- Dependencies: 335
-- Name: ticket_item_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_discount FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_discount FROM floreant;
GRANT ALL ON TABLE ticket_item_discount TO floreant;
GRANT SELECT ON TABLE ticket_item_discount TO selemti_user;
--
-- TOC entry 4309 (class 0 OID 0)
-- Dependencies: 338
-- Name: ticket_item_modifier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_modifier FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_modifier FROM floreant;
GRANT ALL ON TABLE ticket_item_modifier TO floreant;
GRANT SELECT ON TABLE ticket_item_modifier TO selemti_user;
--
-- TOC entry 4311 (class 0 OID 0)
-- Dependencies: 340
-- Name: ticket_item_modifier_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_modifier_relation FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_modifier_relation FROM floreant;
GRANT ALL ON TABLE ticket_item_modifier_relation TO floreant;
GRANT SELECT ON TABLE ticket_item_modifier_relation TO selemti_user;
--
-- TOC entry 4312 (class 0 OID 0)
-- Dependencies: 341
-- Name: ticket_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_properties FROM PUBLIC;
REVOKE ALL ON TABLE ticket_properties FROM floreant;
GRANT ALL ON TABLE ticket_properties TO floreant;
GRANT SELECT ON TABLE ticket_properties TO selemti_user;
--
-- TOC entry 4313 (class 0 OID 0)
-- Dependencies: 342
-- Name: ticket_table_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_table_num FROM PUBLIC;
REVOKE ALL ON TABLE ticket_table_num FROM floreant;
GRANT ALL ON TABLE ticket_table_num TO floreant;
GRANT SELECT ON TABLE ticket_table_num TO selemti_user;
--
-- TOC entry 4314 (class 0 OID 0)
-- Dependencies: 343
-- Name: transaction_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE transaction_properties FROM PUBLIC;
REVOKE ALL ON TABLE transaction_properties FROM floreant;
GRANT ALL ON TABLE transaction_properties TO floreant;
GRANT SELECT ON TABLE transaction_properties TO selemti_user;
--
-- TOC entry 4315 (class 0 OID 0)
-- Dependencies: 344
-- Name: transactions;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE transactions FROM PUBLIC;
REVOKE ALL ON TABLE transactions FROM floreant;
GRANT ALL ON TABLE transactions TO floreant;
GRANT SELECT ON TABLE transactions TO selemti_user;
--
-- TOC entry 4317 (class 0 OID 0)
-- Dependencies: 346
-- Name: user_permission;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_permission FROM PUBLIC;
REVOKE ALL ON TABLE user_permission FROM floreant;
GRANT ALL ON TABLE user_permission TO floreant;
GRANT SELECT ON TABLE user_permission TO selemti_user;
--
-- TOC entry 4318 (class 0 OID 0)
-- Dependencies: 347
-- Name: user_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_type FROM PUBLIC;
REVOKE ALL ON TABLE user_type FROM floreant;
GRANT ALL ON TABLE user_type TO floreant;
GRANT SELECT ON TABLE user_type TO selemti_user;
--
-- TOC entry 4320 (class 0 OID 0)
-- Dependencies: 349
-- Name: user_user_permission;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_user_permission FROM PUBLIC;
REVOKE ALL ON TABLE user_user_permission FROM floreant;
GRANT ALL ON TABLE user_user_permission TO floreant;
GRANT SELECT ON TABLE user_user_permission TO selemti_user;
--
-- TOC entry 4321 (class 0 OID 0)
-- Dependencies: 350
-- Name: users;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE users FROM PUBLIC;
REVOKE ALL ON TABLE users FROM floreant;
GRANT ALL ON TABLE users TO floreant;
GRANT SELECT ON TABLE users TO selemti_user;
--
-- TOC entry 4323 (class 0 OID 0)
-- Dependencies: 352
-- Name: virtual_printer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE virtual_printer FROM PUBLIC;
REVOKE ALL ON TABLE virtual_printer FROM floreant;
GRANT ALL ON TABLE virtual_printer TO floreant;
GRANT SELECT ON TABLE virtual_printer TO selemti_user;
--
-- TOC entry 4325 (class 0 OID 0)
-- Dependencies: 354
-- Name: virtualprinter_order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE virtualprinter_order_type FROM PUBLIC;
REVOKE ALL ON TABLE virtualprinter_order_type FROM floreant;
GRANT ALL ON TABLE virtualprinter_order_type TO floreant;
GRANT SELECT ON TABLE virtualprinter_order_type TO selemti_user;
--
-- TOC entry 4326 (class 0 OID 0)
-- Dependencies: 355
-- Name: void_reasons;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE void_reasons FROM PUBLIC;
REVOKE ALL ON TABLE void_reasons FROM floreant;
GRANT ALL ON TABLE void_reasons TO floreant;
GRANT SELECT ON TABLE void_reasons TO selemti_user;
--
-- TOC entry 4328 (class 0 OID 0)
-- Dependencies: 381
-- Name: vw_reconciliation_status;
Type: ACL;
Schema: public;
Owner: postgres
--

REVOKE ALL ON TABLE vw_reconciliation_status FROM PUBLIC;
REVOKE ALL ON TABLE vw_reconciliation_status FROM postgres;
GRANT ALL ON TABLE vw_reconciliation_status TO postgres;
GRANT SELECT ON TABLE vw_reconciliation_status TO selemti_user;
--
-- TOC entry 4329 (class 0 OID 0)
-- Dependencies: 357
-- Name: zip_code_vs_delivery_charge;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE zip_code_vs_delivery_charge FROM PUBLIC;
REVOKE ALL ON TABLE zip_code_vs_delivery_charge FROM floreant;
GRANT ALL ON TABLE zip_code_vs_delivery_charge TO floreant;
GRANT SELECT ON TABLE zip_code_vs_delivery_charge TO selemti_user;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 4374 (class 0 OID 0)
-- Dependencies: 377
-- Name: vw_sesion_ventas;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_ventas FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_ventas FROM postgres;
GRANT ALL ON TABLE vw_sesion_ventas TO postgres;
GRANT SELECT ON TABLE vw_sesion_ventas TO floreant;
--
-- TOC entry 4375 (class 0 OID 0)
-- Dependencies: 374
-- Name: vw_sesion_dpr;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_dpr FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_dpr FROM postgres;
GRANT ALL ON TABLE vw_sesion_dpr TO postgres;
GRANT SELECT ON TABLE vw_sesion_dpr TO floreant;
-- Completed on 2025-09-26 03:31:51

--
-- PostgreSQL database dump complete
--
-- END Local_Recetas_25_09_2025.sql

-- BEGIN Local_Recetas_28_09_2025.sql
--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.0
-- Dumped by pg_dump version 9.5.0

-- Started on 2025-09-30 01:46:34

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
DROP DATABASE pos;
--
-- TOC entry 4240 (class 1262 OID 67811)
-- Name: pos;
Type: DATABASE;
Schema: -;
Owner: floreant
--

CREATE DATABASE pos WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'Spanish_Mexico.1252' LC_CTYPE = 'Spanish_Mexico.1252';
ALTER DATABASE pos OWNER TO floreant;
\connect pos

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
--
-- TOC entry 7 (class 2615 OID 2200)
-- Name: public;
Type: SCHEMA;
Schema: -;
ALTER SCHEMA public OWNER TO postgres;
--
-- TOC entry 4241 (class 0 OID 0)
-- Dependencies: 7
-- Name: SCHEMA public;
Type: COMMENT;
Schema: -;
Owner: postgres
--

COMMENT ON SCHEMA public IS 'standard public schema';
--
-- TOC entry 6 (class 2615 OID 67812)
-- Name: selemti;
Type: SCHEMA;
Schema: -;
ALTER SCHEMA selemti OWNER TO floreant;
--
-- TOC entry 467 (class 3079 OID 12355)
-- Name: plpgsql;
Type: EXTENSION;
Schema: -;
Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;
--
-- TOC entry 4244 (class 0 OID 0)
-- Dependencies: 467
-- Name: EXTENSION plpgsql;
Type: COMMENT;
Schema: -;
Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';
SET search_path = selemti, pg_catalog;
--
-- TOC entry 1487 (class 1247 OID 77525)
-- Name: consumo_policy;
Type: TYPE;
Schema: selemti;
ALTER TYPE consumo_policy OWNER TO postgres;
--
-- TOC entry 1505 (class 1247 OID 77583)
-- Name: merma_clase;
Type: TYPE;
Schema: selemti;
ALTER TYPE merma_clase OWNER TO postgres;
--
-- TOC entry 1484 (class 1247 OID 77513)
-- Name: producto_tipo;
Type: TYPE;
Schema: selemti;
ALTER TYPE producto_tipo OWNER TO postgres;
SET search_path = public, pg_catalog;
--
-- TOC entry 468 (class 1255 OID 67813)
-- Name: _last_assign_window(integer, integer, timestamp with time zone);
Type: FUNCTION;
Schema: public;
';
ALTER FUNCTION public._last_assign_window(_terminal_id integer, _user_id integer, _ref_time timestamp with time zone) OWNER TO postgres;
--
-- TOC entry 482 (class 1255 OID 67814)
-- Name: assign_daily_folio();
Type: FUNCTION;
Schema: public;
v_date     DATE;
v_next     INTEGER;
BEGIN
    IF NEW.terminal_id IS NULL THEN
        RAISE EXCEPTION ''No se puede crear ticket sin terminal_id'';
END IF;
IF NEW.create_date IS NULL THEN
        NEW.create_date := NOW();
END IF;
v_date := (NEW.create_date AT TIME ZONE ''America/Mexico_City'')::DATE;
SELECT COALESCE(NULLIF(UPPER(BTRIM(t.location)), ''''), '''') INTO v_branch
    FROM public.terminal t
    WHERE t.id = NEW.terminal_id;
IF NOT FOUND THEN
        RAISE EXCEPTION ''Terminal % no existe en la base de datos'', NEW.terminal_id;
END IF;
IF NEW.daily_folio IS NOT NULL AND NEW.folio_date IS NOT NULL AND NEW.branch_key IS NOT NULL THEN
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE folio_date = NEW.folio_date
            AND branch_key = NEW.branch_key
            AND daily_folio = NEW.daily_folio
            AND id != NEW.id
        ) THEN
            RAISE EXCEPTION ''Folio % ya existe para % en %'', NEW.daily_folio, NEW.branch_key, NEW.folio_date;
END IF;
RETURN NEW;
END IF;
WITH up AS (
        INSERT INTO public.daily_folio_counter (folio_date, branch_key, last_value)
        VALUES (v_date, v_branch, 1)
        ON CONFLICT (folio_date, branch_key)
        DO UPDATE SET last_value = public.daily_folio_counter.last_value + 1
        RETURNING last_value
    )
    SELECT last_value INTO v_next FROM up;
NEW.folio_date := v_date;
NEW.branch_key := v_branch;
NEW.daily_folio := v_next;
RETURN NEW;
END
';
ALTER FUNCTION public.assign_daily_folio() OWNER TO floreant;
--
-- TOC entry 494 (class 1255 OID 69478)
-- Name: fn_correct_drawer_report(date);
Type: FUNCTION;
Schema: public;
END';
ALTER FUNCTION public.fn_correct_drawer_report(report_date date) OWNER TO postgres;
--
-- TOC entry 495 (class 1255 OID 69476)
-- Name: fn_daily_reconciliation(date);
Type: FUNCTION;
Schema: public;
END';
ALTER FUNCTION public.fn_daily_reconciliation(report_date date) OWNER TO postgres;
--
-- TOC entry 493 (class 1255 OID 69477)
-- Name: fn_reconciliation_detail(date);
Type: FUNCTION;
Schema: public;
END';
ALTER FUNCTION public.fn_reconciliation_detail(report_date date) OWNER TO postgres;
--
-- TOC entry 483 (class 1255 OID 67815)
-- Name: get_daily_stats(date);
Type: FUNCTION;
Schema: public;
';
ALTER FUNCTION public.get_daily_stats(p_date date) OWNER TO floreant;
--
-- TOC entry 484 (class 1255 OID 67816)
-- Name: get_ticket_folio_info(integer);
Type: FUNCTION;
Schema: public;
';
ALTER FUNCTION public.get_ticket_folio_info(p_ticket_id integer) OWNER TO floreant;
--
-- TOC entry 485 (class 1255 OID 67817)
-- Name: kds_notify();
Type: FUNCTION;
Schema: public;
v_pg_id       INT;
v_item_id     INT;
v_status      TEXT;
v_total       INT;
v_ready       INT;
v_done        INT;
v_type        TEXT;
v_daily_folio INT;
v_branch_key  TEXT;
v_folio_fmt   TEXT;
BEGIN
    IF TG_TABLE_NAME = ''kitchen_ticket_item'' THEN
        IF NEW.ticket_item_id IS NULL THEN
            RAISE EXCEPTION ''ticket_item_id no puede ser NULL en kitchen_ticket_item'';
END IF;
v_item_id := NEW.ticket_item_id;
SELECT ti.ticket_id, ti.pg_id INTO v_ticket_id, v_pg_id
        FROM ticket_item ti WHERE ti.id = v_item_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket_item % no existe'', v_item_id;
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket % no existe'', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, ''0'');
v_status := UPPER(COALESCE(NEW.status, ''''));
v_type := CASE WHEN TG_OP = ''INSERT'' THEN ''item_upsert'' ELSE ''item_status'' END;
PERFORM pg_notify(
            ''kds_event'',
            json_build_object(
                ''type'',        v_type,
                ''ticket_id'',   v_ticket_id,
                ''pg'',          v_pg_id,
                ''item_id'',     v_item_id,
                ''status'',      v_status,
                ''daily_folio'', v_daily_folio,
                ''branch_key'',  v_branch_key,
                ''folio_fmt'',   v_folio_fmt,
                ''ts'',          NOW()
            )::TEXT
        );
ELSIF TG_TABLE_NAME = ''ticket_item'' THEN
        v_item_id := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id := NEW.pg_id;
IF v_ticket_id IS NULL THEN
            RAISE EXCEPTION ''ticket_id no puede ser NULL en ticket_item'';
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION ''ticket % no existe'', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, ''0'');
v_status := UPPER(COALESCE(NEW.status, ''''));
v_type := CASE WHEN TG_OP = ''INSERT'' THEN ''item_insert'' ELSE ''item_status'' END;
PERFORM pg_notify(
            ''kds_event'',
            json_build_object(
                ''type'',        v_type,
                ''ticket_id'',   v_ticket_id,
                ''pg'',          v_pg_id,
                ''item_id'',     v_item_id,
                ''status'',      v_status,
                ''daily_folio'', v_daily_folio,
                ''branch_key'',  v_branch_key,
                ''folio_fmt'',   v_folio_fmt,
                ''ts'',          NOW()
            )::TEXT
        );
END IF;
IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
        WITH s AS (
            SELECT
                ti.id AS item_id,
                UPPER(COALESCE(kti.status, ti.status, '''')) AS st
            FROM ticket_item ti
            LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
            WHERE ti.ticket_id = v_ticket_id AND ti.pg_id = v_pg_id
            GROUP BY ti.id, st
        )
        SELECT
            COUNT(DISTINCT item_id) AS total,
            COUNT(DISTINCT item_id) FILTER (WHERE st IN (''READY'', ''DONE'')) AS ready,
            COUNT(DISTINCT item_id) FILTER (WHERE st = ''DONE'') AS done
        INTO v_total, v_ready, v_done
        FROM s;
IF v_total > 0 AND v_total = v_ready THEN
            PERFORM pg_notify(
                ''kds_event'',
                json_build_object(
                    ''type'',        ''ticket_all_ready'',
                    ''ticket_id'',   v_ticket_id,
                    ''pg'',          v_pg_id,
                    ''daily_folio'', v_daily_folio,
                    ''branch_key'',  v_branch_key,
                    ''folio_fmt'',   v_folio_fmt,
                    ''ts'',          NOW()
                )::TEXT
            );
END IF;
IF v_total > 0 AND v_total = v_done THEN
            PERFORM pg_notify(
                ''kds_event'',
                json_build_object(
                    ''type'',        ''ticket_all_done'',
                    ''ticket_id'',   v_ticket_id,
                    ''pg'',          v_pg_id,
                    ''daily_folio'', v_daily_folio,
                    ''branch_key'',  v_branch_key,
                    ''folio_fmt'',   v_folio_fmt,
                    ''ts'',          NOW()
                )::TEXT
            );
END IF;
END IF;
RETURN NEW;
END;
';
ALTER FUNCTION public.kds_notify() OWNER TO floreant;
--
-- TOC entry 486 (class 1255 OID 67818)
-- Name: reset_daily_folio_smart(text);
Type: FUNCTION;
Schema: public;
v_branch TEXT;
v_has_rows BOOLEAN;
BEGIN
    SELECT EXISTS (
        SELECT 1 FROM public.daily_folio_counter
        WHERE folio_date = v_current_date
        AND (p_branch IS NULL OR branch_key = UPPER(BTRIM(p_branch)))
    ) INTO v_has_rows;
IF NOT v_has_rows THEN
        branch_reset := ''none'';
tickets_affected := 0;
RETURN NEXT;
RETURN;
END IF;
FOR v_branch IN
        SELECT DISTINCT
            CASE
                WHEN p_branch IS NULL THEN dfc.branch_key
                ELSE UPPER(BTRIM(p_branch))
            END
        FROM public.daily_folio_counter dfc
        WHERE dfc.folio_date = v_current_date
        AND (p_branch IS NULL OR dfc.branch_key = UPPER(BTRIM(p_branch)))
    LOOP
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE branch_key = v_branch
            AND folio_date = v_current_date
        ) THEN
            RAISE NOTICE ''ADVERTENCIA: Sucursal % ya tiene % tickets hoy - NO reseteable'',
                v_branch,
                (SELECT COUNT(*) FROM public.ticket WHERE branch_key = v_branch AND folio_date = v_current_date);
CONTINUE;
END IF;
DELETE FROM public.daily_folio_counter
        WHERE branch_key = v_branch AND folio_date = v_current_date;
branch_reset := v_branch;
tickets_affected := 0;
RETURN NEXT;
END LOOP;
RETURN;
END
';
ALTER FUNCTION public.reset_daily_folio_smart(p_branch text) OWNER TO floreant;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 498 (class 1255 OID 77664)
-- Name: cerrar_lote_preparado(bigint, merma_clase, text, integer, integer);
Type: FUNCTION;
Schema: selemti;
v_qty_disponible NUMERIC(14,6);
v_mov_id BIGINT;
BEGIN
    SELECT b.item_id, b.cantidad_actual
    INTO v_item_id, v_qty_disponible
    FROM selemti.inventory_batch b
    WHERE b.id = p_lote_id;
IF v_item_id IS NULL THEN
        RAISE EXCEPTION ''Lote % no existe'', p_lote_id;
END IF;
IF v_qty_disponible IS NULL OR v_qty_disponible <= 0 THEN
        RETURN 0;
END IF;
INSERT INTO selemti.mov_inv (ts, item_id, lote_id, cantidad, tipo, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, 0 - v_qty_disponible, ''MERMA'', ''CIERRE_PREP'', p_lote_id)
    RETURNING id INTO v_mov_id;
INSERT INTO selemti.perdida_log (ts, item_id, lote_id, clase, motivo, qty_canonica, usuario_id, ref_tipo, ref_id)
    VALUES (now(), v_item_id, p_lote_id, p_clase, p_motivo, v_qty_disponible, p_usuario_id, ''CIERRE_PREP'', v_mov_id);
RETURN v_mov_id;
END;
';
ALTER FUNCTION selemti.cerrar_lote_preparado(p_lote_id bigint, p_clase merma_clase, p_motivo text, p_usuario_id integer, p_uom_id integer) OWNER TO postgres;
--
-- TOC entry 487 (class 1255 OID 67819)
-- Name: fn_dah_after_insert();
Type: FUNCTION;
Schema: selemti;
BEGIN
  IF NEW.operation = ''ASIGNAR'' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
IF v_term IS NULL THEN
      INSERT INTO selemti.auditoria(quien,que,payload)
      VALUES(NEW.a_user,''NO_SE_PUDO_RESOLVER_TERMINAL'',
             jsonb_build_object(''dah_id'',NEW.id,''operation'',NEW.operation,''time'',NEW."time"));
RETURN NEW;
END IF;
INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id
    ) VALUES (
      v_term.id, COALESCE(v_term.name,''Terminal ''||v_term.id), COALESCE(v_term.location,''''),
      NEW.a_user, COALESCE(NEW."time", now()), ''ACTIVA'', COALESCE(v_term.current_balance,0), NEW.id
    );
ELSIF NEW.operation = ''CERRAR'' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
UPDATE selemti.sesion_cajon
       SET cierre_ts     = COALESCE(NEW."time", now()),
           estatus       = ''LISTO_PARA_CORTE'',
           closing_float = COALESCE(v_term.current_balance,0),
           dah_evento_id = COALESCE(dah_evento_id, NEW.id)
     WHERE terminal_id = COALESCE(v_term.id, terminal_id)
       AND cajero_usuario_id = NEW.a_user
       AND cierre_ts IS NULL;
END IF;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_dah_after_insert() OWNER TO floreant;
--
-- TOC entry 488 (class 1255 OID 67820)
-- Name: fn_normalizar_forma_pago(text, text, text, text);
Type: FUNCTION;
Schema: selemti;
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN (''CASH'',''CREDIT'',''DEBIT'',''TRANSFER'') THEN
    RETURN pt;
ELSIF pt = ''CUSTOM_PAYMENT'' THEN
    IF cn IS NOT NULL THEN RETURN ''CUSTOM:''||cn;
ELSE RETURN ''CUSTOM'';
END IF;
ELSIF pt IN (''REFUND'',''PAY_OUT'',''CASH_DROP'') THEN
    RETURN pt;
-- egresos/ajustes estandarizados
  ELSE
    RETURN pt;
END IF;
END ';
ALTER FUNCTION selemti.fn_normalizar_forma_pago(p_payment_type text, p_transaction_type text, p_payment_sub_type text, p_custom_name text) OWNER TO floreant;
--
-- TOC entry 481 (class 1255 OID 67821)
-- Name: fn_precorte_efectivo_bi();
Type: FUNCTION;
Schema: selemti;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_precorte_efectivo_bi() OWNER TO floreant;
--
-- TOC entry 489 (class 1255 OID 67822)
-- Name: fn_reparar_sesion_apertura(integer, integer);
Type: FUNCTION;
Schema: selemti;
BEGIN
  IF EXISTS (
    SELECT 1 FROM selemti.sesion_cajon
    WHERE terminal_id=p_terminal_id AND cajero_usuario_id=p_usuario AND cierre_ts IS NULL
  ) THEN
    RETURN ''YA_EXISTE_SESION_ABIERTA'';
END IF;
SELECT * INTO v_term FROM public.terminal WHERE id=p_terminal_id;
IF v_term IS NULL THEN RETURN ''TERMINAL_NO_ENCONTRADA'';
END IF;
INSERT INTO selemti.sesion_cajon(
    terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
    apertura_ts, estatus, opening_float
  ) VALUES (
    p_terminal_id, COALESCE(v_term.name,''Terminal ''||p_terminal_id), COALESCE(v_term.location,''''),
    p_usuario, now(), ''ACTIVA'', COALESCE(v_term.current_balance,0)
  );
RETURN ''CREADA'';
END ';
ALTER FUNCTION selemti.fn_reparar_sesion_apertura(p_terminal_id integer, p_usuario integer) OWNER TO floreant;
--
-- TOC entry 490 (class 1255 OID 67823)
-- Name: fn_slug(text);
Type: FUNCTION;
Schema: selemti;
BEGIN
  s := translate(s, ''ÁÉÍÓÚÜÑáéíóúüñ'', ''AEIOUUNaeiouun'');
s := regexp_replace(s, ''[^a-z0-9]+'', ''-'', ''g'');
s := regexp_replace(s, ''(^-|-$)'', '''', ''g'');
IF s = '''' THEN RETURN NULL;
END IF;
RETURN s;
END ';
ALTER FUNCTION selemti.fn_slug(in_text text) OWNER TO floreant;
--
-- TOC entry 491 (class 1255 OID 67824)
-- Name: fn_terminal_bu_snapshot_cierre();
Type: FUNCTION;
Schema: selemti;
v_has_new boolean := (NEW.assigned_user IS NOT NULL);
BEGIN
  /* CIERRE: había cajero y ahora ya no */
  IF (v_has_old AND NOT v_has_new) THEN
    UPDATE selemti.sesion_cajon AS sc
       SET cierre_ts      = now(),
           estatus        = ''LISTO_PARA_CORTE'',
           closing_float  = COALESCE(OLD.current_balance, 0),
           -- bandera: true si NO hubo precorte para esta sesión
           skipped_precorte = NOT EXISTS (
             SELECT 1
             FROM selemti.precorte p
             WHERE p.sesion_id = sc.id
           )
     WHERE sc.terminal_id       = OLD.id
       AND sc.cajero_usuario_id = OLD.assigned_user
       AND sc.cierre_ts         IS NULL;
END IF;
/* APERTURA: no había cajero y ahora sí */
  IF (NOT v_has_old AND v_has_new) THEN
    INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id, skipped_precorte
    )
    VALUES(
      NEW.id,
      COALESCE(NEW.name, ''Terminal ''||NEW.id),
      COALESCE(NEW.location, ''''),
      NEW.assigned_user,
      now(),
      ''ACTIVA'',
      COALESCE(NEW.current_balance, 0),
      NULL,
      FALSE  -- por defecto, en apertura no está saltado
    );
END IF;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_terminal_bu_snapshot_cierre() OWNER TO floreant;
--
-- TOC entry 492 (class 1255 OID 67825)
-- Name: fn_tx_after_insert_forma_pago();
Type: FUNCTION;
Schema: selemti;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
    NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name
  );
INSERT INTO selemti.formas_pago(
    codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref
  )
  VALUES (
    v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref
  )
  ON CONFLICT DO NOTHING;
RETURN NEW;
END ';
ALTER FUNCTION selemti.fn_tx_after_insert_forma_pago() OWNER TO floreant;
--
-- TOC entry 497 (class 1255 OID 77663)
-- Name: inferir_recetas_de_ventas(date, date);
Type: FUNCTION;
Schema: selemti;
v_plato_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
FOR v_plato_record IN 
        SELECT DISTINCT td.item_id, COUNT(*) as total_ventas
        FROM selemti.ticket_venta_det td
        JOIN selemti.ticket_venta_cab tc ON td.ticket_id = tc.id
        WHERE tc.fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta
          AND td.receta_shadow_id IS NULL
        GROUP BY td.item_id
        HAVING COUNT(*) >= 5
    LOOP
        INSERT INTO selemti.receta_shadow (codigo_plato_pos, nombre_plato, total_ventas_analizadas, fecha_primer_venta, fecha_ultima_venta)
        VALUES (v_plato_record.item_id, ''Inferida_'' || v_plato_record.item_id, v_plato_record.total_ventas, p_fecha_desde, p_fecha_hasta);
UPDATE selemti.ticket_venta_det
        SET receta_shadow_id = currval(''selemti.receta_shadow_id_seq''), reprocesado = TRUE, version_reproceso = 1
        WHERE item_id = v_plato_record.item_id
          AND ticket_id IN (SELECT id FROM selemti.ticket_venta_cab WHERE fecha_venta BETWEEN p_fecha_desde AND p_fecha_hasta);
v_recetas_inferidas := v_recetas_inferidas + 1;
END LOOP;
RETURN v_recetas_inferidas;
END;
';
ALTER FUNCTION selemti.inferir_recetas_de_ventas(p_fecha_desde date, p_fecha_hasta date) OWNER TO postgres;
--
-- TOC entry 499 (class 1255 OID 77999)
-- Name: registrar_consumo_porcionado(bigint, bigint, text, numeric, json);
Type: FUNCTION;
Schema: selemti;
v_count INT := 0;
BEGIN
  FOR r IN SELECT * FROM json_array_elements(p_distribucion)
  LOOP
    INSERT INTO selemti.ticket_det_consumo(
      ticket_id, ticket_det_id, item_id, lote_id, qty_canonica, ref_tipo, ref_id
    )
    VALUES (
      p_ticket_id, p_ticket_det_id, p_item_id, NULL,
      (r->>''qty_ml'')::NUMERIC,
      ''PORCION'', p_ticket_det_id
    );
v_count := v_count + 1;
END LOOP;
RETURN v_count;
END;
';
ALTER FUNCTION selemti.registrar_consumo_porcionado(p_ticket_id bigint, p_ticket_det_id bigint, p_item_id text, p_qty_total numeric, p_distribucion json) OWNER TO postgres;
--
-- TOC entry 496 (class 1255 OID 77662)
-- Name: reprocesar_costos_historicos(date, date, character varying, integer);
Type: FUNCTION;
Schema: selemti;
v_total_actualizados INTEGER := 0;
v_item_record RECORD;
BEGIN
    IF p_fecha_hasta IS NULL THEN
        p_fecha_hasta := CURRENT_DATE;
END IF;
INSERT INTO selemti.job_recalc_queue (scope_type, scope_from, scope_to, reason, status)
    VALUES (''PERIODO'', p_fecha_desde, p_fecha_hasta, ''Reproceso costos '' || p_algoritmo, ''RUNNING'')
    RETURNING id INTO v_lote_id;
FOR v_item_record IN 
        SELECT DISTINCT item_id 
        FROM selemti.mov_inv 
        WHERE ts BETWEEN p_fecha_desde AND p_fecha_hasta
    LOOP
        UPDATE selemti.historial_costos_item
        SET costo_wac = (
            SELECT AVG(costo_unit * cantidad) / NULLIF(SUM(cantidad), 0)
            FROM selemti.mov_inv 
            WHERE item_id = v_item_record.item_id 
            AND ts BETWEEN p_fecha_desde AND p_fecha_hasta 
            AND tipo IN (''COMPRA'', ''RECEPCION'')
        )
        WHERE item_id = v_item_record.item_id AND fecha_efectiva BETWEEN p_fecha_desde AND p_fecha_hasta;
v_total_actualizados := v_total_actualizados + 1;
END LOOP;
UPDATE selemti.job_recalc_queue 
    SET status = ''DONE'', 
        result = (''{"actualizados": '' || v_total_actualizados || ''}'')::json
    WHERE id = v_lote_id;
RETURN v_total_actualizados;
EXCEPTION
    WHEN OTHERS THEN
        UPDATE selemti.job_recalc_queue 
        SET status = ''FAILED'', 
            result = (''{"error": "'' || REPLACE(SQLERRM, ''"'', ''\"'') || ''"}'')::json
        WHERE id = v_lote_id;
RAISE;
END;
';
ALTER FUNCTION selemti.reprocesar_costos_historicos(p_fecha_desde date, p_fecha_hasta date, p_algoritmo character varying, p_usuario_id integer) OWNER TO postgres;
SET search_path = public, pg_catalog;
SET default_tablespace = '';
SET default_with_oids = false;
--
-- TOC entry 181 (class 1259 OID 67826)
-- Name: action_history;
Type: TABLE;
Schema: public;
ALTER TABLE action_history OWNER TO floreant;
--
-- TOC entry 182 (class 1259 OID 67832)
-- Name: action_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE action_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE action_history_id_seq OWNER TO floreant;
--
-- TOC entry 4246 (class 0 OID 0)
-- Dependencies: 182
-- Name: action_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE action_history_id_seq OWNED BY action_history.id;
--
-- TOC entry 183 (class 1259 OID 67834)
-- Name: attendence_history;
Type: TABLE;
Schema: public;
ALTER TABLE attendence_history OWNER TO floreant;
--
-- TOC entry 184 (class 1259 OID 67837)
-- Name: attendence_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE attendence_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE attendence_history_id_seq OWNER TO floreant;
--
-- TOC entry 4248 (class 0 OID 0)
-- Dependencies: 184
-- Name: attendence_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE attendence_history_id_seq OWNED BY attendence_history.id;
--
-- TOC entry 185 (class 1259 OID 67839)
-- Name: cash_drawer;
Type: TABLE;
Schema: public;
ALTER TABLE cash_drawer OWNER TO floreant;
--
-- TOC entry 186 (class 1259 OID 67842)
-- Name: cash_drawer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_id_seq OWNER TO floreant;
--
-- TOC entry 4250 (class 0 OID 0)
-- Dependencies: 186
-- Name: cash_drawer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_id_seq OWNED BY cash_drawer.id;
--
-- TOC entry 187 (class 1259 OID 67844)
-- Name: cash_drawer_reset_history;
Type: TABLE;
Schema: public;
ALTER TABLE cash_drawer_reset_history OWNER TO floreant;
--
-- TOC entry 188 (class 1259 OID 67847)
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_reset_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_reset_history_id_seq OWNER TO floreant;
--
-- TOC entry 4252 (class 0 OID 0)
-- Dependencies: 188
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_reset_history_id_seq OWNED BY cash_drawer_reset_history.id;
--
-- TOC entry 189 (class 1259 OID 67849)
-- Name: cooking_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE cooking_instruction OWNER TO floreant;
--
-- TOC entry 190 (class 1259 OID 67852)
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cooking_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cooking_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 4254 (class 0 OID 0)
-- Dependencies: 190
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cooking_instruction_id_seq OWNED BY cooking_instruction.id;
--
-- TOC entry 191 (class 1259 OID 67854)
-- Name: coupon_and_discount;
Type: TABLE;
Schema: public;
ALTER TABLE coupon_and_discount OWNER TO floreant;
--
-- TOC entry 192 (class 1259 OID 67857)
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE coupon_and_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE coupon_and_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4256 (class 0 OID 0)
-- Dependencies: 192
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE coupon_and_discount_id_seq OWNED BY coupon_and_discount.id;
--
-- TOC entry 193 (class 1259 OID 67859)
-- Name: currency;
Type: TABLE;
Schema: public;
ALTER TABLE currency OWNER TO floreant;
--
-- TOC entry 194 (class 1259 OID 67862)
-- Name: currency_balance;
Type: TABLE;
Schema: public;
ALTER TABLE currency_balance OWNER TO floreant;
--
-- TOC entry 195 (class 1259 OID 67865)
-- Name: currency_balance_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_balance_id_seq OWNER TO floreant;
--
-- TOC entry 4259 (class 0 OID 0)
-- Dependencies: 195
-- Name: currency_balance_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_balance_id_seq OWNED BY currency_balance.id;
--
-- TOC entry 196 (class 1259 OID 67867)
-- Name: currency_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_id_seq OWNER TO floreant;
--
-- TOC entry 4260 (class 0 OID 0)
-- Dependencies: 196
-- Name: currency_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_id_seq OWNED BY currency.id;
--
-- TOC entry 197 (class 1259 OID 67869)
-- Name: custom_payment;
Type: TABLE;
Schema: public;
ALTER TABLE custom_payment OWNER TO floreant;
--
-- TOC entry 198 (class 1259 OID 67872)
-- Name: custom_payment_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE custom_payment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE custom_payment_id_seq OWNER TO floreant;
--
-- TOC entry 4262 (class 0 OID 0)
-- Dependencies: 198
-- Name: custom_payment_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE custom_payment_id_seq OWNED BY custom_payment.id;
--
-- TOC entry 199 (class 1259 OID 67874)
-- Name: customer;
Type: TABLE;
Schema: public;
ALTER TABLE customer OWNER TO floreant;
--
-- TOC entry 200 (class 1259 OID 67880)
-- Name: customer_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE customer_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE customer_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4264 (class 0 OID 0)
-- Dependencies: 200
-- Name: customer_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE customer_auto_id_seq OWNED BY customer.auto_id;
--
-- TOC entry 201 (class 1259 OID 67882)
-- Name: customer_properties;
Type: TABLE;
Schema: public;
ALTER TABLE customer_properties OWNER TO floreant;
--
-- TOC entry 202 (class 1259 OID 67888)
-- Name: daily_folio_counter;
Type: TABLE;
Schema: public;
ALTER TABLE daily_folio_counter OWNER TO floreant;
--
-- TOC entry 203 (class 1259 OID 67895)
-- Name: data_update_info;
Type: TABLE;
Schema: public;
ALTER TABLE data_update_info OWNER TO floreant;
--
-- TOC entry 204 (class 1259 OID 67898)
-- Name: data_update_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE data_update_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE data_update_info_id_seq OWNER TO floreant;
--
-- TOC entry 4268 (class 0 OID 0)
-- Dependencies: 204
-- Name: data_update_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE data_update_info_id_seq OWNED BY data_update_info.id;
--
-- TOC entry 205 (class 1259 OID 67900)
-- Name: delivery_address;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_address OWNER TO floreant;
--
-- TOC entry 206 (class 1259 OID 67903)
-- Name: delivery_address_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_address_id_seq OWNER TO floreant;
--
-- TOC entry 4270 (class 0 OID 0)
-- Dependencies: 206
-- Name: delivery_address_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_address_id_seq OWNED BY delivery_address.id;
--
-- TOC entry 207 (class 1259 OID 67905)
-- Name: delivery_charge;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_charge OWNER TO floreant;
--
-- TOC entry 208 (class 1259 OID 67908)
-- Name: delivery_charge_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_charge_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_charge_id_seq OWNER TO floreant;
--
-- TOC entry 4272 (class 0 OID 0)
-- Dependencies: 208
-- Name: delivery_charge_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_charge_id_seq OWNED BY delivery_charge.id;
--
-- TOC entry 209 (class 1259 OID 67910)
-- Name: delivery_configuration;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_configuration OWNER TO floreant;
--
-- TOC entry 210 (class 1259 OID 67913)
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_configuration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_configuration_id_seq OWNER TO floreant;
--
-- TOC entry 4274 (class 0 OID 0)
-- Dependencies: 210
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_configuration_id_seq OWNED BY delivery_configuration.id;
--
-- TOC entry 211 (class 1259 OID 67915)
-- Name: delivery_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_instruction OWNER TO floreant;
--
-- TOC entry 212 (class 1259 OID 67918)
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 4276 (class 0 OID 0)
-- Dependencies: 212
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_instruction_id_seq OWNED BY delivery_instruction.id;
--
-- TOC entry 213 (class 1259 OID 67920)
-- Name: drawer_assigned_history;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_assigned_history OWNER TO floreant;
--
-- TOC entry 214 (class 1259 OID 67923)
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_assigned_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_assigned_history_id_seq OWNER TO floreant;
--
-- TOC entry 4278 (class 0 OID 0)
-- Dependencies: 214
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_assigned_history_id_seq OWNED BY drawer_assigned_history.id;
--
-- TOC entry 215 (class 1259 OID 67925)
-- Name: drawer_pull_report;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_pull_report OWNER TO floreant;
--
-- TOC entry 216 (class 1259 OID 67928)
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_pull_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_pull_report_id_seq OWNER TO floreant;
--
-- TOC entry 4280 (class 0 OID 0)
-- Dependencies: 216
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_pull_report_id_seq OWNED BY drawer_pull_report.id;
--
-- TOC entry 217 (class 1259 OID 67930)
-- Name: drawer_pull_report_voidtickets;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_pull_report_voidtickets OWNER TO floreant;
--
-- TOC entry 218 (class 1259 OID 67936)
-- Name: employee_in_out_history;
Type: TABLE;
Schema: public;
ALTER TABLE employee_in_out_history OWNER TO floreant;
--
-- TOC entry 219 (class 1259 OID 67939)
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE employee_in_out_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE employee_in_out_history_id_seq OWNER TO floreant;
--
-- TOC entry 4283 (class 0 OID 0)
-- Dependencies: 219
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE employee_in_out_history_id_seq OWNED BY employee_in_out_history.id;
--
-- TOC entry 220 (class 1259 OID 67941)
-- Name: global_config;
Type: TABLE;
Schema: public;
ALTER TABLE global_config OWNER TO floreant;
--
-- TOC entry 221 (class 1259 OID 67944)
-- Name: global_config_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE global_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE global_config_id_seq OWNER TO floreant;
--
-- TOC entry 4285 (class 0 OID 0)
-- Dependencies: 221
-- Name: global_config_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE global_config_id_seq OWNED BY global_config.id;
--
-- TOC entry 222 (class 1259 OID 67946)
-- Name: gratuity;
Type: TABLE;
Schema: public;
ALTER TABLE gratuity OWNER TO floreant;
--
-- TOC entry 223 (class 1259 OID 67949)
-- Name: gratuity_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE gratuity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE gratuity_id_seq OWNER TO floreant;
--
-- TOC entry 4287 (class 0 OID 0)
-- Dependencies: 223
-- Name: gratuity_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE gratuity_id_seq OWNED BY gratuity.id;
--
-- TOC entry 224 (class 1259 OID 67951)
-- Name: group_taxes;
Type: TABLE;
Schema: public;
ALTER TABLE group_taxes OWNER TO floreant;
--
-- TOC entry 225 (class 1259 OID 67954)
-- Name: guest_check_print;
Type: TABLE;
Schema: public;
ALTER TABLE guest_check_print OWNER TO floreant;
--
-- TOC entry 226 (class 1259 OID 67957)
-- Name: guest_check_print_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE guest_check_print_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE guest_check_print_id_seq OWNER TO floreant;
--
-- TOC entry 4290 (class 0 OID 0)
-- Dependencies: 226
-- Name: guest_check_print_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE guest_check_print_id_seq OWNED BY guest_check_print.id;
--
-- TOC entry 227 (class 1259 OID 67959)
-- Name: inventory_group;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_group OWNER TO floreant;
--
-- TOC entry 228 (class 1259 OID 67962)
-- Name: inventory_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_group_id_seq OWNER TO floreant;
--
-- TOC entry 4292 (class 0 OID 0)
-- Dependencies: 228
-- Name: inventory_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_group_id_seq OWNED BY inventory_group.id;
--
-- TOC entry 229 (class 1259 OID 67964)
-- Name: inventory_item;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_item OWNER TO floreant;
--
-- TOC entry 230 (class 1259 OID 67967)
-- Name: inventory_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_item_id_seq OWNER TO floreant;
--
-- TOC entry 4294 (class 0 OID 0)
-- Dependencies: 230
-- Name: inventory_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_item_id_seq OWNED BY inventory_item.id;
--
-- TOC entry 231 (class 1259 OID 67969)
-- Name: inventory_location;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_location OWNER TO floreant;
--
-- TOC entry 232 (class 1259 OID 67972)
-- Name: inventory_location_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_location_id_seq OWNER TO floreant;
--
-- TOC entry 4296 (class 0 OID 0)
-- Dependencies: 232
-- Name: inventory_location_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_location_id_seq OWNED BY inventory_location.id;
--
-- TOC entry 233 (class 1259 OID 67974)
-- Name: inventory_meta_code;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_meta_code OWNER TO floreant;
--
-- TOC entry 234 (class 1259 OID 67980)
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_meta_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_meta_code_id_seq OWNER TO floreant;
--
-- TOC entry 4298 (class 0 OID 0)
-- Dependencies: 234
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_meta_code_id_seq OWNED BY inventory_meta_code.id;
--
-- TOC entry 235 (class 1259 OID 67982)
-- Name: inventory_transaction;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_transaction OWNER TO floreant;
--
-- TOC entry 236 (class 1259 OID 67985)
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_transaction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_transaction_id_seq OWNER TO floreant;
--
-- TOC entry 4300 (class 0 OID 0)
-- Dependencies: 236
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_transaction_id_seq OWNED BY inventory_transaction.id;
--
-- TOC entry 237 (class 1259 OID 67987)
-- Name: inventory_unit;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_unit OWNER TO floreant;
--
-- TOC entry 238 (class 1259 OID 67993)
-- Name: inventory_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_unit_id_seq OWNER TO floreant;
--
-- TOC entry 4302 (class 0 OID 0)
-- Dependencies: 238
-- Name: inventory_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_unit_id_seq OWNED BY inventory_unit.id;
--
-- TOC entry 239 (class 1259 OID 67995)
-- Name: inventory_vendor;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_vendor OWNER TO floreant;
--
-- TOC entry 240 (class 1259 OID 68001)
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_vendor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_vendor_id_seq OWNER TO floreant;
--
-- TOC entry 4304 (class 0 OID 0)
-- Dependencies: 240
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_vendor_id_seq OWNED BY inventory_vendor.id;
--
-- TOC entry 241 (class 1259 OID 68003)
-- Name: inventory_warehouse;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_warehouse OWNER TO floreant;
--
-- TOC entry 242 (class 1259 OID 68006)
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_warehouse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_warehouse_id_seq OWNER TO floreant;
--
-- TOC entry 4306 (class 0 OID 0)
-- Dependencies: 242
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_warehouse_id_seq OWNED BY inventory_warehouse.id;
--
-- TOC entry 243 (class 1259 OID 68008)
-- Name: item_order_type;
Type: TABLE;
Schema: public;
ALTER TABLE item_order_type OWNER TO floreant;
--
-- TOC entry 244 (class 1259 OID 68011)
-- Name: kitchen_ticket;
Type: TABLE;
Schema: public;
ALTER TABLE kitchen_ticket OWNER TO floreant;
--
-- TOC entry 245 (class 1259 OID 68014)
-- Name: terminal;
Type: TABLE;
Schema: public;
ALTER TABLE terminal OWNER TO floreant;
--
-- TOC entry 246 (class 1259 OID 68020)
-- Name: ticket;
Type: TABLE;
Schema: public;
ALTER TABLE ticket OWNER TO floreant;
--
-- TOC entry 247 (class 1259 OID 68027)
-- Name: kds_orders_enhanced;
Type: VIEW;
Schema: public;
ALTER TABLE kds_orders_enhanced OWNER TO floreant;
--
-- TOC entry 248 (class 1259 OID 68032)
-- Name: kds_ready_log;
Type: TABLE;
Schema: public;
ALTER TABLE kds_ready_log OWNER TO floreant;
--
-- TOC entry 249 (class 1259 OID 68036)
-- Name: kit_ticket_table_num;
Type: TABLE;
Schema: public;
ALTER TABLE kit_ticket_table_num OWNER TO floreant;
--
-- TOC entry 250 (class 1259 OID 68039)
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_id_seq OWNER TO floreant;
--
-- TOC entry 4314 (class 0 OID 0)
-- Dependencies: 250
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_id_seq OWNED BY kitchen_ticket.id;
--
-- TOC entry 251 (class 1259 OID 68041)
-- Name: kitchen_ticket_item;
Type: TABLE;
Schema: public;
ALTER TABLE kitchen_ticket_item OWNER TO floreant;
--
-- TOC entry 252 (class 1259 OID 68047)
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 4316 (class 0 OID 0)
-- Dependencies: 252
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_item_id_seq OWNED BY kitchen_ticket_item.id;
--
-- TOC entry 253 (class 1259 OID 68049)
-- Name: menu_category;
Type: TABLE;
Schema: public;
ALTER TABLE menu_category OWNER TO floreant;
--
-- TOC entry 254 (class 1259 OID 68052)
-- Name: menu_category_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_category_id_seq OWNER TO floreant;
--
-- TOC entry 4318 (class 0 OID 0)
-- Dependencies: 254
-- Name: menu_category_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_category_id_seq OWNED BY menu_category.id;
--
-- TOC entry 255 (class 1259 OID 68054)
-- Name: menu_group;
Type: TABLE;
Schema: public;
ALTER TABLE menu_group OWNER TO floreant;
--
-- TOC entry 256 (class 1259 OID 68057)
-- Name: menu_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_group_id_seq OWNER TO floreant;
--
-- TOC entry 4320 (class 0 OID 0)
-- Dependencies: 256
-- Name: menu_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_group_id_seq OWNED BY menu_group.id;
--
-- TOC entry 257 (class 1259 OID 68059)
-- Name: menu_item;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item OWNER TO floreant;
--
-- TOC entry 258 (class 1259 OID 68065)
-- Name: menu_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_id_seq OWNER TO floreant;
--
-- TOC entry 4322 (class 0 OID 0)
-- Dependencies: 258
-- Name: menu_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_id_seq OWNED BY menu_item.id;
--
-- TOC entry 259 (class 1259 OID 68067)
-- Name: menu_item_properties;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_properties OWNER TO floreant;
--
-- TOC entry 260 (class 1259 OID 68070)
-- Name: menu_item_size;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_size OWNER TO floreant;
--
-- TOC entry 261 (class 1259 OID 68073)
-- Name: menu_item_size_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_size_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_size_id_seq OWNER TO floreant;
--
-- TOC entry 4325 (class 0 OID 0)
-- Dependencies: 261
-- Name: menu_item_size_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_size_id_seq OWNED BY menu_item_size.id;
--
-- TOC entry 262 (class 1259 OID 68075)
-- Name: menu_item_terminal_ref;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_terminal_ref OWNER TO floreant;
--
-- TOC entry 263 (class 1259 OID 68078)
-- Name: menu_modifier;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier OWNER TO floreant;
--
-- TOC entry 264 (class 1259 OID 68081)
-- Name: menu_modifier_group;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier_group OWNER TO floreant;
--
-- TOC entry 265 (class 1259 OID 68084)
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_group_id_seq OWNER TO floreant;
--
-- TOC entry 4329 (class 0 OID 0)
-- Dependencies: 265
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_group_id_seq OWNED BY menu_modifier_group.id;
--
-- TOC entry 266 (class 1259 OID 68086)
-- Name: menu_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 4330 (class 0 OID 0)
-- Dependencies: 266
-- Name: menu_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_id_seq OWNED BY menu_modifier.id;
--
-- TOC entry 267 (class 1259 OID 68088)
-- Name: menu_modifier_properties;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier_properties OWNER TO floreant;
--
-- TOC entry 268 (class 1259 OID 68091)
-- Name: menucategory_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menucategory_discount OWNER TO floreant;
--
-- TOC entry 269 (class 1259 OID 68094)
-- Name: menugroup_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menugroup_discount OWNER TO floreant;
--
-- TOC entry 270 (class 1259 OID 68097)
-- Name: menuitem_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_discount OWNER TO floreant;
--
-- TOC entry 271 (class 1259 OID 68100)
-- Name: menuitem_modifiergroup;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_modifiergroup OWNER TO floreant;
--
-- TOC entry 272 (class 1259 OID 68103)
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_modifiergroup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_modifiergroup_id_seq OWNER TO floreant;
--
-- TOC entry 4336 (class 0 OID 0)
-- Dependencies: 272
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_modifiergroup_id_seq OWNED BY menuitem_modifiergroup.id;
--
-- TOC entry 273 (class 1259 OID 68105)
-- Name: menuitem_pizzapirce;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_pizzapirce OWNER TO floreant;
--
-- TOC entry 274 (class 1259 OID 68108)
-- Name: menuitem_shift;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_shift OWNER TO floreant;
--
-- TOC entry 275 (class 1259 OID 68111)
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_shift_id_seq OWNER TO floreant;
--
-- TOC entry 4339 (class 0 OID 0)
-- Dependencies: 275
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_shift_id_seq OWNED BY menuitem_shift.id;
--
-- TOC entry 276 (class 1259 OID 68113)
-- Name: menumodifier_pizzamodifierprice;
Type: TABLE;
Schema: public;
ALTER TABLE menumodifier_pizzamodifierprice OWNER TO floreant;
--
-- TOC entry 389 (class 1259 OID 73602)
-- Name: migrations;
Type: TABLE;
Schema: public;
ALTER TABLE migrations OWNER TO postgres;
--
-- TOC entry 388 (class 1259 OID 73600)
-- Name: migrations_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: postgres
--

CREATE SEQUENCE migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE migrations_id_seq OWNER TO postgres;
--
-- TOC entry 4342 (class 0 OID 0)
-- Dependencies: 388
-- Name: migrations_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: postgres
--

ALTER SEQUENCE migrations_id_seq OWNED BY migrations.id;
--
-- TOC entry 277 (class 1259 OID 68116)
-- Name: modifier_multiplier_price;
Type: TABLE;
Schema: public;
ALTER TABLE modifier_multiplier_price OWNER TO floreant;
--
-- TOC entry 278 (class 1259 OID 68119)
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE modifier_multiplier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE modifier_multiplier_price_id_seq OWNER TO floreant;
--
-- TOC entry 4344 (class 0 OID 0)
-- Dependencies: 278
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE modifier_multiplier_price_id_seq OWNED BY modifier_multiplier_price.id;
--
-- TOC entry 279 (class 1259 OID 68121)
-- Name: multiplier;
Type: TABLE;
Schema: public;
ALTER TABLE multiplier OWNER TO floreant;
--
-- TOC entry 280 (class 1259 OID 68124)
-- Name: order_type;
Type: TABLE;
Schema: public;
ALTER TABLE order_type OWNER TO floreant;
--
-- TOC entry 281 (class 1259 OID 68130)
-- Name: order_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE order_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE order_type_id_seq OWNER TO floreant;
--
-- TOC entry 4347 (class 0 OID 0)
-- Dependencies: 281
-- Name: order_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE order_type_id_seq OWNED BY order_type.id;
--
-- TOC entry 282 (class 1259 OID 68132)
-- Name: packaging_unit;
Type: TABLE;
Schema: public;
ALTER TABLE packaging_unit OWNER TO floreant;
--
-- TOC entry 283 (class 1259 OID 68135)
-- Name: packaging_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE packaging_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE packaging_unit_id_seq OWNER TO floreant;
--
-- TOC entry 4349 (class 0 OID 0)
-- Dependencies: 283
-- Name: packaging_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE packaging_unit_id_seq OWNED BY packaging_unit.id;
--
-- TOC entry 284 (class 1259 OID 68137)
-- Name: payout_reasons;
Type: TABLE;
Schema: public;
ALTER TABLE payout_reasons OWNER TO floreant;
--
-- TOC entry 285 (class 1259 OID 68140)
-- Name: payout_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 4351 (class 0 OID 0)
-- Dependencies: 285
-- Name: payout_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_reasons_id_seq OWNED BY payout_reasons.id;
--
-- TOC entry 286 (class 1259 OID 68142)
-- Name: payout_recepients;
Type: TABLE;
Schema: public;
ALTER TABLE payout_recepients OWNER TO floreant;
--
-- TOC entry 287 (class 1259 OID 68145)
-- Name: payout_recepients_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_recepients_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_recepients_id_seq OWNER TO floreant;
--
-- TOC entry 4353 (class 0 OID 0)
-- Dependencies: 287
-- Name: payout_recepients_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_recepients_id_seq OWNED BY payout_recepients.id;
--
-- TOC entry 288 (class 1259 OID 68147)
-- Name: pizza_crust;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_crust OWNER TO floreant;
--
-- TOC entry 289 (class 1259 OID 68150)
-- Name: pizza_crust_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_crust_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_crust_id_seq OWNER TO floreant;
--
-- TOC entry 4355 (class 0 OID 0)
-- Dependencies: 289
-- Name: pizza_crust_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_crust_id_seq OWNED BY pizza_crust.id;
--
-- TOC entry 290 (class 1259 OID 68152)
-- Name: pizza_modifier_price;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_modifier_price OWNER TO floreant;
--
-- TOC entry 291 (class 1259 OID 68155)
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_modifier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_modifier_price_id_seq OWNER TO floreant;
--
-- TOC entry 4357 (class 0 OID 0)
-- Dependencies: 291
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_modifier_price_id_seq OWNED BY pizza_modifier_price.id;
--
-- TOC entry 292 (class 1259 OID 68157)
-- Name: pizza_price;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_price OWNER TO floreant;
--
-- TOC entry 293 (class 1259 OID 68160)
-- Name: pizza_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_price_id_seq OWNER TO floreant;
--
-- TOC entry 4359 (class 0 OID 0)
-- Dependencies: 293
-- Name: pizza_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_price_id_seq OWNED BY pizza_price.id;
--
-- TOC entry 294 (class 1259 OID 68162)
-- Name: printer_configuration;
Type: TABLE;
Schema: public;
ALTER TABLE printer_configuration OWNER TO floreant;
--
-- TOC entry 295 (class 1259 OID 68168)
-- Name: printer_group;
Type: TABLE;
Schema: public;
ALTER TABLE printer_group OWNER TO floreant;
--
-- TOC entry 296 (class 1259 OID 68171)
-- Name: printer_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE printer_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE printer_group_id_seq OWNER TO floreant;
--
-- TOC entry 4362 (class 0 OID 0)
-- Dependencies: 296
-- Name: printer_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE printer_group_id_seq OWNED BY printer_group.id;
--
-- TOC entry 297 (class 1259 OID 68173)
-- Name: printer_group_printers;
Type: TABLE;
Schema: public;
ALTER TABLE printer_group_printers OWNER TO floreant;
--
-- TOC entry 298 (class 1259 OID 68176)
-- Name: purchase_order;
Type: TABLE;
Schema: public;
ALTER TABLE purchase_order OWNER TO floreant;
--
-- TOC entry 299 (class 1259 OID 68179)
-- Name: purchase_order_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE purchase_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE purchase_order_id_seq OWNER TO floreant;
--
-- TOC entry 4365 (class 0 OID 0)
-- Dependencies: 299
-- Name: purchase_order_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE purchase_order_id_seq OWNED BY purchase_order.id;
--
-- TOC entry 300 (class 1259 OID 68181)
-- Name: recepie;
Type: TABLE;
Schema: public;
ALTER TABLE recepie OWNER TO floreant;
--
-- TOC entry 301 (class 1259 OID 68184)
-- Name: recepie_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_id_seq OWNER TO floreant;
--
-- TOC entry 4367 (class 0 OID 0)
-- Dependencies: 301
-- Name: recepie_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_id_seq OWNED BY recepie.id;
--
-- TOC entry 302 (class 1259 OID 68186)
-- Name: recepie_item;
Type: TABLE;
Schema: public;
ALTER TABLE recepie_item OWNER TO floreant;
--
-- TOC entry 303 (class 1259 OID 68189)
-- Name: recepie_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_item_id_seq OWNER TO floreant;
--
-- TOC entry 4369 (class 0 OID 0)
-- Dependencies: 303
-- Name: recepie_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_item_id_seq OWNED BY recepie_item.id;
--
-- TOC entry 304 (class 1259 OID 68191)
-- Name: restaurant;
Type: TABLE;
Schema: public;
ALTER TABLE restaurant OWNER TO floreant;
--
-- TOC entry 305 (class 1259 OID 68194)
-- Name: restaurant_properties;
Type: TABLE;
Schema: public;
ALTER TABLE restaurant_properties OWNER TO floreant;
--
-- TOC entry 306 (class 1259 OID 68200)
-- Name: shift;
Type: TABLE;
Schema: public;
ALTER TABLE shift OWNER TO floreant;
--
-- TOC entry 307 (class 1259 OID 68203)
-- Name: shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shift_id_seq OWNER TO floreant;
--
-- TOC entry 4373 (class 0 OID 0)
-- Dependencies: 307
-- Name: shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shift_id_seq OWNED BY shift.id;
--
-- TOC entry 308 (class 1259 OID 68205)
-- Name: shop_floor;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor OWNER TO floreant;
--
-- TOC entry 309 (class 1259 OID 68208)
-- Name: shop_floor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_id_seq OWNER TO floreant;
--
-- TOC entry 4375 (class 0 OID 0)
-- Dependencies: 309
-- Name: shop_floor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_id_seq OWNED BY shop_floor.id;
--
-- TOC entry 310 (class 1259 OID 68210)
-- Name: shop_floor_template;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor_template OWNER TO floreant;
--
-- TOC entry 311 (class 1259 OID 68213)
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_template_id_seq OWNER TO floreant;
--
-- TOC entry 4377 (class 0 OID 0)
-- Dependencies: 311
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_template_id_seq OWNED BY shop_floor_template.id;
--
-- TOC entry 312 (class 1259 OID 68215)
-- Name: shop_floor_template_properties;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor_template_properties OWNER TO floreant;
--
-- TOC entry 313 (class 1259 OID 68218)
-- Name: shop_table;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table OWNER TO floreant;
--
-- TOC entry 314 (class 1259 OID 68221)
-- Name: shop_table_status;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table_status OWNER TO floreant;
--
-- TOC entry 315 (class 1259 OID 68224)
-- Name: shop_table_type;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table_type OWNER TO floreant;
--
-- TOC entry 316 (class 1259 OID 68227)
-- Name: shop_table_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_table_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_table_type_id_seq OWNER TO floreant;
--
-- TOC entry 4382 (class 0 OID 0)
-- Dependencies: 316
-- Name: shop_table_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_table_type_id_seq OWNED BY shop_table_type.id;
--
-- TOC entry 317 (class 1259 OID 68229)
-- Name: table_booking_info;
Type: TABLE;
Schema: public;
ALTER TABLE table_booking_info OWNER TO floreant;
--
-- TOC entry 318 (class 1259 OID 68232)
-- Name: table_booking_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE table_booking_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE table_booking_info_id_seq OWNER TO floreant;
--
-- TOC entry 4384 (class 0 OID 0)
-- Dependencies: 318
-- Name: table_booking_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE table_booking_info_id_seq OWNED BY table_booking_info.id;
--
-- TOC entry 319 (class 1259 OID 68234)
-- Name: table_booking_mapping;
Type: TABLE;
Schema: public;
ALTER TABLE table_booking_mapping OWNER TO floreant;
--
-- TOC entry 320 (class 1259 OID 68237)
-- Name: table_ticket_num;
Type: TABLE;
Schema: public;
ALTER TABLE table_ticket_num OWNER TO floreant;
--
-- TOC entry 321 (class 1259 OID 68240)
-- Name: table_type_relation;
Type: TABLE;
Schema: public;
ALTER TABLE table_type_relation OWNER TO floreant;
--
-- TOC entry 322 (class 1259 OID 68243)
-- Name: tax;
Type: TABLE;
Schema: public;
ALTER TABLE tax OWNER TO floreant;
--
-- TOC entry 323 (class 1259 OID 68246)
-- Name: tax_group;
Type: TABLE;
Schema: public;
ALTER TABLE tax_group OWNER TO floreant;
--
-- TOC entry 324 (class 1259 OID 68249)
-- Name: tax_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE tax_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE tax_id_seq OWNER TO floreant;
--
-- TOC entry 4390 (class 0 OID 0)
-- Dependencies: 324
-- Name: tax_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE tax_id_seq OWNED BY tax.id;
--
-- TOC entry 325 (class 1259 OID 68251)
-- Name: terminal_printers;
Type: TABLE;
Schema: public;
ALTER TABLE terminal_printers OWNER TO floreant;
--
-- TOC entry 326 (class 1259 OID 68254)
-- Name: terminal_printers_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE terminal_printers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE terminal_printers_id_seq OWNER TO floreant;
--
-- TOC entry 4392 (class 0 OID 0)
-- Dependencies: 326
-- Name: terminal_printers_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE terminal_printers_id_seq OWNED BY terminal_printers.id;
--
-- TOC entry 327 (class 1259 OID 68256)
-- Name: terminal_properties;
Type: TABLE;
Schema: public;
ALTER TABLE terminal_properties OWNER TO floreant;
--
-- TOC entry 328 (class 1259 OID 68262)
-- Name: ticket_discount;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_discount OWNER TO floreant;
--
-- TOC entry 329 (class 1259 OID 68265)
-- Name: ticket_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4395 (class 0 OID 0)
-- Dependencies: 329
-- Name: ticket_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_discount_id_seq OWNED BY ticket_discount.id;
--
-- TOC entry 330 (class 1259 OID 68267)
-- Name: ticket_folio_complete;
Type: VIEW;
Schema: public;
ALTER TABLE ticket_folio_complete OWNER TO floreant;
--
-- TOC entry 331 (class 1259 OID 68272)
-- Name: ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_id_seq OWNER TO floreant;
--
-- TOC entry 4397 (class 0 OID 0)
-- Dependencies: 331
-- Name: ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_id_seq OWNED BY ticket.id;
--
-- TOC entry 332 (class 1259 OID 68274)
-- Name: ticket_item;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item OWNER TO floreant;
--
-- TOC entry 333 (class 1259 OID 68280)
-- Name: ticket_item_addon_relation;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_addon_relation OWNER TO floreant;
--
-- TOC entry 334 (class 1259 OID 68283)
-- Name: ticket_item_cooking_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_cooking_instruction OWNER TO floreant;
--
-- TOC entry 335 (class 1259 OID 68286)
-- Name: ticket_item_discount;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_discount OWNER TO floreant;
--
-- TOC entry 336 (class 1259 OID 68289)
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_discount_id_seq OWNER TO floreant;
--
-- TOC entry 4402 (class 0 OID 0)
-- Dependencies: 336
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_discount_id_seq OWNED BY ticket_item_discount.id;
--
-- TOC entry 337 (class 1259 OID 68291)
-- Name: ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 4403 (class 0 OID 0)
-- Dependencies: 337
-- Name: ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_id_seq OWNED BY ticket_item.id;
--
-- TOC entry 338 (class 1259 OID 68293)
-- Name: ticket_item_modifier;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_modifier OWNER TO floreant;
--
-- TOC entry 339 (class 1259 OID 68296)
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 4405 (class 0 OID 0)
-- Dependencies: 339
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_modifier_id_seq OWNED BY ticket_item_modifier.id;
--
-- TOC entry 340 (class 1259 OID 68298)
-- Name: ticket_item_modifier_relation;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_modifier_relation OWNER TO floreant;
--
-- TOC entry 341 (class 1259 OID 68301)
-- Name: ticket_properties;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_properties OWNER TO floreant;
--
-- TOC entry 342 (class 1259 OID 68307)
-- Name: ticket_table_num;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_table_num OWNER TO floreant;
--
-- TOC entry 343 (class 1259 OID 68310)
-- Name: transaction_properties;
Type: TABLE;
Schema: public;
ALTER TABLE transaction_properties OWNER TO floreant;
--
-- TOC entry 344 (class 1259 OID 68316)
-- Name: transactions;
Type: TABLE;
Schema: public;
ALTER TABLE transactions OWNER TO floreant;
--
-- TOC entry 345 (class 1259 OID 68322)
-- Name: transactions_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE transactions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE transactions_id_seq OWNER TO floreant;
--
-- TOC entry 4411 (class 0 OID 0)
-- Dependencies: 345
-- Name: transactions_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE transactions_id_seq OWNED BY transactions.id;
--
-- TOC entry 346 (class 1259 OID 68324)
-- Name: user_permission;
Type: TABLE;
Schema: public;
ALTER TABLE user_permission OWNER TO floreant;
--
-- TOC entry 347 (class 1259 OID 68327)
-- Name: user_type;
Type: TABLE;
Schema: public;
ALTER TABLE user_type OWNER TO floreant;
--
-- TOC entry 348 (class 1259 OID 68330)
-- Name: user_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE user_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE user_type_id_seq OWNER TO floreant;
--
-- TOC entry 4414 (class 0 OID 0)
-- Dependencies: 348
-- Name: user_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE user_type_id_seq OWNED BY user_type.id;
--
-- TOC entry 349 (class 1259 OID 68332)
-- Name: user_user_permission;
Type: TABLE;
Schema: public;
ALTER TABLE user_user_permission OWNER TO floreant;
--
-- TOC entry 350 (class 1259 OID 68335)
-- Name: users;
Type: TABLE;
Schema: public;
ALTER TABLE users OWNER TO floreant;
--
-- TOC entry 351 (class 1259 OID 68338)
-- Name: users_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE users_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE users_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4417 (class 0 OID 0)
-- Dependencies: 351
-- Name: users_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE users_auto_id_seq OWNED BY users.auto_id;
--
-- TOC entry 352 (class 1259 OID 68340)
-- Name: virtual_printer;
Type: TABLE;
Schema: public;
ALTER TABLE virtual_printer OWNER TO floreant;
--
-- TOC entry 353 (class 1259 OID 68343)
-- Name: virtual_printer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE virtual_printer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE virtual_printer_id_seq OWNER TO floreant;
--
-- TOC entry 4419 (class 0 OID 0)
-- Dependencies: 353
-- Name: virtual_printer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE virtual_printer_id_seq OWNED BY virtual_printer.id;
--
-- TOC entry 354 (class 1259 OID 68345)
-- Name: virtualprinter_order_type;
Type: TABLE;
Schema: public;
ALTER TABLE virtualprinter_order_type OWNER TO floreant;
--
-- TOC entry 355 (class 1259 OID 68348)
-- Name: void_reasons;
Type: TABLE;
Schema: public;
ALTER TABLE void_reasons OWNER TO floreant;
--
-- TOC entry 356 (class 1259 OID 68351)
-- Name: void_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE void_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE void_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 4422 (class 0 OID 0)
-- Dependencies: 356
-- Name: void_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE void_reasons_id_seq OWNED BY void_reasons.id;
--
-- TOC entry 381 (class 1259 OID 69479)
-- Name: vw_reconciliation_status;
Type: VIEW;
Schema: public;
ALTER TABLE vw_reconciliation_status OWNER TO postgres;
--
-- TOC entry 357 (class 1259 OID 68353)
-- Name: zip_code_vs_delivery_charge;
Type: TABLE;
Schema: public;
ALTER TABLE zip_code_vs_delivery_charge OWNER TO floreant;
--
-- TOC entry 358 (class 1259 OID 68356)
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE zip_code_vs_delivery_charge_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE zip_code_vs_delivery_charge_auto_id_seq OWNER TO floreant;
--
-- TOC entry 4425 (class 0 OID 0)
-- Dependencies: 358
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE zip_code_vs_delivery_charge_auto_id_seq OWNED BY zip_code_vs_delivery_charge.auto_id;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 464 (class 1259 OID 77970)
-- Name: almacen;
Type: TABLE;
Schema: selemti;
ALTER TABLE almacen OWNER TO postgres;
--
-- TOC entry 359 (class 1259 OID 68358)
-- Name: auditoria;
Type: TABLE;
Schema: selemti;
ALTER TABLE auditoria OWNER TO floreant;
--
-- TOC entry 360 (class 1259 OID 68365)
-- Name: auditoria_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE auditoria_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE auditoria_id_seq OWNER TO floreant;
--
-- TOC entry 4426 (class 0 OID 0)
-- Dependencies: 360
-- Name: auditoria_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE auditoria_id_seq OWNED BY auditoria.id;
--
-- TOC entry 394 (class 1259 OID 73651)
-- Name: cache;
Type: TABLE;
Schema: selemti;
ALTER TABLE cache OWNER TO postgres;
--
-- TOC entry 395 (class 1259 OID 73659)
-- Name: cache_locks;
Type: TABLE;
Schema: selemti;
ALTER TABLE cache_locks OWNER TO postgres;
--
-- TOC entry 402 (class 1259 OID 73704)
-- Name: cat_unidades;
Type: TABLE;
Schema: selemti;
ALTER TABLE cat_unidades OWNER TO postgres;
--
-- TOC entry 401 (class 1259 OID 73702)
-- Name: cat_unidades_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE cat_unidades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cat_unidades_id_seq OWNER TO postgres;
--
-- TOC entry 4427 (class 0 OID 0)
-- Dependencies: 401
-- Name: cat_unidades_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE cat_unidades_id_seq OWNED BY cat_unidades.id;
--
-- TOC entry 423 (class 1259 OID 77265)
-- Name: conversiones_unidad;
Type: TABLE;
Schema: selemti;
ALTER TABLE conversiones_unidad OWNER TO postgres;
--
-- TOC entry 422 (class 1259 OID 77263)
-- Name: conversiones_unidad_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE conversiones_unidad_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE conversiones_unidad_id_seq OWNER TO postgres;
--
-- TOC entry 4428 (class 0 OID 0)
-- Dependencies: 422
-- Name: conversiones_unidad_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE conversiones_unidad_id_seq OWNED BY conversiones_unidad.id;
--
-- TOC entry 431 (class 1259 OID 77393)
-- Name: cost_layer;
Type: TABLE;
Schema: selemti;
ALTER TABLE cost_layer OWNER TO postgres;
--
-- TOC entry 430 (class 1259 OID 77391)
-- Name: cost_layer_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE cost_layer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cost_layer_id_seq OWNER TO postgres;
--
-- TOC entry 4429 (class 0 OID 0)
-- Dependencies: 430
-- Name: cost_layer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE cost_layer_id_seq OWNED BY cost_layer.id;
--
-- TOC entry 400 (class 1259 OID 73689)
-- Name: failed_jobs;
Type: TABLE;
Schema: selemti;
ALTER TABLE failed_jobs OWNER TO postgres;
--
-- TOC entry 399 (class 1259 OID 73687)
-- Name: failed_jobs_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE failed_jobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE failed_jobs_id_seq OWNER TO postgres;
--
-- TOC entry 4430 (class 0 OID 0)
-- Dependencies: 399
-- Name: failed_jobs_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE failed_jobs_id_seq OWNED BY failed_jobs.id;
--
-- TOC entry 361 (class 1259 OID 68367)
-- Name: formas_pago;
Type: TABLE;
Schema: selemti;
ALTER TABLE formas_pago OWNER TO floreant;
--
-- TOC entry 362 (class 1259 OID 68376)
-- Name: formas_pago_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE formas_pago_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE formas_pago_id_seq OWNER TO floreant;
--
-- TOC entry 4431 (class 0 OID 0)
-- Dependencies: 362
-- Name: formas_pago_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE formas_pago_id_seq OWNED BY formas_pago.id;
--
-- TOC entry 425 (class 1259 OID 77319)
-- Name: historial_costos_item;
Type: TABLE;
Schema: selemti;
ALTER TABLE historial_costos_item OWNER TO postgres;
--
-- TOC entry 424 (class 1259 OID 77317)
-- Name: historial_costos_item_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE historial_costos_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE historial_costos_item_id_seq OWNER TO postgres;
--
-- TOC entry 4432 (class 0 OID 0)
-- Dependencies: 424
-- Name: historial_costos_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE historial_costos_item_id_seq OWNED BY historial_costos_item.id;
--
-- TOC entry 427 (class 1259 OID 77351)
-- Name: historial_costos_receta;
Type: TABLE;
Schema: selemti;
ALTER TABLE historial_costos_receta OWNER TO postgres;
--
-- TOC entry 426 (class 1259 OID 77349)
-- Name: historial_costos_receta_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE historial_costos_receta_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE historial_costos_receta_id_seq OWNER TO postgres;
--
-- TOC entry 4433 (class 0 OID 0)
-- Dependencies: 426
-- Name: historial_costos_receta_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE historial_costos_receta_id_seq OWNED BY historial_costos_receta.id;
--
-- TOC entry 406 (class 1259 OID 77073)
-- Name: inventory_batch;
Type: TABLE;
Schema: selemti;
ALTER TABLE inventory_batch OWNER TO postgres;
--
-- TOC entry 4434 (class 0 OID 0)
-- Dependencies: 406
-- Name: TABLE inventory_batch;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE inventory_batch IS 'Lotes de inventario con trazabilidad completa';
--
-- TOC entry 405 (class 1259 OID 77071)
-- Name: inventory_batch_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE inventory_batch_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_batch_id_seq OWNER TO postgres;
--
-- TOC entry 4435 (class 0 OID 0)
-- Dependencies: 405
-- Name: inventory_batch_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE inventory_batch_id_seq OWNED BY inventory_batch.id;
--
-- TOC entry 439 (class 1259 OID 77489)
-- Name: item_vendor;
Type: TABLE;
Schema: selemti;
ALTER TABLE item_vendor OWNER TO postgres;
--
-- TOC entry 404 (class 1259 OID 77052)
-- Name: items;
Type: TABLE;
Schema: selemti;
ALTER TABLE items OWNER TO postgres;
--
-- TOC entry 4436 (class 0 OID 0)
-- Dependencies: 404
-- Name: TABLE items;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE items IS 'Maestro de todos los ítems del sistema';
--
-- TOC entry 398 (class 1259 OID 73679)
-- Name: job_batches;
Type: TABLE;
Schema: selemti;
ALTER TABLE job_batches OWNER TO postgres;
--
-- TOC entry 436 (class 1259 OID 77460)
-- Name: job_recalc_queue;
Type: TABLE;
Schema: selemti;
ALTER TABLE job_recalc_queue OWNER TO postgres;
--
-- TOC entry 435 (class 1259 OID 77458)
-- Name: job_recalc_queue_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE job_recalc_queue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE job_recalc_queue_id_seq OWNER TO postgres;
--
-- TOC entry 4437 (class 0 OID 0)
-- Dependencies: 435
-- Name: job_recalc_queue_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE job_recalc_queue_id_seq OWNED BY job_recalc_queue.id;
--
-- TOC entry 397 (class 1259 OID 73669)
-- Name: jobs;
Type: TABLE;
Schema: selemti;
ALTER TABLE jobs OWNER TO postgres;
--
-- TOC entry 396 (class 1259 OID 73667)
-- Name: jobs_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE jobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE jobs_id_seq OWNER TO postgres;
--
-- TOC entry 4438 (class 0 OID 0)
-- Dependencies: 396
-- Name: jobs_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE jobs_id_seq OWNED BY jobs.id;
--
-- TOC entry 391 (class 1259 OID 73614)
-- Name: migrations;
Type: TABLE;
Schema: selemti;
ALTER TABLE migrations OWNER TO postgres;
--
-- TOC entry 390 (class 1259 OID 73612)
-- Name: migrations_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE migrations_id_seq OWNER TO postgres;
--
-- TOC entry 4439 (class 0 OID 0)
-- Dependencies: 390
-- Name: migrations_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE migrations_id_seq OWNED BY migrations.id;
--
-- TOC entry 459 (class 1259 OID 77739)
-- Name: model_has_permissions;
Type: TABLE;
Schema: selemti;
ALTER TABLE model_has_permissions OWNER TO postgres;
--
-- TOC entry 460 (class 1259 OID 77750)
-- Name: model_has_roles;
Type: TABLE;
Schema: selemti;
ALTER TABLE model_has_roles OWNER TO postgres;
--
-- TOC entry 434 (class 1259 OID 77424)
-- Name: modificadores_pos;
Type: TABLE;
Schema: selemti;
ALTER TABLE modificadores_pos OWNER TO postgres;
--
-- TOC entry 433 (class 1259 OID 77422)
-- Name: modificadores_pos_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE modificadores_pos_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE modificadores_pos_id_seq OWNER TO postgres;
--
-- TOC entry 4440 (class 0 OID 0)
-- Dependencies: 433
-- Name: modificadores_pos_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE modificadores_pos_id_seq OWNED BY modificadores_pos.id;
--
-- TOC entry 408 (class 1259 OID 77097)
-- Name: mov_inv;
Type: TABLE;
Schema: selemti;
ALTER TABLE mov_inv OWNER TO postgres;
--
-- TOC entry 4441 (class 0 OID 0)
-- Dependencies: 408
-- Name: TABLE mov_inv;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE mov_inv IS 'Kardex completo de movimientos de inventario';
--
-- TOC entry 407 (class 1259 OID 77095)
-- Name: mov_inv_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE mov_inv_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE mov_inv_id_seq OWNER TO postgres;
--
-- TOC entry 4442 (class 0 OID 0)
-- Dependencies: 407
-- Name: mov_inv_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE mov_inv_id_seq OWNED BY mov_inv.id;
--
-- TOC entry 415 (class 1259 OID 77194)
-- Name: op_produccion_cab;
Type: TABLE;
Schema: selemti;
ALTER TABLE op_produccion_cab OWNER TO postgres;
--
-- TOC entry 4443 (class 0 OID 0)
-- Dependencies: 415
-- Name: TABLE op_produccion_cab;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE op_produccion_cab IS 'Órdenes de producción para elaborados';
--
-- TOC entry 414 (class 1259 OID 77192)
-- Name: op_produccion_cab_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE op_produccion_cab_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE op_produccion_cab_id_seq OWNER TO postgres;
--
-- TOC entry 4444 (class 0 OID 0)
-- Dependencies: 414
-- Name: op_produccion_cab_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE op_produccion_cab_id_seq OWNED BY op_produccion_cab.id;
--
-- TOC entry 441 (class 1259 OID 77531)
-- Name: param_sucursal;
Type: TABLE;
Schema: selemti;
ALTER TABLE param_sucursal OWNER TO postgres;
--
-- TOC entry 440 (class 1259 OID 77529)
-- Name: param_sucursal_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE param_sucursal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE param_sucursal_id_seq OWNER TO postgres;
--
-- TOC entry 4445 (class 0 OID 0)
-- Dependencies: 440
-- Name: param_sucursal_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE param_sucursal_id_seq OWNED BY param_sucursal.id;
--
-- TOC entry 392 (class 1259 OID 73633)
-- Name: password_reset_tokens;
Type: TABLE;
Schema: selemti;
ALTER TABLE password_reset_tokens OWNER TO postgres;
--
-- TOC entry 447 (class 1259 OID 77589)
-- Name: perdida_log;
Type: TABLE;
Schema: selemti;
ALTER TABLE perdida_log OWNER TO postgres;
--
-- TOC entry 446 (class 1259 OID 77587)
-- Name: perdida_log_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE perdida_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE perdida_log_id_seq OWNER TO postgres;
--
-- TOC entry 4446 (class 0 OID 0)
-- Dependencies: 446
-- Name: perdida_log_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE perdida_log_id_seq OWNED BY perdida_log.id;
--
-- TOC entry 456 (class 1259 OID 77715)
-- Name: permissions;
Type: TABLE;
Schema: selemti;
ALTER TABLE permissions OWNER TO postgres;
--
-- TOC entry 455 (class 1259 OID 77713)
-- Name: permissions_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE permissions_id_seq OWNER TO postgres;
--
-- TOC entry 4447 (class 0 OID 0)
-- Dependencies: 455
-- Name: permissions_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE permissions_id_seq OWNED BY permissions.id;
--
-- TOC entry 432 (class 1259 OID 77412)
-- Name: pos_map;
Type: TABLE;
Schema: selemti;
ALTER TABLE pos_map OWNER TO postgres;
--
-- TOC entry 363 (class 1259 OID 68378)
-- Name: postcorte;
Type: TABLE;
Schema: selemti;
ALTER TABLE postcorte OWNER TO floreant;
--
-- TOC entry 4448 (class 0 OID 0)
-- Dependencies: 363
-- Name: COLUMN postcorte.validado;
Type: COMMENT;
Schema: selemti;
Owner: floreant
--

COMMENT ON COLUMN postcorte.validado IS 'TRUE cuando el supervisor valida/cierra el postcorte';
--
-- TOC entry 364 (class 1259 OID 68401)
-- Name: postcorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE postcorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE postcorte_id_seq OWNER TO floreant;
--
-- TOC entry 4449 (class 0 OID 0)
-- Dependencies: 364
-- Name: postcorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE postcorte_id_seq OWNED BY postcorte.id;
--
-- TOC entry 365 (class 1259 OID 68403)
-- Name: precorte;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte OWNER TO floreant;
--
-- TOC entry 366 (class 1259 OID 68414)
-- Name: precorte_efectivo;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte_efectivo OWNER TO floreant;
--
-- TOC entry 367 (class 1259 OID 68418)
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_efectivo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_efectivo_id_seq OWNER TO floreant;
--
-- TOC entry 4450 (class 0 OID 0)
-- Dependencies: 367
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_efectivo_id_seq OWNED BY precorte_efectivo.id;
--
-- TOC entry 368 (class 1259 OID 68420)
-- Name: precorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_id_seq OWNER TO floreant;
--
-- TOC entry 4451 (class 0 OID 0)
-- Dependencies: 368
-- Name: precorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_id_seq OWNED BY precorte.id;
--
-- TOC entry 369 (class 1259 OID 68422)
-- Name: precorte_otros;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte_otros OWNER TO floreant;
--
-- TOC entry 370 (class 1259 OID 68430)
-- Name: precorte_otros_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_otros_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_otros_id_seq OWNER TO floreant;
--
-- TOC entry 4452 (class 0 OID 0)
-- Dependencies: 370
-- Name: precorte_otros_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_otros_id_seq OWNED BY precorte_otros.id;
--
-- TOC entry 465 (class 1259 OID 77984)
-- Name: proveedor;
Type: TABLE;
Schema: selemti;
ALTER TABLE proveedor OWNER TO postgres;
--
-- TOC entry 438 (class 1259 OID 77475)
-- Name: recalc_log;
Type: TABLE;
Schema: selemti;
ALTER TABLE recalc_log OWNER TO postgres;
--
-- TOC entry 437 (class 1259 OID 77473)
-- Name: recalc_log_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE recalc_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recalc_log_id_seq OWNER TO postgres;
--
-- TOC entry 4453 (class 0 OID 0)
-- Dependencies: 437
-- Name: recalc_log_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE recalc_log_id_seq OWNED BY recalc_log.id;
--
-- TOC entry 409 (class 1259 OID 77122)
-- Name: receta_cab;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_cab OWNER TO postgres;
--
-- TOC entry 4454 (class 0 OID 0)
-- Dependencies: 409
-- Name: TABLE receta_cab;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_cab IS 'Cabecera de recetas y platos del menú';
--
-- TOC entry 413 (class 1259 OID 77168)
-- Name: receta_det;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_det OWNER TO postgres;
--
-- TOC entry 4455 (class 0 OID 0)
-- Dependencies: 413
-- Name: TABLE receta_det;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_det IS 'Detalle de ingredientes por versión de receta';
--
-- TOC entry 412 (class 1259 OID 77166)
-- Name: receta_det_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_det_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_det_id_seq OWNER TO postgres;
--
-- TOC entry 4456 (class 0 OID 0)
-- Dependencies: 412
-- Name: receta_det_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_det_id_seq OWNED BY receta_det.id;
--
-- TOC entry 429 (class 1259 OID 77370)
-- Name: receta_shadow;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_shadow OWNER TO postgres;
--
-- TOC entry 428 (class 1259 OID 77368)
-- Name: receta_shadow_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_shadow_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_shadow_id_seq OWNER TO postgres;
--
-- TOC entry 4457 (class 0 OID 0)
-- Dependencies: 428
-- Name: receta_shadow_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_shadow_id_seq OWNED BY receta_shadow.id;
--
-- TOC entry 411 (class 1259 OID 77142)
-- Name: receta_version;
Type: TABLE;
Schema: selemti;
ALTER TABLE receta_version OWNER TO postgres;
--
-- TOC entry 4458 (class 0 OID 0)
-- Dependencies: 411
-- Name: TABLE receta_version;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE receta_version IS 'Control de versiones de recetas';
--
-- TOC entry 410 (class 1259 OID 77140)
-- Name: receta_version_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE receta_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE receta_version_id_seq OWNER TO postgres;
--
-- TOC entry 4459 (class 0 OID 0)
-- Dependencies: 410
-- Name: receta_version_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE receta_version_id_seq OWNED BY receta_version.id;
--
-- TOC entry 461 (class 1259 OID 77761)
-- Name: role_has_permissions;
Type: TABLE;
Schema: selemti;
ALTER TABLE role_has_permissions OWNER TO postgres;
--
-- TOC entry 458 (class 1259 OID 77728)
-- Name: roles;
Type: TABLE;
Schema: selemti;
ALTER TABLE roles OWNER TO postgres;
--
-- TOC entry 457 (class 1259 OID 77726)
-- Name: roles_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE roles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE roles_id_seq OWNER TO postgres;
--
-- TOC entry 4460 (class 0 OID 0)
-- Dependencies: 457
-- Name: roles_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE roles_id_seq OWNED BY roles.id;
--
-- TOC entry 371 (class 1259 OID 68432)
-- Name: sesion_cajon;
Type: TABLE;
Schema: selemti;
ALTER TABLE sesion_cajon OWNER TO floreant;
--
-- TOC entry 372 (class 1259 OID 68443)
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE sesion_cajon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE sesion_cajon_id_seq OWNER TO floreant;
--
-- TOC entry 4461 (class 0 OID 0)
-- Dependencies: 372
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE sesion_cajon_id_seq OWNED BY sesion_cajon.id;
--
-- TOC entry 393 (class 1259 OID 73641)
-- Name: sessions;
Type: TABLE;
Schema: selemti;
ALTER TABLE sessions OWNER TO postgres;
--
-- TOC entry 443 (class 1259 OID 77549)
-- Name: stock_policy;
Type: TABLE;
Schema: selemti;
ALTER TABLE stock_policy OWNER TO postgres;
--
-- TOC entry 442 (class 1259 OID 77547)
-- Name: stock_policy_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE stock_policy_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE stock_policy_id_seq OWNER TO postgres;
--
-- TOC entry 4462 (class 0 OID 0)
-- Dependencies: 442
-- Name: stock_policy_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE stock_policy_id_seq OWNED BY stock_policy.id;
--
-- TOC entry 463 (class 1259 OID 77961)
-- Name: sucursal;
Type: TABLE;
Schema: selemti;
ALTER TABLE sucursal OWNER TO postgres;
--
-- TOC entry 445 (class 1259 OID 77570)
-- Name: sucursal_almacen_terminal;
Type: TABLE;
Schema: selemti;
ALTER TABLE sucursal_almacen_terminal OWNER TO postgres;
--
-- TOC entry 444 (class 1259 OID 77568)
-- Name: sucursal_almacen_terminal_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE sucursal_almacen_terminal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE sucursal_almacen_terminal_id_seq OWNER TO postgres;
--
-- TOC entry 4463 (class 0 OID 0)
-- Dependencies: 444
-- Name: sucursal_almacen_terminal_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE sucursal_almacen_terminal_id_seq OWNED BY sucursal_almacen_terminal.id;
--
-- TOC entry 449 (class 1259 OID 77623)
-- Name: ticket_det_consumo;
Type: TABLE;
Schema: selemti;
ALTER TABLE ticket_det_consumo OWNER TO postgres;
--
-- TOC entry 448 (class 1259 OID 77621)
-- Name: ticket_det_consumo_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_det_consumo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_det_consumo_id_seq OWNER TO postgres;
--
-- TOC entry 4464 (class 0 OID 0)
-- Dependencies: 448
-- Name: ticket_det_consumo_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_det_consumo_id_seq OWNED BY ticket_det_consumo.id;
--
-- TOC entry 417 (class 1259 OID 77217)
-- Name: ticket_venta_cab;
Type: TABLE;
Schema: selemti;
ALTER TABLE ticket_venta_cab OWNER TO postgres;
--
-- TOC entry 416 (class 1259 OID 77215)
-- Name: ticket_venta_cab_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_venta_cab_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_venta_cab_id_seq OWNER TO postgres;
--
-- TOC entry 4465 (class 0 OID 0)
-- Dependencies: 416
-- Name: ticket_venta_cab_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_venta_cab_id_seq OWNED BY ticket_venta_cab.id;
--
-- TOC entry 419 (class 1259 OID 77232)
-- Name: ticket_venta_det;
Type: TABLE;
Schema: selemti;
ALTER TABLE ticket_venta_det OWNER TO postgres;
--
-- TOC entry 418 (class 1259 OID 77230)
-- Name: ticket_venta_det_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE ticket_venta_det_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_venta_det_id_seq OWNER TO postgres;
--
-- TOC entry 4466 (class 0 OID 0)
-- Dependencies: 418
-- Name: ticket_venta_det_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE ticket_venta_det_id_seq OWNED BY ticket_venta_det.id;
--
-- TOC entry 421 (class 1259 OID 77247)
-- Name: unidades_medida;
Type: TABLE;
Schema: selemti;
ALTER TABLE unidades_medida OWNER TO postgres;
--
-- TOC entry 420 (class 1259 OID 77245)
-- Name: unidades_medida_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE unidades_medida_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE unidades_medida_id_seq OWNER TO postgres;
--
-- TOC entry 4467 (class 0 OID 0)
-- Dependencies: 420
-- Name: unidades_medida_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE unidades_medida_id_seq OWNED BY unidades_medida.id;
--
-- TOC entry 403 (class 1259 OID 77035)
-- Name: user_roles;
Type: TABLE;
Schema: selemti;
ALTER TABLE user_roles OWNER TO postgres;
--
-- TOC entry 4468 (class 0 OID 0)
-- Dependencies: 403
-- Name: TABLE user_roles;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE user_roles IS 'Asignación de roles a usuarios (RBAC)';
--
-- TOC entry 454 (class 1259 OID 77685)
-- Name: users;
Type: TABLE;
Schema: selemti;
ALTER TABLE users OWNER TO postgres;
--
-- TOC entry 4469 (class 0 OID 0)
-- Dependencies: 454
-- Name: TABLE users;
Type: COMMENT;
Schema: selemti;
Owner: postgres
--

COMMENT ON TABLE users IS 'Usuarios del sistema con sus credenciales y estado';
--
-- TOC entry 453 (class 1259 OID 77683)
-- Name: users_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: postgres
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE users_id_seq OWNER TO postgres;
--
-- TOC entry 4470 (class 0 OID 0)
-- Dependencies: 453
-- Name: users_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: postgres
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;
--
-- TOC entry 451 (class 1259 OID 77670)
-- Name: v_ingenieria_menu_completa;
Type: VIEW;
Schema: selemti;
ALTER TABLE v_ingenieria_menu_completa OWNER TO postgres;
--
-- TOC entry 462 (class 1259 OID 77951)
-- Name: v_items_con_uom;
Type: VIEW;
Schema: selemti;
ALTER TABLE v_items_con_uom OWNER TO postgres;
--
-- TOC entry 452 (class 1259 OID 77675)
-- Name: v_merma_por_item;
Type: VIEW;
Schema: selemti;
ALTER TABLE v_merma_por_item OWNER TO postgres;
--
-- TOC entry 450 (class 1259 OID 77665)
-- Name: v_stock_actual;
Type: VIEW;
Schema: selemti;
ALTER TABLE v_stock_actual OWNER TO postgres;
--
-- TOC entry 466 (class 1259 OID 77993)
-- Name: v_stock_brechas;
Type: VIEW;
Schema: selemti;
ALTER TABLE v_stock_brechas OWNER TO postgres;
--
-- TOC entry 383 (class 1259 OID 69489)
-- Name: vw_anulaciones_por_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_anulaciones_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 375 (class 1259 OID 68455)
-- Name: vw_sesion_reembolsos_efectivo;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_reembolsos_efectivo OWNER TO floreant;
--
-- TOC entry 376 (class 1259 OID 68460)
-- Name: vw_sesion_retiros;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_retiros OWNER TO floreant;
--
-- TOC entry 377 (class 1259 OID 68465)
-- Name: vw_sesion_ventas;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_ventas OWNER TO postgres;
--
-- TOC entry 386 (class 1259 OID 69504)
-- Name: vw_conciliacion_efectivo;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_conciliacion_efectivo OWNER TO postgres;
--
-- TOC entry 373 (class 1259 OID 68445)
-- Name: vw_sesion_descuentos;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_descuentos OWNER TO floreant;
--
-- TOC entry 374 (class 1259 OID 68450)
-- Name: vw_sesion_dpr;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_dpr OWNER TO postgres;
--
-- TOC entry 378 (class 1259 OID 68470)
-- Name: vw_conciliacion_sesion;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_conciliacion_sesion OWNER TO floreant;
--
-- TOC entry 385 (class 1259 OID 69499)
-- Name: vw_conciliacion_tarjetas;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_conciliacion_tarjetas OWNER TO postgres;
--
-- TOC entry 382 (class 1259 OID 69484)
-- Name: vw_descuentos_por_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_descuentos_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 379 (class 1259 OID 68475)
-- Name: vw_fast_tickets;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_fast_tickets OWNER TO postgres;
--
-- TOC entry 380 (class 1259 OID 68479)
-- Name: vw_fast_tx;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_fast_tx OWNER TO postgres;
--
-- TOC entry 384 (class 1259 OID 69494)
-- Name: vw_pagos_por_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_pagos_por_terminal_dia OWNER TO postgres;
--
-- TOC entry 387 (class 1259 OID 69523)
-- Name: vw_resumen_conciliacion_terminal_dia;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_resumen_conciliacion_terminal_dia OWNER TO postgres;
SET search_path = public, pg_catalog;
--
-- TOC entry 2997 (class 2604 OID 68483)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history ALTER COLUMN id SET DEFAULT nextval('action_history_id_seq'::regclass);
--
-- TOC entry 2998 (class 2604 OID 68484)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history ALTER COLUMN id SET DEFAULT nextval('attendence_history_id_seq'::regclass);
--
-- TOC entry 2999 (class 2604 OID 68485)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer ALTER COLUMN id SET DEFAULT nextval('cash_drawer_id_seq'::regclass);
--
-- TOC entry 3000 (class 2604 OID 68486)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history ALTER COLUMN id SET DEFAULT nextval('cash_drawer_reset_history_id_seq'::regclass);
--
-- TOC entry 3001 (class 2604 OID 68487)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction ALTER COLUMN id SET DEFAULT nextval('cooking_instruction_id_seq'::regclass);
--
-- TOC entry 3002 (class 2604 OID 68488)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount ALTER COLUMN id SET DEFAULT nextval('coupon_and_discount_id_seq'::regclass);
--
-- TOC entry 3003 (class 2604 OID 68489)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency ALTER COLUMN id SET DEFAULT nextval('currency_id_seq'::regclass);
--
-- TOC entry 3004 (class 2604 OID 68490)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance ALTER COLUMN id SET DEFAULT nextval('currency_balance_id_seq'::regclass);
--
-- TOC entry 3005 (class 2604 OID 68491)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment ALTER COLUMN id SET DEFAULT nextval('custom_payment_id_seq'::regclass);
--
-- TOC entry 3006 (class 2604 OID 68492)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer ALTER COLUMN auto_id SET DEFAULT nextval('customer_auto_id_seq'::regclass);
--
-- TOC entry 3008 (class 2604 OID 68493)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info ALTER COLUMN id SET DEFAULT nextval('data_update_info_id_seq'::regclass);
--
-- TOC entry 3009 (class 2604 OID 68494)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address ALTER COLUMN id SET DEFAULT nextval('delivery_address_id_seq'::regclass);
--
-- TOC entry 3010 (class 2604 OID 68495)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge ALTER COLUMN id SET DEFAULT nextval('delivery_charge_id_seq'::regclass);
--
-- TOC entry 3011 (class 2604 OID 68496)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration ALTER COLUMN id SET DEFAULT nextval('delivery_configuration_id_seq'::regclass);
--
-- TOC entry 3012 (class 2604 OID 68497)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction ALTER COLUMN id SET DEFAULT nextval('delivery_instruction_id_seq'::regclass);
--
-- TOC entry 3013 (class 2604 OID 68498)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history ALTER COLUMN id SET DEFAULT nextval('drawer_assigned_history_id_seq'::regclass);
--
-- TOC entry 3014 (class 2604 OID 68499)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report ALTER COLUMN id SET DEFAULT nextval('drawer_pull_report_id_seq'::regclass);
--
-- TOC entry 3015 (class 2604 OID 68500)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history ALTER COLUMN id SET DEFAULT nextval('employee_in_out_history_id_seq'::regclass);
--
-- TOC entry 3016 (class 2604 OID 68501)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config ALTER COLUMN id SET DEFAULT nextval('global_config_id_seq'::regclass);
--
-- TOC entry 3017 (class 2604 OID 68502)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity ALTER COLUMN id SET DEFAULT nextval('gratuity_id_seq'::regclass);
--
-- TOC entry 3018 (class 2604 OID 68503)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print ALTER COLUMN id SET DEFAULT nextval('guest_check_print_id_seq'::regclass);
--
-- TOC entry 3019 (class 2604 OID 68504)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group ALTER COLUMN id SET DEFAULT nextval('inventory_group_id_seq'::regclass);
--
-- TOC entry 3020 (class 2604 OID 68505)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item ALTER COLUMN id SET DEFAULT nextval('inventory_item_id_seq'::regclass);
--
-- TOC entry 3021 (class 2604 OID 68506)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location ALTER COLUMN id SET DEFAULT nextval('inventory_location_id_seq'::regclass);
--
-- TOC entry 3022 (class 2604 OID 68507)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code ALTER COLUMN id SET DEFAULT nextval('inventory_meta_code_id_seq'::regclass);
--
-- TOC entry 3023 (class 2604 OID 68508)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction ALTER COLUMN id SET DEFAULT nextval('inventory_transaction_id_seq'::regclass);
--
-- TOC entry 3024 (class 2604 OID 68509)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit ALTER COLUMN id SET DEFAULT nextval('inventory_unit_id_seq'::regclass);
--
-- TOC entry 3025 (class 2604 OID 68510)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor ALTER COLUMN id SET DEFAULT nextval('inventory_vendor_id_seq'::regclass);
--
-- TOC entry 3026 (class 2604 OID 68511)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse ALTER COLUMN id SET DEFAULT nextval('inventory_warehouse_id_seq'::regclass);
--
-- TOC entry 3027 (class 2604 OID 68512)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_id_seq'::regclass);
--
-- TOC entry 3031 (class 2604 OID 68513)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_item_id_seq'::regclass);
--
-- TOC entry 3032 (class 2604 OID 68514)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category ALTER COLUMN id SET DEFAULT nextval('menu_category_id_seq'::regclass);
--
-- TOC entry 3033 (class 2604 OID 68515)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group ALTER COLUMN id SET DEFAULT nextval('menu_group_id_seq'::regclass);
--
-- TOC entry 3034 (class 2604 OID 68516)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item ALTER COLUMN id SET DEFAULT nextval('menu_item_id_seq'::regclass);
--
-- TOC entry 3035 (class 2604 OID 68517)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size ALTER COLUMN id SET DEFAULT nextval('menu_item_size_id_seq'::regclass);
--
-- TOC entry 3036 (class 2604 OID 68518)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier ALTER COLUMN id SET DEFAULT nextval('menu_modifier_id_seq'::regclass);
--
-- TOC entry 3037 (class 2604 OID 68519)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group ALTER COLUMN id SET DEFAULT nextval('menu_modifier_group_id_seq'::regclass);
--
-- TOC entry 3038 (class 2604 OID 68520)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup ALTER COLUMN id SET DEFAULT nextval('menuitem_modifiergroup_id_seq'::regclass);
--
-- TOC entry 3039 (class 2604 OID 68521)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift ALTER COLUMN id SET DEFAULT nextval('menuitem_shift_id_seq'::regclass);
--
-- TOC entry 3110 (class 2604 OID 73605)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: postgres
--

ALTER TABLE ONLY migrations ALTER COLUMN id SET DEFAULT nextval('migrations_id_seq'::regclass);
--
-- TOC entry 3040 (class 2604 OID 68522)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price ALTER COLUMN id SET DEFAULT nextval('modifier_multiplier_price_id_seq'::regclass);
--
-- TOC entry 3041 (class 2604 OID 68523)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type ALTER COLUMN id SET DEFAULT nextval('order_type_id_seq'::regclass);
--
-- TOC entry 3042 (class 2604 OID 68524)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit ALTER COLUMN id SET DEFAULT nextval('packaging_unit_id_seq'::regclass);
--
-- TOC entry 3043 (class 2604 OID 68525)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons ALTER COLUMN id SET DEFAULT nextval('payout_reasons_id_seq'::regclass);
--
-- TOC entry 3044 (class 2604 OID 68526)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients ALTER COLUMN id SET DEFAULT nextval('payout_recepients_id_seq'::regclass);
--
-- TOC entry 3045 (class 2604 OID 68527)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust ALTER COLUMN id SET DEFAULT nextval('pizza_crust_id_seq'::regclass);
--
-- TOC entry 3046 (class 2604 OID 68528)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price ALTER COLUMN id SET DEFAULT nextval('pizza_modifier_price_id_seq'::regclass);
--
-- TOC entry 3047 (class 2604 OID 68529)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price ALTER COLUMN id SET DEFAULT nextval('pizza_price_id_seq'::regclass);
--
-- TOC entry 3048 (class 2604 OID 68530)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group ALTER COLUMN id SET DEFAULT nextval('printer_group_id_seq'::regclass);
--
-- TOC entry 3049 (class 2604 OID 68531)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order ALTER COLUMN id SET DEFAULT nextval('purchase_order_id_seq'::regclass);
--
-- TOC entry 3050 (class 2604 OID 68532)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie ALTER COLUMN id SET DEFAULT nextval('recepie_id_seq'::regclass);
--
-- TOC entry 3051 (class 2604 OID 68533)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item ALTER COLUMN id SET DEFAULT nextval('recepie_item_id_seq'::regclass);
--
-- TOC entry 3052 (class 2604 OID 68534)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift ALTER COLUMN id SET DEFAULT nextval('shift_id_seq'::regclass);
--
-- TOC entry 3053 (class 2604 OID 68535)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor ALTER COLUMN id SET DEFAULT nextval('shop_floor_id_seq'::regclass);
--
-- TOC entry 3054 (class 2604 OID 68536)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template ALTER COLUMN id SET DEFAULT nextval('shop_floor_template_id_seq'::regclass);
--
-- TOC entry 3055 (class 2604 OID 68537)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type ALTER COLUMN id SET DEFAULT nextval('shop_table_type_id_seq'::regclass);
--
-- TOC entry 3056 (class 2604 OID 68538)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info ALTER COLUMN id SET DEFAULT nextval('table_booking_info_id_seq'::regclass);
--
-- TOC entry 3057 (class 2604 OID 68539)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax ALTER COLUMN id SET DEFAULT nextval('tax_id_seq'::regclass);
--
-- TOC entry 3058 (class 2604 OID 68540)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers ALTER COLUMN id SET DEFAULT nextval('terminal_printers_id_seq'::regclass);
--
-- TOC entry 3028 (class 2604 OID 68541)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket ALTER COLUMN id SET DEFAULT nextval('ticket_id_seq'::regclass);
--
-- TOC entry 3059 (class 2604 OID 68542)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount ALTER COLUMN id SET DEFAULT nextval('ticket_discount_id_seq'::regclass);
--
-- TOC entry 3060 (class 2604 OID 68543)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item ALTER COLUMN id SET DEFAULT nextval('ticket_item_id_seq'::regclass);
--
-- TOC entry 3061 (class 2604 OID 68544)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount ALTER COLUMN id SET DEFAULT nextval('ticket_item_discount_id_seq'::regclass);
--
-- TOC entry 3062 (class 2604 OID 68545)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier ALTER COLUMN id SET DEFAULT nextval('ticket_item_modifier_id_seq'::regclass);
--
-- TOC entry 3063 (class 2604 OID 68546)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions ALTER COLUMN id SET DEFAULT nextval('transactions_id_seq'::regclass);
--
-- TOC entry 3064 (class 2604 OID 68547)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type ALTER COLUMN id SET DEFAULT nextval('user_type_id_seq'::regclass);
--
-- TOC entry 3065 (class 2604 OID 68548)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users ALTER COLUMN auto_id SET DEFAULT nextval('users_auto_id_seq'::regclass);
--
-- TOC entry 3066 (class 2604 OID 68549)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer ALTER COLUMN id SET DEFAULT nextval('virtual_printer_id_seq'::regclass);
--
-- TOC entry 3067 (class 2604 OID 68550)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons ALTER COLUMN id SET DEFAULT nextval('void_reasons_id_seq'::regclass);
--
-- TOC entry 3068 (class 2604 OID 68551)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge ALTER COLUMN auto_id SET DEFAULT nextval('zip_code_vs_delivery_charge_auto_id_seq'::regclass);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3069 (class 2604 OID 68552)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria ALTER COLUMN id SET DEFAULT nextval('auditoria_id_seq'::regclass);
--
-- TOC entry 3115 (class 2604 OID 73707)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cat_unidades ALTER COLUMN id SET DEFAULT nextval('cat_unidades_id_seq'::regclass);
--
-- TOC entry 3192 (class 2604 OID 77268)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad ALTER COLUMN id SET DEFAULT nextval('conversiones_unidad_id_seq'::regclass);
--
-- TOC entry 3220 (class 2604 OID 77396)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer ALTER COLUMN id SET DEFAULT nextval('cost_layer_id_seq'::regclass);
--
-- TOC entry 3113 (class 2604 OID 73692)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs ALTER COLUMN id SET DEFAULT nextval('failed_jobs_id_seq'::regclass);
--
-- TOC entry 3074 (class 2604 OID 68553)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago ALTER COLUMN id SET DEFAULT nextval('formas_pago_id_seq'::regclass);
--
-- TOC entry 3200 (class 2604 OID 77322)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item ALTER COLUMN id SET DEFAULT nextval('historial_costos_item_id_seq'::regclass);
--
-- TOC entry 3208 (class 2604 OID 77354)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta ALTER COLUMN id SET DEFAULT nextval('historial_costos_receta_id_seq'::regclass);
--
-- TOC entry 3132 (class 2604 OID 77076)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch ALTER COLUMN id SET DEFAULT nextval('inventory_batch_id_seq'::regclass);
--
-- TOC entry 3227 (class 2604 OID 77463)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_recalc_queue ALTER COLUMN id SET DEFAULT nextval('job_recalc_queue_id_seq'::regclass);
--
-- TOC entry 3112 (class 2604 OID 73672)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY jobs ALTER COLUMN id SET DEFAULT nextval('jobs_id_seq'::regclass);
--
-- TOC entry 3111 (class 2604 OID 73617)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY migrations ALTER COLUMN id SET DEFAULT nextval('migrations_id_seq'::regclass);
--
-- TOC entry 3223 (class 2604 OID 77427)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos ALTER COLUMN id SET DEFAULT nextval('modificadores_pos_id_seq'::regclass);
--
-- TOC entry 3143 (class 2604 OID 77100)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv ALTER COLUMN id SET DEFAULT nextval('mov_inv_id_seq'::regclass);
--
-- TOC entry 3166 (class 2604 OID 77197)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab ALTER COLUMN id SET DEFAULT nextval('op_produccion_cab_id_seq'::regclass);
--
-- TOC entry 3238 (class 2604 OID 77534)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal ALTER COLUMN id SET DEFAULT nextval('param_sucursal_id_seq'::regclass);
--
-- TOC entry 3252 (class 2604 OID 77592)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log ALTER COLUMN id SET DEFAULT nextval('perdida_log_id_seq'::regclass);
--
-- TOC entry 3270 (class 2604 OID 77718)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY permissions ALTER COLUMN id SET DEFAULT nextval('permissions_id_seq'::regclass);
--
-- TOC entry 3089 (class 2604 OID 68554)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte ALTER COLUMN id SET DEFAULT nextval('postcorte_id_seq'::regclass);
--
-- TOC entry 3097 (class 2604 OID 68555)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte ALTER COLUMN id SET DEFAULT nextval('precorte_id_seq'::regclass);
--
-- TOC entry 3099 (class 2604 OID 68556)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo ALTER COLUMN id SET DEFAULT nextval('precorte_efectivo_id_seq'::regclass);
--
-- TOC entry 3103 (class 2604 OID 68557)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros ALTER COLUMN id SET DEFAULT nextval('precorte_otros_id_seq'::regclass);
--
-- TOC entry 3232 (class 2604 OID 77478)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log ALTER COLUMN id SET DEFAULT nextval('recalc_log_id_seq'::regclass);
--
-- TOC entry 3160 (class 2604 OID 77171)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det ALTER COLUMN id SET DEFAULT nextval('receta_det_id_seq'::regclass);
--
-- TOC entry 3212 (class 2604 OID 77373)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_shadow ALTER COLUMN id SET DEFAULT nextval('receta_shadow_id_seq'::regclass);
--
-- TOC entry 3156 (class 2604 OID 77145)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version ALTER COLUMN id SET DEFAULT nextval('receta_version_id_seq'::regclass);
--
-- TOC entry 3271 (class 2604 OID 77731)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY roles ALTER COLUMN id SET DEFAULT nextval('roles_id_seq'::regclass);
--
-- TOC entry 3108 (class 2604 OID 68558)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon ALTER COLUMN id SET DEFAULT nextval('sesion_cajon_id_seq'::regclass);
--
-- TOC entry 3244 (class 2604 OID 77552)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy ALTER COLUMN id SET DEFAULT nextval('stock_policy_id_seq'::regclass);
--
-- TOC entry 3249 (class 2604 OID 77573)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sucursal_almacen_terminal ALTER COLUMN id SET DEFAULT nextval('sucursal_almacen_terminal_id_seq'::regclass);
--
-- TOC entry 3256 (class 2604 OID 77626)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo ALTER COLUMN id SET DEFAULT nextval('ticket_det_consumo_id_seq'::regclass);
--
-- TOC entry 3172 (class 2604 OID 77220)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab ALTER COLUMN id SET DEFAULT nextval('ticket_venta_cab_id_seq'::regclass);
--
-- TOC entry 3178 (class 2604 OID 77235)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det ALTER COLUMN id SET DEFAULT nextval('ticket_venta_det_id_seq'::regclass);
--
-- TOC entry 3183 (class 2604 OID 77250)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida ALTER COLUMN id SET DEFAULT nextval('unidades_medida_id_seq'::regclass);
--
-- TOC entry 3259 (class 2604 OID 77688)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);
SET search_path = public, pg_catalog;
--
-- TOC entry 3276 (class 2606 OID 68562)
-- Name: action_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT action_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3278 (class 2606 OID 68564)
-- Name: attendence_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT attendence_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3280 (class 2606 OID 68566)
-- Name: cash_drawer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT cash_drawer_pkey PRIMARY KEY (id);
--
-- TOC entry 3282 (class 2606 OID 68568)
-- Name: cash_drawer_reset_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT cash_drawer_reset_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3284 (class 2606 OID 68570)
-- Name: cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction
    ADD CONSTRAINT cooking_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 3286 (class 2606 OID 68572)
-- Name: coupon_and_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3288 (class 2606 OID 68574)
-- Name: coupon_and_discount_uuid_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_uuid_key UNIQUE (uuid);
--
-- TOC entry 3292 (class 2606 OID 68576)
-- Name: currency_balance_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT currency_balance_pkey PRIMARY KEY (id);
--
-- TOC entry 3290 (class 2606 OID 68578)
-- Name: currency_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency
    ADD CONSTRAINT currency_pkey PRIMARY KEY (id);
--
-- TOC entry 3294 (class 2606 OID 68580)
-- Name: custom_payment_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment
    ADD CONSTRAINT custom_payment_pkey PRIMARY KEY (id);
--
-- TOC entry 3296 (class 2606 OID 68582)
-- Name: customer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer
    ADD CONSTRAINT customer_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 3298 (class 2606 OID 68584)
-- Name: customer_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT customer_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3300 (class 2606 OID 68586)
-- Name: daily_folio_counter_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY daily_folio_counter
    ADD CONSTRAINT daily_folio_counter_pkey PRIMARY KEY (folio_date, branch_key);
--
-- TOC entry 3302 (class 2606 OID 68588)
-- Name: data_update_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info
    ADD CONSTRAINT data_update_info_pkey PRIMARY KEY (id);
--
-- TOC entry 3304 (class 2606 OID 68590)
-- Name: delivery_address_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT delivery_address_pkey PRIMARY KEY (id);
--
-- TOC entry 3306 (class 2606 OID 68592)
-- Name: delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge
    ADD CONSTRAINT delivery_charge_pkey PRIMARY KEY (id);
--
-- TOC entry 3308 (class 2606 OID 68594)
-- Name: delivery_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration
    ADD CONSTRAINT delivery_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 3310 (class 2606 OID 68596)
-- Name: delivery_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT delivery_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 3312 (class 2606 OID 68598)
-- Name: drawer_assigned_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT drawer_assigned_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3316 (class 2606 OID 68600)
-- Name: drawer_pull_report_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT drawer_pull_report_pkey PRIMARY KEY (id);
--
-- TOC entry 3319 (class 2606 OID 68602)
-- Name: employee_in_out_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT employee_in_out_history_pkey PRIMARY KEY (id);
--
-- TOC entry 3321 (class 2606 OID 68604)
-- Name: global_config_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pkey PRIMARY KEY (id);
--
-- TOC entry 3323 (class 2606 OID 68606)
-- Name: global_config_pos_key_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pos_key_key UNIQUE (pos_key);
--
-- TOC entry 3325 (class 2606 OID 68608)
-- Name: gratuity_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT gratuity_pkey PRIMARY KEY (id);
--
-- TOC entry 3327 (class 2606 OID 68610)
-- Name: guest_check_print_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT guest_check_print_pkey PRIMARY KEY (id);
--
-- TOC entry 3329 (class 2606 OID 68612)
-- Name: inventory_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group
    ADD CONSTRAINT inventory_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3331 (class 2606 OID 68614)
-- Name: inventory_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT inventory_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3333 (class 2606 OID 68616)
-- Name: inventory_location_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT inventory_location_pkey PRIMARY KEY (id);
--
-- TOC entry 3335 (class 2606 OID 68618)
-- Name: inventory_meta_code_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code
    ADD CONSTRAINT inventory_meta_code_pkey PRIMARY KEY (id);
--
-- TOC entry 3337 (class 2606 OID 68620)
-- Name: inventory_transaction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT inventory_transaction_pkey PRIMARY KEY (id);
--
-- TOC entry 3339 (class 2606 OID 68622)
-- Name: inventory_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit
    ADD CONSTRAINT inventory_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 3341 (class 2606 OID 68624)
-- Name: inventory_vendor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor
    ADD CONSTRAINT inventory_vendor_pkey PRIMARY KEY (id);
--
-- TOC entry 3343 (class 2606 OID 68626)
-- Name: inventory_warehouse_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse
    ADD CONSTRAINT inventory_warehouse_pkey PRIMARY KEY (id);
--
-- TOC entry 3367 (class 2606 OID 68628)
-- Name: kds_ready_log_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kds_ready_log
    ADD CONSTRAINT kds_ready_log_pkey PRIMARY KEY (ticket_id);
--
-- TOC entry 3370 (class 2606 OID 68630)
-- Name: kitchen_ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT kitchen_ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3346 (class 2606 OID 68632)
-- Name: kitchen_ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT kitchen_ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 3373 (class 2606 OID 68634)
-- Name: menu_category_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category
    ADD CONSTRAINT menu_category_pkey PRIMARY KEY (id);
--
-- TOC entry 3375 (class 2606 OID 68636)
-- Name: menu_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT menu_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3378 (class 2606 OID 68638)
-- Name: menu_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT menu_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3380 (class 2606 OID 68640)
-- Name: menu_item_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT menu_item_properties_pkey PRIMARY KEY (menu_item_id, property_name);
--
-- TOC entry 3382 (class 2606 OID 68642)
-- Name: menu_item_size_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size
    ADD CONSTRAINT menu_item_size_pkey PRIMARY KEY (id);
--
-- TOC entry 3387 (class 2606 OID 68644)
-- Name: menu_modifier_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group
    ADD CONSTRAINT menu_modifier_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3384 (class 2606 OID 68646)
-- Name: menu_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT menu_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 3390 (class 2606 OID 68648)
-- Name: menu_modifier_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT menu_modifier_properties_pkey PRIMARY KEY (menu_modifier_id, property_name);
--
-- TOC entry 3392 (class 2606 OID 68650)
-- Name: menuitem_modifiergroup_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT menuitem_modifiergroup_pkey PRIMARY KEY (id);
--
-- TOC entry 3394 (class 2606 OID 68652)
-- Name: menuitem_shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT menuitem_shift_pkey PRIMARY KEY (id);
--
-- TOC entry 3531 (class 2606 OID 73607)
-- Name: migrations_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: postgres
--

ALTER TABLE ONLY migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);
--
-- TOC entry 3396 (class 2606 OID 68654)
-- Name: modifier_multiplier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT modifier_multiplier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3398 (class 2606 OID 68656)
-- Name: multiplier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY multiplier
    ADD CONSTRAINT multiplier_pkey PRIMARY KEY (name);
--
-- TOC entry 3400 (class 2606 OID 68658)
-- Name: order_type_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_name_key UNIQUE (name);
--
-- TOC entry 3402 (class 2606 OID 68660)
-- Name: order_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3404 (class 2606 OID 68662)
-- Name: packaging_unit_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_name_key UNIQUE (name);
--
-- TOC entry 3406 (class 2606 OID 68664)
-- Name: packaging_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 3408 (class 2606 OID 68666)
-- Name: payout_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons
    ADD CONSTRAINT payout_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 3410 (class 2606 OID 68668)
-- Name: payout_recepients_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients
    ADD CONSTRAINT payout_recepients_pkey PRIMARY KEY (id);
--
-- TOC entry 3412 (class 2606 OID 68670)
-- Name: pizza_crust_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust
    ADD CONSTRAINT pizza_crust_pkey PRIMARY KEY (id);
--
-- TOC entry 3414 (class 2606 OID 68672)
-- Name: pizza_modifier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT pizza_modifier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3416 (class 2606 OID 68674)
-- Name: pizza_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT pizza_price_pkey PRIMARY KEY (id);
--
-- TOC entry 3418 (class 2606 OID 68676)
-- Name: printer_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_configuration
    ADD CONSTRAINT printer_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 3420 (class 2606 OID 68678)
-- Name: printer_group_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_name_key UNIQUE (name);
--
-- TOC entry 3422 (class 2606 OID 68680)
-- Name: printer_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3424 (class 2606 OID 68682)
-- Name: purchase_order_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_pkey PRIMARY KEY (id);
--
-- TOC entry 3428 (class 2606 OID 68684)
-- Name: recepie_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT recepie_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3426 (class 2606 OID 68686)
-- Name: recepie_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT recepie_pkey PRIMARY KEY (id);
--
-- TOC entry 3430 (class 2606 OID 68688)
-- Name: restaurant_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant
    ADD CONSTRAINT restaurant_pkey PRIMARY KEY (id);
--
-- TOC entry 3432 (class 2606 OID 68690)
-- Name: restaurant_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT restaurant_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3434 (class 2606 OID 68692)
-- Name: shift_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_name_key UNIQUE (name);
--
-- TOC entry 3436 (class 2606 OID 68694)
-- Name: shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_pkey PRIMARY KEY (id);
--
-- TOC entry 3438 (class 2606 OID 68696)
-- Name: shop_floor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor
    ADD CONSTRAINT shop_floor_pkey PRIMARY KEY (id);
--
-- TOC entry 3440 (class 2606 OID 68698)
-- Name: shop_floor_template_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT shop_floor_template_pkey PRIMARY KEY (id);
--
-- TOC entry 3442 (class 2606 OID 68700)
-- Name: shop_floor_template_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT shop_floor_template_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3444 (class 2606 OID 68702)
-- Name: shop_table_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT shop_table_pkey PRIMARY KEY (id);
--
-- TOC entry 3446 (class 2606 OID 68704)
-- Name: shop_table_status_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_status
    ADD CONSTRAINT shop_table_status_pkey PRIMARY KEY (id);
--
-- TOC entry 3448 (class 2606 OID 68706)
-- Name: shop_table_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type
    ADD CONSTRAINT shop_table_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3451 (class 2606 OID 68708)
-- Name: table_booking_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT table_booking_info_pkey PRIMARY KEY (id);
--
-- TOC entry 3456 (class 2606 OID 68710)
-- Name: tax_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax_group
    ADD CONSTRAINT tax_group_pkey PRIMARY KEY (id);
--
-- TOC entry 3454 (class 2606 OID 68712)
-- Name: tax_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax
    ADD CONSTRAINT tax_pkey PRIMARY KEY (id);
--
-- TOC entry 3348 (class 2606 OID 68714)
-- Name: terminal_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT terminal_pkey PRIMARY KEY (id);
--
-- TOC entry 3458 (class 2606 OID 68716)
-- Name: terminal_printers_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT terminal_printers_pkey PRIMARY KEY (id);
--
-- TOC entry 3460 (class 2606 OID 68718)
-- Name: terminal_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT terminal_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3462 (class 2606 OID 68720)
-- Name: ticket_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT ticket_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3356 (class 2606 OID 68722)
-- Name: ticket_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_global_id_key UNIQUE (global_id);
--
-- TOC entry 3467 (class 2606 OID 68724)
-- Name: ticket_item_addon_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT ticket_item_addon_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 3469 (class 2606 OID 68726)
-- Name: ticket_item_cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT ticket_item_cooking_instruction_pkey PRIMARY KEY (ticket_item_id, item_order);
--
-- TOC entry 3471 (class 2606 OID 68728)
-- Name: ticket_item_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT ticket_item_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 3473 (class 2606 OID 68730)
-- Name: ticket_item_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT ticket_item_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 3475 (class 2606 OID 68732)
-- Name: ticket_item_modifier_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT ticket_item_modifier_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 3465 (class 2606 OID 68734)
-- Name: ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3358 (class 2606 OID 68736)
-- Name: ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 3477 (class 2606 OID 68738)
-- Name: ticket_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT ticket_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3479 (class 2606 OID 68740)
-- Name: transaction_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT transaction_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 3483 (class 2606 OID 68742)
-- Name: transactions_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_global_id_key UNIQUE (global_id);
--
-- TOC entry 3485 (class 2606 OID 68744)
-- Name: transactions_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_pkey PRIMARY KEY (id);
--
-- TOC entry 3487 (class 2606 OID 68746)
-- Name: user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_permission
    ADD CONSTRAINT user_permission_pkey PRIMARY KEY (name);
--
-- TOC entry 3489 (class 2606 OID 68748)
-- Name: user_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type
    ADD CONSTRAINT user_type_pkey PRIMARY KEY (id);
--
-- TOC entry 3491 (class 2606 OID 68750)
-- Name: user_user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT user_user_permission_pkey PRIMARY KEY (permissionid, elt);
--
-- TOC entry 3493 (class 2606 OID 68752)
-- Name: users_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 3495 (class 2606 OID 68754)
-- Name: users_user_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_id_key UNIQUE (user_id);
--
-- TOC entry 3497 (class 2606 OID 68756)
-- Name: users_user_pass_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_pass_key UNIQUE (user_pass);
--
-- TOC entry 3499 (class 2606 OID 68758)
-- Name: virtual_printer_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_name_key UNIQUE (name);
--
-- TOC entry 3501 (class 2606 OID 68760)
-- Name: virtual_printer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_pkey PRIMARY KEY (id);
--
-- TOC entry 3503 (class 2606 OID 68762)
-- Name: void_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons
    ADD CONSTRAINT void_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 3505 (class 2606 OID 68764)
-- Name: zip_code_vs_delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge
    ADD CONSTRAINT zip_code_vs_delivery_charge_pkey PRIMARY KEY (auto_id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3661 (class 2606 OID 77978)
-- Name: almacen_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY almacen
    ADD CONSTRAINT almacen_pkey PRIMARY KEY (id);
--
-- TOC entry 3507 (class 2606 OID 68766)
-- Name: auditoria_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria
    ADD CONSTRAINT auditoria_pkey PRIMARY KEY (id);
--
-- TOC entry 3543 (class 2606 OID 73666)
-- Name: cache_locks_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cache_locks
    ADD CONSTRAINT cache_locks_pkey PRIMARY KEY (key);
--
-- TOC entry 3541 (class 2606 OID 73658)
-- Name: cache_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cache
    ADD CONSTRAINT cache_pkey PRIMARY KEY (key);
--
-- TOC entry 3554 (class 2606 OID 73709)
-- Name: cat_unidades_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cat_unidades
    ADD CONSTRAINT cat_unidades_pkey PRIMARY KEY (id);
--
-- TOC entry 3592 (class 2606 OID 77278)
-- Name: conversiones_unidad_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_pkey PRIMARY KEY (id);
--
-- TOC entry 3594 (class 2606 OID 77280)
-- Name: conversiones_unidad_unidad_origen_id_unidad_destino_id_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_origen_id_unidad_destino_id_key UNIQUE (unidad_origen_id, unidad_destino_id);
--
-- TOC entry 3605 (class 2606 OID 77401)
-- Name: cost_layer_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_pkey PRIMARY KEY (id);
--
-- TOC entry 3550 (class 2606 OID 73698)
-- Name: failed_jobs_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs
    ADD CONSTRAINT failed_jobs_pkey PRIMARY KEY (id);
--
-- TOC entry 3552 (class 2606 OID 73700)
-- Name: failed_jobs_uuid_unique;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY failed_jobs
    ADD CONSTRAINT failed_jobs_uuid_unique UNIQUE (uuid);
--
-- TOC entry 3509 (class 2606 OID 68768)
-- Name: formas_pago_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago
    ADD CONSTRAINT formas_pago_pkey PRIMARY KEY (id);
--
-- TOC entry 3596 (class 2606 OID 77338)
-- Name: historial_costos_item_item_id_fecha_efectiva_version_datos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_item_id_fecha_efectiva_version_datos_key UNIQUE (item_id, fecha_efectiva, version_datos);
--
-- TOC entry 3598 (class 2606 OID 77336)
-- Name: historial_costos_item_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_pkey PRIMARY KEY (id);
--
-- TOC entry 3601 (class 2606 OID 77362)
-- Name: historial_costos_receta_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta
    ADD CONSTRAINT historial_costos_receta_pkey PRIMARY KEY (id);
--
-- TOC entry 3562 (class 2606 OID 77089)
-- Name: inventory_batch_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch
    ADD CONSTRAINT inventory_batch_pkey PRIMARY KEY (id);
--
-- TOC entry 3618 (class 2606 OID 77501)
-- Name: item_vendor_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_pkey PRIMARY KEY (item_id, vendor_id, presentacion);
--
-- TOC entry 3558 (class 2606 OID 77070)
-- Name: items_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_pkey PRIMARY KEY (id);
--
-- TOC entry 3548 (class 2606 OID 73686)
-- Name: job_batches_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_batches
    ADD CONSTRAINT job_batches_pkey PRIMARY KEY (id);
--
-- TOC entry 3614 (class 2606 OID 77472)
-- Name: job_recalc_queue_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY job_recalc_queue
    ADD CONSTRAINT job_recalc_queue_pkey PRIMARY KEY (id);
--
-- TOC entry 3545 (class 2606 OID 73677)
-- Name: jobs_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY jobs
    ADD CONSTRAINT jobs_pkey PRIMARY KEY (id);
--
-- TOC entry 3533 (class 2606 OID 73619)
-- Name: migrations_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);
--
-- TOC entry 3652 (class 2606 OID 77749)
-- Name: model_has_permissions_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY model_has_permissions
    ADD CONSTRAINT model_has_permissions_pkey PRIMARY KEY (permission_id, model_id, model_type);
--
-- TOC entry 3655 (class 2606 OID 77760)
-- Name: model_has_roles_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY model_has_roles
    ADD CONSTRAINT model_has_roles_pkey PRIMARY KEY (role_id, model_id, model_type);
--
-- TOC entry 3610 (class 2606 OID 77434)
-- Name: modificadores_pos_codigo_pos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_codigo_pos_key UNIQUE (codigo_pos);
--
-- TOC entry 3612 (class 2606 OID 77432)
-- Name: modificadores_pos_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_pkey PRIMARY KEY (id);
--
-- TOC entry 3566 (class 2606 OID 77106)
-- Name: mov_inv_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_pkey PRIMARY KEY (id);
--
-- TOC entry 3579 (class 2606 OID 77204)
-- Name: op_produccion_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab
    ADD CONSTRAINT op_produccion_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3620 (class 2606 OID 77544)
-- Name: param_sucursal_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal
    ADD CONSTRAINT param_sucursal_pkey PRIMARY KEY (id);
--
-- TOC entry 3622 (class 2606 OID 77546)
-- Name: param_sucursal_sucursal_id_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY param_sucursal
    ADD CONSTRAINT param_sucursal_sucursal_id_key UNIQUE (sucursal_id);
--
-- TOC entry 3535 (class 2606 OID 73640)
-- Name: password_reset_tokens_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY password_reset_tokens
    ADD CONSTRAINT password_reset_tokens_pkey PRIMARY KEY (email);
--
-- TOC entry 3632 (class 2606 OID 77600)
-- Name: perdida_log_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_pkey PRIMARY KEY (id);
--
-- TOC entry 3643 (class 2606 OID 77725)
-- Name: permissions_name_guard_name_unique;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY permissions
    ADD CONSTRAINT permissions_name_guard_name_unique UNIQUE (name, guard_name);
--
-- TOC entry 3645 (class 2606 OID 77723)
-- Name: permissions_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY permissions
    ADD CONSTRAINT permissions_pkey PRIMARY KEY (id);
--
-- TOC entry 3608 (class 2606 OID 77421)
-- Name: pos_map_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY pos_map
    ADD CONSTRAINT pos_map_pkey PRIMARY KEY (pos_system, plu, valid_from, sys_from);
--
-- TOC entry 3512 (class 2606 OID 68770)
-- Name: postcorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3520 (class 2606 OID 68772)
-- Name: precorte_efectivo_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_pkey PRIMARY KEY (id);
--
-- TOC entry 3523 (class 2606 OID 68774)
-- Name: precorte_otros_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_pkey PRIMARY KEY (id);
--
-- TOC entry 3517 (class 2606 OID 68776)
-- Name: precorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3663 (class 2606 OID 77992)
-- Name: proveedor_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY proveedor
    ADD CONSTRAINT proveedor_pkey PRIMARY KEY (id);
--
-- TOC entry 3616 (class 2606 OID 77483)
-- Name: recalc_log_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log
    ADD CONSTRAINT recalc_log_pkey PRIMARY KEY (id);
--
-- TOC entry 3568 (class 2606 OID 77139)
-- Name: receta_cab_codigo_plato_pos_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_cab
    ADD CONSTRAINT receta_cab_codigo_plato_pos_key UNIQUE (codigo_plato_pos);
--
-- TOC entry 3570 (class 2606 OID 77137)
-- Name: receta_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_cab
    ADD CONSTRAINT receta_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3577 (class 2606 OID 77181)
-- Name: receta_det_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_pkey PRIMARY KEY (id);
--
-- TOC entry 3603 (class 2606 OID 77385)
-- Name: receta_shadow_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_shadow
    ADD CONSTRAINT receta_shadow_pkey PRIMARY KEY (id);
--
-- TOC entry 3573 (class 2606 OID 77153)
-- Name: receta_version_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_pkey PRIMARY KEY (id);
--
-- TOC entry 3575 (class 2606 OID 77155)
-- Name: receta_version_receta_id_version_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_receta_id_version_key UNIQUE (receta_id, version);
--
-- TOC entry 3657 (class 2606 OID 77775)
-- Name: role_has_permissions_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY role_has_permissions
    ADD CONSTRAINT role_has_permissions_pkey PRIMARY KEY (permission_id, role_id);
--
-- TOC entry 3647 (class 2606 OID 77738)
-- Name: roles_name_guard_name_unique;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY roles
    ADD CONSTRAINT roles_name_guard_name_unique UNIQUE (name, guard_name);
--
-- TOC entry 3649 (class 2606 OID 77736)
-- Name: roles_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY roles
    ADD CONSTRAINT roles_pkey PRIMARY KEY (id);
--
-- TOC entry 3527 (class 2606 OID 68778)
-- Name: sesion_cajon_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_pkey PRIMARY KEY (id);
--
-- TOC entry 3529 (class 2606 OID 68780)
-- Name: sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key UNIQUE (terminal_id, cajero_usuario_id, apertura_ts);
--
-- TOC entry 3538 (class 2606 OID 73648)
-- Name: sessions_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);
--
-- TOC entry 3626 (class 2606 OID 77561)
-- Name: stock_policy_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy
    ADD CONSTRAINT stock_policy_pkey PRIMARY KEY (id);
--
-- TOC entry 3629 (class 2606 OID 77580)
-- Name: sucursal_almacen_terminal_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sucursal_almacen_terminal
    ADD CONSTRAINT sucursal_almacen_terminal_pkey PRIMARY KEY (id);
--
-- TOC entry 3659 (class 2606 OID 77969)
-- Name: sucursal_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY sucursal
    ADD CONSTRAINT sucursal_pkey PRIMARY KEY (id);
--
-- TOC entry 3637 (class 2606 OID 77633)
-- Name: ticket_det_consumo_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_pkey PRIMARY KEY (id);
--
-- TOC entry 3582 (class 2606 OID 77229)
-- Name: ticket_venta_cab_numero_ticket_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab
    ADD CONSTRAINT ticket_venta_cab_numero_ticket_key UNIQUE (numero_ticket);
--
-- TOC entry 3584 (class 2606 OID 77227)
-- Name: ticket_venta_cab_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_cab
    ADD CONSTRAINT ticket_venta_cab_pkey PRIMARY KEY (id);
--
-- TOC entry 3586 (class 2606 OID 77239)
-- Name: ticket_venta_det_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_pkey PRIMARY KEY (id);
--
-- TOC entry 3588 (class 2606 OID 77262)
-- Name: unidades_medida_codigo_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida
    ADD CONSTRAINT unidades_medida_codigo_key UNIQUE (codigo);
--
-- TOC entry 3590 (class 2606 OID 77260)
-- Name: unidades_medida_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY unidades_medida
    ADD CONSTRAINT unidades_medida_pkey PRIMARY KEY (id);
--
-- TOC entry 3514 (class 2606 OID 68782)
-- Name: uq_postcorte_sesion_id;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT uq_postcorte_sesion_id UNIQUE (sesion_id);
--
-- TOC entry 3556 (class 2606 OID 77041)
-- Name: user_roles_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY user_roles
    ADD CONSTRAINT user_roles_pkey PRIMARY KEY (user_id, role_id);
--
-- TOC entry 3639 (class 2606 OID 77703)
-- Name: users_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);
--
-- TOC entry 3641 (class 2606 OID 77705)
-- Name: users_username_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_username_key UNIQUE (username);
SET search_path = public, pg_catalog;
--
-- TOC entry 3349 (class 1259 OID 68783)
-- Name: creationhour;
Type: INDEX;
Schema: public;
--
-- TOC entry 3350 (class 1259 OID 68784)
-- Name: deliverydate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3317 (class 1259 OID 68785)
-- Name: drawer_report_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3351 (class 1259 OID 68786)
-- Name: drawerresetted;
Type: INDEX;
Schema: public;
--
-- TOC entry 3371 (class 1259 OID 68787)
-- Name: food_category_visible;
Type: INDEX;
Schema: public;
--
-- TOC entry 3449 (class 1259 OID 68788)
-- Name: fromdate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3313 (class 1259 OID 68789)
-- Name: idx_dah_user_op_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3314 (class 1259 OID 68790)
-- Name: idx_drawer_assigned_history_user_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3352 (class 1259 OID 68791)
-- Name: idx_ticket_close_term_owner;
Type: INDEX;
Schema: public;
--
-- TOC entry 3480 (class 1259 OID 68792)
-- Name: idx_tx_term_user_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 3368 (class 1259 OID 68793)
-- Name: ix_kitchen_ticket_item_item_id;
Type: INDEX;
Schema: public;
--
-- TOC entry 3344 (class 1259 OID 68794)
-- Name: ix_kitchen_ticket_ticket_id;
Type: INDEX;
Schema: public;
--
-- TOC entry 3353 (class 1259 OID 68795)
-- Name: ix_ticket_branch_key;
Type: INDEX;
Schema: public;
--
-- TOC entry 3354 (class 1259 OID 68796)
-- Name: ix_ticket_folio_date;
Type: INDEX;
Schema: public;
--
-- TOC entry 3463 (class 1259 OID 68797)
-- Name: ix_ticket_item_ticket_pg;
Type: INDEX;
Schema: public;
--
-- TOC entry 3376 (class 1259 OID 68798)
-- Name: menugroupvisible;
Type: INDEX;
Schema: public;
--
-- TOC entry 3388 (class 1259 OID 68799)
-- Name: mg_enable;
Type: INDEX;
Schema: public;
--
-- TOC entry 3385 (class 1259 OID 68800)
-- Name: modifierenabled;
Type: INDEX;
Schema: public;
--
-- TOC entry 3359 (class 1259 OID 68801)
-- Name: ticketactivedate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3360 (class 1259 OID 68802)
-- Name: ticketclosingdate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3361 (class 1259 OID 68803)
-- Name: ticketcreatedate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3362 (class 1259 OID 68804)
-- Name: ticketpaid;
Type: INDEX;
Schema: public;
--
-- TOC entry 3363 (class 1259 OID 68805)
-- Name: ticketsettled;
Type: INDEX;
Schema: public;
--
-- TOC entry 3364 (class 1259 OID 68806)
-- Name: ticketvoided;
Type: INDEX;
Schema: public;
--
-- TOC entry 3452 (class 1259 OID 68807)
-- Name: todate;
Type: INDEX;
Schema: public;
--
-- TOC entry 3481 (class 1259 OID 68808)
-- Name: tran_drawer_resetted;
Type: INDEX;
Schema: public;
--
-- TOC entry 3365 (class 1259 OID 68809)
-- Name: ux_ticket_dailyfolio;
Type: INDEX;
Schema: public;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3599 (class 1259 OID 77656)
-- Name: idx_historial_costos_item_fecha;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3559 (class 1259 OID 77653)
-- Name: idx_inventory_batch_caducidad;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3560 (class 1259 OID 77652)
-- Name: idx_inventory_batch_item;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3563 (class 1259 OID 77651)
-- Name: idx_mov_inv_item_ts;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3564 (class 1259 OID 77650)
-- Name: idx_mov_inv_tipo_fecha;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3630 (class 1259 OID 77658)
-- Name: idx_perdida_item_ts;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3515 (class 1259 OID 68810)
-- Name: idx_precorte_sesion_id;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3571 (class 1259 OID 77654)
-- Name: idx_receta_version_publicada;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3623 (class 1259 OID 77657)
-- Name: idx_stock_policy_item_suc;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3624 (class 1259 OID 77567)
-- Name: idx_stock_policy_unique;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3627 (class 1259 OID 77581)
-- Name: idx_suc_alm_term_unique;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3633 (class 1259 OID 77649)
-- Name: idx_tick_cons_unique;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3634 (class 1259 OID 77660)
-- Name: idx_tickcons_lote;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3635 (class 1259 OID 77659)
-- Name: idx_tickcons_ticket;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3580 (class 1259 OID 77655)
-- Name: idx_ticket_venta_fecha;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3606 (class 1259 OID 77661)
-- Name: ix_layer_item_suc;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3521 (class 1259 OID 68811)
-- Name: ix_precorte_otros_precorte;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3524 (class 1259 OID 68812)
-- Name: ix_sesion_cajon_cajero;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3525 (class 1259 OID 68813)
-- Name: ix_sesion_cajon_terminal;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3546 (class 1259 OID 73678)
-- Name: jobs_queue_index;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3650 (class 1259 OID 77742)
-- Name: model_has_permissions_model_id_model_type_index;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3653 (class 1259 OID 77753)
-- Name: model_has_roles_model_id_model_type_index;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3518 (class 1259 OID 68814)
-- Name: precorte_sesion_id_idx;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3536 (class 1259 OID 73650)
-- Name: sessions_last_activity_index;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3539 (class 1259 OID 73649)
-- Name: sessions_user_id_index;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3510 (class 1259 OID 68815)
-- Name: uq_fp_huella_expr;
Type: INDEX;
Schema: selemti;
SET search_path = public, pg_catalog;
--
-- TOC entry 3831 (class 2620 OID 68816)
-- Name: trg_assign_daily_folio;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3832 (class 2620 OID 68817)
-- Name: trg_kds_notify_kti;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3833 (class 2620 OID 68818)
-- Name: trg_kds_notify_ti;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3829 (class 2620 OID 68819)
-- Name: trg_selemti_dah_ai;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3830 (class 2620 OID 68820)
-- Name: trg_selemti_terminal_bu_snapshot;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3834 (class 2620 OID 68821)
-- Name: trg_selemti_tx_ai_forma_pago;
Type: TRIGGER;
Schema: public;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3835 (class 2620 OID 68822)
-- Name: trg_precorte_efectivo_bi;
Type: TRIGGER;
Schema: selemti;
SET search_path = public, pg_catalog;
--
-- TOC entry 3724 (class 2606 OID 68823)
-- Name: fk1273b4bbb79c6270;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT fk1273b4bbb79c6270 FOREIGN KEY (menu_modifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3711 (class 2606 OID 68828)
-- Name: fk1462f02bcb07faa3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT fk1462f02bcb07faa3 FOREIGN KEY (kithen_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3735 (class 2606 OID 68833)
-- Name: fk17bd51a089fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a089fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3734 (class 2606 OID 68838)
-- Name: fk17bd51a0ae5d580;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a0ae5d580 FOREIGN KEY (pizza_price_id) REFERENCES pizza_price(id);
--
-- TOC entry 3765 (class 2606 OID 68843)
-- Name: fk1fa465141df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT fk1fa465141df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3754 (class 2606 OID 68848)
-- Name: fk2458e9258979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT fk2458e9258979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3674 (class 2606 OID 68853)
-- Name: fk29aca6899e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT fk29aca6899e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3675 (class 2606 OID 68858)
-- Name: fk29d9ca39e1c3d97;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT fk29d9ca39e1c3d97 FOREIGN KEY (customer_no) REFERENCES customer(auto_id);
--
-- TOC entry 3672 (class 2606 OID 68863)
-- Name: fk2cc0e08e28dd6c11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e28dd6c11 FOREIGN KEY (currency_id) REFERENCES currency(id);
--
-- TOC entry 3671 (class 2606 OID 68868)
-- Name: fk2cc0e08e9006558;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e9006558 FOREIGN KEY (cash_drawer_id) REFERENCES cash_drawer(id);
--
-- TOC entry 3670 (class 2606 OID 68873)
-- Name: fk2cc0e08efb910735;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08efb910735 FOREIGN KEY (dpr_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3785 (class 2606 OID 68878)
-- Name: fk2dbeaa4f283ecc6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f283ecc6 FOREIGN KEY (permissionid) REFERENCES user_type(id);
--
-- TOC entry 3784 (class 2606 OID 68883)
-- Name: fk2dbeaa4f8f23f5e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f8f23f5e FOREIGN KEY (elt) REFERENCES user_permission(name);
--
-- TOC entry 3756 (class 2606 OID 68888)
-- Name: fk301c4de53e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de53e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3755 (class 2606 OID 68893)
-- Name: fk301c4de59e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de59e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3733 (class 2606 OID 68898)
-- Name: fk312b355b40fda3c9;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b40fda3c9 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3732 (class 2606 OID 68903)
-- Name: fk312b355b6e7b8b68;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b6e7b8b68 FOREIGN KEY (menuitem_modifiergroup_id) REFERENCES menu_item(id);
--
-- TOC entry 3731 (class 2606 OID 68908)
-- Name: fk312b355b7f2f368;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b7f2f368 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3702 (class 2606 OID 68913)
-- Name: fk341cbc275cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT fk341cbc275cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3685 (class 2606 OID 68918)
-- Name: fk34e4e3771df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3771df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3684 (class 2606 OID 68923)
-- Name: fk34e4e3772ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3772ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3683 (class 2606 OID 68928)
-- Name: fk34e4e377aa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e377aa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3771 (class 2606 OID 68933)
-- Name: fk3825f9d0dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT fk3825f9d0dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3772 (class 2606 OID 68938)
-- Name: fk3df5d4fab9276e77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT fk3df5d4fab9276e77 FOREIGN KEY (ticket_itemid) REFERENCES ticket_item(id);
--
-- TOC entry 3664 (class 2606 OID 68943)
-- Name: fk3f3af36b3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT fk3f3af36b3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3717 (class 2606 OID 68948)
-- Name: fk4cd5a1f35188aa24;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35188aa24 FOREIGN KEY (group_id) REFERENCES menu_group(id);
--
-- TOC entry 3716 (class 2606 OID 68953)
-- Name: fk4cd5a1f35cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3715 (class 2606 OID 68958)
-- Name: fk4cd5a1f35ee9f27a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35ee9f27a FOREIGN KEY (tax_group_id) REFERENCES tax_group(id);
--
-- TOC entry 3714 (class 2606 OID 68963)
-- Name: fk4cd5a1f3a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3713 (class 2606 OID 68968)
-- Name: fk4cd5a1f3f3b77c57;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3f3b77c57 FOREIGN KEY (recepie) REFERENCES recepie(id);
--
-- TOC entry 3788 (class 2606 OID 68973)
-- Name: fk4d495e87660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e87660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3787 (class 2606 OID 68978)
-- Name: fk4d495e8897b1e39;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8897b1e39 FOREIGN KEY (n_user_type) REFERENCES user_type(id);
--
-- TOC entry 3786 (class 2606 OID 68983)
-- Name: fk4d495e8d9409968;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8d9409968 FOREIGN KEY (currentterminal) REFERENCES terminal(id);
--
-- TOC entry 3712 (class 2606 OID 68988)
-- Name: fk4dc1ab7f2e347ff0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT fk4dc1ab7f2e347ff0 FOREIGN KEY (category_id) REFERENCES menu_category(id);
--
-- TOC entry 3726 (class 2606 OID 68993)
-- Name: fk4f8523e38d9ea931;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e38d9ea931 FOREIGN KEY (menucategory_id) REFERENCES menu_category(id);
--
-- TOC entry 3725 (class 2606 OID 68998)
-- Name: fk4f8523e3d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e3d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3710 (class 2606 OID 69003)
-- Name: fk5696584bb73e273e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kit_ticket_table_num
    ADD CONSTRAINT fk5696584bb73e273e FOREIGN KEY (kit_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3739 (class 2606 OID 69008)
-- Name: fk572726f374be2c71;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f374be2c71 FOREIGN KEY (pizzamodifierprice_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3738 (class 2606 OID 69013)
-- Name: fk572726f3ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f3ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3694 (class 2606 OID 69018)
-- Name: fk59073b58c46a9c15;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT fk59073b58c46a9c15 FOREIGN KEY (warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3723 (class 2606 OID 69023)
-- Name: fk59b6b1b72501cb2c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b72501cb2c FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3722 (class 2606 OID 69028)
-- Name: fk59b6b1b75e0c7b8d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b75e0c7b8d FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3721 (class 2606 OID 69033)
-- Name: fk59b6b1b7a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b7a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3676 (class 2606 OID 69038)
-- Name: fk5a823c91f1dd782b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT fk5a823c91f1dd782b FOREIGN KEY (a_user) REFERENCES users(auto_id);
--
-- TOC entry 3775 (class 2606 OID 69043)
-- Name: fk5d3f9acb6c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acb6c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3774 (class 2606 OID 69048)
-- Name: fk5d3f9acbdec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acbdec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3668 (class 2606 OID 69053)
-- Name: fk6221077d2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT fk6221077d2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3777 (class 2606 OID 69058)
-- Name: fk65af15e21df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_table_num
    ADD CONSTRAINT fk65af15e21df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3748 (class 2606 OID 69063)
-- Name: fk6b4e177764931efc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT fk6b4e177764931efc FOREIGN KEY (menu_item) REFERENCES menu_item(id);
--
-- TOC entry 3758 (class 2606 OID 69068)
-- Name: fk6bc51417160de3b1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417160de3b1 FOREIGN KEY (booking_id) REFERENCES table_booking_info(id);
--
-- TOC entry 3757 (class 2606 OID 69073)
-- Name: fk6bc51417dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3682 (class 2606 OID 69078)
-- Name: fk6d5db9fa2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3681 (class 2606 OID 69083)
-- Name: fk6d5db9fa3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3680 (class 2606 OID 69088)
-- Name: fk6d5db9fa7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3776 (class 2606 OID 69093)
-- Name: fk70ecd046223049de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT fk70ecd046223049de FOREIGN KEY (id) REFERENCES ticket(id);
--
-- TOC entry 3669 (class 2606 OID 69098)
-- Name: fk719418223e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT fk719418223e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3693 (class 2606 OID 69103)
-- Name: fk7dc968362cd583c1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968362cd583c1 FOREIGN KEY (item_group_id) REFERENCES inventory_group(id);
--
-- TOC entry 3692 (class 2606 OID 69108)
-- Name: fk7dc968363525e956;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968363525e956 FOREIGN KEY (punit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3691 (class 2606 OID 69113)
-- Name: fk7dc968366848d615;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968366848d615 FOREIGN KEY (recipe_unit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3690 (class 2606 OID 69118)
-- Name: fk7dc9683695e455d3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc9683695e455d3 FOREIGN KEY (item_location_id) REFERENCES inventory_location(id);
--
-- TOC entry 3689 (class 2606 OID 69123)
-- Name: fk7dc968369e60c333;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968369e60c333 FOREIGN KEY (item_vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3751 (class 2606 OID 69128)
-- Name: fk80ad9f75fc64768f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT fk80ad9f75fc64768f FOREIGN KEY (id) REFERENCES restaurant(id);
--
-- TOC entry 3750 (class 2606 OID 69133)
-- Name: fk855626db1682b10e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626db1682b10e FOREIGN KEY (inventory_item) REFERENCES inventory_item(id);
--
-- TOC entry 3749 (class 2606 OID 69138)
-- Name: fk855626dbcae89b83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626dbcae89b83 FOREIGN KEY (recepie_id) REFERENCES recepie(id);
--
-- TOC entry 3742 (class 2606 OID 69143)
-- Name: fk8a16099391d62c51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a16099391d62c51 FOREIGN KEY (multiplier_id) REFERENCES multiplier(name);
--
-- TOC entry 3741 (class 2606 OID 69148)
-- Name: fk8a1609939c9e4883;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a1609939c9e4883 FOREIGN KEY (pizza_modifier_price_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3740 (class 2606 OID 69153)
-- Name: fk8a160993ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a160993ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3773 (class 2606 OID 69158)
-- Name: fk8fd6290dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT fk8fd6290dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3709 (class 2606 OID 69163)
-- Name: fk937b5f0c1f6a9a4a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c1f6a9a4a FOREIGN KEY (void_by_user) REFERENCES users(auto_id);
--
-- TOC entry 3708 (class 2606 OID 69168)
-- Name: fk937b5f0c2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3707 (class 2606 OID 69173)
-- Name: fk937b5f0c7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3706 (class 2606 OID 69178)
-- Name: fk937b5f0caa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0caa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3705 (class 2606 OID 69183)
-- Name: fk937b5f0cc188ea51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cc188ea51 FOREIGN KEY (gratuity_id) REFERENCES gratuity(id);
--
-- TOC entry 3704 (class 2606 OID 69188)
-- Name: fk937b5f0cf575c7d4;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cf575c7d4 FOREIGN KEY (driver_id) REFERENCES users(auto_id);
--
-- TOC entry 3761 (class 2606 OID 69193)
-- Name: fk93802290dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3760 (class 2606 OID 69198)
-- Name: fk93802290f5d6e47b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290f5d6e47b FOREIGN KEY (type_id) REFERENCES shop_table_type(id);
--
-- TOC entry 3764 (class 2606 OID 69203)
-- Name: fk963f26d69d31df8e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT fk963f26d69d31df8e FOREIGN KEY (id) REFERENCES terminal(id);
--
-- TOC entry 3768 (class 2606 OID 69208)
-- Name: fk979f54661df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54661df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3767 (class 2606 OID 69213)
-- Name: fk979f546633e5d3b2;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f546633e5d3b2 FOREIGN KEY (size_modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3766 (class 2606 OID 69218)
-- Name: fk979f54665cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54665cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3679 (class 2606 OID 69223)
-- Name: fk98cf9b143ef4cd9b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report_voidtickets
    ADD CONSTRAINT fk98cf9b143ef4cd9b FOREIGN KEY (dpreport_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3763 (class 2606 OID 69228)
-- Name: fk99ede5fc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3762 (class 2606 OID 69233)
-- Name: fk99ede5fcc433e65a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fcc433e65a FOREIGN KEY (virtual_printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3789 (class 2606 OID 69238)
-- Name: fk9af7853bcf15f4a6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtualprinter_order_type
    ADD CONSTRAINT fk9af7853bcf15f4a6 FOREIGN KEY (printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3720 (class 2606 OID 69243)
-- Name: fk9ea1afc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3719 (class 2606 OID 69248)
-- Name: fk9ea1afc89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3770 (class 2606 OID 69253)
-- Name: fk9f1996346c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f1996346c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3769 (class 2606 OID 69258)
-- Name: fk9f199634dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f199634dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3678 (class 2606 OID 69263)
-- Name: fkaec362202ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362202ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3677 (class 2606 OID 69268)
-- Name: fkaec362203e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362203e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3699 (class 2606 OID 69273)
-- Name: fkaf48f43b5b397c5;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b5b397c5 FOREIGN KEY (reference_id) REFERENCES purchase_order(id);
--
-- TOC entry 3698 (class 2606 OID 69278)
-- Name: fkaf48f43b96a3d6bf;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b96a3d6bf FOREIGN KEY (item_id) REFERENCES inventory_item(id);
--
-- TOC entry 3697 (class 2606 OID 69283)
-- Name: fkaf48f43bd152c95f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bd152c95f FOREIGN KEY (vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3696 (class 2606 OID 69288)
-- Name: fkaf48f43beda09759;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43beda09759 FOREIGN KEY (to_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3695 (class 2606 OID 69293)
-- Name: fkaf48f43bff3f328a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bff3f328a FOREIGN KEY (from_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3752 (class 2606 OID 69298)
-- Name: fkba6efbd68979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT fkba6efbd68979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3747 (class 2606 OID 69303)
-- Name: fkc05b805e5f31265c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group_printers
    ADD CONSTRAINT fkc05b805e5f31265c FOREIGN KEY (printer_id) REFERENCES printer_group(id);
--
-- TOC entry 3759 (class 2606 OID 69308)
-- Name: fkcbeff0e454031ec1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_ticket_num
    ADD CONSTRAINT fkcbeff0e454031ec1 FOREIGN KEY (shop_table_status_id) REFERENCES shop_table_status(id);
--
-- TOC entry 3688 (class 2606 OID 69313)
-- Name: fkce827c6f3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT fkce827c6f3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3743 (class 2606 OID 69318)
-- Name: fkd3de7e7896183657;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT fkd3de7e7896183657 FOREIGN KEY (item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3673 (class 2606 OID 69323)
-- Name: fkd43068347bbccf0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT fkd43068347bbccf0 FOREIGN KEY (id) REFERENCES customer(auto_id);
--
-- TOC entry 3753 (class 2606 OID 69328)
-- Name: fkd70c313ca36ab054;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT fkd70c313ca36ab054 FOREIGN KEY (id) REFERENCES shop_floor_template(id);
--
-- TOC entry 3730 (class 2606 OID 69333)
-- Name: fkd89ccdee33662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdee33662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3729 (class 2606 OID 69338)
-- Name: fkd89ccdeed3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdeed3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3667 (class 2606 OID 69343)
-- Name: fkdfe829a2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3666 (class 2606 OID 69348)
-- Name: fkdfe829a3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3665 (class 2606 OID 69353)
-- Name: fkdfe829a7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3737 (class 2606 OID 69358)
-- Name: fke03c92d533662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d533662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3736 (class 2606 OID 69363)
-- Name: fke03c92d57660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d57660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3701 (class 2606 OID 69368)
-- Name: fke2b846573ac1d2e0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b846573ac1d2e0 FOREIGN KEY (order_type_id) REFERENCES order_type(id);
--
-- TOC entry 3700 (class 2606 OID 69373)
-- Name: fke2b8465789fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b8465789fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3728 (class 2606 OID 69378)
-- Name: fke3790e40113bf083;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40113bf083 FOREIGN KEY (menugroup_id) REFERENCES menu_group(id);
--
-- TOC entry 3727 (class 2606 OID 69383)
-- Name: fke3790e40d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3778 (class 2606 OID 69388)
-- Name: fke3de65548e8203bc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT fke3de65548e8203bc FOREIGN KEY (id) REFERENCES transactions(id);
--
-- TOC entry 3703 (class 2606 OID 69393)
-- Name: fke83d827c969c6de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT fke83d827c969c6de FOREIGN KEY (assigned_user) REFERENCES users(auto_id);
--
-- TOC entry 3746 (class 2606 OID 69398)
-- Name: fkeac112927c59441d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac112927c59441d FOREIGN KEY (crust) REFERENCES pizza_crust(id);
--
-- TOC entry 3745 (class 2606 OID 69403)
-- Name: fkeac11292a56d141c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292a56d141c FOREIGN KEY (order_type) REFERENCES order_type(id);
--
-- TOC entry 3744 (class 2606 OID 69408)
-- Name: fkeac11292dd545b77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292dd545b77 FOREIGN KEY (menu_item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3687 (class 2606 OID 69413)
-- Name: fkf8a37399d900aa01;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399d900aa01 FOREIGN KEY (elt) REFERENCES tax(id);
--
-- TOC entry 3686 (class 2606 OID 69418)
-- Name: fkf8a37399eff11066;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399eff11066 FOREIGN KEY (group_id) REFERENCES tax_group(id);
--
-- TOC entry 3718 (class 2606 OID 69423)
-- Name: fkf94186ff89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT fkf94186ff89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3783 (class 2606 OID 69428)
-- Name: fkfe9871551df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871551df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3782 (class 2606 OID 69433)
-- Name: fkfe9871552ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871552ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3781 (class 2606 OID 69438)
-- Name: fkfe9871553e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871553e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3780 (class 2606 OID 69443)
-- Name: fkfe987155ca43b6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155ca43b6 FOREIGN KEY (payout_recepient_id) REFERENCES payout_recepients(id);
--
-- TOC entry 3779 (class 2606 OID 69448)
-- Name: fkfe987155fc697d9e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155fc697d9e FOREIGN KEY (payout_reason_id) REFERENCES payout_reasons(id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3828 (class 2606 OID 77979)
-- Name: almacen_sucursal_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY almacen
    ADD CONSTRAINT almacen_sucursal_id_fkey FOREIGN KEY (sucursal_id) REFERENCES sucursal(id);
--
-- TOC entry 3807 (class 2606 OID 77286)
-- Name: conversiones_unidad_unidad_destino_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_destino_id_fkey FOREIGN KEY (unidad_destino_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3808 (class 2606 OID 77281)
-- Name: conversiones_unidad_unidad_origen_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY conversiones_unidad
    ADD CONSTRAINT conversiones_unidad_unidad_origen_id_fkey FOREIGN KEY (unidad_origen_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3811 (class 2606 OID 77407)
-- Name: cost_layer_batch_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_batch_id_fkey FOREIGN KEY (batch_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3812 (class 2606 OID 77402)
-- Name: cost_layer_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY cost_layer
    ADD CONSTRAINT cost_layer_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3804 (class 2606 OID 77956)
-- Name: fk_ticket_det_cab;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT fk_ticket_det_cab FOREIGN KEY (ticket_id) REFERENCES ticket_venta_cab(id) ON DELETE CASCADE;
--
-- TOC entry 3809 (class 2606 OID 77339)
-- Name: historial_costos_item_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_item
    ADD CONSTRAINT historial_costos_item_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3810 (class 2606 OID 77363)
-- Name: historial_costos_receta_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY historial_costos_receta
    ADD CONSTRAINT historial_costos_receta_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3797 (class 2606 OID 77090)
-- Name: inventory_batch_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY inventory_batch
    ADD CONSTRAINT inventory_batch_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3816 (class 2606 OID 77502)
-- Name: item_vendor_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3815 (class 2606 OID 77507)
-- Name: item_vendor_unidad_presentacion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY item_vendor
    ADD CONSTRAINT item_vendor_unidad_presentacion_id_fkey FOREIGN KEY (unidad_presentacion_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3795 (class 2606 OID 77304)
-- Name: items_unidad_compra_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_compra_id_fkey FOREIGN KEY (unidad_compra_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3794 (class 2606 OID 77291)
-- Name: items_unidad_medida_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_medida_id_fkey FOREIGN KEY (unidad_medida_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3796 (class 2606 OID 77519)
-- Name: items_unidad_salida_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY items
    ADD CONSTRAINT items_unidad_salida_id_fkey FOREIGN KEY (unidad_salida_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3824 (class 2606 OID 77743)
-- Name: model_has_permissions_permission_id_foreign;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY model_has_permissions
    ADD CONSTRAINT model_has_permissions_permission_id_foreign FOREIGN KEY (permission_id) REFERENCES permissions(id) ON DELETE CASCADE;
--
-- TOC entry 3825 (class 2606 OID 77754)
-- Name: model_has_roles_role_id_foreign;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY model_has_roles
    ADD CONSTRAINT model_has_roles_role_id_foreign FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE;
--
-- TOC entry 3813 (class 2606 OID 77435)
-- Name: modificadores_pos_receta_modificador_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY modificadores_pos
    ADD CONSTRAINT modificadores_pos_receta_modificador_id_fkey FOREIGN KEY (receta_modificador_id) REFERENCES receta_cab(id);
--
-- TOC entry 3799 (class 2606 OID 77107)
-- Name: mov_inv_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3798 (class 2606 OID 77112)
-- Name: mov_inv_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY mov_inv
    ADD CONSTRAINT mov_inv_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3803 (class 2606 OID 77205)
-- Name: op_produccion_cab_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY op_produccion_cab
    ADD CONSTRAINT op_produccion_cab_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3820 (class 2606 OID 77601)
-- Name: perdida_log_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3819 (class 2606 OID 77606)
-- Name: perdida_log_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3818 (class 2606 OID 77611)
-- Name: perdida_log_uom_original_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY perdida_log
    ADD CONSTRAINT perdida_log_uom_original_id_fkey FOREIGN KEY (uom_original_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3790 (class 2606 OID 69453)
-- Name: postcorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3792 (class 2606 OID 69458)
-- Name: precorte_efectivo_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3793 (class 2606 OID 69463)
-- Name: precorte_otros_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3791 (class 2606 OID 69468)
-- Name: precorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3814 (class 2606 OID 77484)
-- Name: recalc_log_job_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY recalc_log
    ADD CONSTRAINT recalc_log_job_id_fkey FOREIGN KEY (job_id) REFERENCES job_recalc_queue(id);
--
-- TOC entry 3801 (class 2606 OID 77187)
-- Name: receta_det_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3802 (class 2606 OID 77182)
-- Name: receta_det_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_det
    ADD CONSTRAINT receta_det_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 3800 (class 2606 OID 77156)
-- Name: receta_version_receta_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY receta_version
    ADD CONSTRAINT receta_version_receta_id_fkey FOREIGN KEY (receta_id) REFERENCES receta_cab(id);
--
-- TOC entry 3827 (class 2606 OID 77764)
-- Name: role_has_permissions_permission_id_foreign;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY role_has_permissions
    ADD CONSTRAINT role_has_permissions_permission_id_foreign FOREIGN KEY (permission_id) REFERENCES permissions(id) ON DELETE CASCADE;
--
-- TOC entry 3826 (class 2606 OID 77769)
-- Name: role_has_permissions_role_id_foreign;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY role_has_permissions
    ADD CONSTRAINT role_has_permissions_role_id_foreign FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE;
--
-- TOC entry 3817 (class 2606 OID 77562)
-- Name: stock_policy_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY stock_policy
    ADD CONSTRAINT stock_policy_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3823 (class 2606 OID 77634)
-- Name: ticket_det_consumo_item_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_item_id_fkey FOREIGN KEY (item_id) REFERENCES items(id);
--
-- TOC entry 3822 (class 2606 OID 77639)
-- Name: ticket_det_consumo_lote_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_lote_id_fkey FOREIGN KEY (lote_id) REFERENCES inventory_batch(id);
--
-- TOC entry 3821 (class 2606 OID 77644)
-- Name: ticket_det_consumo_uom_original_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_det_consumo
    ADD CONSTRAINT ticket_det_consumo_uom_original_id_fkey FOREIGN KEY (uom_original_id) REFERENCES unidades_medida(id);
--
-- TOC entry 3805 (class 2606 OID 77440)
-- Name: ticket_venta_det_receta_shadow_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_receta_shadow_id_fkey FOREIGN KEY (receta_shadow_id) REFERENCES receta_shadow(id);
--
-- TOC entry 3806 (class 2606 OID 77240)
-- Name: ticket_venta_det_receta_version_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: postgres
--

ALTER TABLE ONLY ticket_venta_det
    ADD CONSTRAINT ticket_venta_det_receta_version_id_fkey FOREIGN KEY (receta_version_id) REFERENCES receta_version(id);
--
-- TOC entry 4242 (class 0 OID 0)
-- Dependencies: 7
-- Name: public;
Type: ACL;
Schema: -;
Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;
GRANT USAGE ON SCHEMA public TO selemti_user;
--
-- TOC entry 4243 (class 0 OID 0)
-- Dependencies: 6
-- Name: selemti;
Type: ACL;
Schema: -;
Owner: floreant
--

REVOKE ALL ON SCHEMA selemti FROM PUBLIC;
REVOKE ALL ON SCHEMA selemti FROM floreant;
GRANT ALL ON SCHEMA selemti TO floreant;
GRANT ALL ON SCHEMA selemti TO selemti_user;
SET search_path = public, pg_catalog;
--
-- TOC entry 4245 (class 0 OID 0)
-- Dependencies: 181
-- Name: action_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE action_history FROM PUBLIC;
REVOKE ALL ON TABLE action_history FROM floreant;
GRANT ALL ON TABLE action_history TO floreant;
GRANT SELECT ON TABLE action_history TO selemti_user;
--
-- TOC entry 4247 (class 0 OID 0)
-- Dependencies: 183
-- Name: attendence_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE attendence_history FROM PUBLIC;
REVOKE ALL ON TABLE attendence_history FROM floreant;
GRANT ALL ON TABLE attendence_history TO floreant;
GRANT SELECT ON TABLE attendence_history TO selemti_user;
--
-- TOC entry 4249 (class 0 OID 0)
-- Dependencies: 185
-- Name: cash_drawer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cash_drawer FROM PUBLIC;
REVOKE ALL ON TABLE cash_drawer FROM floreant;
GRANT ALL ON TABLE cash_drawer TO floreant;
GRANT SELECT ON TABLE cash_drawer TO selemti_user;
--
-- TOC entry 4251 (class 0 OID 0)
-- Dependencies: 187
-- Name: cash_drawer_reset_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cash_drawer_reset_history FROM PUBLIC;
REVOKE ALL ON TABLE cash_drawer_reset_history FROM floreant;
GRANT ALL ON TABLE cash_drawer_reset_history TO floreant;
GRANT SELECT ON TABLE cash_drawer_reset_history TO selemti_user;
--
-- TOC entry 4253 (class 0 OID 0)
-- Dependencies: 189
-- Name: cooking_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE cooking_instruction FROM PUBLIC;
REVOKE ALL ON TABLE cooking_instruction FROM floreant;
GRANT ALL ON TABLE cooking_instruction TO floreant;
GRANT SELECT ON TABLE cooking_instruction TO selemti_user;
--
-- TOC entry 4255 (class 0 OID 0)
-- Dependencies: 191
-- Name: coupon_and_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE coupon_and_discount FROM PUBLIC;
REVOKE ALL ON TABLE coupon_and_discount FROM floreant;
GRANT ALL ON TABLE coupon_and_discount TO floreant;
GRANT SELECT ON TABLE coupon_and_discount TO selemti_user;
--
-- TOC entry 4257 (class 0 OID 0)
-- Dependencies: 193
-- Name: currency;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE currency FROM PUBLIC;
REVOKE ALL ON TABLE currency FROM floreant;
GRANT ALL ON TABLE currency TO floreant;
GRANT SELECT ON TABLE currency TO selemti_user;
--
-- TOC entry 4258 (class 0 OID 0)
-- Dependencies: 194
-- Name: currency_balance;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE currency_balance FROM PUBLIC;
REVOKE ALL ON TABLE currency_balance FROM floreant;
GRANT ALL ON TABLE currency_balance TO floreant;
GRANT SELECT ON TABLE currency_balance TO selemti_user;
--
-- TOC entry 4261 (class 0 OID 0)
-- Dependencies: 197
-- Name: custom_payment;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE custom_payment FROM PUBLIC;
REVOKE ALL ON TABLE custom_payment FROM floreant;
GRANT ALL ON TABLE custom_payment TO floreant;
GRANT SELECT ON TABLE custom_payment TO selemti_user;
--
-- TOC entry 4263 (class 0 OID 0)
-- Dependencies: 199
-- Name: customer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE customer FROM PUBLIC;
REVOKE ALL ON TABLE customer FROM floreant;
GRANT ALL ON TABLE customer TO floreant;
GRANT SELECT ON TABLE customer TO selemti_user;
--
-- TOC entry 4265 (class 0 OID 0)
-- Dependencies: 201
-- Name: customer_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE customer_properties FROM PUBLIC;
REVOKE ALL ON TABLE customer_properties FROM floreant;
GRANT ALL ON TABLE customer_properties TO floreant;
GRANT SELECT ON TABLE customer_properties TO selemti_user;
--
-- TOC entry 4266 (class 0 OID 0)
-- Dependencies: 202
-- Name: daily_folio_counter;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE daily_folio_counter FROM PUBLIC;
REVOKE ALL ON TABLE daily_folio_counter FROM floreant;
GRANT ALL ON TABLE daily_folio_counter TO floreant;
GRANT SELECT ON TABLE daily_folio_counter TO selemti_user;
--
-- TOC entry 4267 (class 0 OID 0)
-- Dependencies: 203
-- Name: data_update_info;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE data_update_info FROM PUBLIC;
REVOKE ALL ON TABLE data_update_info FROM floreant;
GRANT ALL ON TABLE data_update_info TO floreant;
GRANT SELECT ON TABLE data_update_info TO selemti_user;
--
-- TOC entry 4269 (class 0 OID 0)
-- Dependencies: 205
-- Name: delivery_address;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_address FROM PUBLIC;
REVOKE ALL ON TABLE delivery_address FROM floreant;
GRANT ALL ON TABLE delivery_address TO floreant;
GRANT SELECT ON TABLE delivery_address TO selemti_user;
--
-- TOC entry 4271 (class 0 OID 0)
-- Dependencies: 207
-- Name: delivery_charge;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_charge FROM PUBLIC;
REVOKE ALL ON TABLE delivery_charge FROM floreant;
GRANT ALL ON TABLE delivery_charge TO floreant;
GRANT SELECT ON TABLE delivery_charge TO selemti_user;
--
-- TOC entry 4273 (class 0 OID 0)
-- Dependencies: 209
-- Name: delivery_configuration;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_configuration FROM PUBLIC;
REVOKE ALL ON TABLE delivery_configuration FROM floreant;
GRANT ALL ON TABLE delivery_configuration TO floreant;
GRANT SELECT ON TABLE delivery_configuration TO selemti_user;
--
-- TOC entry 4275 (class 0 OID 0)
-- Dependencies: 211
-- Name: delivery_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE delivery_instruction FROM PUBLIC;
REVOKE ALL ON TABLE delivery_instruction FROM floreant;
GRANT ALL ON TABLE delivery_instruction TO floreant;
GRANT SELECT ON TABLE delivery_instruction TO selemti_user;
--
-- TOC entry 4277 (class 0 OID 0)
-- Dependencies: 213
-- Name: drawer_assigned_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_assigned_history FROM PUBLIC;
REVOKE ALL ON TABLE drawer_assigned_history FROM floreant;
GRANT ALL ON TABLE drawer_assigned_history TO floreant;
GRANT SELECT ON TABLE drawer_assigned_history TO selemti_user;
--
-- TOC entry 4279 (class 0 OID 0)
-- Dependencies: 215
-- Name: drawer_pull_report;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_pull_report FROM PUBLIC;
REVOKE ALL ON TABLE drawer_pull_report FROM floreant;
GRANT ALL ON TABLE drawer_pull_report TO floreant;
GRANT SELECT ON TABLE drawer_pull_report TO selemti_user;
--
-- TOC entry 4281 (class 0 OID 0)
-- Dependencies: 217
-- Name: drawer_pull_report_voidtickets;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE drawer_pull_report_voidtickets FROM PUBLIC;
REVOKE ALL ON TABLE drawer_pull_report_voidtickets FROM floreant;
GRANT ALL ON TABLE drawer_pull_report_voidtickets TO floreant;
GRANT SELECT ON TABLE drawer_pull_report_voidtickets TO selemti_user;
--
-- TOC entry 4282 (class 0 OID 0)
-- Dependencies: 218
-- Name: employee_in_out_history;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE employee_in_out_history FROM PUBLIC;
REVOKE ALL ON TABLE employee_in_out_history FROM floreant;
GRANT ALL ON TABLE employee_in_out_history TO floreant;
GRANT SELECT ON TABLE employee_in_out_history TO selemti_user;
--
-- TOC entry 4284 (class 0 OID 0)
-- Dependencies: 220
-- Name: global_config;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE global_config FROM PUBLIC;
REVOKE ALL ON TABLE global_config FROM floreant;
GRANT ALL ON TABLE global_config TO floreant;
GRANT SELECT ON TABLE global_config TO selemti_user;
--
-- TOC entry 4286 (class 0 OID 0)
-- Dependencies: 222
-- Name: gratuity;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE gratuity FROM PUBLIC;
REVOKE ALL ON TABLE gratuity FROM floreant;
GRANT ALL ON TABLE gratuity TO floreant;
GRANT SELECT ON TABLE gratuity TO selemti_user;
--
-- TOC entry 4288 (class 0 OID 0)
-- Dependencies: 224
-- Name: group_taxes;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE group_taxes FROM PUBLIC;
REVOKE ALL ON TABLE group_taxes FROM floreant;
GRANT ALL ON TABLE group_taxes TO floreant;
GRANT SELECT ON TABLE group_taxes TO selemti_user;
--
-- TOC entry 4289 (class 0 OID 0)
-- Dependencies: 225
-- Name: guest_check_print;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE guest_check_print FROM PUBLIC;
REVOKE ALL ON TABLE guest_check_print FROM floreant;
GRANT ALL ON TABLE guest_check_print TO floreant;
GRANT SELECT ON TABLE guest_check_print TO selemti_user;
--
-- TOC entry 4291 (class 0 OID 0)
-- Dependencies: 227
-- Name: inventory_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_group FROM PUBLIC;
REVOKE ALL ON TABLE inventory_group FROM floreant;
GRANT ALL ON TABLE inventory_group TO floreant;
GRANT SELECT ON TABLE inventory_group TO selemti_user;
--
-- TOC entry 4293 (class 0 OID 0)
-- Dependencies: 229
-- Name: inventory_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_item FROM PUBLIC;
REVOKE ALL ON TABLE inventory_item FROM floreant;
GRANT ALL ON TABLE inventory_item TO floreant;
GRANT SELECT ON TABLE inventory_item TO selemti_user;
--
-- TOC entry 4295 (class 0 OID 0)
-- Dependencies: 231
-- Name: inventory_location;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_location FROM PUBLIC;
REVOKE ALL ON TABLE inventory_location FROM floreant;
GRANT ALL ON TABLE inventory_location TO floreant;
GRANT SELECT ON TABLE inventory_location TO selemti_user;
--
-- TOC entry 4297 (class 0 OID 0)
-- Dependencies: 233
-- Name: inventory_meta_code;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_meta_code FROM PUBLIC;
REVOKE ALL ON TABLE inventory_meta_code FROM floreant;
GRANT ALL ON TABLE inventory_meta_code TO floreant;
GRANT SELECT ON TABLE inventory_meta_code TO selemti_user;
--
-- TOC entry 4299 (class 0 OID 0)
-- Dependencies: 235
-- Name: inventory_transaction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_transaction FROM PUBLIC;
REVOKE ALL ON TABLE inventory_transaction FROM floreant;
GRANT ALL ON TABLE inventory_transaction TO floreant;
GRANT SELECT ON TABLE inventory_transaction TO selemti_user;
--
-- TOC entry 4301 (class 0 OID 0)
-- Dependencies: 237
-- Name: inventory_unit;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_unit FROM PUBLIC;
REVOKE ALL ON TABLE inventory_unit FROM floreant;
GRANT ALL ON TABLE inventory_unit TO floreant;
GRANT SELECT ON TABLE inventory_unit TO selemti_user;
--
-- TOC entry 4303 (class 0 OID 0)
-- Dependencies: 239
-- Name: inventory_vendor;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_vendor FROM PUBLIC;
REVOKE ALL ON TABLE inventory_vendor FROM floreant;
GRANT ALL ON TABLE inventory_vendor TO floreant;
GRANT SELECT ON TABLE inventory_vendor TO selemti_user;
--
-- TOC entry 4305 (class 0 OID 0)
-- Dependencies: 241
-- Name: inventory_warehouse;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE inventory_warehouse FROM PUBLIC;
REVOKE ALL ON TABLE inventory_warehouse FROM floreant;
GRANT ALL ON TABLE inventory_warehouse TO floreant;
GRANT SELECT ON TABLE inventory_warehouse TO selemti_user;
--
-- TOC entry 4307 (class 0 OID 0)
-- Dependencies: 243
-- Name: item_order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE item_order_type FROM PUBLIC;
REVOKE ALL ON TABLE item_order_type FROM floreant;
GRANT ALL ON TABLE item_order_type TO floreant;
GRANT SELECT ON TABLE item_order_type TO selemti_user;
--
-- TOC entry 4308 (class 0 OID 0)
-- Dependencies: 244
-- Name: kitchen_ticket;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kitchen_ticket FROM PUBLIC;
REVOKE ALL ON TABLE kitchen_ticket FROM floreant;
GRANT ALL ON TABLE kitchen_ticket TO floreant;
GRANT SELECT ON TABLE kitchen_ticket TO selemti_user;
--
-- TOC entry 4309 (class 0 OID 0)
-- Dependencies: 245
-- Name: terminal;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal FROM PUBLIC;
REVOKE ALL ON TABLE terminal FROM floreant;
GRANT ALL ON TABLE terminal TO floreant;
GRANT SELECT ON TABLE terminal TO selemti_user;
--
-- TOC entry 4310 (class 0 OID 0)
-- Dependencies: 246
-- Name: ticket;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket FROM PUBLIC;
REVOKE ALL ON TABLE ticket FROM floreant;
GRANT ALL ON TABLE ticket TO floreant;
GRANT SELECT ON TABLE ticket TO selemti_user;
--
-- TOC entry 4311 (class 0 OID 0)
-- Dependencies: 247
-- Name: kds_orders_enhanced;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kds_orders_enhanced FROM PUBLIC;
REVOKE ALL ON TABLE kds_orders_enhanced FROM floreant;
GRANT ALL ON TABLE kds_orders_enhanced TO floreant;
GRANT SELECT ON TABLE kds_orders_enhanced TO selemti_user;
--
-- TOC entry 4312 (class 0 OID 0)
-- Dependencies: 248
-- Name: kds_ready_log;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kds_ready_log FROM PUBLIC;
REVOKE ALL ON TABLE kds_ready_log FROM floreant;
GRANT ALL ON TABLE kds_ready_log TO floreant;
GRANT SELECT ON TABLE kds_ready_log TO selemti_user;
--
-- TOC entry 4313 (class 0 OID 0)
-- Dependencies: 249
-- Name: kit_ticket_table_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kit_ticket_table_num FROM PUBLIC;
REVOKE ALL ON TABLE kit_ticket_table_num FROM floreant;
GRANT ALL ON TABLE kit_ticket_table_num TO floreant;
GRANT SELECT ON TABLE kit_ticket_table_num TO selemti_user;
--
-- TOC entry 4315 (class 0 OID 0)
-- Dependencies: 251
-- Name: kitchen_ticket_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE kitchen_ticket_item FROM PUBLIC;
REVOKE ALL ON TABLE kitchen_ticket_item FROM floreant;
GRANT ALL ON TABLE kitchen_ticket_item TO floreant;
GRANT SELECT ON TABLE kitchen_ticket_item TO selemti_user;
--
-- TOC entry 4317 (class 0 OID 0)
-- Dependencies: 253
-- Name: menu_category;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_category FROM PUBLIC;
REVOKE ALL ON TABLE menu_category FROM floreant;
GRANT ALL ON TABLE menu_category TO floreant;
GRANT SELECT ON TABLE menu_category TO selemti_user;
--
-- TOC entry 4319 (class 0 OID 0)
-- Dependencies: 255
-- Name: menu_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_group FROM PUBLIC;
REVOKE ALL ON TABLE menu_group FROM floreant;
GRANT ALL ON TABLE menu_group TO floreant;
GRANT SELECT ON TABLE menu_group TO selemti_user;
--
-- TOC entry 4321 (class 0 OID 0)
-- Dependencies: 257
-- Name: menu_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item FROM PUBLIC;
REVOKE ALL ON TABLE menu_item FROM floreant;
GRANT ALL ON TABLE menu_item TO floreant;
GRANT SELECT ON TABLE menu_item TO selemti_user;
--
-- TOC entry 4323 (class 0 OID 0)
-- Dependencies: 259
-- Name: menu_item_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_properties FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_properties FROM floreant;
GRANT ALL ON TABLE menu_item_properties TO floreant;
GRANT SELECT ON TABLE menu_item_properties TO selemti_user;
--
-- TOC entry 4324 (class 0 OID 0)
-- Dependencies: 260
-- Name: menu_item_size;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_size FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_size FROM floreant;
GRANT ALL ON TABLE menu_item_size TO floreant;
GRANT SELECT ON TABLE menu_item_size TO selemti_user;
--
-- TOC entry 4326 (class 0 OID 0)
-- Dependencies: 262
-- Name: menu_item_terminal_ref;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_item_terminal_ref FROM PUBLIC;
REVOKE ALL ON TABLE menu_item_terminal_ref FROM floreant;
GRANT ALL ON TABLE menu_item_terminal_ref TO floreant;
GRANT SELECT ON TABLE menu_item_terminal_ref TO selemti_user;
--
-- TOC entry 4327 (class 0 OID 0)
-- Dependencies: 263
-- Name: menu_modifier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier FROM floreant;
GRANT ALL ON TABLE menu_modifier TO floreant;
GRANT SELECT ON TABLE menu_modifier TO selemti_user;
--
-- TOC entry 4328 (class 0 OID 0)
-- Dependencies: 264
-- Name: menu_modifier_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier_group FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier_group FROM floreant;
GRANT ALL ON TABLE menu_modifier_group TO floreant;
GRANT SELECT ON TABLE menu_modifier_group TO selemti_user;
--
-- TOC entry 4331 (class 0 OID 0)
-- Dependencies: 267
-- Name: menu_modifier_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menu_modifier_properties FROM PUBLIC;
REVOKE ALL ON TABLE menu_modifier_properties FROM floreant;
GRANT ALL ON TABLE menu_modifier_properties TO floreant;
GRANT SELECT ON TABLE menu_modifier_properties TO selemti_user;
--
-- TOC entry 4332 (class 0 OID 0)
-- Dependencies: 268
-- Name: menucategory_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menucategory_discount FROM PUBLIC;
REVOKE ALL ON TABLE menucategory_discount FROM floreant;
GRANT ALL ON TABLE menucategory_discount TO floreant;
GRANT SELECT ON TABLE menucategory_discount TO selemti_user;
--
-- TOC entry 4333 (class 0 OID 0)
-- Dependencies: 269
-- Name: menugroup_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menugroup_discount FROM PUBLIC;
REVOKE ALL ON TABLE menugroup_discount FROM floreant;
GRANT ALL ON TABLE menugroup_discount TO floreant;
GRANT SELECT ON TABLE menugroup_discount TO selemti_user;
--
-- TOC entry 4334 (class 0 OID 0)
-- Dependencies: 270
-- Name: menuitem_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_discount FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_discount FROM floreant;
GRANT ALL ON TABLE menuitem_discount TO floreant;
GRANT SELECT ON TABLE menuitem_discount TO selemti_user;
--
-- TOC entry 4335 (class 0 OID 0)
-- Dependencies: 271
-- Name: menuitem_modifiergroup;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_modifiergroup FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_modifiergroup FROM floreant;
GRANT ALL ON TABLE menuitem_modifiergroup TO floreant;
GRANT SELECT ON TABLE menuitem_modifiergroup TO selemti_user;
--
-- TOC entry 4337 (class 0 OID 0)
-- Dependencies: 273
-- Name: menuitem_pizzapirce;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_pizzapirce FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_pizzapirce FROM floreant;
GRANT ALL ON TABLE menuitem_pizzapirce TO floreant;
GRANT SELECT ON TABLE menuitem_pizzapirce TO selemti_user;
--
-- TOC entry 4338 (class 0 OID 0)
-- Dependencies: 274
-- Name: menuitem_shift;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menuitem_shift FROM PUBLIC;
REVOKE ALL ON TABLE menuitem_shift FROM floreant;
GRANT ALL ON TABLE menuitem_shift TO floreant;
GRANT SELECT ON TABLE menuitem_shift TO selemti_user;
--
-- TOC entry 4340 (class 0 OID 0)
-- Dependencies: 276
-- Name: menumodifier_pizzamodifierprice;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE menumodifier_pizzamodifierprice FROM PUBLIC;
REVOKE ALL ON TABLE menumodifier_pizzamodifierprice FROM floreant;
GRANT ALL ON TABLE menumodifier_pizzamodifierprice TO floreant;
GRANT SELECT ON TABLE menumodifier_pizzamodifierprice TO selemti_user;
--
-- TOC entry 4341 (class 0 OID 0)
-- Dependencies: 389
-- Name: migrations;
Type: ACL;
Schema: public;
Owner: postgres
--

REVOKE ALL ON TABLE migrations FROM PUBLIC;
REVOKE ALL ON TABLE migrations FROM postgres;
GRANT ALL ON TABLE migrations TO postgres;
GRANT SELECT ON TABLE migrations TO selemti_user;
--
-- TOC entry 4343 (class 0 OID 0)
-- Dependencies: 277
-- Name: modifier_multiplier_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE modifier_multiplier_price FROM PUBLIC;
REVOKE ALL ON TABLE modifier_multiplier_price FROM floreant;
GRANT ALL ON TABLE modifier_multiplier_price TO floreant;
GRANT SELECT ON TABLE modifier_multiplier_price TO selemti_user;
--
-- TOC entry 4345 (class 0 OID 0)
-- Dependencies: 279
-- Name: multiplier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE multiplier FROM PUBLIC;
REVOKE ALL ON TABLE multiplier FROM floreant;
GRANT ALL ON TABLE multiplier TO floreant;
GRANT SELECT ON TABLE multiplier TO selemti_user;
--
-- TOC entry 4346 (class 0 OID 0)
-- Dependencies: 280
-- Name: order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE order_type FROM PUBLIC;
REVOKE ALL ON TABLE order_type FROM floreant;
GRANT ALL ON TABLE order_type TO floreant;
GRANT SELECT ON TABLE order_type TO selemti_user;
--
-- TOC entry 4348 (class 0 OID 0)
-- Dependencies: 282
-- Name: packaging_unit;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE packaging_unit FROM PUBLIC;
REVOKE ALL ON TABLE packaging_unit FROM floreant;
GRANT ALL ON TABLE packaging_unit TO floreant;
GRANT SELECT ON TABLE packaging_unit TO selemti_user;
--
-- TOC entry 4350 (class 0 OID 0)
-- Dependencies: 284
-- Name: payout_reasons;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE payout_reasons FROM PUBLIC;
REVOKE ALL ON TABLE payout_reasons FROM floreant;
GRANT ALL ON TABLE payout_reasons TO floreant;
GRANT SELECT ON TABLE payout_reasons TO selemti_user;
--
-- TOC entry 4352 (class 0 OID 0)
-- Dependencies: 286
-- Name: payout_recepients;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE payout_recepients FROM PUBLIC;
REVOKE ALL ON TABLE payout_recepients FROM floreant;
GRANT ALL ON TABLE payout_recepients TO floreant;
GRANT SELECT ON TABLE payout_recepients TO selemti_user;
--
-- TOC entry 4354 (class 0 OID 0)
-- Dependencies: 288
-- Name: pizza_crust;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_crust FROM PUBLIC;
REVOKE ALL ON TABLE pizza_crust FROM floreant;
GRANT ALL ON TABLE pizza_crust TO floreant;
GRANT SELECT ON TABLE pizza_crust TO selemti_user;
--
-- TOC entry 4356 (class 0 OID 0)
-- Dependencies: 290
-- Name: pizza_modifier_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_modifier_price FROM PUBLIC;
REVOKE ALL ON TABLE pizza_modifier_price FROM floreant;
GRANT ALL ON TABLE pizza_modifier_price TO floreant;
GRANT SELECT ON TABLE pizza_modifier_price TO selemti_user;
--
-- TOC entry 4358 (class 0 OID 0)
-- Dependencies: 292
-- Name: pizza_price;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE pizza_price FROM PUBLIC;
REVOKE ALL ON TABLE pizza_price FROM floreant;
GRANT ALL ON TABLE pizza_price TO floreant;
GRANT SELECT ON TABLE pizza_price TO selemti_user;
--
-- TOC entry 4360 (class 0 OID 0)
-- Dependencies: 294
-- Name: printer_configuration;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_configuration FROM PUBLIC;
REVOKE ALL ON TABLE printer_configuration FROM floreant;
GRANT ALL ON TABLE printer_configuration TO floreant;
GRANT SELECT ON TABLE printer_configuration TO selemti_user;
--
-- TOC entry 4361 (class 0 OID 0)
-- Dependencies: 295
-- Name: printer_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_group FROM PUBLIC;
REVOKE ALL ON TABLE printer_group FROM floreant;
GRANT ALL ON TABLE printer_group TO floreant;
GRANT SELECT ON TABLE printer_group TO selemti_user;
--
-- TOC entry 4363 (class 0 OID 0)
-- Dependencies: 297
-- Name: printer_group_printers;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE printer_group_printers FROM PUBLIC;
REVOKE ALL ON TABLE printer_group_printers FROM floreant;
GRANT ALL ON TABLE printer_group_printers TO floreant;
GRANT SELECT ON TABLE printer_group_printers TO selemti_user;
--
-- TOC entry 4364 (class 0 OID 0)
-- Dependencies: 298
-- Name: purchase_order;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE purchase_order FROM PUBLIC;
REVOKE ALL ON TABLE purchase_order FROM floreant;
GRANT ALL ON TABLE purchase_order TO floreant;
GRANT SELECT ON TABLE purchase_order TO selemti_user;
--
-- TOC entry 4366 (class 0 OID 0)
-- Dependencies: 300
-- Name: recepie;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE recepie FROM PUBLIC;
REVOKE ALL ON TABLE recepie FROM floreant;
GRANT ALL ON TABLE recepie TO floreant;
GRANT SELECT ON TABLE recepie TO selemti_user;
--
-- TOC entry 4368 (class 0 OID 0)
-- Dependencies: 302
-- Name: recepie_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE recepie_item FROM PUBLIC;
REVOKE ALL ON TABLE recepie_item FROM floreant;
GRANT ALL ON TABLE recepie_item TO floreant;
GRANT SELECT ON TABLE recepie_item TO selemti_user;
--
-- TOC entry 4370 (class 0 OID 0)
-- Dependencies: 304
-- Name: restaurant;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE restaurant FROM PUBLIC;
REVOKE ALL ON TABLE restaurant FROM floreant;
GRANT ALL ON TABLE restaurant TO floreant;
GRANT SELECT ON TABLE restaurant TO selemti_user;
--
-- TOC entry 4371 (class 0 OID 0)
-- Dependencies: 305
-- Name: restaurant_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE restaurant_properties FROM PUBLIC;
REVOKE ALL ON TABLE restaurant_properties FROM floreant;
GRANT ALL ON TABLE restaurant_properties TO floreant;
GRANT SELECT ON TABLE restaurant_properties TO selemti_user;
--
-- TOC entry 4372 (class 0 OID 0)
-- Dependencies: 306
-- Name: shift;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shift FROM PUBLIC;
REVOKE ALL ON TABLE shift FROM floreant;
GRANT ALL ON TABLE shift TO floreant;
GRANT SELECT ON TABLE shift TO selemti_user;
--
-- TOC entry 4374 (class 0 OID 0)
-- Dependencies: 308
-- Name: shop_floor;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor FROM floreant;
GRANT ALL ON TABLE shop_floor TO floreant;
GRANT SELECT ON TABLE shop_floor TO selemti_user;
--
-- TOC entry 4376 (class 0 OID 0)
-- Dependencies: 310
-- Name: shop_floor_template;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor_template FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor_template FROM floreant;
GRANT ALL ON TABLE shop_floor_template TO floreant;
GRANT SELECT ON TABLE shop_floor_template TO selemti_user;
--
-- TOC entry 4378 (class 0 OID 0)
-- Dependencies: 312
-- Name: shop_floor_template_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_floor_template_properties FROM PUBLIC;
REVOKE ALL ON TABLE shop_floor_template_properties FROM floreant;
GRANT ALL ON TABLE shop_floor_template_properties TO floreant;
GRANT SELECT ON TABLE shop_floor_template_properties TO selemti_user;
--
-- TOC entry 4379 (class 0 OID 0)
-- Dependencies: 313
-- Name: shop_table;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table FROM PUBLIC;
REVOKE ALL ON TABLE shop_table FROM floreant;
GRANT ALL ON TABLE shop_table TO floreant;
GRANT SELECT ON TABLE shop_table TO selemti_user;
--
-- TOC entry 4380 (class 0 OID 0)
-- Dependencies: 314
-- Name: shop_table_status;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table_status FROM PUBLIC;
REVOKE ALL ON TABLE shop_table_status FROM floreant;
GRANT ALL ON TABLE shop_table_status TO floreant;
GRANT SELECT ON TABLE shop_table_status TO selemti_user;
--
-- TOC entry 4381 (class 0 OID 0)
-- Dependencies: 315
-- Name: shop_table_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE shop_table_type FROM PUBLIC;
REVOKE ALL ON TABLE shop_table_type FROM floreant;
GRANT ALL ON TABLE shop_table_type TO floreant;
GRANT SELECT ON TABLE shop_table_type TO selemti_user;
--
-- TOC entry 4383 (class 0 OID 0)
-- Dependencies: 317
-- Name: table_booking_info;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_booking_info FROM PUBLIC;
REVOKE ALL ON TABLE table_booking_info FROM floreant;
GRANT ALL ON TABLE table_booking_info TO floreant;
GRANT SELECT ON TABLE table_booking_info TO selemti_user;
--
-- TOC entry 4385 (class 0 OID 0)
-- Dependencies: 319
-- Name: table_booking_mapping;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_booking_mapping FROM PUBLIC;
REVOKE ALL ON TABLE table_booking_mapping FROM floreant;
GRANT ALL ON TABLE table_booking_mapping TO floreant;
GRANT SELECT ON TABLE table_booking_mapping TO selemti_user;
--
-- TOC entry 4386 (class 0 OID 0)
-- Dependencies: 320
-- Name: table_ticket_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_ticket_num FROM PUBLIC;
REVOKE ALL ON TABLE table_ticket_num FROM floreant;
GRANT ALL ON TABLE table_ticket_num TO floreant;
GRANT SELECT ON TABLE table_ticket_num TO selemti_user;
--
-- TOC entry 4387 (class 0 OID 0)
-- Dependencies: 321
-- Name: table_type_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE table_type_relation FROM PUBLIC;
REVOKE ALL ON TABLE table_type_relation FROM floreant;
GRANT ALL ON TABLE table_type_relation TO floreant;
GRANT SELECT ON TABLE table_type_relation TO selemti_user;
--
-- TOC entry 4388 (class 0 OID 0)
-- Dependencies: 322
-- Name: tax;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE tax FROM PUBLIC;
REVOKE ALL ON TABLE tax FROM floreant;
GRANT ALL ON TABLE tax TO floreant;
GRANT SELECT ON TABLE tax TO selemti_user;
--
-- TOC entry 4389 (class 0 OID 0)
-- Dependencies: 323
-- Name: tax_group;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE tax_group FROM PUBLIC;
REVOKE ALL ON TABLE tax_group FROM floreant;
GRANT ALL ON TABLE tax_group TO floreant;
GRANT SELECT ON TABLE tax_group TO selemti_user;
--
-- TOC entry 4391 (class 0 OID 0)
-- Dependencies: 325
-- Name: terminal_printers;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal_printers FROM PUBLIC;
REVOKE ALL ON TABLE terminal_printers FROM floreant;
GRANT ALL ON TABLE terminal_printers TO floreant;
GRANT SELECT ON TABLE terminal_printers TO selemti_user;
--
-- TOC entry 4393 (class 0 OID 0)
-- Dependencies: 327
-- Name: terminal_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE terminal_properties FROM PUBLIC;
REVOKE ALL ON TABLE terminal_properties FROM floreant;
GRANT ALL ON TABLE terminal_properties TO floreant;
GRANT SELECT ON TABLE terminal_properties TO selemti_user;
--
-- TOC entry 4394 (class 0 OID 0)
-- Dependencies: 328
-- Name: ticket_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_discount FROM PUBLIC;
REVOKE ALL ON TABLE ticket_discount FROM floreant;
GRANT ALL ON TABLE ticket_discount TO floreant;
GRANT SELECT ON TABLE ticket_discount TO selemti_user;
--
-- TOC entry 4396 (class 0 OID 0)
-- Dependencies: 330
-- Name: ticket_folio_complete;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_folio_complete FROM PUBLIC;
REVOKE ALL ON TABLE ticket_folio_complete FROM floreant;
GRANT ALL ON TABLE ticket_folio_complete TO floreant;
GRANT SELECT ON TABLE ticket_folio_complete TO selemti_user;
--
-- TOC entry 4398 (class 0 OID 0)
-- Dependencies: 332
-- Name: ticket_item;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item FROM floreant;
GRANT ALL ON TABLE ticket_item TO floreant;
GRANT SELECT ON TABLE ticket_item TO selemti_user;
--
-- TOC entry 4399 (class 0 OID 0)
-- Dependencies: 333
-- Name: ticket_item_addon_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_addon_relation FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_addon_relation FROM floreant;
GRANT ALL ON TABLE ticket_item_addon_relation TO floreant;
GRANT SELECT ON TABLE ticket_item_addon_relation TO selemti_user;
--
-- TOC entry 4400 (class 0 OID 0)
-- Dependencies: 334
-- Name: ticket_item_cooking_instruction;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_cooking_instruction FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_cooking_instruction FROM floreant;
GRANT ALL ON TABLE ticket_item_cooking_instruction TO floreant;
GRANT SELECT ON TABLE ticket_item_cooking_instruction TO selemti_user;
--
-- TOC entry 4401 (class 0 OID 0)
-- Dependencies: 335
-- Name: ticket_item_discount;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_discount FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_discount FROM floreant;
GRANT ALL ON TABLE ticket_item_discount TO floreant;
GRANT SELECT ON TABLE ticket_item_discount TO selemti_user;
--
-- TOC entry 4404 (class 0 OID 0)
-- Dependencies: 338
-- Name: ticket_item_modifier;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_modifier FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_modifier FROM floreant;
GRANT ALL ON TABLE ticket_item_modifier TO floreant;
GRANT SELECT ON TABLE ticket_item_modifier TO selemti_user;
--
-- TOC entry 4406 (class 0 OID 0)
-- Dependencies: 340
-- Name: ticket_item_modifier_relation;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_item_modifier_relation FROM PUBLIC;
REVOKE ALL ON TABLE ticket_item_modifier_relation FROM floreant;
GRANT ALL ON TABLE ticket_item_modifier_relation TO floreant;
GRANT SELECT ON TABLE ticket_item_modifier_relation TO selemti_user;
--
-- TOC entry 4407 (class 0 OID 0)
-- Dependencies: 341
-- Name: ticket_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_properties FROM PUBLIC;
REVOKE ALL ON TABLE ticket_properties FROM floreant;
GRANT ALL ON TABLE ticket_properties TO floreant;
GRANT SELECT ON TABLE ticket_properties TO selemti_user;
--
-- TOC entry 4408 (class 0 OID 0)
-- Dependencies: 342
-- Name: ticket_table_num;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE ticket_table_num FROM PUBLIC;
REVOKE ALL ON TABLE ticket_table_num FROM floreant;
GRANT ALL ON TABLE ticket_table_num TO floreant;
GRANT SELECT ON TABLE ticket_table_num TO selemti_user;
--
-- TOC entry 4409 (class 0 OID 0)
-- Dependencies: 343
-- Name: transaction_properties;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE transaction_properties FROM PUBLIC;
REVOKE ALL ON TABLE transaction_properties FROM floreant;
GRANT ALL ON TABLE transaction_properties TO floreant;
GRANT SELECT ON TABLE transaction_properties TO selemti_user;
--
-- TOC entry 4410 (class 0 OID 0)
-- Dependencies: 344
-- Name: transactions;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE transactions FROM PUBLIC;
REVOKE ALL ON TABLE transactions FROM floreant;
GRANT ALL ON TABLE transactions TO floreant;
GRANT SELECT ON TABLE transactions TO selemti_user;
--
-- TOC entry 4412 (class 0 OID 0)
-- Dependencies: 346
-- Name: user_permission;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_permission FROM PUBLIC;
REVOKE ALL ON TABLE user_permission FROM floreant;
GRANT ALL ON TABLE user_permission TO floreant;
GRANT SELECT ON TABLE user_permission TO selemti_user;
--
-- TOC entry 4413 (class 0 OID 0)
-- Dependencies: 347
-- Name: user_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_type FROM PUBLIC;
REVOKE ALL ON TABLE user_type FROM floreant;
GRANT ALL ON TABLE user_type TO floreant;
GRANT SELECT ON TABLE user_type TO selemti_user;
--
-- TOC entry 4415 (class 0 OID 0)
-- Dependencies: 349
-- Name: user_user_permission;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE user_user_permission FROM PUBLIC;
REVOKE ALL ON TABLE user_user_permission FROM floreant;
GRANT ALL ON TABLE user_user_permission TO floreant;
GRANT SELECT ON TABLE user_user_permission TO selemti_user;
--
-- TOC entry 4416 (class 0 OID 0)
-- Dependencies: 350
-- Name: users;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE users FROM PUBLIC;
REVOKE ALL ON TABLE users FROM floreant;
GRANT ALL ON TABLE users TO floreant;
GRANT SELECT ON TABLE users TO selemti_user;
--
-- TOC entry 4418 (class 0 OID 0)
-- Dependencies: 352
-- Name: virtual_printer;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE virtual_printer FROM PUBLIC;
REVOKE ALL ON TABLE virtual_printer FROM floreant;
GRANT ALL ON TABLE virtual_printer TO floreant;
GRANT SELECT ON TABLE virtual_printer TO selemti_user;
--
-- TOC entry 4420 (class 0 OID 0)
-- Dependencies: 354
-- Name: virtualprinter_order_type;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE virtualprinter_order_type FROM PUBLIC;
REVOKE ALL ON TABLE virtualprinter_order_type FROM floreant;
GRANT ALL ON TABLE virtualprinter_order_type TO floreant;
GRANT SELECT ON TABLE virtualprinter_order_type TO selemti_user;
--
-- TOC entry 4421 (class 0 OID 0)
-- Dependencies: 355
-- Name: void_reasons;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE void_reasons FROM PUBLIC;
REVOKE ALL ON TABLE void_reasons FROM floreant;
GRANT ALL ON TABLE void_reasons TO floreant;
GRANT SELECT ON TABLE void_reasons TO selemti_user;
--
-- TOC entry 4423 (class 0 OID 0)
-- Dependencies: 381
-- Name: vw_reconciliation_status;
Type: ACL;
Schema: public;
Owner: postgres
--

REVOKE ALL ON TABLE vw_reconciliation_status FROM PUBLIC;
REVOKE ALL ON TABLE vw_reconciliation_status FROM postgres;
GRANT ALL ON TABLE vw_reconciliation_status TO postgres;
GRANT SELECT ON TABLE vw_reconciliation_status TO selemti_user;
--
-- TOC entry 4424 (class 0 OID 0)
-- Dependencies: 357
-- Name: zip_code_vs_delivery_charge;
Type: ACL;
Schema: public;
Owner: floreant
--

REVOKE ALL ON TABLE zip_code_vs_delivery_charge FROM PUBLIC;
REVOKE ALL ON TABLE zip_code_vs_delivery_charge FROM floreant;
GRANT ALL ON TABLE zip_code_vs_delivery_charge TO floreant;
GRANT SELECT ON TABLE zip_code_vs_delivery_charge TO selemti_user;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 4471 (class 0 OID 0)
-- Dependencies: 377
-- Name: vw_sesion_ventas;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_ventas FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_ventas FROM postgres;
GRANT ALL ON TABLE vw_sesion_ventas TO postgres;
GRANT SELECT ON TABLE vw_sesion_ventas TO floreant;
--
-- TOC entry 4472 (class 0 OID 0)
-- Dependencies: 374
-- Name: vw_sesion_dpr;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_dpr FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_dpr FROM postgres;
GRANT ALL ON TABLE vw_sesion_dpr TO postgres;
GRANT SELECT ON TABLE vw_sesion_dpr TO floreant;
-- Completed on 2025-09-30 01:46:38

--
-- PostgreSQL database dump complete
--
-- END Local_Recetas_28_09_2025.sql

-- BEGIN precorte.sql
-- END precorte.sql

-- BEGIN Productivo_24_09_2025.sql
--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.25
-- Dumped by pg_dump version 9.5.0

-- Started on 2025-09-25 19:30:19

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
DROP DATABASE pos;
--
-- TOC entry 3490 (class 1262 OID 35339)
-- Name: pos;
Type: DATABASE;
Schema: -;
Owner: floreant
--

CREATE DATABASE pos WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'es_ES.UTF-8' LC_CTYPE = 'es_ES.UTF-8';
ALTER DATABASE pos OWNER TO floreant;
\connect pos

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
--
-- TOC entry 6 (class 2615 OID 2200)
-- Name: public;
Type: SCHEMA;
Schema: -;
ALTER SCHEMA public OWNER TO postgres;
--
-- TOC entry 3491 (class 0 OID 0)
-- Dependencies: 6
-- Name: SCHEMA public;
Type: COMMENT;
Schema: -;
Owner: postgres
--

COMMENT ON SCHEMA public IS 'standard public schema';
--
-- TOC entry 7 (class 2615 OID 36810)
-- Name: selemti;
Type: SCHEMA;
Schema: -;
ALTER SCHEMA selemti OWNER TO floreant;
--
-- TOC entry 381 (class 3079 OID 12361)
-- Name: plpgsql;
Type: EXTENSION;
Schema: -;
Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;
--
-- TOC entry 3493 (class 0 OID 0)
-- Dependencies: 381
-- Name: EXTENSION plpgsql;
Type: COMMENT;
Schema: -;
Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';
SET search_path = public, pg_catalog;
--
-- TOC entry 405 (class 1255 OID 36993)
-- Name: _last_assign_window(integer, integer, timestamp with time zone);
Type: FUNCTION;
Schema: public;
$$;
ALTER FUNCTION public._last_assign_window(_terminal_id integer, _user_id integer, _ref_time timestamp with time zone) OWNER TO postgres;
--
-- TOC entry 398 (class 1255 OID 35340)
-- Name: assign_daily_folio();
Type: FUNCTION;
Schema: public;
v_date     DATE;
v_next     INTEGER;
BEGIN
    IF NEW.terminal_id IS NULL THEN
        RAISE EXCEPTION 'No se puede crear ticket sin terminal_id';
END IF;
IF NEW.create_date IS NULL THEN
        NEW.create_date := NOW();
END IF;
v_date := (NEW.create_date AT TIME ZONE 'America/Mexico_City')::DATE;
SELECT COALESCE(NULLIF(UPPER(BTRIM(t.location)), ''), '') INTO v_branch
    FROM public.terminal t
    WHERE t.id = NEW.terminal_id;
IF NOT FOUND THEN
        RAISE EXCEPTION 'Terminal % no existe en la base de datos', NEW.terminal_id;
END IF;
IF NEW.daily_folio IS NOT NULL AND NEW.folio_date IS NOT NULL AND NEW.branch_key IS NOT NULL THEN
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE folio_date = NEW.folio_date
            AND branch_key = NEW.branch_key
            AND daily_folio = NEW.daily_folio
            AND id != NEW.id
        ) THEN
            RAISE EXCEPTION 'Folio % ya existe para % en %', NEW.daily_folio, NEW.branch_key, NEW.folio_date;
END IF;
RETURN NEW;
END IF;
WITH up AS (
        INSERT INTO public.daily_folio_counter (folio_date, branch_key, last_value)
        VALUES (v_date, v_branch, 1)
        ON CONFLICT (folio_date, branch_key)
        DO UPDATE SET last_value = public.daily_folio_counter.last_value + 1
        RETURNING last_value
    )
    SELECT last_value INTO v_next FROM up;
NEW.folio_date := v_date;
NEW.branch_key := v_branch;
NEW.daily_folio := v_next;
RETURN NEW;
END
$$;
ALTER FUNCTION public.assign_daily_folio() OWNER TO floreant;
--
-- TOC entry 399 (class 1255 OID 35341)
-- Name: get_daily_stats(date);
Type: FUNCTION;
Schema: public;
$$;
ALTER FUNCTION public.get_daily_stats(p_date date) OWNER TO floreant;
--
-- TOC entry 400 (class 1255 OID 35342)
-- Name: get_ticket_folio_info(integer);
Type: FUNCTION;
Schema: public;
$$;
ALTER FUNCTION public.get_ticket_folio_info(p_ticket_id integer) OWNER TO floreant;
--
-- TOC entry 401 (class 1255 OID 35343)
-- Name: kds_notify();
Type: FUNCTION;
Schema: public;
v_pg_id       INT;
v_item_id     INT;
v_status      TEXT;
v_total       INT;
v_ready       INT;
v_done        INT;
v_type        TEXT;
v_daily_folio INT;
v_branch_key  TEXT;
v_folio_fmt   TEXT;
BEGIN
    IF TG_TABLE_NAME = 'kitchen_ticket_item' THEN
        IF NEW.ticket_item_id IS NULL THEN
            RAISE EXCEPTION 'ticket_item_id no puede ser NULL en kitchen_ticket_item';
END IF;
v_item_id := NEW.ticket_item_id;
SELECT ti.ticket_id, ti.pg_id INTO v_ticket_id, v_pg_id
        FROM ticket_item ti WHERE ti.id = v_item_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket_item % no existe', v_item_id;
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket % no existe', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, '0');
v_status := UPPER(COALESCE(NEW.status, ''));
v_type := CASE WHEN TG_OP = 'INSERT' THEN 'item_upsert' ELSE 'item_status' END;
PERFORM pg_notify(
            'kds_event',
            json_build_object(
                'type',        v_type,
                'ticket_id',   v_ticket_id,
                'pg',          v_pg_id,
                'item_id',     v_item_id,
                'status',      v_status,
                'daily_folio', v_daily_folio,
                'branch_key',  v_branch_key,
                'folio_fmt',   v_folio_fmt,
                'ts',          NOW()
            )::TEXT
        );
ELSIF TG_TABLE_NAME = 'ticket_item' THEN
        v_item_id := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id := NEW.pg_id;
IF v_ticket_id IS NULL THEN
            RAISE EXCEPTION 'ticket_id no puede ser NULL en ticket_item';
END IF;
SELECT daily_folio, branch_key INTO v_daily_folio, v_branch_key
        FROM ticket WHERE id = v_ticket_id;
IF NOT FOUND THEN
            RAISE EXCEPTION 'ticket % no existe', v_ticket_id;
END IF;
v_folio_fmt := LPAD(COALESCE(v_daily_folio, 0)::TEXT, 4, '0');
v_status := UPPER(COALESCE(NEW.status, ''));
v_type := CASE WHEN TG_OP = 'INSERT' THEN 'item_insert' ELSE 'item_status' END;
PERFORM pg_notify(
            'kds_event',
            json_build_object(
                'type',        v_type,
                'ticket_id',   v_ticket_id,
                'pg',          v_pg_id,
                'item_id',     v_item_id,
                'status',      v_status,
                'daily_folio', v_daily_folio,
                'branch_key',  v_branch_key,
                'folio_fmt',   v_folio_fmt,
                'ts',          NOW()
            )::TEXT
        );
END IF;
IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
        WITH s AS (
            SELECT
                ti.id AS item_id,
                UPPER(COALESCE(kti.status, ti.status, '')) AS st
            FROM ticket_item ti
            LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
            WHERE ti.ticket_id = v_ticket_id AND ti.pg_id = v_pg_id
            GROUP BY ti.id, st
        )
        SELECT
            COUNT(DISTINCT item_id) AS total,
            COUNT(DISTINCT item_id) FILTER (WHERE st IN ('READY', 'DONE')) AS ready,
            COUNT(DISTINCT item_id) FILTER (WHERE st = 'DONE') AS done
        INTO v_total, v_ready, v_done
        FROM s;
IF v_total > 0 AND v_total = v_ready THEN
            PERFORM pg_notify(
                'kds_event',
                json_build_object(
                    'type',        'ticket_all_ready',
                    'ticket_id',   v_ticket_id,
                    'pg',          v_pg_id,
                    'daily_folio', v_daily_folio,
                    'branch_key',  v_branch_key,
                    'folio_fmt',   v_folio_fmt,
                    'ts',          NOW()
                )::TEXT
            );
END IF;
IF v_total > 0 AND v_total = v_done THEN
            PERFORM pg_notify(
                'kds_event',
                json_build_object(
                    'type',        'ticket_all_done',
                    'ticket_id',   v_ticket_id,
                    'pg',          v_pg_id,
                    'daily_folio', v_daily_folio,
                    'branch_key',  v_branch_key,
                    'folio_fmt',   v_folio_fmt,
                    'ts',          NOW()
                )::TEXT
            );
END IF;
END IF;
RETURN NEW;
END;
$$;
ALTER FUNCTION public.kds_notify() OWNER TO floreant;
--
-- TOC entry 402 (class 1255 OID 35344)
-- Name: reset_daily_folio_smart(text);
Type: FUNCTION;
Schema: public;
v_branch TEXT;
v_has_rows BOOLEAN;
BEGIN
    SELECT EXISTS (
        SELECT 1 FROM public.daily_folio_counter
        WHERE folio_date = v_current_date
        AND (p_branch IS NULL OR branch_key = UPPER(BTRIM(p_branch)))
    ) INTO v_has_rows;
IF NOT v_has_rows THEN
        branch_reset := 'none';
tickets_affected := 0;
RETURN NEXT;
RETURN;
END IF;
FOR v_branch IN
        SELECT DISTINCT
            CASE
                WHEN p_branch IS NULL THEN dfc.branch_key
                ELSE UPPER(BTRIM(p_branch))
            END
        FROM public.daily_folio_counter dfc
        WHERE dfc.folio_date = v_current_date
        AND (p_branch IS NULL OR dfc.branch_key = UPPER(BTRIM(p_branch)))
    LOOP
        IF EXISTS (
            SELECT 1 FROM public.ticket
            WHERE branch_key = v_branch
            AND folio_date = v_current_date
        ) THEN
            RAISE NOTICE 'ADVERTENCIA: Sucursal % ya tiene % tickets hoy - NO reseteable',
                v_branch,
                (SELECT COUNT(*) FROM public.ticket WHERE branch_key = v_branch AND folio_date = v_current_date);
CONTINUE;
END IF;
DELETE FROM public.daily_folio_counter
        WHERE branch_key = v_branch AND folio_date = v_current_date;
branch_reset := v_branch;
tickets_affected := 0;
RETURN NEXT;
END LOOP;
RETURN;
END
$$;
ALTER FUNCTION public.reset_daily_folio_smart(p_branch text) OWNER TO floreant;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 403 (class 1255 OID 36947)
-- Name: fn_dah_after_insert();
Type: FUNCTION;
Schema: selemti;
BEGIN
  IF NEW.operation = 'ASIGNAR' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
IF v_term IS NULL THEN
      INSERT INTO selemti.auditoria(quien,que,payload)
      VALUES(NEW.a_user,'NO_SE_PUDO_RESOLVER_TERMINAL',
             jsonb_build_object('dah_id',NEW.id,'operation',NEW.operation,'time',NEW."time"));
RETURN NEW;
END IF;
INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id
    ) VALUES (
      v_term.id, COALESCE(v_term.name,'Terminal '||v_term.id), COALESCE(v_term.location,''),
      NEW.a_user, COALESCE(NEW."time", now()), 'ACTIVA', COALESCE(v_term.current_balance,0), NEW.id
    );
ELSIF NEW.operation = 'CERRAR' THEN
    SELECT * INTO v_term FROM public.terminal
    WHERE assigned_user = NEW.a_user
    ORDER BY id LIMIT 1;
UPDATE selemti.sesion_cajon
       SET cierre_ts     = COALESCE(NEW."time", now()),
           estatus       = 'LISTO_PARA_CORTE',
           closing_float = COALESCE(v_term.current_balance,0),
           dah_evento_id = COALESCE(dah_evento_id, NEW.id)
     WHERE terminal_id = COALESCE(v_term.id, terminal_id)
       AND cajero_usuario_id = NEW.a_user
       AND cierre_ts IS NULL;
END IF;
RETURN NEW;
END $$;
ALTER FUNCTION selemti.fn_dah_after_insert() OWNER TO floreant;
--
-- TOC entry 384 (class 1255 OID 36941)
-- Name: fn_normalizar_forma_pago(text, text, text, text);
Type: FUNCTION;
Schema: selemti;
DECLARE cn TEXT := selemti.fn_slug(p_custom_name);
BEGIN
  IF pt IN ('CASH','CREDIT','DEBIT','TRANSFER') THEN
    RETURN pt;
ELSIF pt = 'CUSTOM_PAYMENT' THEN
    IF cn IS NOT NULL THEN RETURN 'CUSTOM:'||cn;
ELSE RETURN 'CUSTOM';
END IF;
ELSIF pt IN ('REFUND','PAY_OUT','CASH_DROP') THEN
    RETURN pt;
-- egresos/ajustes estandarizados
  ELSE
    RETURN pt;
END IF;
END $$;
ALTER FUNCTION selemti.fn_normalizar_forma_pago(p_payment_type text, p_transaction_type text, p_payment_sub_type text, p_custom_name text) OWNER TO floreant;
--
-- TOC entry 382 (class 1255 OID 36877)
-- Name: fn_precorte_efectivo_bi();
Type: FUNCTION;
Schema: selemti;
RETURN NEW;
END $$;
ALTER FUNCTION selemti.fn_precorte_efectivo_bi() OWNER TO floreant;
--
-- TOC entry 404 (class 1255 OID 36949)
-- Name: fn_reparar_sesion_apertura(integer, integer);
Type: FUNCTION;
Schema: selemti;
BEGIN
  IF EXISTS (
    SELECT 1 FROM selemti.sesion_cajon
    WHERE terminal_id=p_terminal_id AND cajero_usuario_id=p_usuario AND cierre_ts IS NULL
  ) THEN
    RETURN 'YA_EXISTE_SESION_ABIERTA';
END IF;
SELECT * INTO v_term FROM public.terminal WHERE id=p_terminal_id;
IF v_term IS NULL THEN RETURN 'TERMINAL_NO_ENCONTRADA';
END IF;
INSERT INTO selemti.sesion_cajon(
    terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
    apertura_ts, estatus, opening_float
  ) VALUES (
    p_terminal_id, COALESCE(v_term.name,'Terminal '||p_terminal_id), COALESCE(v_term.location,''),
    p_usuario, now(), 'ACTIVA', COALESCE(v_term.current_balance,0)
  );
RETURN 'CREADA';
END $$;
ALTER FUNCTION selemti.fn_reparar_sesion_apertura(p_terminal_id integer, p_usuario integer) OWNER TO floreant;
--
-- TOC entry 383 (class 1255 OID 36940)
-- Name: fn_slug(text);
Type: FUNCTION;
Schema: selemti;
BEGIN
  s := translate(s, 'ÁÉÍÓÚÜÑáéíóúüñ', 'AEIOUUNaeiouun');
s := regexp_replace(s, '[^a-z0-9]+', '-', 'g');
s := regexp_replace(s, '(^-|-$)', '', 'g');
IF s = '' THEN RETURN NULL;
END IF;
RETURN s;
END $_$;
ALTER FUNCTION selemti.fn_slug(in_text text) OWNER TO floreant;
--
-- TOC entry 406 (class 1255 OID 36944)
-- Name: fn_terminal_bu_snapshot_cierre();
Type: FUNCTION;
Schema: selemti;
v_has_new boolean := (NEW.assigned_user IS NOT NULL);
BEGIN
  /* CIERRE: había cajero y ahora ya no */
  IF (v_has_old AND NOT v_has_new) THEN
    UPDATE selemti.sesion_cajon AS sc
       SET cierre_ts      = now(),
           estatus        = 'LISTO_PARA_CORTE',
           closing_float  = COALESCE(OLD.current_balance, 0),
           -- bandera: true si NO hubo precorte para esta sesión
           skipped_precorte = NOT EXISTS (
             SELECT 1
             FROM selemti.precorte p
             WHERE p.sesion_id = sc.id
           )
     WHERE sc.terminal_id       = OLD.id
       AND sc.cajero_usuario_id = OLD.assigned_user
       AND sc.cierre_ts         IS NULL;
END IF;
/* APERTURA: no había cajero y ahora sí */
  IF (NOT v_has_old AND v_has_new) THEN
    INSERT INTO selemti.sesion_cajon(
      terminal_id, terminal_nombre, sucursal, cajero_usuario_id,
      apertura_ts, estatus, opening_float, dah_evento_id, skipped_precorte
    )
    VALUES(
      NEW.id,
      COALESCE(NEW.name, 'Terminal '||NEW.id),
      COALESCE(NEW.location, ''),
      NEW.assigned_user,
      now(),
      'ACTIVA',
      COALESCE(NEW.current_balance, 0),
      NULL,
      FALSE  -- por defecto, en apertura no está saltado
    );
END IF;
RETURN NEW;
END $$;
ALTER FUNCTION selemti.fn_terminal_bu_snapshot_cierre() OWNER TO floreant;
--
-- TOC entry 385 (class 1255 OID 36942)
-- Name: fn_tx_after_insert_forma_pago();
Type: FUNCTION;
Schema: selemti;
BEGIN
  v_codigo := selemti.fn_normalizar_forma_pago(
    NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name
  );
INSERT INTO selemti.formas_pago(
    codigo, payment_type, transaction_type, payment_sub_type, custom_name, custom_ref
  )
  VALUES (
    v_codigo, NEW.payment_type, NEW.transaction_type, NEW.payment_sub_type, NEW.custom_payment_name, NEW.custom_payment_ref
  )
  ON CONFLICT DO NOTHING;
RETURN NEW;
END $$;
ALTER FUNCTION selemti.fn_tx_after_insert_forma_pago() OWNER TO floreant;
SET search_path = public, pg_catalog;
SET default_tablespace = '';
SET default_with_oids = false;
--
-- TOC entry 181 (class 1259 OID 35345)
-- Name: action_history;
Type: TABLE;
Schema: public;
ALTER TABLE action_history OWNER TO floreant;
--
-- TOC entry 182 (class 1259 OID 35351)
-- Name: action_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE action_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE action_history_id_seq OWNER TO floreant;
--
-- TOC entry 3494 (class 0 OID 0)
-- Dependencies: 182
-- Name: action_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE action_history_id_seq OWNED BY action_history.id;
--
-- TOC entry 183 (class 1259 OID 35353)
-- Name: attendence_history;
Type: TABLE;
Schema: public;
ALTER TABLE attendence_history OWNER TO floreant;
--
-- TOC entry 184 (class 1259 OID 35356)
-- Name: attendence_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE attendence_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE attendence_history_id_seq OWNER TO floreant;
--
-- TOC entry 3495 (class 0 OID 0)
-- Dependencies: 184
-- Name: attendence_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE attendence_history_id_seq OWNED BY attendence_history.id;
--
-- TOC entry 185 (class 1259 OID 35358)
-- Name: cash_drawer;
Type: TABLE;
Schema: public;
ALTER TABLE cash_drawer OWNER TO floreant;
--
-- TOC entry 186 (class 1259 OID 35361)
-- Name: cash_drawer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_id_seq OWNER TO floreant;
--
-- TOC entry 3496 (class 0 OID 0)
-- Dependencies: 186
-- Name: cash_drawer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_id_seq OWNED BY cash_drawer.id;
--
-- TOC entry 187 (class 1259 OID 35363)
-- Name: cash_drawer_reset_history;
Type: TABLE;
Schema: public;
ALTER TABLE cash_drawer_reset_history OWNER TO floreant;
--
-- TOC entry 188 (class 1259 OID 35366)
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cash_drawer_reset_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cash_drawer_reset_history_id_seq OWNER TO floreant;
--
-- TOC entry 3497 (class 0 OID 0)
-- Dependencies: 188
-- Name: cash_drawer_reset_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cash_drawer_reset_history_id_seq OWNED BY cash_drawer_reset_history.id;
--
-- TOC entry 189 (class 1259 OID 35368)
-- Name: cooking_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE cooking_instruction OWNER TO floreant;
--
-- TOC entry 190 (class 1259 OID 35371)
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE cooking_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE cooking_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 3498 (class 0 OID 0)
-- Dependencies: 190
-- Name: cooking_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE cooking_instruction_id_seq OWNED BY cooking_instruction.id;
--
-- TOC entry 191 (class 1259 OID 35373)
-- Name: coupon_and_discount;
Type: TABLE;
Schema: public;
ALTER TABLE coupon_and_discount OWNER TO floreant;
--
-- TOC entry 192 (class 1259 OID 35376)
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE coupon_and_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE coupon_and_discount_id_seq OWNER TO floreant;
--
-- TOC entry 3499 (class 0 OID 0)
-- Dependencies: 192
-- Name: coupon_and_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE coupon_and_discount_id_seq OWNED BY coupon_and_discount.id;
--
-- TOC entry 193 (class 1259 OID 35378)
-- Name: currency;
Type: TABLE;
Schema: public;
ALTER TABLE currency OWNER TO floreant;
--
-- TOC entry 194 (class 1259 OID 35381)
-- Name: currency_balance;
Type: TABLE;
Schema: public;
ALTER TABLE currency_balance OWNER TO floreant;
--
-- TOC entry 195 (class 1259 OID 35384)
-- Name: currency_balance_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_balance_id_seq OWNER TO floreant;
--
-- TOC entry 3500 (class 0 OID 0)
-- Dependencies: 195
-- Name: currency_balance_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_balance_id_seq OWNED BY currency_balance.id;
--
-- TOC entry 196 (class 1259 OID 35386)
-- Name: currency_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE currency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE currency_id_seq OWNER TO floreant;
--
-- TOC entry 3501 (class 0 OID 0)
-- Dependencies: 196
-- Name: currency_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE currency_id_seq OWNED BY currency.id;
--
-- TOC entry 197 (class 1259 OID 35388)
-- Name: custom_payment;
Type: TABLE;
Schema: public;
ALTER TABLE custom_payment OWNER TO floreant;
--
-- TOC entry 198 (class 1259 OID 35391)
-- Name: custom_payment_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE custom_payment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE custom_payment_id_seq OWNER TO floreant;
--
-- TOC entry 3502 (class 0 OID 0)
-- Dependencies: 198
-- Name: custom_payment_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE custom_payment_id_seq OWNED BY custom_payment.id;
--
-- TOC entry 199 (class 1259 OID 35393)
-- Name: customer;
Type: TABLE;
Schema: public;
ALTER TABLE customer OWNER TO floreant;
--
-- TOC entry 200 (class 1259 OID 35399)
-- Name: customer_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE customer_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE customer_auto_id_seq OWNER TO floreant;
--
-- TOC entry 3503 (class 0 OID 0)
-- Dependencies: 200
-- Name: customer_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE customer_auto_id_seq OWNED BY customer.auto_id;
--
-- TOC entry 201 (class 1259 OID 35401)
-- Name: customer_properties;
Type: TABLE;
Schema: public;
ALTER TABLE customer_properties OWNER TO floreant;
--
-- TOC entry 202 (class 1259 OID 35407)
-- Name: daily_folio_counter;
Type: TABLE;
Schema: public;
ALTER TABLE daily_folio_counter OWNER TO floreant;
--
-- TOC entry 203 (class 1259 OID 35414)
-- Name: data_update_info;
Type: TABLE;
Schema: public;
ALTER TABLE data_update_info OWNER TO floreant;
--
-- TOC entry 204 (class 1259 OID 35417)
-- Name: data_update_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE data_update_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE data_update_info_id_seq OWNER TO floreant;
--
-- TOC entry 3504 (class 0 OID 0)
-- Dependencies: 204
-- Name: data_update_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE data_update_info_id_seq OWNED BY data_update_info.id;
--
-- TOC entry 205 (class 1259 OID 35419)
-- Name: delivery_address;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_address OWNER TO floreant;
--
-- TOC entry 206 (class 1259 OID 35422)
-- Name: delivery_address_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_address_id_seq OWNER TO floreant;
--
-- TOC entry 3505 (class 0 OID 0)
-- Dependencies: 206
-- Name: delivery_address_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_address_id_seq OWNED BY delivery_address.id;
--
-- TOC entry 207 (class 1259 OID 35424)
-- Name: delivery_charge;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_charge OWNER TO floreant;
--
-- TOC entry 208 (class 1259 OID 35427)
-- Name: delivery_charge_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_charge_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_charge_id_seq OWNER TO floreant;
--
-- TOC entry 3506 (class 0 OID 0)
-- Dependencies: 208
-- Name: delivery_charge_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_charge_id_seq OWNED BY delivery_charge.id;
--
-- TOC entry 209 (class 1259 OID 35429)
-- Name: delivery_configuration;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_configuration OWNER TO floreant;
--
-- TOC entry 210 (class 1259 OID 35432)
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_configuration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_configuration_id_seq OWNER TO floreant;
--
-- TOC entry 3507 (class 0 OID 0)
-- Dependencies: 210
-- Name: delivery_configuration_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_configuration_id_seq OWNED BY delivery_configuration.id;
--
-- TOC entry 211 (class 1259 OID 35434)
-- Name: delivery_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE delivery_instruction OWNER TO floreant;
--
-- TOC entry 212 (class 1259 OID 35437)
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE delivery_instruction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE delivery_instruction_id_seq OWNER TO floreant;
--
-- TOC entry 3508 (class 0 OID 0)
-- Dependencies: 212
-- Name: delivery_instruction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE delivery_instruction_id_seq OWNED BY delivery_instruction.id;
--
-- TOC entry 213 (class 1259 OID 35439)
-- Name: drawer_assigned_history;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_assigned_history OWNER TO floreant;
--
-- TOC entry 214 (class 1259 OID 35442)
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_assigned_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_assigned_history_id_seq OWNER TO floreant;
--
-- TOC entry 3509 (class 0 OID 0)
-- Dependencies: 214
-- Name: drawer_assigned_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_assigned_history_id_seq OWNED BY drawer_assigned_history.id;
--
-- TOC entry 215 (class 1259 OID 35444)
-- Name: drawer_pull_report;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_pull_report OWNER TO floreant;
--
-- TOC entry 216 (class 1259 OID 35447)
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE drawer_pull_report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE drawer_pull_report_id_seq OWNER TO floreant;
--
-- TOC entry 3510 (class 0 OID 0)
-- Dependencies: 216
-- Name: drawer_pull_report_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE drawer_pull_report_id_seq OWNED BY drawer_pull_report.id;
--
-- TOC entry 217 (class 1259 OID 35449)
-- Name: drawer_pull_report_voidtickets;
Type: TABLE;
Schema: public;
ALTER TABLE drawer_pull_report_voidtickets OWNER TO floreant;
--
-- TOC entry 218 (class 1259 OID 35455)
-- Name: employee_in_out_history;
Type: TABLE;
Schema: public;
ALTER TABLE employee_in_out_history OWNER TO floreant;
--
-- TOC entry 219 (class 1259 OID 35458)
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE employee_in_out_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE employee_in_out_history_id_seq OWNER TO floreant;
--
-- TOC entry 3511 (class 0 OID 0)
-- Dependencies: 219
-- Name: employee_in_out_history_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE employee_in_out_history_id_seq OWNED BY employee_in_out_history.id;
--
-- TOC entry 220 (class 1259 OID 35460)
-- Name: global_config;
Type: TABLE;
Schema: public;
ALTER TABLE global_config OWNER TO floreant;
--
-- TOC entry 221 (class 1259 OID 35463)
-- Name: global_config_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE global_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE global_config_id_seq OWNER TO floreant;
--
-- TOC entry 3512 (class 0 OID 0)
-- Dependencies: 221
-- Name: global_config_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE global_config_id_seq OWNED BY global_config.id;
--
-- TOC entry 222 (class 1259 OID 35465)
-- Name: gratuity;
Type: TABLE;
Schema: public;
ALTER TABLE gratuity OWNER TO floreant;
--
-- TOC entry 223 (class 1259 OID 35468)
-- Name: gratuity_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE gratuity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE gratuity_id_seq OWNER TO floreant;
--
-- TOC entry 3513 (class 0 OID 0)
-- Dependencies: 223
-- Name: gratuity_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE gratuity_id_seq OWNED BY gratuity.id;
--
-- TOC entry 224 (class 1259 OID 35470)
-- Name: group_taxes;
Type: TABLE;
Schema: public;
ALTER TABLE group_taxes OWNER TO floreant;
--
-- TOC entry 225 (class 1259 OID 35473)
-- Name: guest_check_print;
Type: TABLE;
Schema: public;
ALTER TABLE guest_check_print OWNER TO floreant;
--
-- TOC entry 226 (class 1259 OID 35476)
-- Name: guest_check_print_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE guest_check_print_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE guest_check_print_id_seq OWNER TO floreant;
--
-- TOC entry 3514 (class 0 OID 0)
-- Dependencies: 226
-- Name: guest_check_print_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE guest_check_print_id_seq OWNED BY guest_check_print.id;
--
-- TOC entry 227 (class 1259 OID 35478)
-- Name: inventory_group;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_group OWNER TO floreant;
--
-- TOC entry 228 (class 1259 OID 35481)
-- Name: inventory_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_group_id_seq OWNER TO floreant;
--
-- TOC entry 3515 (class 0 OID 0)
-- Dependencies: 228
-- Name: inventory_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_group_id_seq OWNED BY inventory_group.id;
--
-- TOC entry 229 (class 1259 OID 35483)
-- Name: inventory_item;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_item OWNER TO floreant;
--
-- TOC entry 230 (class 1259 OID 35486)
-- Name: inventory_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_item_id_seq OWNER TO floreant;
--
-- TOC entry 3516 (class 0 OID 0)
-- Dependencies: 230
-- Name: inventory_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_item_id_seq OWNED BY inventory_item.id;
--
-- TOC entry 231 (class 1259 OID 35488)
-- Name: inventory_location;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_location OWNER TO floreant;
--
-- TOC entry 232 (class 1259 OID 35491)
-- Name: inventory_location_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_location_id_seq OWNER TO floreant;
--
-- TOC entry 3517 (class 0 OID 0)
-- Dependencies: 232
-- Name: inventory_location_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_location_id_seq OWNED BY inventory_location.id;
--
-- TOC entry 233 (class 1259 OID 35493)
-- Name: inventory_meta_code;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_meta_code OWNER TO floreant;
--
-- TOC entry 234 (class 1259 OID 35499)
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_meta_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_meta_code_id_seq OWNER TO floreant;
--
-- TOC entry 3518 (class 0 OID 0)
-- Dependencies: 234
-- Name: inventory_meta_code_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_meta_code_id_seq OWNED BY inventory_meta_code.id;
--
-- TOC entry 235 (class 1259 OID 35501)
-- Name: inventory_transaction;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_transaction OWNER TO floreant;
--
-- TOC entry 236 (class 1259 OID 35504)
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_transaction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_transaction_id_seq OWNER TO floreant;
--
-- TOC entry 3519 (class 0 OID 0)
-- Dependencies: 236
-- Name: inventory_transaction_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_transaction_id_seq OWNED BY inventory_transaction.id;
--
-- TOC entry 237 (class 1259 OID 35506)
-- Name: inventory_unit;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_unit OWNER TO floreant;
--
-- TOC entry 238 (class 1259 OID 35512)
-- Name: inventory_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_unit_id_seq OWNER TO floreant;
--
-- TOC entry 3520 (class 0 OID 0)
-- Dependencies: 238
-- Name: inventory_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_unit_id_seq OWNED BY inventory_unit.id;
--
-- TOC entry 239 (class 1259 OID 35514)
-- Name: inventory_vendor;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_vendor OWNER TO floreant;
--
-- TOC entry 240 (class 1259 OID 35520)
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_vendor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_vendor_id_seq OWNER TO floreant;
--
-- TOC entry 3521 (class 0 OID 0)
-- Dependencies: 240
-- Name: inventory_vendor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_vendor_id_seq OWNED BY inventory_vendor.id;
--
-- TOC entry 241 (class 1259 OID 35522)
-- Name: inventory_warehouse;
Type: TABLE;
Schema: public;
ALTER TABLE inventory_warehouse OWNER TO floreant;
--
-- TOC entry 242 (class 1259 OID 35525)
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE inventory_warehouse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE inventory_warehouse_id_seq OWNER TO floreant;
--
-- TOC entry 3522 (class 0 OID 0)
-- Dependencies: 242
-- Name: inventory_warehouse_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE inventory_warehouse_id_seq OWNED BY inventory_warehouse.id;
--
-- TOC entry 243 (class 1259 OID 35527)
-- Name: item_order_type;
Type: TABLE;
Schema: public;
ALTER TABLE item_order_type OWNER TO floreant;
--
-- TOC entry 244 (class 1259 OID 35530)
-- Name: kitchen_ticket;
Type: TABLE;
Schema: public;
ALTER TABLE kitchen_ticket OWNER TO floreant;
--
-- TOC entry 245 (class 1259 OID 35533)
-- Name: terminal;
Type: TABLE;
Schema: public;
ALTER TABLE terminal OWNER TO floreant;
--
-- TOC entry 246 (class 1259 OID 35539)
-- Name: ticket;
Type: TABLE;
Schema: public;
ALTER TABLE ticket OWNER TO floreant;
--
-- TOC entry 247 (class 1259 OID 35546)
-- Name: kds_orders_enhanced;
Type: VIEW;
Schema: public;
ALTER TABLE kds_orders_enhanced OWNER TO floreant;
--
-- TOC entry 248 (class 1259 OID 35551)
-- Name: kds_ready_log;
Type: TABLE;
Schema: public;
ALTER TABLE kds_ready_log OWNER TO floreant;
--
-- TOC entry 249 (class 1259 OID 35555)
-- Name: kit_ticket_table_num;
Type: TABLE;
Schema: public;
ALTER TABLE kit_ticket_table_num OWNER TO floreant;
--
-- TOC entry 250 (class 1259 OID 35558)
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_id_seq OWNER TO floreant;
--
-- TOC entry 3523 (class 0 OID 0)
-- Dependencies: 250
-- Name: kitchen_ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_id_seq OWNED BY kitchen_ticket.id;
--
-- TOC entry 251 (class 1259 OID 35560)
-- Name: kitchen_ticket_item;
Type: TABLE;
Schema: public;
ALTER TABLE kitchen_ticket_item OWNER TO floreant;
--
-- TOC entry 252 (class 1259 OID 35566)
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE kitchen_ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE kitchen_ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 3524 (class 0 OID 0)
-- Dependencies: 252
-- Name: kitchen_ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE kitchen_ticket_item_id_seq OWNED BY kitchen_ticket_item.id;
--
-- TOC entry 253 (class 1259 OID 35568)
-- Name: menu_category;
Type: TABLE;
Schema: public;
ALTER TABLE menu_category OWNER TO floreant;
--
-- TOC entry 254 (class 1259 OID 35571)
-- Name: menu_category_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_category_id_seq OWNER TO floreant;
--
-- TOC entry 3525 (class 0 OID 0)
-- Dependencies: 254
-- Name: menu_category_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_category_id_seq OWNED BY menu_category.id;
--
-- TOC entry 255 (class 1259 OID 35573)
-- Name: menu_group;
Type: TABLE;
Schema: public;
ALTER TABLE menu_group OWNER TO floreant;
--
-- TOC entry 256 (class 1259 OID 35576)
-- Name: menu_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_group_id_seq OWNER TO floreant;
--
-- TOC entry 3526 (class 0 OID 0)
-- Dependencies: 256
-- Name: menu_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_group_id_seq OWNED BY menu_group.id;
--
-- TOC entry 257 (class 1259 OID 35578)
-- Name: menu_item;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item OWNER TO floreant;
--
-- TOC entry 258 (class 1259 OID 35584)
-- Name: menu_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_id_seq OWNER TO floreant;
--
-- TOC entry 3527 (class 0 OID 0)
-- Dependencies: 258
-- Name: menu_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_id_seq OWNED BY menu_item.id;
--
-- TOC entry 259 (class 1259 OID 35586)
-- Name: menu_item_properties;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_properties OWNER TO floreant;
--
-- TOC entry 260 (class 1259 OID 35589)
-- Name: menu_item_size;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_size OWNER TO floreant;
--
-- TOC entry 261 (class 1259 OID 35592)
-- Name: menu_item_size_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_item_size_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_item_size_id_seq OWNER TO floreant;
--
-- TOC entry 3528 (class 0 OID 0)
-- Dependencies: 261
-- Name: menu_item_size_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_item_size_id_seq OWNED BY menu_item_size.id;
--
-- TOC entry 262 (class 1259 OID 35594)
-- Name: menu_item_terminal_ref;
Type: TABLE;
Schema: public;
ALTER TABLE menu_item_terminal_ref OWNER TO floreant;
--
-- TOC entry 263 (class 1259 OID 35597)
-- Name: menu_modifier;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier OWNER TO floreant;
--
-- TOC entry 264 (class 1259 OID 35600)
-- Name: menu_modifier_group;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier_group OWNER TO floreant;
--
-- TOC entry 265 (class 1259 OID 35603)
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_group_id_seq OWNER TO floreant;
--
-- TOC entry 3529 (class 0 OID 0)
-- Dependencies: 265
-- Name: menu_modifier_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_group_id_seq OWNED BY menu_modifier_group.id;
--
-- TOC entry 266 (class 1259 OID 35605)
-- Name: menu_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menu_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menu_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 3530 (class 0 OID 0)
-- Dependencies: 266
-- Name: menu_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menu_modifier_id_seq OWNED BY menu_modifier.id;
--
-- TOC entry 267 (class 1259 OID 35607)
-- Name: menu_modifier_properties;
Type: TABLE;
Schema: public;
ALTER TABLE menu_modifier_properties OWNER TO floreant;
--
-- TOC entry 268 (class 1259 OID 35610)
-- Name: menucategory_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menucategory_discount OWNER TO floreant;
--
-- TOC entry 269 (class 1259 OID 35613)
-- Name: menugroup_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menugroup_discount OWNER TO floreant;
--
-- TOC entry 270 (class 1259 OID 35616)
-- Name: menuitem_discount;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_discount OWNER TO floreant;
--
-- TOC entry 271 (class 1259 OID 35619)
-- Name: menuitem_modifiergroup;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_modifiergroup OWNER TO floreant;
--
-- TOC entry 272 (class 1259 OID 35622)
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_modifiergroup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_modifiergroup_id_seq OWNER TO floreant;
--
-- TOC entry 3531 (class 0 OID 0)
-- Dependencies: 272
-- Name: menuitem_modifiergroup_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_modifiergroup_id_seq OWNED BY menuitem_modifiergroup.id;
--
-- TOC entry 273 (class 1259 OID 35624)
-- Name: menuitem_pizzapirce;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_pizzapirce OWNER TO floreant;
--
-- TOC entry 274 (class 1259 OID 35627)
-- Name: menuitem_shift;
Type: TABLE;
Schema: public;
ALTER TABLE menuitem_shift OWNER TO floreant;
--
-- TOC entry 275 (class 1259 OID 35630)
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE menuitem_shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE menuitem_shift_id_seq OWNER TO floreant;
--
-- TOC entry 3532 (class 0 OID 0)
-- Dependencies: 275
-- Name: menuitem_shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE menuitem_shift_id_seq OWNED BY menuitem_shift.id;
--
-- TOC entry 276 (class 1259 OID 35632)
-- Name: menumodifier_pizzamodifierprice;
Type: TABLE;
Schema: public;
ALTER TABLE menumodifier_pizzamodifierprice OWNER TO floreant;
--
-- TOC entry 277 (class 1259 OID 35635)
-- Name: modifier_multiplier_price;
Type: TABLE;
Schema: public;
ALTER TABLE modifier_multiplier_price OWNER TO floreant;
--
-- TOC entry 278 (class 1259 OID 35638)
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE modifier_multiplier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE modifier_multiplier_price_id_seq OWNER TO floreant;
--
-- TOC entry 3533 (class 0 OID 0)
-- Dependencies: 278
-- Name: modifier_multiplier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE modifier_multiplier_price_id_seq OWNED BY modifier_multiplier_price.id;
--
-- TOC entry 279 (class 1259 OID 35640)
-- Name: multiplier;
Type: TABLE;
Schema: public;
ALTER TABLE multiplier OWNER TO floreant;
--
-- TOC entry 280 (class 1259 OID 35643)
-- Name: order_type;
Type: TABLE;
Schema: public;
ALTER TABLE order_type OWNER TO floreant;
--
-- TOC entry 281 (class 1259 OID 35649)
-- Name: order_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE order_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE order_type_id_seq OWNER TO floreant;
--
-- TOC entry 3534 (class 0 OID 0)
-- Dependencies: 281
-- Name: order_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE order_type_id_seq OWNED BY order_type.id;
--
-- TOC entry 282 (class 1259 OID 35651)
-- Name: packaging_unit;
Type: TABLE;
Schema: public;
ALTER TABLE packaging_unit OWNER TO floreant;
--
-- TOC entry 283 (class 1259 OID 35654)
-- Name: packaging_unit_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE packaging_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE packaging_unit_id_seq OWNER TO floreant;
--
-- TOC entry 3535 (class 0 OID 0)
-- Dependencies: 283
-- Name: packaging_unit_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE packaging_unit_id_seq OWNED BY packaging_unit.id;
--
-- TOC entry 284 (class 1259 OID 35656)
-- Name: payout_reasons;
Type: TABLE;
Schema: public;
ALTER TABLE payout_reasons OWNER TO floreant;
--
-- TOC entry 285 (class 1259 OID 35659)
-- Name: payout_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 3536 (class 0 OID 0)
-- Dependencies: 285
-- Name: payout_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_reasons_id_seq OWNED BY payout_reasons.id;
--
-- TOC entry 286 (class 1259 OID 35661)
-- Name: payout_recepients;
Type: TABLE;
Schema: public;
ALTER TABLE payout_recepients OWNER TO floreant;
--
-- TOC entry 287 (class 1259 OID 35664)
-- Name: payout_recepients_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE payout_recepients_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE payout_recepients_id_seq OWNER TO floreant;
--
-- TOC entry 3537 (class 0 OID 0)
-- Dependencies: 287
-- Name: payout_recepients_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE payout_recepients_id_seq OWNED BY payout_recepients.id;
--
-- TOC entry 288 (class 1259 OID 35666)
-- Name: pizza_crust;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_crust OWNER TO floreant;
--
-- TOC entry 289 (class 1259 OID 35669)
-- Name: pizza_crust_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_crust_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_crust_id_seq OWNER TO floreant;
--
-- TOC entry 3538 (class 0 OID 0)
-- Dependencies: 289
-- Name: pizza_crust_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_crust_id_seq OWNED BY pizza_crust.id;
--
-- TOC entry 290 (class 1259 OID 35671)
-- Name: pizza_modifier_price;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_modifier_price OWNER TO floreant;
--
-- TOC entry 291 (class 1259 OID 35674)
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_modifier_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_modifier_price_id_seq OWNER TO floreant;
--
-- TOC entry 3539 (class 0 OID 0)
-- Dependencies: 291
-- Name: pizza_modifier_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_modifier_price_id_seq OWNED BY pizza_modifier_price.id;
--
-- TOC entry 292 (class 1259 OID 35676)
-- Name: pizza_price;
Type: TABLE;
Schema: public;
ALTER TABLE pizza_price OWNER TO floreant;
--
-- TOC entry 293 (class 1259 OID 35679)
-- Name: pizza_price_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE pizza_price_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE pizza_price_id_seq OWNER TO floreant;
--
-- TOC entry 3540 (class 0 OID 0)
-- Dependencies: 293
-- Name: pizza_price_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE pizza_price_id_seq OWNED BY pizza_price.id;
--
-- TOC entry 294 (class 1259 OID 35681)
-- Name: printer_configuration;
Type: TABLE;
Schema: public;
ALTER TABLE printer_configuration OWNER TO floreant;
--
-- TOC entry 295 (class 1259 OID 35687)
-- Name: printer_group;
Type: TABLE;
Schema: public;
ALTER TABLE printer_group OWNER TO floreant;
--
-- TOC entry 296 (class 1259 OID 35690)
-- Name: printer_group_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE printer_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE printer_group_id_seq OWNER TO floreant;
--
-- TOC entry 3541 (class 0 OID 0)
-- Dependencies: 296
-- Name: printer_group_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE printer_group_id_seq OWNED BY printer_group.id;
--
-- TOC entry 297 (class 1259 OID 35692)
-- Name: printer_group_printers;
Type: TABLE;
Schema: public;
ALTER TABLE printer_group_printers OWNER TO floreant;
--
-- TOC entry 298 (class 1259 OID 35695)
-- Name: purchase_order;
Type: TABLE;
Schema: public;
ALTER TABLE purchase_order OWNER TO floreant;
--
-- TOC entry 299 (class 1259 OID 35698)
-- Name: purchase_order_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE purchase_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE purchase_order_id_seq OWNER TO floreant;
--
-- TOC entry 3542 (class 0 OID 0)
-- Dependencies: 299
-- Name: purchase_order_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE purchase_order_id_seq OWNED BY purchase_order.id;
--
-- TOC entry 300 (class 1259 OID 35700)
-- Name: recepie;
Type: TABLE;
Schema: public;
ALTER TABLE recepie OWNER TO floreant;
--
-- TOC entry 301 (class 1259 OID 35703)
-- Name: recepie_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_id_seq OWNER TO floreant;
--
-- TOC entry 3543 (class 0 OID 0)
-- Dependencies: 301
-- Name: recepie_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_id_seq OWNED BY recepie.id;
--
-- TOC entry 302 (class 1259 OID 35705)
-- Name: recepie_item;
Type: TABLE;
Schema: public;
ALTER TABLE recepie_item OWNER TO floreant;
--
-- TOC entry 303 (class 1259 OID 35708)
-- Name: recepie_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE recepie_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE recepie_item_id_seq OWNER TO floreant;
--
-- TOC entry 3544 (class 0 OID 0)
-- Dependencies: 303
-- Name: recepie_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE recepie_item_id_seq OWNED BY recepie_item.id;
--
-- TOC entry 304 (class 1259 OID 35710)
-- Name: restaurant;
Type: TABLE;
Schema: public;
ALTER TABLE restaurant OWNER TO floreant;
--
-- TOC entry 305 (class 1259 OID 35713)
-- Name: restaurant_properties;
Type: TABLE;
Schema: public;
ALTER TABLE restaurant_properties OWNER TO floreant;
--
-- TOC entry 306 (class 1259 OID 35719)
-- Name: shift;
Type: TABLE;
Schema: public;
ALTER TABLE shift OWNER TO floreant;
--
-- TOC entry 307 (class 1259 OID 35722)
-- Name: shift_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shift_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shift_id_seq OWNER TO floreant;
--
-- TOC entry 3545 (class 0 OID 0)
-- Dependencies: 307
-- Name: shift_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shift_id_seq OWNED BY shift.id;
--
-- TOC entry 308 (class 1259 OID 35724)
-- Name: shop_floor;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor OWNER TO floreant;
--
-- TOC entry 309 (class 1259 OID 35727)
-- Name: shop_floor_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_id_seq OWNER TO floreant;
--
-- TOC entry 3546 (class 0 OID 0)
-- Dependencies: 309
-- Name: shop_floor_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_id_seq OWNED BY shop_floor.id;
--
-- TOC entry 310 (class 1259 OID 35729)
-- Name: shop_floor_template;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor_template OWNER TO floreant;
--
-- TOC entry 311 (class 1259 OID 35732)
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_floor_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_floor_template_id_seq OWNER TO floreant;
--
-- TOC entry 3547 (class 0 OID 0)
-- Dependencies: 311
-- Name: shop_floor_template_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_floor_template_id_seq OWNED BY shop_floor_template.id;
--
-- TOC entry 312 (class 1259 OID 35734)
-- Name: shop_floor_template_properties;
Type: TABLE;
Schema: public;
ALTER TABLE shop_floor_template_properties OWNER TO floreant;
--
-- TOC entry 313 (class 1259 OID 35737)
-- Name: shop_table;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table OWNER TO floreant;
--
-- TOC entry 314 (class 1259 OID 35740)
-- Name: shop_table_status;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table_status OWNER TO floreant;
--
-- TOC entry 315 (class 1259 OID 35743)
-- Name: shop_table_type;
Type: TABLE;
Schema: public;
ALTER TABLE shop_table_type OWNER TO floreant;
--
-- TOC entry 316 (class 1259 OID 35746)
-- Name: shop_table_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE shop_table_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE shop_table_type_id_seq OWNER TO floreant;
--
-- TOC entry 3548 (class 0 OID 0)
-- Dependencies: 316
-- Name: shop_table_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE shop_table_type_id_seq OWNED BY shop_table_type.id;
--
-- TOC entry 317 (class 1259 OID 35748)
-- Name: table_booking_info;
Type: TABLE;
Schema: public;
ALTER TABLE table_booking_info OWNER TO floreant;
--
-- TOC entry 318 (class 1259 OID 35751)
-- Name: table_booking_info_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE table_booking_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE table_booking_info_id_seq OWNER TO floreant;
--
-- TOC entry 3549 (class 0 OID 0)
-- Dependencies: 318
-- Name: table_booking_info_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE table_booking_info_id_seq OWNED BY table_booking_info.id;
--
-- TOC entry 319 (class 1259 OID 35753)
-- Name: table_booking_mapping;
Type: TABLE;
Schema: public;
ALTER TABLE table_booking_mapping OWNER TO floreant;
--
-- TOC entry 320 (class 1259 OID 35756)
-- Name: table_ticket_num;
Type: TABLE;
Schema: public;
ALTER TABLE table_ticket_num OWNER TO floreant;
--
-- TOC entry 321 (class 1259 OID 35759)
-- Name: table_type_relation;
Type: TABLE;
Schema: public;
ALTER TABLE table_type_relation OWNER TO floreant;
--
-- TOC entry 322 (class 1259 OID 35762)
-- Name: tax;
Type: TABLE;
Schema: public;
ALTER TABLE tax OWNER TO floreant;
--
-- TOC entry 323 (class 1259 OID 35765)
-- Name: tax_group;
Type: TABLE;
Schema: public;
ALTER TABLE tax_group OWNER TO floreant;
--
-- TOC entry 324 (class 1259 OID 35768)
-- Name: tax_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE tax_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE tax_id_seq OWNER TO floreant;
--
-- TOC entry 3550 (class 0 OID 0)
-- Dependencies: 324
-- Name: tax_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE tax_id_seq OWNED BY tax.id;
--
-- TOC entry 325 (class 1259 OID 35770)
-- Name: terminal_printers;
Type: TABLE;
Schema: public;
ALTER TABLE terminal_printers OWNER TO floreant;
--
-- TOC entry 326 (class 1259 OID 35773)
-- Name: terminal_printers_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE terminal_printers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE terminal_printers_id_seq OWNER TO floreant;
--
-- TOC entry 3551 (class 0 OID 0)
-- Dependencies: 326
-- Name: terminal_printers_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE terminal_printers_id_seq OWNED BY terminal_printers.id;
--
-- TOC entry 327 (class 1259 OID 35775)
-- Name: terminal_properties;
Type: TABLE;
Schema: public;
ALTER TABLE terminal_properties OWNER TO floreant;
--
-- TOC entry 328 (class 1259 OID 35781)
-- Name: ticket_discount;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_discount OWNER TO floreant;
--
-- TOC entry 329 (class 1259 OID 35784)
-- Name: ticket_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_discount_id_seq OWNER TO floreant;
--
-- TOC entry 3552 (class 0 OID 0)
-- Dependencies: 329
-- Name: ticket_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_discount_id_seq OWNED BY ticket_discount.id;
--
-- TOC entry 330 (class 1259 OID 35786)
-- Name: ticket_folio_complete;
Type: VIEW;
Schema: public;
ALTER TABLE ticket_folio_complete OWNER TO floreant;
--
-- TOC entry 331 (class 1259 OID 35791)
-- Name: ticket_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_id_seq OWNER TO floreant;
--
-- TOC entry 3553 (class 0 OID 0)
-- Dependencies: 331
-- Name: ticket_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_id_seq OWNED BY ticket.id;
--
-- TOC entry 332 (class 1259 OID 35793)
-- Name: ticket_item;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item OWNER TO floreant;
--
-- TOC entry 333 (class 1259 OID 35799)
-- Name: ticket_item_addon_relation;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_addon_relation OWNER TO floreant;
--
-- TOC entry 334 (class 1259 OID 35802)
-- Name: ticket_item_cooking_instruction;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_cooking_instruction OWNER TO floreant;
--
-- TOC entry 335 (class 1259 OID 35805)
-- Name: ticket_item_discount;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_discount OWNER TO floreant;
--
-- TOC entry 336 (class 1259 OID 35808)
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_discount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_discount_id_seq OWNER TO floreant;
--
-- TOC entry 3554 (class 0 OID 0)
-- Dependencies: 336
-- Name: ticket_item_discount_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_discount_id_seq OWNED BY ticket_item_discount.id;
--
-- TOC entry 337 (class 1259 OID 35810)
-- Name: ticket_item_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_id_seq OWNER TO floreant;
--
-- TOC entry 3555 (class 0 OID 0)
-- Dependencies: 337
-- Name: ticket_item_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_id_seq OWNED BY ticket_item.id;
--
-- TOC entry 338 (class 1259 OID 35812)
-- Name: ticket_item_modifier;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_modifier OWNER TO floreant;
--
-- TOC entry 339 (class 1259 OID 35815)
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE ticket_item_modifier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE ticket_item_modifier_id_seq OWNER TO floreant;
--
-- TOC entry 3556 (class 0 OID 0)
-- Dependencies: 339
-- Name: ticket_item_modifier_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE ticket_item_modifier_id_seq OWNED BY ticket_item_modifier.id;
--
-- TOC entry 340 (class 1259 OID 35817)
-- Name: ticket_item_modifier_relation;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_item_modifier_relation OWNER TO floreant;
--
-- TOC entry 341 (class 1259 OID 35820)
-- Name: ticket_properties;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_properties OWNER TO floreant;
--
-- TOC entry 342 (class 1259 OID 35826)
-- Name: ticket_table_num;
Type: TABLE;
Schema: public;
ALTER TABLE ticket_table_num OWNER TO floreant;
--
-- TOC entry 343 (class 1259 OID 35829)
-- Name: transaction_properties;
Type: TABLE;
Schema: public;
ALTER TABLE transaction_properties OWNER TO floreant;
--
-- TOC entry 344 (class 1259 OID 35835)
-- Name: transactions;
Type: TABLE;
Schema: public;
ALTER TABLE transactions OWNER TO floreant;
--
-- TOC entry 345 (class 1259 OID 35841)
-- Name: transactions_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE transactions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE transactions_id_seq OWNER TO floreant;
--
-- TOC entry 3557 (class 0 OID 0)
-- Dependencies: 345
-- Name: transactions_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE transactions_id_seq OWNED BY transactions.id;
--
-- TOC entry 346 (class 1259 OID 35843)
-- Name: user_permission;
Type: TABLE;
Schema: public;
ALTER TABLE user_permission OWNER TO floreant;
--
-- TOC entry 347 (class 1259 OID 35846)
-- Name: user_type;
Type: TABLE;
Schema: public;
ALTER TABLE user_type OWNER TO floreant;
--
-- TOC entry 348 (class 1259 OID 35849)
-- Name: user_type_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE user_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE user_type_id_seq OWNER TO floreant;
--
-- TOC entry 3558 (class 0 OID 0)
-- Dependencies: 348
-- Name: user_type_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE user_type_id_seq OWNED BY user_type.id;
--
-- TOC entry 349 (class 1259 OID 35851)
-- Name: user_user_permission;
Type: TABLE;
Schema: public;
ALTER TABLE user_user_permission OWNER TO floreant;
--
-- TOC entry 350 (class 1259 OID 35854)
-- Name: users;
Type: TABLE;
Schema: public;
ALTER TABLE users OWNER TO floreant;
--
-- TOC entry 351 (class 1259 OID 35857)
-- Name: users_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE users_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE users_auto_id_seq OWNER TO floreant;
--
-- TOC entry 3559 (class 0 OID 0)
-- Dependencies: 351
-- Name: users_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE users_auto_id_seq OWNED BY users.auto_id;
--
-- TOC entry 352 (class 1259 OID 35859)
-- Name: virtual_printer;
Type: TABLE;
Schema: public;
ALTER TABLE virtual_printer OWNER TO floreant;
--
-- TOC entry 353 (class 1259 OID 35862)
-- Name: virtual_printer_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE virtual_printer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE virtual_printer_id_seq OWNER TO floreant;
--
-- TOC entry 3560 (class 0 OID 0)
-- Dependencies: 353
-- Name: virtual_printer_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE virtual_printer_id_seq OWNED BY virtual_printer.id;
--
-- TOC entry 354 (class 1259 OID 35864)
-- Name: virtualprinter_order_type;
Type: TABLE;
Schema: public;
ALTER TABLE virtualprinter_order_type OWNER TO floreant;
--
-- TOC entry 355 (class 1259 OID 35867)
-- Name: void_reasons;
Type: TABLE;
Schema: public;
ALTER TABLE void_reasons OWNER TO floreant;
--
-- TOC entry 356 (class 1259 OID 35870)
-- Name: void_reasons_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE void_reasons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE void_reasons_id_seq OWNER TO floreant;
--
-- TOC entry 3561 (class 0 OID 0)
-- Dependencies: 356
-- Name: void_reasons_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE void_reasons_id_seq OWNED BY void_reasons.id;
--
-- TOC entry 357 (class 1259 OID 35872)
-- Name: zip_code_vs_delivery_charge;
Type: TABLE;
Schema: public;
ALTER TABLE zip_code_vs_delivery_charge OWNER TO floreant;
--
-- TOC entry 358 (class 1259 OID 35875)
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE;
Schema: public;
Owner: floreant
--

CREATE SEQUENCE zip_code_vs_delivery_charge_auto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE zip_code_vs_delivery_charge_auto_id_seq OWNER TO floreant;
--
-- TOC entry 3562 (class 0 OID 0)
-- Dependencies: 358
-- Name: zip_code_vs_delivery_charge_auto_id_seq;
Type: SEQUENCE OWNED BY;
Schema: public;
Owner: floreant
--

ALTER SEQUENCE zip_code_vs_delivery_charge_auto_id_seq OWNED BY zip_code_vs_delivery_charge.auto_id;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 360 (class 1259 OID 36813)
-- Name: auditoria;
Type: TABLE;
Schema: selemti;
ALTER TABLE auditoria OWNER TO floreant;
--
-- TOC entry 359 (class 1259 OID 36811)
-- Name: auditoria_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE auditoria_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE auditoria_id_seq OWNER TO floreant;
--
-- TOC entry 3563 (class 0 OID 0)
-- Dependencies: 359
-- Name: auditoria_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE auditoria_id_seq OWNED BY auditoria.id;
--
-- TOC entry 372 (class 1259 OID 36927)
-- Name: formas_pago;
Type: TABLE;
Schema: selemti;
ALTER TABLE formas_pago OWNER TO floreant;
--
-- TOC entry 371 (class 1259 OID 36925)
-- Name: formas_pago_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE formas_pago_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE formas_pago_id_seq OWNER TO floreant;
--
-- TOC entry 3564 (class 0 OID 0)
-- Dependencies: 371
-- Name: formas_pago_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE formas_pago_id_seq OWNED BY formas_pago.id;
--
-- TOC entry 370 (class 1259 OID 36900)
-- Name: postcorte;
Type: TABLE;
Schema: selemti;
ALTER TABLE postcorte OWNER TO floreant;
--
-- TOC entry 3565 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN postcorte.validado;
Type: COMMENT;
Schema: selemti;
Owner: floreant
--

COMMENT ON COLUMN postcorte.validado IS 'TRUE cuando el supervisor valida/cierra el postcorte';
--
-- TOC entry 369 (class 1259 OID 36898)
-- Name: postcorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE postcorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE postcorte_id_seq OWNER TO floreant;
--
-- TOC entry 3566 (class 0 OID 0)
-- Dependencies: 369
-- Name: postcorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE postcorte_id_seq OWNED BY postcorte.id;
--
-- TOC entry 364 (class 1259 OID 36844)
-- Name: precorte;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte OWNER TO floreant;
--
-- TOC entry 366 (class 1259 OID 36865)
-- Name: precorte_efectivo;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte_efectivo OWNER TO floreant;
--
-- TOC entry 365 (class 1259 OID 36863)
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_efectivo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_efectivo_id_seq OWNER TO floreant;
--
-- TOC entry 3567 (class 0 OID 0)
-- Dependencies: 365
-- Name: precorte_efectivo_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_efectivo_id_seq OWNED BY precorte_efectivo.id;
--
-- TOC entry 363 (class 1259 OID 36842)
-- Name: precorte_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_id_seq OWNER TO floreant;
--
-- TOC entry 3568 (class 0 OID 0)
-- Dependencies: 363
-- Name: precorte_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_id_seq OWNED BY precorte.id;
--
-- TOC entry 368 (class 1259 OID 36881)
-- Name: precorte_otros;
Type: TABLE;
Schema: selemti;
ALTER TABLE precorte_otros OWNER TO floreant;
--
-- TOC entry 367 (class 1259 OID 36879)
-- Name: precorte_otros_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE precorte_otros_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE precorte_otros_id_seq OWNER TO floreant;
--
-- TOC entry 3569 (class 0 OID 0)
-- Dependencies: 367
-- Name: precorte_otros_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE precorte_otros_id_seq OWNED BY precorte_otros.id;
--
-- TOC entry 362 (class 1259 OID 36825)
-- Name: sesion_cajon;
Type: TABLE;
Schema: selemti;
ALTER TABLE sesion_cajon OWNER TO floreant;
--
-- TOC entry 361 (class 1259 OID 36823)
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE;
Schema: selemti;
Owner: floreant
--

CREATE SEQUENCE sesion_cajon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE sesion_cajon_id_seq OWNER TO floreant;
--
-- TOC entry 3570 (class 0 OID 0)
-- Dependencies: 361
-- Name: sesion_cajon_id_seq;
Type: SEQUENCE OWNED BY;
Schema: selemti;
Owner: floreant
--

ALTER SEQUENCE sesion_cajon_id_seq OWNED BY sesion_cajon.id;
--
-- TOC entry 374 (class 1259 OID 36955)
-- Name: vw_sesion_descuentos;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_descuentos OWNER TO floreant;
--
-- TOC entry 377 (class 1259 OID 36970)
-- Name: vw_sesion_dpr;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_dpr OWNER TO postgres;
--
-- TOC entry 376 (class 1259 OID 36965)
-- Name: vw_sesion_reembolsos_efectivo;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_reembolsos_efectivo OWNER TO floreant;
--
-- TOC entry 375 (class 1259 OID 36960)
-- Name: vw_sesion_retiros;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_retiros OWNER TO floreant;
--
-- TOC entry 373 (class 1259 OID 36950)
-- Name: vw_sesion_ventas;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_sesion_ventas OWNER TO postgres;
--
-- TOC entry 378 (class 1259 OID 36975)
-- Name: vw_conciliacion_sesion;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_conciliacion_sesion OWNER TO floreant;
--
-- TOC entry 380 (class 1259 OID 36998)
-- Name: vw_fast_tickets;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_fast_tickets OWNER TO postgres;
--
-- TOC entry 379 (class 1259 OID 36994)
-- Name: vw_fast_tx;
Type: VIEW;
Schema: selemti;
ALTER TABLE vw_fast_tx OWNER TO postgres;
SET search_path = public, pg_catalog;
--
-- TOC entry 2667 (class 2604 OID 35877)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history ALTER COLUMN id SET DEFAULT nextval('action_history_id_seq'::regclass);
--
-- TOC entry 2668 (class 2604 OID 35878)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history ALTER COLUMN id SET DEFAULT nextval('attendence_history_id_seq'::regclass);
--
-- TOC entry 2669 (class 2604 OID 35879)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer ALTER COLUMN id SET DEFAULT nextval('cash_drawer_id_seq'::regclass);
--
-- TOC entry 2670 (class 2604 OID 35880)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history ALTER COLUMN id SET DEFAULT nextval('cash_drawer_reset_history_id_seq'::regclass);
--
-- TOC entry 2671 (class 2604 OID 35881)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction ALTER COLUMN id SET DEFAULT nextval('cooking_instruction_id_seq'::regclass);
--
-- TOC entry 2672 (class 2604 OID 35882)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount ALTER COLUMN id SET DEFAULT nextval('coupon_and_discount_id_seq'::regclass);
--
-- TOC entry 2673 (class 2604 OID 35883)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency ALTER COLUMN id SET DEFAULT nextval('currency_id_seq'::regclass);
--
-- TOC entry 2674 (class 2604 OID 35884)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance ALTER COLUMN id SET DEFAULT nextval('currency_balance_id_seq'::regclass);
--
-- TOC entry 2675 (class 2604 OID 35885)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment ALTER COLUMN id SET DEFAULT nextval('custom_payment_id_seq'::regclass);
--
-- TOC entry 2676 (class 2604 OID 35886)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer ALTER COLUMN auto_id SET DEFAULT nextval('customer_auto_id_seq'::regclass);
--
-- TOC entry 2678 (class 2604 OID 35887)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info ALTER COLUMN id SET DEFAULT nextval('data_update_info_id_seq'::regclass);
--
-- TOC entry 2679 (class 2604 OID 35888)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address ALTER COLUMN id SET DEFAULT nextval('delivery_address_id_seq'::regclass);
--
-- TOC entry 2680 (class 2604 OID 35889)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge ALTER COLUMN id SET DEFAULT nextval('delivery_charge_id_seq'::regclass);
--
-- TOC entry 2681 (class 2604 OID 35890)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration ALTER COLUMN id SET DEFAULT nextval('delivery_configuration_id_seq'::regclass);
--
-- TOC entry 2682 (class 2604 OID 35891)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction ALTER COLUMN id SET DEFAULT nextval('delivery_instruction_id_seq'::regclass);
--
-- TOC entry 2683 (class 2604 OID 35892)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history ALTER COLUMN id SET DEFAULT nextval('drawer_assigned_history_id_seq'::regclass);
--
-- TOC entry 2684 (class 2604 OID 35893)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report ALTER COLUMN id SET DEFAULT nextval('drawer_pull_report_id_seq'::regclass);
--
-- TOC entry 2685 (class 2604 OID 35894)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history ALTER COLUMN id SET DEFAULT nextval('employee_in_out_history_id_seq'::regclass);
--
-- TOC entry 2686 (class 2604 OID 35895)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config ALTER COLUMN id SET DEFAULT nextval('global_config_id_seq'::regclass);
--
-- TOC entry 2687 (class 2604 OID 35896)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity ALTER COLUMN id SET DEFAULT nextval('gratuity_id_seq'::regclass);
--
-- TOC entry 2688 (class 2604 OID 35897)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print ALTER COLUMN id SET DEFAULT nextval('guest_check_print_id_seq'::regclass);
--
-- TOC entry 2689 (class 2604 OID 35898)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group ALTER COLUMN id SET DEFAULT nextval('inventory_group_id_seq'::regclass);
--
-- TOC entry 2690 (class 2604 OID 35899)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item ALTER COLUMN id SET DEFAULT nextval('inventory_item_id_seq'::regclass);
--
-- TOC entry 2691 (class 2604 OID 35900)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location ALTER COLUMN id SET DEFAULT nextval('inventory_location_id_seq'::regclass);
--
-- TOC entry 2692 (class 2604 OID 35901)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code ALTER COLUMN id SET DEFAULT nextval('inventory_meta_code_id_seq'::regclass);
--
-- TOC entry 2693 (class 2604 OID 35902)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction ALTER COLUMN id SET DEFAULT nextval('inventory_transaction_id_seq'::regclass);
--
-- TOC entry 2694 (class 2604 OID 35903)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit ALTER COLUMN id SET DEFAULT nextval('inventory_unit_id_seq'::regclass);
--
-- TOC entry 2695 (class 2604 OID 35904)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor ALTER COLUMN id SET DEFAULT nextval('inventory_vendor_id_seq'::regclass);
--
-- TOC entry 2696 (class 2604 OID 35905)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse ALTER COLUMN id SET DEFAULT nextval('inventory_warehouse_id_seq'::regclass);
--
-- TOC entry 2697 (class 2604 OID 35906)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_id_seq'::regclass);
--
-- TOC entry 2701 (class 2604 OID 35907)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item ALTER COLUMN id SET DEFAULT nextval('kitchen_ticket_item_id_seq'::regclass);
--
-- TOC entry 2702 (class 2604 OID 35908)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category ALTER COLUMN id SET DEFAULT nextval('menu_category_id_seq'::regclass);
--
-- TOC entry 2703 (class 2604 OID 35909)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group ALTER COLUMN id SET DEFAULT nextval('menu_group_id_seq'::regclass);
--
-- TOC entry 2704 (class 2604 OID 35910)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item ALTER COLUMN id SET DEFAULT nextval('menu_item_id_seq'::regclass);
--
-- TOC entry 2705 (class 2604 OID 35911)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size ALTER COLUMN id SET DEFAULT nextval('menu_item_size_id_seq'::regclass);
--
-- TOC entry 2706 (class 2604 OID 35912)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier ALTER COLUMN id SET DEFAULT nextval('menu_modifier_id_seq'::regclass);
--
-- TOC entry 2707 (class 2604 OID 35913)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group ALTER COLUMN id SET DEFAULT nextval('menu_modifier_group_id_seq'::regclass);
--
-- TOC entry 2708 (class 2604 OID 35914)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup ALTER COLUMN id SET DEFAULT nextval('menuitem_modifiergroup_id_seq'::regclass);
--
-- TOC entry 2709 (class 2604 OID 35915)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift ALTER COLUMN id SET DEFAULT nextval('menuitem_shift_id_seq'::regclass);
--
-- TOC entry 2710 (class 2604 OID 35916)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price ALTER COLUMN id SET DEFAULT nextval('modifier_multiplier_price_id_seq'::regclass);
--
-- TOC entry 2711 (class 2604 OID 35917)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type ALTER COLUMN id SET DEFAULT nextval('order_type_id_seq'::regclass);
--
-- TOC entry 2712 (class 2604 OID 35918)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit ALTER COLUMN id SET DEFAULT nextval('packaging_unit_id_seq'::regclass);
--
-- TOC entry 2713 (class 2604 OID 35919)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons ALTER COLUMN id SET DEFAULT nextval('payout_reasons_id_seq'::regclass);
--
-- TOC entry 2714 (class 2604 OID 35920)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients ALTER COLUMN id SET DEFAULT nextval('payout_recepients_id_seq'::regclass);
--
-- TOC entry 2715 (class 2604 OID 35921)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust ALTER COLUMN id SET DEFAULT nextval('pizza_crust_id_seq'::regclass);
--
-- TOC entry 2716 (class 2604 OID 35922)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price ALTER COLUMN id SET DEFAULT nextval('pizza_modifier_price_id_seq'::regclass);
--
-- TOC entry 2717 (class 2604 OID 35923)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price ALTER COLUMN id SET DEFAULT nextval('pizza_price_id_seq'::regclass);
--
-- TOC entry 2718 (class 2604 OID 35924)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group ALTER COLUMN id SET DEFAULT nextval('printer_group_id_seq'::regclass);
--
-- TOC entry 2719 (class 2604 OID 35925)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order ALTER COLUMN id SET DEFAULT nextval('purchase_order_id_seq'::regclass);
--
-- TOC entry 2720 (class 2604 OID 35926)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie ALTER COLUMN id SET DEFAULT nextval('recepie_id_seq'::regclass);
--
-- TOC entry 2721 (class 2604 OID 35927)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item ALTER COLUMN id SET DEFAULT nextval('recepie_item_id_seq'::regclass);
--
-- TOC entry 2722 (class 2604 OID 35928)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift ALTER COLUMN id SET DEFAULT nextval('shift_id_seq'::regclass);
--
-- TOC entry 2723 (class 2604 OID 35929)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor ALTER COLUMN id SET DEFAULT nextval('shop_floor_id_seq'::regclass);
--
-- TOC entry 2724 (class 2604 OID 35930)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template ALTER COLUMN id SET DEFAULT nextval('shop_floor_template_id_seq'::regclass);
--
-- TOC entry 2725 (class 2604 OID 35931)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type ALTER COLUMN id SET DEFAULT nextval('shop_table_type_id_seq'::regclass);
--
-- TOC entry 2726 (class 2604 OID 35932)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info ALTER COLUMN id SET DEFAULT nextval('table_booking_info_id_seq'::regclass);
--
-- TOC entry 2727 (class 2604 OID 35933)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax ALTER COLUMN id SET DEFAULT nextval('tax_id_seq'::regclass);
--
-- TOC entry 2728 (class 2604 OID 35934)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers ALTER COLUMN id SET DEFAULT nextval('terminal_printers_id_seq'::regclass);
--
-- TOC entry 2698 (class 2604 OID 35935)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket ALTER COLUMN id SET DEFAULT nextval('ticket_id_seq'::regclass);
--
-- TOC entry 2729 (class 2604 OID 35936)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount ALTER COLUMN id SET DEFAULT nextval('ticket_discount_id_seq'::regclass);
--
-- TOC entry 2730 (class 2604 OID 35937)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item ALTER COLUMN id SET DEFAULT nextval('ticket_item_id_seq'::regclass);
--
-- TOC entry 2731 (class 2604 OID 35938)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount ALTER COLUMN id SET DEFAULT nextval('ticket_item_discount_id_seq'::regclass);
--
-- TOC entry 2732 (class 2604 OID 35939)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier ALTER COLUMN id SET DEFAULT nextval('ticket_item_modifier_id_seq'::regclass);
--
-- TOC entry 2733 (class 2604 OID 35940)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions ALTER COLUMN id SET DEFAULT nextval('transactions_id_seq'::regclass);
--
-- TOC entry 2734 (class 2604 OID 35941)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type ALTER COLUMN id SET DEFAULT nextval('user_type_id_seq'::regclass);
--
-- TOC entry 2735 (class 2604 OID 35942)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users ALTER COLUMN auto_id SET DEFAULT nextval('users_auto_id_seq'::regclass);
--
-- TOC entry 2736 (class 2604 OID 35943)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer ALTER COLUMN id SET DEFAULT nextval('virtual_printer_id_seq'::regclass);
--
-- TOC entry 2737 (class 2604 OID 35944)
-- Name: id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons ALTER COLUMN id SET DEFAULT nextval('void_reasons_id_seq'::regclass);
--
-- TOC entry 2738 (class 2604 OID 35945)
-- Name: auto_id;
Type: DEFAULT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge ALTER COLUMN auto_id SET DEFAULT nextval('zip_code_vs_delivery_charge_auto_id_seq'::regclass);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 2739 (class 2604 OID 36816)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria ALTER COLUMN id SET DEFAULT nextval('auditoria_id_seq'::regclass);
--
-- TOC entry 2776 (class 2604 OID 36930)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago ALTER COLUMN id SET DEFAULT nextval('formas_pago_id_seq'::regclass);
--
-- TOC entry 2758 (class 2604 OID 36903)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte ALTER COLUMN id SET DEFAULT nextval('postcorte_id_seq'::regclass);
--
-- TOC entry 2747 (class 2604 OID 36847)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte ALTER COLUMN id SET DEFAULT nextval('precorte_id_seq'::regclass);
--
-- TOC entry 2753 (class 2604 OID 36868)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo ALTER COLUMN id SET DEFAULT nextval('precorte_efectivo_id_seq'::regclass);
--
-- TOC entry 2755 (class 2604 OID 36884)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros ALTER COLUMN id SET DEFAULT nextval('precorte_otros_id_seq'::regclass);
--
-- TOC entry 2741 (class 2604 OID 36828)
-- Name: id;
Type: DEFAULT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon ALTER COLUMN id SET DEFAULT nextval('sesion_cajon_id_seq'::regclass);
SET search_path = public, pg_catalog;
--
-- TOC entry 2781 (class 2606 OID 35948)
-- Name: action_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT action_history_pkey PRIMARY KEY (id);
--
-- TOC entry 2783 (class 2606 OID 35950)
-- Name: attendence_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT attendence_history_pkey PRIMARY KEY (id);
--
-- TOC entry 2785 (class 2606 OID 35952)
-- Name: cash_drawer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT cash_drawer_pkey PRIMARY KEY (id);
--
-- TOC entry 2787 (class 2606 OID 35954)
-- Name: cash_drawer_reset_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT cash_drawer_reset_history_pkey PRIMARY KEY (id);
--
-- TOC entry 2789 (class 2606 OID 35956)
-- Name: cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cooking_instruction
    ADD CONSTRAINT cooking_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 2791 (class 2606 OID 35958)
-- Name: coupon_and_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 2793 (class 2606 OID 35960)
-- Name: coupon_and_discount_uuid_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY coupon_and_discount
    ADD CONSTRAINT coupon_and_discount_uuid_key UNIQUE (uuid);
--
-- TOC entry 2797 (class 2606 OID 35962)
-- Name: currency_balance_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT currency_balance_pkey PRIMARY KEY (id);
--
-- TOC entry 2795 (class 2606 OID 35964)
-- Name: currency_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency
    ADD CONSTRAINT currency_pkey PRIMARY KEY (id);
--
-- TOC entry 2799 (class 2606 OID 35966)
-- Name: custom_payment_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY custom_payment
    ADD CONSTRAINT custom_payment_pkey PRIMARY KEY (id);
--
-- TOC entry 2801 (class 2606 OID 35968)
-- Name: customer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer
    ADD CONSTRAINT customer_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 2803 (class 2606 OID 35970)
-- Name: customer_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT customer_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2805 (class 2606 OID 35972)
-- Name: daily_folio_counter_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY daily_folio_counter
    ADD CONSTRAINT daily_folio_counter_pkey PRIMARY KEY (folio_date, branch_key);
--
-- TOC entry 2807 (class 2606 OID 35974)
-- Name: data_update_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY data_update_info
    ADD CONSTRAINT data_update_info_pkey PRIMARY KEY (id);
--
-- TOC entry 2809 (class 2606 OID 35976)
-- Name: delivery_address_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT delivery_address_pkey PRIMARY KEY (id);
--
-- TOC entry 2811 (class 2606 OID 35978)
-- Name: delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_charge
    ADD CONSTRAINT delivery_charge_pkey PRIMARY KEY (id);
--
-- TOC entry 2813 (class 2606 OID 35980)
-- Name: delivery_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_configuration
    ADD CONSTRAINT delivery_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 2815 (class 2606 OID 35982)
-- Name: delivery_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT delivery_instruction_pkey PRIMARY KEY (id);
--
-- TOC entry 2817 (class 2606 OID 35984)
-- Name: drawer_assigned_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT drawer_assigned_history_pkey PRIMARY KEY (id);
--
-- TOC entry 2821 (class 2606 OID 35986)
-- Name: drawer_pull_report_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT drawer_pull_report_pkey PRIMARY KEY (id);
--
-- TOC entry 2824 (class 2606 OID 35988)
-- Name: employee_in_out_history_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT employee_in_out_history_pkey PRIMARY KEY (id);
--
-- TOC entry 2826 (class 2606 OID 35990)
-- Name: global_config_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pkey PRIMARY KEY (id);
--
-- TOC entry 2828 (class 2606 OID 35992)
-- Name: global_config_pos_key_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY global_config
    ADD CONSTRAINT global_config_pos_key_key UNIQUE (pos_key);
--
-- TOC entry 2830 (class 2606 OID 35994)
-- Name: gratuity_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT gratuity_pkey PRIMARY KEY (id);
--
-- TOC entry 2832 (class 2606 OID 35996)
-- Name: guest_check_print_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT guest_check_print_pkey PRIMARY KEY (id);
--
-- TOC entry 2834 (class 2606 OID 35998)
-- Name: inventory_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_group
    ADD CONSTRAINT inventory_group_pkey PRIMARY KEY (id);
--
-- TOC entry 2836 (class 2606 OID 36000)
-- Name: inventory_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT inventory_item_pkey PRIMARY KEY (id);
--
-- TOC entry 2838 (class 2606 OID 36002)
-- Name: inventory_location_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT inventory_location_pkey PRIMARY KEY (id);
--
-- TOC entry 2840 (class 2606 OID 36004)
-- Name: inventory_meta_code_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_meta_code
    ADD CONSTRAINT inventory_meta_code_pkey PRIMARY KEY (id);
--
-- TOC entry 2842 (class 2606 OID 36006)
-- Name: inventory_transaction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT inventory_transaction_pkey PRIMARY KEY (id);
--
-- TOC entry 2844 (class 2606 OID 36008)
-- Name: inventory_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_unit
    ADD CONSTRAINT inventory_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 2846 (class 2606 OID 36010)
-- Name: inventory_vendor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_vendor
    ADD CONSTRAINT inventory_vendor_pkey PRIMARY KEY (id);
--
-- TOC entry 2848 (class 2606 OID 36012)
-- Name: inventory_warehouse_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_warehouse
    ADD CONSTRAINT inventory_warehouse_pkey PRIMARY KEY (id);
--
-- TOC entry 2872 (class 2606 OID 36014)
-- Name: kds_ready_log_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kds_ready_log
    ADD CONSTRAINT kds_ready_log_pkey PRIMARY KEY (ticket_id);
--
-- TOC entry 2875 (class 2606 OID 36016)
-- Name: kitchen_ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT kitchen_ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 2851 (class 2606 OID 36018)
-- Name: kitchen_ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT kitchen_ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 2878 (class 2606 OID 36020)
-- Name: menu_category_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_category
    ADD CONSTRAINT menu_category_pkey PRIMARY KEY (id);
--
-- TOC entry 2880 (class 2606 OID 36022)
-- Name: menu_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT menu_group_pkey PRIMARY KEY (id);
--
-- TOC entry 2883 (class 2606 OID 36024)
-- Name: menu_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT menu_item_pkey PRIMARY KEY (id);
--
-- TOC entry 2885 (class 2606 OID 36026)
-- Name: menu_item_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT menu_item_properties_pkey PRIMARY KEY (menu_item_id, property_name);
--
-- TOC entry 2887 (class 2606 OID 36028)
-- Name: menu_item_size_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_size
    ADD CONSTRAINT menu_item_size_pkey PRIMARY KEY (id);
--
-- TOC entry 2892 (class 2606 OID 36030)
-- Name: menu_modifier_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_group
    ADD CONSTRAINT menu_modifier_group_pkey PRIMARY KEY (id);
--
-- TOC entry 2889 (class 2606 OID 36032)
-- Name: menu_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT menu_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 2895 (class 2606 OID 36034)
-- Name: menu_modifier_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT menu_modifier_properties_pkey PRIMARY KEY (menu_modifier_id, property_name);
--
-- TOC entry 2897 (class 2606 OID 36036)
-- Name: menuitem_modifiergroup_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT menuitem_modifiergroup_pkey PRIMARY KEY (id);
--
-- TOC entry 2899 (class 2606 OID 36038)
-- Name: menuitem_shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT menuitem_shift_pkey PRIMARY KEY (id);
--
-- TOC entry 2901 (class 2606 OID 36040)
-- Name: modifier_multiplier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT modifier_multiplier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 2903 (class 2606 OID 36042)
-- Name: multiplier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY multiplier
    ADD CONSTRAINT multiplier_pkey PRIMARY KEY (name);
--
-- TOC entry 2905 (class 2606 OID 36044)
-- Name: order_type_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_name_key UNIQUE (name);
--
-- TOC entry 2907 (class 2606 OID 36046)
-- Name: order_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY order_type
    ADD CONSTRAINT order_type_pkey PRIMARY KEY (id);
--
-- TOC entry 2909 (class 2606 OID 36048)
-- Name: packaging_unit_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_name_key UNIQUE (name);
--
-- TOC entry 2911 (class 2606 OID 36050)
-- Name: packaging_unit_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY packaging_unit
    ADD CONSTRAINT packaging_unit_pkey PRIMARY KEY (id);
--
-- TOC entry 2913 (class 2606 OID 36052)
-- Name: payout_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_reasons
    ADD CONSTRAINT payout_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 2915 (class 2606 OID 36054)
-- Name: payout_recepients_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY payout_recepients
    ADD CONSTRAINT payout_recepients_pkey PRIMARY KEY (id);
--
-- TOC entry 2917 (class 2606 OID 36056)
-- Name: pizza_crust_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_crust
    ADD CONSTRAINT pizza_crust_pkey PRIMARY KEY (id);
--
-- TOC entry 2919 (class 2606 OID 36058)
-- Name: pizza_modifier_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT pizza_modifier_price_pkey PRIMARY KEY (id);
--
-- TOC entry 2921 (class 2606 OID 36060)
-- Name: pizza_price_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT pizza_price_pkey PRIMARY KEY (id);
--
-- TOC entry 2923 (class 2606 OID 36062)
-- Name: printer_configuration_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_configuration
    ADD CONSTRAINT printer_configuration_pkey PRIMARY KEY (id);
--
-- TOC entry 2925 (class 2606 OID 36064)
-- Name: printer_group_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_name_key UNIQUE (name);
--
-- TOC entry 2927 (class 2606 OID 36066)
-- Name: printer_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group
    ADD CONSTRAINT printer_group_pkey PRIMARY KEY (id);
--
-- TOC entry 2929 (class 2606 OID 36068)
-- Name: purchase_order_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY purchase_order
    ADD CONSTRAINT purchase_order_pkey PRIMARY KEY (id);
--
-- TOC entry 2933 (class 2606 OID 36070)
-- Name: recepie_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT recepie_item_pkey PRIMARY KEY (id);
--
-- TOC entry 2931 (class 2606 OID 36072)
-- Name: recepie_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT recepie_pkey PRIMARY KEY (id);
--
-- TOC entry 2935 (class 2606 OID 36074)
-- Name: restaurant_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant
    ADD CONSTRAINT restaurant_pkey PRIMARY KEY (id);
--
-- TOC entry 2937 (class 2606 OID 36076)
-- Name: restaurant_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT restaurant_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2939 (class 2606 OID 36078)
-- Name: shift_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_name_key UNIQUE (name);
--
-- TOC entry 2941 (class 2606 OID 36080)
-- Name: shift_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shift
    ADD CONSTRAINT shift_pkey PRIMARY KEY (id);
--
-- TOC entry 2943 (class 2606 OID 36082)
-- Name: shop_floor_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor
    ADD CONSTRAINT shop_floor_pkey PRIMARY KEY (id);
--
-- TOC entry 2945 (class 2606 OID 36084)
-- Name: shop_floor_template_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT shop_floor_template_pkey PRIMARY KEY (id);
--
-- TOC entry 2947 (class 2606 OID 36086)
-- Name: shop_floor_template_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT shop_floor_template_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2949 (class 2606 OID 36088)
-- Name: shop_table_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT shop_table_pkey PRIMARY KEY (id);
--
-- TOC entry 2951 (class 2606 OID 36090)
-- Name: shop_table_status_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_status
    ADD CONSTRAINT shop_table_status_pkey PRIMARY KEY (id);
--
-- TOC entry 2953 (class 2606 OID 36092)
-- Name: shop_table_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table_type
    ADD CONSTRAINT shop_table_type_pkey PRIMARY KEY (id);
--
-- TOC entry 2956 (class 2606 OID 36094)
-- Name: table_booking_info_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT table_booking_info_pkey PRIMARY KEY (id);
--
-- TOC entry 2961 (class 2606 OID 36096)
-- Name: tax_group_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax_group
    ADD CONSTRAINT tax_group_pkey PRIMARY KEY (id);
--
-- TOC entry 2959 (class 2606 OID 36098)
-- Name: tax_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY tax
    ADD CONSTRAINT tax_pkey PRIMARY KEY (id);
--
-- TOC entry 2853 (class 2606 OID 36100)
-- Name: terminal_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT terminal_pkey PRIMARY KEY (id);
--
-- TOC entry 2963 (class 2606 OID 36102)
-- Name: terminal_printers_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT terminal_printers_pkey PRIMARY KEY (id);
--
-- TOC entry 2965 (class 2606 OID 36104)
-- Name: terminal_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT terminal_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2967 (class 2606 OID 36106)
-- Name: ticket_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT ticket_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 2861 (class 2606 OID 36108)
-- Name: ticket_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_global_id_key UNIQUE (global_id);
--
-- TOC entry 2972 (class 2606 OID 36110)
-- Name: ticket_item_addon_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT ticket_item_addon_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 2974 (class 2606 OID 36112)
-- Name: ticket_item_cooking_instruction_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT ticket_item_cooking_instruction_pkey PRIMARY KEY (ticket_item_id, item_order);
--
-- TOC entry 2976 (class 2606 OID 36114)
-- Name: ticket_item_discount_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT ticket_item_discount_pkey PRIMARY KEY (id);
--
-- TOC entry 2978 (class 2606 OID 36116)
-- Name: ticket_item_modifier_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT ticket_item_modifier_pkey PRIMARY KEY (id);
--
-- TOC entry 2980 (class 2606 OID 36118)
-- Name: ticket_item_modifier_relation_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT ticket_item_modifier_relation_pkey PRIMARY KEY (ticket_item_id, list_order);
--
-- TOC entry 2970 (class 2606 OID 36120)
-- Name: ticket_item_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT ticket_item_pkey PRIMARY KEY (id);
--
-- TOC entry 2863 (class 2606 OID 36122)
-- Name: ticket_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT ticket_pkey PRIMARY KEY (id);
--
-- TOC entry 2982 (class 2606 OID 36124)
-- Name: ticket_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT ticket_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2984 (class 2606 OID 36126)
-- Name: transaction_properties_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT transaction_properties_pkey PRIMARY KEY (id, property_name);
--
-- TOC entry 2988 (class 2606 OID 36128)
-- Name: transactions_global_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_global_id_key UNIQUE (global_id);
--
-- TOC entry 2990 (class 2606 OID 36130)
-- Name: transactions_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_pkey PRIMARY KEY (id);
--
-- TOC entry 2992 (class 2606 OID 36132)
-- Name: user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_permission
    ADD CONSTRAINT user_permission_pkey PRIMARY KEY (name);
--
-- TOC entry 2994 (class 2606 OID 36134)
-- Name: user_type_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_type
    ADD CONSTRAINT user_type_pkey PRIMARY KEY (id);
--
-- TOC entry 2996 (class 2606 OID 36136)
-- Name: user_user_permission_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT user_user_permission_pkey PRIMARY KEY (permissionid, elt);
--
-- TOC entry 2998 (class 2606 OID 36138)
-- Name: users_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (auto_id);
--
-- TOC entry 3000 (class 2606 OID 36140)
-- Name: users_user_id_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_id_key UNIQUE (user_id);
--
-- TOC entry 3002 (class 2606 OID 36142)
-- Name: users_user_pass_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_user_pass_key UNIQUE (user_pass);
--
-- TOC entry 3004 (class 2606 OID 36144)
-- Name: virtual_printer_name_key;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_name_key UNIQUE (name);
--
-- TOC entry 3006 (class 2606 OID 36146)
-- Name: virtual_printer_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtual_printer
    ADD CONSTRAINT virtual_printer_pkey PRIMARY KEY (id);
--
-- TOC entry 3008 (class 2606 OID 36148)
-- Name: void_reasons_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY void_reasons
    ADD CONSTRAINT void_reasons_pkey PRIMARY KEY (id);
--
-- TOC entry 3010 (class 2606 OID 36150)
-- Name: zip_code_vs_delivery_charge_pkey;
Type: CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY zip_code_vs_delivery_charge
    ADD CONSTRAINT zip_code_vs_delivery_charge_pkey PRIMARY KEY (auto_id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3012 (class 2606 OID 36822)
-- Name: auditoria_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY auditoria
    ADD CONSTRAINT auditoria_pkey PRIMARY KEY (id);
--
-- TOC entry 3033 (class 2606 OID 36938)
-- Name: formas_pago_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY formas_pago
    ADD CONSTRAINT formas_pago_pkey PRIMARY KEY (id);
--
-- TOC entry 3029 (class 2606 OID 36919)
-- Name: postcorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3024 (class 2606 OID 36871)
-- Name: precorte_efectivo_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_pkey PRIMARY KEY (id);
--
-- TOC entry 3027 (class 2606 OID 36891)
-- Name: precorte_otros_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_pkey PRIMARY KEY (id);
--
-- TOC entry 3021 (class 2606 OID 36857)
-- Name: precorte_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_pkey PRIMARY KEY (id);
--
-- TOC entry 3016 (class 2606 OID 36837)
-- Name: sesion_cajon_pkey;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_pkey PRIMARY KEY (id);
--
-- TOC entry 3018 (class 2606 OID 36839)
-- Name: sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY sesion_cajon
    ADD CONSTRAINT sesion_cajon_terminal_id_cajero_usuario_id_apertura_ts_key UNIQUE (terminal_id, cajero_usuario_id, apertura_ts);
--
-- TOC entry 3031 (class 2606 OID 37049)
-- Name: uq_postcorte_sesion_id;
Type: CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT uq_postcorte_sesion_id UNIQUE (sesion_id);
SET search_path = public, pg_catalog;
--
-- TOC entry 2854 (class 1259 OID 36151)
-- Name: creationhour;
Type: INDEX;
Schema: public;
--
-- TOC entry 2855 (class 1259 OID 36152)
-- Name: deliverydate;
Type: INDEX;
Schema: public;
--
-- TOC entry 2822 (class 1259 OID 36153)
-- Name: drawer_report_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 2856 (class 1259 OID 36154)
-- Name: drawerresetted;
Type: INDEX;
Schema: public;
--
-- TOC entry 2876 (class 1259 OID 36155)
-- Name: food_category_visible;
Type: INDEX;
Schema: public;
--
-- TOC entry 2954 (class 1259 OID 36156)
-- Name: fromdate;
Type: INDEX;
Schema: public;
--
-- TOC entry 2818 (class 1259 OID 36991)
-- Name: idx_dah_user_op_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 2819 (class 1259 OID 36946)
-- Name: idx_drawer_assigned_history_user_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 2857 (class 1259 OID 36992)
-- Name: idx_ticket_close_term_owner;
Type: INDEX;
Schema: public;
--
-- TOC entry 2985 (class 1259 OID 36990)
-- Name: idx_tx_term_user_time;
Type: INDEX;
Schema: public;
--
-- TOC entry 2873 (class 1259 OID 36157)
-- Name: ix_kitchen_ticket_item_item_id;
Type: INDEX;
Schema: public;
--
-- TOC entry 2849 (class 1259 OID 36158)
-- Name: ix_kitchen_ticket_ticket_id;
Type: INDEX;
Schema: public;
--
-- TOC entry 2858 (class 1259 OID 36159)
-- Name: ix_ticket_branch_key;
Type: INDEX;
Schema: public;
--
-- TOC entry 2859 (class 1259 OID 36160)
-- Name: ix_ticket_folio_date;
Type: INDEX;
Schema: public;
--
-- TOC entry 2968 (class 1259 OID 36161)
-- Name: ix_ticket_item_ticket_pg;
Type: INDEX;
Schema: public;
--
-- TOC entry 2881 (class 1259 OID 36162)
-- Name: menugroupvisible;
Type: INDEX;
Schema: public;
--
-- TOC entry 2893 (class 1259 OID 36163)
-- Name: mg_enable;
Type: INDEX;
Schema: public;
--
-- TOC entry 2890 (class 1259 OID 36164)
-- Name: modifierenabled;
Type: INDEX;
Schema: public;
--
-- TOC entry 2864 (class 1259 OID 36165)
-- Name: ticketactivedate;
Type: INDEX;
Schema: public;
--
-- TOC entry 2865 (class 1259 OID 36166)
-- Name: ticketclosingdate;
Type: INDEX;
Schema: public;
--
-- TOC entry 2866 (class 1259 OID 36167)
-- Name: ticketcreatedate;
Type: INDEX;
Schema: public;
--
-- TOC entry 2867 (class 1259 OID 36168)
-- Name: ticketpaid;
Type: INDEX;
Schema: public;
--
-- TOC entry 2868 (class 1259 OID 36169)
-- Name: ticketsettled;
Type: INDEX;
Schema: public;
--
-- TOC entry 2869 (class 1259 OID 36170)
-- Name: ticketvoided;
Type: INDEX;
Schema: public;
--
-- TOC entry 2957 (class 1259 OID 36171)
-- Name: todate;
Type: INDEX;
Schema: public;
--
-- TOC entry 2986 (class 1259 OID 36172)
-- Name: tran_drawer_resetted;
Type: INDEX;
Schema: public;
--
-- TOC entry 2870 (class 1259 OID 36173)
-- Name: ux_ticket_dailyfolio;
Type: INDEX;
Schema: public;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3019 (class 1259 OID 37047)
-- Name: idx_precorte_sesion_id;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3025 (class 1259 OID 36897)
-- Name: ix_precorte_otros_precorte;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3013 (class 1259 OID 36841)
-- Name: ix_sesion_cajon_cajero;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3014 (class 1259 OID 36840)
-- Name: ix_sesion_cajon_terminal;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3022 (class 1259 OID 37061)
-- Name: precorte_sesion_id_idx;
Type: INDEX;
Schema: selemti;
--
-- TOC entry 3034 (class 1259 OID 36939)
-- Name: uq_fp_huella_expr;
Type: INDEX;
Schema: selemti;
SET search_path = public, pg_catalog;
--
-- TOC entry 3167 (class 2620 OID 36174)
-- Name: trg_assign_daily_folio;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3168 (class 2620 OID 36175)
-- Name: trg_kds_notify_kti;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3169 (class 2620 OID 36176)
-- Name: trg_kds_notify_ti;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3165 (class 2620 OID 36948)
-- Name: trg_selemti_dah_ai;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3166 (class 2620 OID 36945)
-- Name: trg_selemti_terminal_bu_snapshot;
Type: TRIGGER;
Schema: public;
--
-- TOC entry 3170 (class 2620 OID 36943)
-- Name: trg_selemti_tx_ai_forma_pago;
Type: TRIGGER;
Schema: public;
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3171 (class 2620 OID 36878)
-- Name: trg_precorte_efectivo_bi;
Type: TRIGGER;
Schema: selemti;
SET search_path = public, pg_catalog;
--
-- TOC entry 3095 (class 2606 OID 36177)
-- Name: fk1273b4bbb79c6270;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier_properties
    ADD CONSTRAINT fk1273b4bbb79c6270 FOREIGN KEY (menu_modifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3082 (class 2606 OID 36182)
-- Name: fk1462f02bcb07faa3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket_item
    ADD CONSTRAINT fk1462f02bcb07faa3 FOREIGN KEY (kithen_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3106 (class 2606 OID 36187)
-- Name: fk17bd51a089fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a089fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3105 (class 2606 OID 36192)
-- Name: fk17bd51a0ae5d580;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_pizzapirce
    ADD CONSTRAINT fk17bd51a0ae5d580 FOREIGN KEY (pizza_price_id) REFERENCES pizza_price(id);
--
-- TOC entry 3136 (class 2606 OID 36197)
-- Name: fk1fa465141df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_discount
    ADD CONSTRAINT fk1fa465141df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3125 (class 2606 OID 36202)
-- Name: fk2458e9258979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_table
    ADD CONSTRAINT fk2458e9258979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3045 (class 2606 OID 36207)
-- Name: fk29aca6899e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_address
    ADD CONSTRAINT fk29aca6899e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3046 (class 2606 OID 36212)
-- Name: fk29d9ca39e1c3d97;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY delivery_instruction
    ADD CONSTRAINT fk29d9ca39e1c3d97 FOREIGN KEY (customer_no) REFERENCES customer(auto_id);
--
-- TOC entry 3041 (class 2606 OID 36217)
-- Name: fk2cc0e08e28dd6c11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e28dd6c11 FOREIGN KEY (currency_id) REFERENCES currency(id);
--
-- TOC entry 3042 (class 2606 OID 36222)
-- Name: fk2cc0e08e9006558;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08e9006558 FOREIGN KEY (cash_drawer_id) REFERENCES cash_drawer(id);
--
-- TOC entry 3043 (class 2606 OID 36227)
-- Name: fk2cc0e08efb910735;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY currency_balance
    ADD CONSTRAINT fk2cc0e08efb910735 FOREIGN KEY (dpr_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3155 (class 2606 OID 36232)
-- Name: fk2dbeaa4f283ecc6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f283ecc6 FOREIGN KEY (permissionid) REFERENCES user_type(id);
--
-- TOC entry 3156 (class 2606 OID 36237)
-- Name: fk2dbeaa4f8f23f5e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY user_user_permission
    ADD CONSTRAINT fk2dbeaa4f8f23f5e FOREIGN KEY (elt) REFERENCES user_permission(name);
--
-- TOC entry 3126 (class 2606 OID 36242)
-- Name: fk301c4de53e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de53e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3127 (class 2606 OID 36247)
-- Name: fk301c4de59e1c3cf1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_info
    ADD CONSTRAINT fk301c4de59e1c3cf1 FOREIGN KEY (customer_id) REFERENCES customer(auto_id);
--
-- TOC entry 3102 (class 2606 OID 36252)
-- Name: fk312b355b40fda3c9;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b40fda3c9 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3103 (class 2606 OID 36257)
-- Name: fk312b355b6e7b8b68;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b6e7b8b68 FOREIGN KEY (menuitem_modifiergroup_id) REFERENCES menu_item(id);
--
-- TOC entry 3104 (class 2606 OID 36262)
-- Name: fk312b355b7f2f368;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_modifiergroup
    ADD CONSTRAINT fk312b355b7f2f368 FOREIGN KEY (modifier_group) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3073 (class 2606 OID 36267)
-- Name: fk341cbc275cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kitchen_ticket
    ADD CONSTRAINT fk341cbc275cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3054 (class 2606 OID 36272)
-- Name: fk34e4e3771df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3771df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3055 (class 2606 OID 36277)
-- Name: fk34e4e3772ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e3772ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3056 (class 2606 OID 36282)
-- Name: fk34e4e377aa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY gratuity
    ADD CONSTRAINT fk34e4e377aa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3142 (class 2606 OID 36287)
-- Name: fk3825f9d0dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_cooking_instruction
    ADD CONSTRAINT fk3825f9d0dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3143 (class 2606 OID 36292)
-- Name: fk3df5d4fab9276e77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_discount
    ADD CONSTRAINT fk3df5d4fab9276e77 FOREIGN KEY (ticket_itemid) REFERENCES ticket_item(id);
--
-- TOC entry 3035 (class 2606 OID 36297)
-- Name: fk3f3af36b3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY action_history
    ADD CONSTRAINT fk3f3af36b3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3084 (class 2606 OID 36302)
-- Name: fk4cd5a1f35188aa24;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35188aa24 FOREIGN KEY (group_id) REFERENCES menu_group(id);
--
-- TOC entry 3085 (class 2606 OID 36307)
-- Name: fk4cd5a1f35cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3086 (class 2606 OID 36312)
-- Name: fk4cd5a1f35ee9f27a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f35ee9f27a FOREIGN KEY (tax_group_id) REFERENCES tax_group(id);
--
-- TOC entry 3087 (class 2606 OID 36317)
-- Name: fk4cd5a1f3a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3088 (class 2606 OID 36322)
-- Name: fk4cd5a1f3f3b77c57;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item
    ADD CONSTRAINT fk4cd5a1f3f3b77c57 FOREIGN KEY (recepie) REFERENCES recepie(id);
--
-- TOC entry 3157 (class 2606 OID 36327)
-- Name: fk4d495e87660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e87660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3158 (class 2606 OID 36332)
-- Name: fk4d495e8897b1e39;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8897b1e39 FOREIGN KEY (n_user_type) REFERENCES user_type(id);
--
-- TOC entry 3159 (class 2606 OID 36337)
-- Name: fk4d495e8d9409968;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY users
    ADD CONSTRAINT fk4d495e8d9409968 FOREIGN KEY (currentterminal) REFERENCES terminal(id);
--
-- TOC entry 3083 (class 2606 OID 36342)
-- Name: fk4dc1ab7f2e347ff0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_group
    ADD CONSTRAINT fk4dc1ab7f2e347ff0 FOREIGN KEY (category_id) REFERENCES menu_category(id);
--
-- TOC entry 3097 (class 2606 OID 36347)
-- Name: fk4f8523e38d9ea931;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e38d9ea931 FOREIGN KEY (menucategory_id) REFERENCES menu_category(id);
--
-- TOC entry 3096 (class 2606 OID 36352)
-- Name: fk4f8523e3d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menucategory_discount
    ADD CONSTRAINT fk4f8523e3d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3081 (class 2606 OID 36357)
-- Name: fk5696584bb73e273e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY kit_ticket_table_num
    ADD CONSTRAINT fk5696584bb73e273e FOREIGN KEY (kit_ticket_id) REFERENCES kitchen_ticket(id);
--
-- TOC entry 3110 (class 2606 OID 36362)
-- Name: fk572726f374be2c71;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f374be2c71 FOREIGN KEY (pizzamodifierprice_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3109 (class 2606 OID 36367)
-- Name: fk572726f3ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menumodifier_pizzamodifierprice
    ADD CONSTRAINT fk572726f3ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3065 (class 2606 OID 36372)
-- Name: fk59073b58c46a9c15;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_location
    ADD CONSTRAINT fk59073b58c46a9c15 FOREIGN KEY (warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3092 (class 2606 OID 36377)
-- Name: fk59b6b1b72501cb2c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b72501cb2c FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3093 (class 2606 OID 36382)
-- Name: fk59b6b1b75e0c7b8d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b75e0c7b8d FOREIGN KEY (group_id) REFERENCES menu_modifier_group(id);
--
-- TOC entry 3094 (class 2606 OID 36387)
-- Name: fk59b6b1b7a4802f83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_modifier
    ADD CONSTRAINT fk59b6b1b7a4802f83 FOREIGN KEY (tax_id) REFERENCES tax(id);
--
-- TOC entry 3047 (class 2606 OID 36392)
-- Name: fk5a823c91f1dd782b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_assigned_history
    ADD CONSTRAINT fk5a823c91f1dd782b FOREIGN KEY (a_user) REFERENCES users(auto_id);
--
-- TOC entry 3145 (class 2606 OID 36397)
-- Name: fk5d3f9acb6c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acb6c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3146 (class 2606 OID 36402)
-- Name: fk5d3f9acbdec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier_relation
    ADD CONSTRAINT fk5d3f9acbdec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3039 (class 2606 OID 36407)
-- Name: fk6221077d2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer
    ADD CONSTRAINT fk6221077d2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3148 (class 2606 OID 36412)
-- Name: fk65af15e21df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_table_num
    ADD CONSTRAINT fk65af15e21df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3119 (class 2606 OID 36417)
-- Name: fk6b4e177764931efc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie
    ADD CONSTRAINT fk6b4e177764931efc FOREIGN KEY (menu_item) REFERENCES menu_item(id);
--
-- TOC entry 3129 (class 2606 OID 36422)
-- Name: fk6bc51417160de3b1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417160de3b1 FOREIGN KEY (booking_id) REFERENCES table_booking_info(id);
--
-- TOC entry 3128 (class 2606 OID 36427)
-- Name: fk6bc51417dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_booking_mapping
    ADD CONSTRAINT fk6bc51417dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3051 (class 2606 OID 36432)
-- Name: fk6d5db9fa2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3052 (class 2606 OID 36437)
-- Name: fk6d5db9fa3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3053 (class 2606 OID 36442)
-- Name: fk6d5db9fa7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY employee_in_out_history
    ADD CONSTRAINT fk6d5db9fa7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3147 (class 2606 OID 36447)
-- Name: fk70ecd046223049de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_properties
    ADD CONSTRAINT fk70ecd046223049de FOREIGN KEY (id) REFERENCES ticket(id);
--
-- TOC entry 3040 (class 2606 OID 36452)
-- Name: fk719418223e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY cash_drawer_reset_history
    ADD CONSTRAINT fk719418223e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3060 (class 2606 OID 36457)
-- Name: fk7dc968362cd583c1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968362cd583c1 FOREIGN KEY (item_group_id) REFERENCES inventory_group(id);
--
-- TOC entry 3061 (class 2606 OID 36462)
-- Name: fk7dc968363525e956;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968363525e956 FOREIGN KEY (punit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3062 (class 2606 OID 36467)
-- Name: fk7dc968366848d615;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968366848d615 FOREIGN KEY (recipe_unit_id) REFERENCES packaging_unit(id);
--
-- TOC entry 3063 (class 2606 OID 36472)
-- Name: fk7dc9683695e455d3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc9683695e455d3 FOREIGN KEY (item_location_id) REFERENCES inventory_location(id);
--
-- TOC entry 3064 (class 2606 OID 36477)
-- Name: fk7dc968369e60c333;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_item
    ADD CONSTRAINT fk7dc968369e60c333 FOREIGN KEY (item_vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3122 (class 2606 OID 36482)
-- Name: fk80ad9f75fc64768f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY restaurant_properties
    ADD CONSTRAINT fk80ad9f75fc64768f FOREIGN KEY (id) REFERENCES restaurant(id);
--
-- TOC entry 3120 (class 2606 OID 36487)
-- Name: fk855626db1682b10e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626db1682b10e FOREIGN KEY (inventory_item) REFERENCES inventory_item(id);
--
-- TOC entry 3121 (class 2606 OID 36492)
-- Name: fk855626dbcae89b83;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY recepie_item
    ADD CONSTRAINT fk855626dbcae89b83 FOREIGN KEY (recepie_id) REFERENCES recepie(id);
--
-- TOC entry 3111 (class 2606 OID 36497)
-- Name: fk8a16099391d62c51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a16099391d62c51 FOREIGN KEY (multiplier_id) REFERENCES multiplier(name);
--
-- TOC entry 3112 (class 2606 OID 36502)
-- Name: fk8a1609939c9e4883;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a1609939c9e4883 FOREIGN KEY (pizza_modifier_price_id) REFERENCES pizza_modifier_price(id);
--
-- TOC entry 3113 (class 2606 OID 36507)
-- Name: fk8a160993ae3f2e91;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY modifier_multiplier_price
    ADD CONSTRAINT fk8a160993ae3f2e91 FOREIGN KEY (menumodifier_id) REFERENCES menu_modifier(id);
--
-- TOC entry 3144 (class 2606 OID 36512)
-- Name: fk8fd6290dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_modifier
    ADD CONSTRAINT fk8fd6290dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3075 (class 2606 OID 36517)
-- Name: fk937b5f0c1f6a9a4a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c1f6a9a4a FOREIGN KEY (void_by_user) REFERENCES users(auto_id);
--
-- TOC entry 3076 (class 2606 OID 36522)
-- Name: fk937b5f0c2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3077 (class 2606 OID 36527)
-- Name: fk937b5f0c7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0c7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3078 (class 2606 OID 36532)
-- Name: fk937b5f0caa075d69;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0caa075d69 FOREIGN KEY (owner_id) REFERENCES users(auto_id);
--
-- TOC entry 3079 (class 2606 OID 36537)
-- Name: fk937b5f0cc188ea51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cc188ea51 FOREIGN KEY (gratuity_id) REFERENCES gratuity(id);
--
-- TOC entry 3080 (class 2606 OID 36542)
-- Name: fk937b5f0cf575c7d4;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket
    ADD CONSTRAINT fk937b5f0cf575c7d4 FOREIGN KEY (driver_id) REFERENCES users(auto_id);
--
-- TOC entry 3132 (class 2606 OID 36547)
-- Name: fk93802290dc46948d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290dc46948d FOREIGN KEY (table_id) REFERENCES shop_table(id);
--
-- TOC entry 3131 (class 2606 OID 36552)
-- Name: fk93802290f5d6e47b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_type_relation
    ADD CONSTRAINT fk93802290f5d6e47b FOREIGN KEY (type_id) REFERENCES shop_table_type(id);
--
-- TOC entry 3135 (class 2606 OID 36557)
-- Name: fk963f26d69d31df8e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_properties
    ADD CONSTRAINT fk963f26d69d31df8e FOREIGN KEY (id) REFERENCES terminal(id);
--
-- TOC entry 3137 (class 2606 OID 36562)
-- Name: fk979f54661df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54661df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3138 (class 2606 OID 36567)
-- Name: fk979f546633e5d3b2;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f546633e5d3b2 FOREIGN KEY (size_modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3139 (class 2606 OID 36572)
-- Name: fk979f54665cf1375f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item
    ADD CONSTRAINT fk979f54665cf1375f FOREIGN KEY (pg_id) REFERENCES printer_group(id);
--
-- TOC entry 3050 (class 2606 OID 36577)
-- Name: fk98cf9b143ef4cd9b;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report_voidtickets
    ADD CONSTRAINT fk98cf9b143ef4cd9b FOREIGN KEY (dpreport_id) REFERENCES drawer_pull_report(id);
--
-- TOC entry 3133 (class 2606 OID 36582)
-- Name: fk99ede5fc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3134 (class 2606 OID 36587)
-- Name: fk99ede5fcc433e65a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal_printers
    ADD CONSTRAINT fk99ede5fcc433e65a FOREIGN KEY (virtual_printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3160 (class 2606 OID 36592)
-- Name: fk9af7853bcf15f4a6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY virtualprinter_order_type
    ADD CONSTRAINT fk9af7853bcf15f4a6 FOREIGN KEY (printer_id) REFERENCES virtual_printer(id);
--
-- TOC entry 3091 (class 2606 OID 36597)
-- Name: fk9ea1afc2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3090 (class 2606 OID 36602)
-- Name: fk9ea1afc89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_terminal_ref
    ADD CONSTRAINT fk9ea1afc89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3140 (class 2606 OID 36607)
-- Name: fk9f1996346c108ef0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f1996346c108ef0 FOREIGN KEY (modifier_id) REFERENCES ticket_item_modifier(id);
--
-- TOC entry 3141 (class 2606 OID 36612)
-- Name: fk9f199634dec6120a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY ticket_item_addon_relation
    ADD CONSTRAINT fk9f199634dec6120a FOREIGN KEY (ticket_item_id) REFERENCES ticket_item(id);
--
-- TOC entry 3048 (class 2606 OID 36617)
-- Name: fkaec362202ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362202ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3049 (class 2606 OID 36622)
-- Name: fkaec362203e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY drawer_pull_report
    ADD CONSTRAINT fkaec362203e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3066 (class 2606 OID 36627)
-- Name: fkaf48f43b5b397c5;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b5b397c5 FOREIGN KEY (reference_id) REFERENCES purchase_order(id);
--
-- TOC entry 3067 (class 2606 OID 36632)
-- Name: fkaf48f43b96a3d6bf;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43b96a3d6bf FOREIGN KEY (item_id) REFERENCES inventory_item(id);
--
-- TOC entry 3068 (class 2606 OID 36637)
-- Name: fkaf48f43bd152c95f;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bd152c95f FOREIGN KEY (vendor_id) REFERENCES inventory_vendor(id);
--
-- TOC entry 3069 (class 2606 OID 36642)
-- Name: fkaf48f43beda09759;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43beda09759 FOREIGN KEY (to_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3070 (class 2606 OID 36647)
-- Name: fkaf48f43bff3f328a;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY inventory_transaction
    ADD CONSTRAINT fkaf48f43bff3f328a FOREIGN KEY (from_warehouse_id) REFERENCES inventory_warehouse(id);
--
-- TOC entry 3123 (class 2606 OID 36652)
-- Name: fkba6efbd68979c3cd;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template
    ADD CONSTRAINT fkba6efbd68979c3cd FOREIGN KEY (floor_id) REFERENCES shop_floor(id);
--
-- TOC entry 3118 (class 2606 OID 36657)
-- Name: fkc05b805e5f31265c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY printer_group_printers
    ADD CONSTRAINT fkc05b805e5f31265c FOREIGN KEY (printer_id) REFERENCES printer_group(id);
--
-- TOC entry 3130 (class 2606 OID 36662)
-- Name: fkcbeff0e454031ec1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY table_ticket_num
    ADD CONSTRAINT fkcbeff0e454031ec1 FOREIGN KEY (shop_table_status_id) REFERENCES shop_table_status(id);
--
-- TOC entry 3059 (class 2606 OID 36667)
-- Name: fkce827c6f3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY guest_check_print
    ADD CONSTRAINT fkce827c6f3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3114 (class 2606 OID 36672)
-- Name: fkd3de7e7896183657;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_modifier_price
    ADD CONSTRAINT fkd3de7e7896183657 FOREIGN KEY (item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3044 (class 2606 OID 36677)
-- Name: fkd43068347bbccf0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY customer_properties
    ADD CONSTRAINT fkd43068347bbccf0 FOREIGN KEY (id) REFERENCES customer(auto_id);
--
-- TOC entry 3124 (class 2606 OID 36682)
-- Name: fkd70c313ca36ab054;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY shop_floor_template_properties
    ADD CONSTRAINT fkd70c313ca36ab054 FOREIGN KEY (id) REFERENCES shop_floor_template(id);
--
-- TOC entry 3101 (class 2606 OID 36687)
-- Name: fkd89ccdee33662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdee33662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3100 (class 2606 OID 36692)
-- Name: fkd89ccdeed3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_discount
    ADD CONSTRAINT fkd89ccdeed3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3036 (class 2606 OID 36697)
-- Name: fkdfe829a2ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a2ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3037 (class 2606 OID 36702)
-- Name: fkdfe829a3e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a3e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3038 (class 2606 OID 36707)
-- Name: fkdfe829a7660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY attendence_history
    ADD CONSTRAINT fkdfe829a7660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3107 (class 2606 OID 36712)
-- Name: fke03c92d533662891;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d533662891 FOREIGN KEY (menuitem_id) REFERENCES menu_item(id);
--
-- TOC entry 3108 (class 2606 OID 36717)
-- Name: fke03c92d57660a5e3;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menuitem_shift
    ADD CONSTRAINT fke03c92d57660a5e3 FOREIGN KEY (shift_id) REFERENCES shift(id);
--
-- TOC entry 3072 (class 2606 OID 36722)
-- Name: fke2b846573ac1d2e0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b846573ac1d2e0 FOREIGN KEY (order_type_id) REFERENCES order_type(id);
--
-- TOC entry 3071 (class 2606 OID 36727)
-- Name: fke2b8465789fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY item_order_type
    ADD CONSTRAINT fke2b8465789fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3099 (class 2606 OID 36732)
-- Name: fke3790e40113bf083;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40113bf083 FOREIGN KEY (menugroup_id) REFERENCES menu_group(id);
--
-- TOC entry 3098 (class 2606 OID 36737)
-- Name: fke3790e40d3e91e11;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menugroup_discount
    ADD CONSTRAINT fke3790e40d3e91e11 FOREIGN KEY (discount_id) REFERENCES coupon_and_discount(id);
--
-- TOC entry 3149 (class 2606 OID 36742)
-- Name: fke3de65548e8203bc;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transaction_properties
    ADD CONSTRAINT fke3de65548e8203bc FOREIGN KEY (id) REFERENCES transactions(id);
--
-- TOC entry 3074 (class 2606 OID 36747)
-- Name: fke83d827c969c6de;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT fke83d827c969c6de FOREIGN KEY (assigned_user) REFERENCES users(auto_id);
--
-- TOC entry 3115 (class 2606 OID 36752)
-- Name: fkeac112927c59441d;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac112927c59441d FOREIGN KEY (crust) REFERENCES pizza_crust(id);
--
-- TOC entry 3116 (class 2606 OID 36757)
-- Name: fkeac11292a56d141c;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292a56d141c FOREIGN KEY (order_type) REFERENCES order_type(id);
--
-- TOC entry 3117 (class 2606 OID 36762)
-- Name: fkeac11292dd545b77;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY pizza_price
    ADD CONSTRAINT fkeac11292dd545b77 FOREIGN KEY (menu_item_size) REFERENCES menu_item_size(id);
--
-- TOC entry 3058 (class 2606 OID 36767)
-- Name: fkf8a37399d900aa01;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399d900aa01 FOREIGN KEY (elt) REFERENCES tax(id);
--
-- TOC entry 3057 (class 2606 OID 36772)
-- Name: fkf8a37399eff11066;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY group_taxes
    ADD CONSTRAINT fkf8a37399eff11066 FOREIGN KEY (group_id) REFERENCES tax_group(id);
--
-- TOC entry 3089 (class 2606 OID 36777)
-- Name: fkf94186ff89fe23f0;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY menu_item_properties
    ADD CONSTRAINT fkf94186ff89fe23f0 FOREIGN KEY (menu_item_id) REFERENCES menu_item(id);
--
-- TOC entry 3150 (class 2606 OID 36782)
-- Name: fkfe9871551df2d7f1;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871551df2d7f1 FOREIGN KEY (ticket_id) REFERENCES ticket(id);
--
-- TOC entry 3151 (class 2606 OID 36787)
-- Name: fkfe9871552ad2d031;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871552ad2d031 FOREIGN KEY (terminal_id) REFERENCES terminal(id);
--
-- TOC entry 3152 (class 2606 OID 36792)
-- Name: fkfe9871553e20ad51;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe9871553e20ad51 FOREIGN KEY (user_id) REFERENCES users(auto_id);
--
-- TOC entry 3153 (class 2606 OID 36797)
-- Name: fkfe987155ca43b6;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155ca43b6 FOREIGN KEY (payout_recepient_id) REFERENCES payout_recepients(id);
--
-- TOC entry 3154 (class 2606 OID 36802)
-- Name: fkfe987155fc697d9e;
Type: FK CONSTRAINT;
Schema: public;
Owner: floreant
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT fkfe987155fc697d9e FOREIGN KEY (payout_reason_id) REFERENCES payout_reasons(id);
SET search_path = selemti, pg_catalog;
--
-- TOC entry 3164 (class 2606 OID 36920)
-- Name: postcorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY postcorte
    ADD CONSTRAINT postcorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3162 (class 2606 OID 36872)
-- Name: precorte_efectivo_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_efectivo
    ADD CONSTRAINT precorte_efectivo_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3163 (class 2606 OID 36892)
-- Name: precorte_otros_precorte_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte_otros
    ADD CONSTRAINT precorte_otros_precorte_id_fkey FOREIGN KEY (precorte_id) REFERENCES precorte(id) ON DELETE CASCADE;
--
-- TOC entry 3161 (class 2606 OID 36858)
-- Name: precorte_sesion_id_fkey;
Type: FK CONSTRAINT;
Schema: selemti;
Owner: floreant
--

ALTER TABLE ONLY precorte
    ADD CONSTRAINT precorte_sesion_id_fkey FOREIGN KEY (sesion_id) REFERENCES sesion_cajon(id) ON DELETE CASCADE;
--
-- TOC entry 3492 (class 0 OID 0)
-- Dependencies: 6
-- Name: public;
Type: ACL;
Schema: -;
Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;
--
-- TOC entry 3571 (class 0 OID 0)
-- Dependencies: 377
-- Name: vw_sesion_dpr;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_dpr FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_dpr FROM postgres;
GRANT ALL ON TABLE vw_sesion_dpr TO postgres;
GRANT SELECT ON TABLE vw_sesion_dpr TO floreant;
--
-- TOC entry 3572 (class 0 OID 0)
-- Dependencies: 373
-- Name: vw_sesion_ventas;
Type: ACL;
Schema: selemti;
Owner: postgres
--

REVOKE ALL ON TABLE vw_sesion_ventas FROM PUBLIC;
REVOKE ALL ON TABLE vw_sesion_ventas FROM postgres;
GRANT ALL ON TABLE vw_sesion_ventas TO postgres;
GRANT SELECT ON TABLE vw_sesion_ventas TO floreant;
-- Completed on 2025-09-25 19:30:38

--
-- PostgreSQL database dump complete
--
-- END Productivo_24_09_2025.sql

-- BEGIN selemti_deploy_inventarios_PG95_CONSOLIDADO_FINAL.sql
-- 2.1) conversion_template (sin UNIQUE con expresiones;
-- 3) Vistas
CREATE OR REPLACE VIEW selemti.vw_stock_disponible AS
SELECT
  mi.item_id,
  mi.location_id,
  mi.batch_id,
  SUM(CASE
        WHEN mi.tipo IN ('COMPRA','RECEPCION','TRANSFER_IN','PROD_IN') THEN mi.qty_canonica
        WHEN mi.tipo IN ('TRANSFER_OUT','PROD_OUT','VENTA_TEO','AJUSTE','MERMA') THEN -mi.qty_canonica
        ELSE 0
      END) AS qty_disponible
FROM selemti.mov_inv mi
GROUP BY mi.item_id, mi.location_id, mi.batch_id;
vw_bom_menu_item con casts explícitos y formato exacto
DROP VIEW IF EXISTS selemti.vw_bom_menu_item;
$SQL$;
$SQL$;
END IF;
END $$;
-- 2) vw_conversion_sugerida con ORDER BY en el mismo orden del DISTINCT ON
DROP VIEW IF EXISTS selemti.vw_conversion_sugerida;
-- 4) Funciones
CREATE OR REPLACE FUNCTION selemti.fn_recalcula_wac(p_item_id INT)
RETURNS VOID LANGUAGE plpgsql AS $$
DECLARE
  v_wac NUMERIC(14,6) := 0;
v_stock NUMERIC(14,6) := 0;
r RECORD;
BEGIN
  FOR r IN
    SELECT ts, tipo, qty_canonica, costo_unit
    FROM selemti.mov_inv
    WHERE item_id = p_item_id
    ORDER BY ts ASC, id ASC
  LOOP
    IF r.tipo IN ('RECEPCION','PROD_IN','TRANSFER_IN') THEN
      IF r.costo_unit IS NOT NULL AND r.qty_canonica > 0 THEN
        v_wac := CASE
          WHEN v_stock <= 0 THEN r.costo_unit
          ELSE ((v_wac * v_stock) + (r.costo_unit * r.qty_canonica)) / NULLIF(v_stock + r.qty_canonica,0)
        END;
END IF;
v_stock := v_stock + r.qty_canonica;
ELSIF r.tipo IN ('TRANSFER_OUT','PROD_OUT','VENTA_TEO','AJUSTE','MERMA') THEN
      v_stock := v_stock - ABS(r.qty_canonica);
END IF;
END LOOP;
INSERT INTO selemti.costo_item(item_id, wac, updated_at)
  VALUES (p_item_id, COALESCE(v_wac,0), now())
  ON CONFLICT (item_id) DO UPDATE SET wac = EXCLUDED.wac, updated_at = now();
END;
$$;
CREATE OR REPLACE FUNCTION selemti.fn_generar_movimientos_por_documento(p_ref_table TEXT, p_ref_id BIGINT)
RETURNS VOID LANGUAGE plpgsql AS $$
BEGIN
  RAISE NOTICE 'TODO: generar movimientos para %.%', p_ref_table, p_ref_id;
END;
$$;
CREATE OR REPLACE FUNCTION selemti.fn_ingesta_ventas(p_from_ts TIMESTAMP, p_to_ts TIMESTAMP)
RETURNS VOID LANGUAGE plpgsql AS $$
BEGIN
  RAISE NOTICE 'TODO: leer tickets cerrados en rango [% .. %] y generar VENTA_TEO', p_from_ts, p_to_ts;
END;
$$;
CREATE OR REPLACE FUNCTION selemti.fn_wac_apply(p_item_id INT, p_qty_in NUMERIC, p_cost_unit NUMERIC)
RETURNS VOID LANGUAGE plpgsql AS $$
DECLARE
  v_stock   NUMERIC(14,6) := 0;
v_old_wac NUMERIC(14,6) := 0;
v_new_wac NUMERIC(14,6) := 0;
BEGIN
  IF p_qty_in IS NULL OR p_qty_in <= 0 OR p_cost_unit IS NULL THEN RETURN;
END IF;
SELECT COALESCE(SUM(CASE
           WHEN tipo IN ('COMPRA','RECEPCION','TRANSFER_IN','PROD_IN') THEN qty_canonica
           WHEN tipo IN ('TRANSFER_OUT','PROD_OUT','VENTA_TEO','AJUSTE','MERMA') THEN -qty_canonica
           ELSE 0 END), 0)
    INTO v_stock
  FROM selemti.mov_inv
  WHERE item_id = p_item_id;
SELECT wac INTO v_old_wac FROM selemti.costo_item WHERE item_id=p_item_id FOR UPDATE;
IF NOT FOUND THEN
    v_old_wac := 0;
INSERT INTO selemti.costo_item(item_id, wac) VALUES (p_item_id, 0)
    ON CONFLICT (item_id) DO NOTHING;
END IF;
IF v_stock <= 0 THEN
    v_new_wac := p_cost_unit;
ELSE
    v_new_wac := ((v_old_wac * v_stock) + (p_cost_unit * p_qty_in)) / NULLIF(v_stock + p_qty_in, 0);
END IF;
UPDATE selemti.costo_item SET wac = COALESCE(v_new_wac, p_cost_unit), updated_at = now() WHERE item_id = p_item_id;
END;
$$;
-- 5) Triggers
CREATE OR REPLACE FUNCTION selemti.trg_recepcion_after_update()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  IF NEW.estado = 'POSTED' AND OLD.estado IS DISTINCT FROM 'POSTED' THEN
    PERFORM selemti.fn_generar_movimientos_por_documento('recepcion', NEW.id);
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_recepcion_after_update ON selemti.recepcion;
CREATE OR REPLACE FUNCTION selemti.trg_pos_ingesta_after_update()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  PERFORM selemti.fn_ingesta_ventas(COALESCE(NEW.last_close_ts, NOW() - INTERVAL '10 minutes'), NOW());
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_pos_ingesta_after_update ON selemti.pos_ingesta;
CREATE OR REPLACE FUNCTION selemti.trg_recepcion_det_check()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_perishable BOOLEAN := FALSE;
BEGIN
  SELECT COALESCE(MAX(CASE WHEN iv.perishable THEN 1 ELSE 0 END)=1, FALSE)
    INTO v_perishable
  FROM selemti.item_vendor iv
  WHERE iv.item_id = NEW.item_id AND iv.activo = TRUE;
IF v_perishable AND (NEW.caducidad IS NULL OR NEW.caducidad <= CURRENT_DATE) THEN
    RAISE EXCEPTION 'Item % requiere caducidad futura por ser perecedero', NEW.item_id;
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_recepcion_det_check ON selemti.recepcion_det;
CREATE OR REPLACE FUNCTION selemti.trg_mov_inv_wac()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  IF NEW.tipo IN ('RECEPCION','PROD_IN','TRANSFER_IN') AND NEW.costo_unit IS NOT NULL THEN
    PERFORM selemti.fn_wac_apply(NEW.item_id, NEW.qty_canonica, NEW.costo_unit);
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_mov_inv_wac ON selemti.mov_inv;
CREATE OR REPLACE FUNCTION selemti.trg_compra_state_guard()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
DECLARE v_ord NUMERIC(18,6);
v_rec NUMERIC(18,6);
BEGIN
  IF NEW.estado = 'CLOSED' AND OLD.estado IS DISTINCT FROM 'CLOSED' THEN
    SELECT COALESCE(SUM(cd.cant_canonica),0) INTO v_ord
    FROM selemti.compra_det cd WHERE cd.compra_id = NEW.id;
SELECT COALESCE(SUM(rd.cant_recibida_canonica),0) INTO v_rec
    FROM selemti.recepcion r
    JOIN selemti.recepcion_det rd ON rd.recepcion_id = r.id
    WHERE r.compra_id = NEW.id;
IF v_rec + 0.000001 < v_ord THEN
      RAISE EXCEPTION 'No se puede cerrar la compra %, faltan recepciones (ordenadas=%, recibidas=%)', NEW.id, v_ord, v_rec;
END IF;
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_compra_state_guard ON selemti.compra;
COMMENT ON SCHEMA selemti IS 'Inventarios y compras para Floreant POS (PG 9.5 Consolidado FINAL).';
-- 1) Ampliar bom_modifier (PG 9.5: checar existencia de columnas)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='bom_modifier' AND column_name='costo_adicional'
  ) THEN
    EXECUTE 'ALTER TABLE selemti.bom_modifier ADD COLUMN costo_adicional NUMERIC(14,6) DEFAULT 0';
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='selemti' AND table_name='bom_modifier' AND column_name='precio_adicional'
  ) THEN
    EXECUTE 'ALTER TABLE selemti.bom_modifier ADD COLUMN precio_adicional NUMERIC(14,6) DEFAULT 0';
  END IF;
END $$;
-- 2) Rehacer vw_bom_menu_item con casts + guardias (placeholders si faltan tablas public.*)
DROP VIEW IF EXISTS selemti.vw_bom_menu_item;
-- 3) Rehacer vw_conversion_sugerida con ORDER BY alineado al DISTINCT ON
DROP VIEW IF EXISTS selemti.vw_conversion_sugerida;
-- 4) vw_receta_completa (base + modificadores, con guards y placeholder seguro)
DROP VIEW IF EXISTS selemti.vw_receta_completa;
-- 4a) Si existen tablas base de recetas → vista BASE
DO $MAIN$
DECLARE
  v_has_mi  BOOLEAN;
v_has_r   BOOLEAN;
v_has_ri  BOOLEAN;
BEGIN
  SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname='menu_item' AND c.relkind='r') INTO v_has_mi;
SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname='recepie' AND c.relkind='r') INTO v_has_r;
SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname='recepie_item' AND c.relkind='r') INTO v_has_ri;
IF v_has_mi AND v_has_r AND v_has_ri THEN
    EXECUTE $$
      CREATE OR REPLACE VIEW selemti.vw_receta_completa AS
      SELECT
        mi.id::INT                    AS menu_item_id,
        ri.inventory_item::INT        AS inventory_item_id,
        ri.percentage::NUMERIC(14,6)  AS qty_canonica,
        NULL::INT                     AS modifier_id,
        NULL::NUMERIC(14,6)           AS qty_mod,
        NULL::NUMERIC(14,6)           AS costo_adicional,
        NULL::NUMERIC(14,6)           AS precio_adicional,
        'BASE'::TEXT                  AS origen
      FROM public.menu_item mi
      JOIN public.recepie r       ON r.id = mi.recepie
      JOIN public.recepie_item ri ON ri.recepie_id = r.id
    $$;
END IF;
END
$MAIN$;
-- 4b) Si hay catálogo de modificadores y vínculo → expandir con MODS
DO $MODS$
DECLARE
  v_has_mods BOOLEAN;
v_has_mim  BOOLEAN;
-- public.menu_item_modifier
  v_has_mmi  BOOLEAN;
-- public.menu_modifier_item
BEGIN
  SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname IN ('menu_modifier','modifiers') AND c.relkind='r')
    INTO v_has_mods;
SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname='menu_item_modifier' AND c.relkind='r')
    INTO v_has_mim;
SELECT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                 WHERE n.nspname='public' AND c.relname='menu_modifier_item' AND c.relkind='r')
    INTO v_has_mmi;
IF v_has_mods AND (v_has_mim OR v_has_mmi) THEN
    EXECUTE $$
      CREATE OR REPLACE VIEW selemti.vw_receta_completa AS
      WITH base AS (
        SELECT
          mi.id::INT                    AS menu_item_id,
          ri.inventory_item::INT        AS inventory_item_id,
          ri.percentage::NUMERIC(14,6)  AS qty_canonica,
          NULL::INT                     AS modifier_id,
          NULL::NUMERIC(14,6)           AS qty_mod,
          NULL::NUMERIC(14,6)           AS costo_adicional,
          NULL::NUMERIC(14,6)           AS precio_adicional,
          'BASE'::TEXT                  AS origen
        FROM public.menu_item mi
        JOIN public.recepie r       ON r.id = mi.recepie
        JOIN public.recepie_item ri ON ri.recepie_id = r.id
      ),
      mods AS (
        SELECT
          mim.menu_item_id::INT                AS menu_item_id,
          bm.inventory_item_id::INT            AS inventory_item_id,
          bm.qty_canonica::NUMERIC(14,6)       AS qty_canonica,
          bm.modifier_id::INT                  AS modifier_id,
          bm.qty_canonica::NUMERIC(14,6)       AS qty_mod,
          COALESCE(bm.costo_adicional,0)::NUMERIC(14,6)  AS costo_adicional,
          COALESCE(bm.precio_adicional,0)::NUMERIC(14,6) AS precio_adicional,
          'MOD'::TEXT                           AS origen
        FROM selemti.bom_modifier bm
        JOIN public.menu_item_modifier mim ON mim.modifier_id = bm.modifier_id
        WHERE EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                      WHERE n.nspname='public' AND c.relname='menu_item_modifier' AND c.relkind='r')
        UNION ALL
        SELECT
          mmi.menu_item_id::INT,
          bm.inventory_item_id::INT,
          bm.qty_canonica::NUMERIC(14,6),
          bm.modifier_id::INT,
          bm.qty_canonica::NUMERIC(14,6),
          COALESCE(bm.costo_adicional,0)::NUMERIC(14,6),
          COALESCE(bm.precio_adicional,0)::NUMERIC(14,6),
          'MOD'::TEXT
        FROM selemti.bom_modifier bm
        JOIN public.menu_modifier_item mmi ON mmi.modifier_id = bm.modifier_id
        WHERE EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
                      WHERE n.nspname='public' AND c.relname='menu_modifier_item' AND c.relkind='r')
      )
      SELECT * FROM base
      UNION ALL
      SELECT * FROM mods
    $$;
END IF;
END
$MODS$;
-- 5) Trigger de descuento teórico en venta (si existe tabla de líneas)
-- (a) ticketitem
DO $T1$
BEGIN
  IF EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
             WHERE n.nspname='public' AND c.relname='ticketitem' AND c.relkind='r') THEN
    EXECUTE 'DROP TRIGGER IF EXISTS trg_venta_modificadores ON public.ticketitem';
END IF;
END
$T1$;
-- (b) ticket_line
DO $T2$
BEGIN
  IF EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
             WHERE n.nspname=''public'' AND c.relname=''ticket_line'' AND c.relkind=''r'') THEN
    EXECUTE ''DROP TRIGGER IF EXISTS trg_venta_modificadores ON public.ticket_line'';
END IF;
END
$T2$;
-- (c) ticket_items
DO $T3$
BEGIN
  IF EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace
             WHERE n.nspname='public' AND c.relname='ticket_items' AND c.relkind='r') THEN
    EXECUTE 'DROP TRIGGER IF EXISTS trg_venta_modificadores ON public.ticket_items';
END IF;
END
$T3$;
-- Listo.
-- =====================================================================
-- END selemti_deploy_inventarios_PG95_CONSOLIDADO_FINAL.sql

-- BEGIN selemti_hotfix_pg95_v2.sql
-- 3.2 vw_conversion_sugerida — corregir ORDER BY para DISTINCT ON
DROP VIEW IF EXISTS selemti.vw_conversion_sugerida;
-- =====================================================================
--  FIN HOTFIX v2
-- =====================================================================
-- END selemti_hotfix_pg95_v2.sql

-- BEGIN selemti_post_hotfix_checks_v2.sql
-- Checks v2
SELECT 'alert_cfg_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='alert_cfg'
) AS ok;
SELECT 'merma_policy_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='merma_policy'
) AS ok;
SELECT 'ui_prefs_exists' AS check, EXISTS (
  SELECT 1 FROM information_schema.tables WHERE table_schema='selemti' AND table_name='ui_prefs'
) AS ok;
SELECT 'vw_bom_menu_item_ok' AS check, pg_get_viewdef('selemti.vw_bom_menu_item'::regclass) ILIKE '%name::text%' 
  AND pg_get_viewdef('selemti.vw_bom_menu_item'::regclass) ILIKE '%percentage::numeric%' AS ok;
SELECT 'vw_conv_ok_order' AS check, pg_get_viewdef('selemti.vw_conversion_sugerida'::regclass) ILIKE '%ORDER BY ct.item_id, COALESCE(ct.vendor_id,-1), ct.presentacion, ct.preferred DESC, ct.id DESC%' AS ok;
-- Unique partials present
SELECT 'uq_alert_cfg_metric_null_scope' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_alert_cfg_metric_null_scope'
) AS ok;
SELECT 'uq_merma_policy_sucursal_categoria' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_merma_policy_sucursal_categoria'
) AS ok;
SELECT 'uq_ui_prefs_sucursal_key' AS check, EXISTS (
  SELECT 1 FROM pg_indexes WHERE schemaname='selemti' AND indexname='uq_ui_prefs_sucursal_key'
) AS ok;
-- END selemti_post_hotfix_checks_v2.sql

-- BEGIN Triger_corte_final.sql
-- ===========================================
--  SELEM POS — Despliegue auxiliar (v0.1)
--  Compatibilidad: PostgreSQL 9.5+
--  Objetivo: conciliación por sesión de cajón
--  Autor: Tavo+ChatGPT
-- ===========================================

-- ===========================================
-- 0) DIAGNÓSTICO (opcional pero recomendado)
--    Esto NO crea objetos;
imprime cómo se llaman
--    las columnas relevantes para alinear mapeos.
-- ===========================================
DO $diag$
DECLARE
  tx_time_col TEXT;
tx_amt_col  TEXT;
tx_pay_col  TEXT;
tx_type_col TEXT;
tk_close_col TEXT;
dah_assign_col TEXT;
dah_release_col TEXT;
term_balance_col TEXT;
BEGIN
  RAISE NOTICE '=== DIAGNÓSTICO DE ESQUEMA (transactions) ===';
SELECT column_name INTO tx_time_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('tx_time','transaction_time','created','date','time','paid_time')
   ORDER BY CASE column_name
              WHEN 'tx_time' THEN 1
              WHEN 'transaction_time' THEN 2
              WHEN 'created' THEN 3
              WHEN 'date' THEN 4
              WHEN 'time' THEN 5
              WHEN 'paid_time' THEN 6
            END
   LIMIT 1;
SELECT column_name INTO tx_amt_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('amount','total','value','amt')
   LIMIT 1;
SELECT column_name INTO tx_pay_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('payment_type','tender_type','pay_type','method','payment_code')
   LIMIT 1;
SELECT column_name INTO tx_type_col
    FROM information_schema.columns
   WHERE table_name='transactions'
     AND column_name IN ('transaction_type','type','txn_type')
   LIMIT 1;
RAISE NOTICE 'transactions: tiempo=% , monto=% , payment=% , txn_type=%',
               COALESCE(tx_time_col,'(NO ENCONTRADO)'),
               COALESCE(tx_amt_col,'(NO ENCONTRADO)'),
               COALESCE(tx_pay_col,'(NO ENCONTRADO)'),
               COALESCE(tx_type_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÓSTICO DE ESQUEMA (ticket) ===';
SELECT column_name INTO tk_close_col
    FROM information_schema.columns
   WHERE table_name='ticket'
     AND column_name IN ('closed_time','close_time','paid_time','modified_time','update_time')
   LIMIT 1;
RAISE NOTICE 'ticket: closed_time=%', COALESCE(tk_close_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÓSTICO DE ESQUEMA (drawer_assigned_history) ===';
SELECT column_name INTO dah_assign_col
    FROM information_schema.columns
   WHERE table_name='drawer_assigned_history'
     AND column_name IN ('assigned_time','assigned_at','created','start_time')
   LIMIT 1;
SELECT column_name INTO dah_release_col
    FROM information_schema.columns
   WHERE table_name='drawer_assigned_history'
     AND column_name IN ('released_time','released_at','end_time','closed')
   LIMIT 1;
RAISE NOTICE 'drawer_assigned_history: assigned=% , released=%',
               COALESCE(dah_assign_col,'(NO ENCONTRADO)'),
               COALESCE(dah_release_col,'(NO ENCONTRADO)');
RAISE NOTICE '=== DIAGNÓSTICO DE ESQUEMA (terminal) ===';
SELECT column_name INTO term_balance_col
    FROM information_schema.columns
   WHERE table_name='terminal'
     AND column_name IN ('current_balance','opening_balance','balance')
   LIMIT 1;
RAISE NOTICE 'terminal: current_balance=%', COALESCE(term_balance_col,'(NO ENCONTRADO)');
END
$diag$;
-- ===========================================
-- 1) PARÁMETROS (ajusta SOLO si tu esquema difiere)
--    Si el diagnóstico anterior te dio otros nombres,
--    cámbialos aquí para que todo funcione.
-- ===========================================
DO $params$
BEGIN
  -- Mapa de columnas de transactions
  PERFORM set_config('selempos.tx_time_col',  'tx_time',            true);
PERFORM set_config('selempos.tx_amount_col','amount',             true);
PERFORM set_config('selempos.tx_pay_col',   'payment_type',       true);
PERFORM set_config('selempos.tx_type_col',  'transaction_type',   true);
-- ticket cerrado
  PERFORM set_config('selempos.ticket_closed_col','closed_time',    true);
-- drawer_assigned_history tiempos
  PERFORM set_config('selempos.dah_assigned_col','assigned_time',   true);
PERFORM set_config('selempos.dah_released_col','released_time',   true);
-- terminal balance
  PERFORM set_config('selempos.terminal_balance_col','current_balance', true);
END
$params$;
-- Helper para referenciar columnas configuradas
CREATE OR REPLACE FUNCTION selempos_col(name TEXT)
RETURNS TEXT LANGUAGE sql IMMUTABLE AS $$
  SELECT current_setting(name,true)
$$;
INSERT INTO selempos.selempos_payment_map(code, match_expr) VALUES
('CASH','CASH'),
('DEBIT','DEBIT'),
('CREDIT','CREDIT'),
('TRANSFER','TRANSFER')
ON CONFLICT DO NOTHING;
-- ===========================================
-- 3) VISTAS DE TOTALES POR SESIÓN
-- ===========================================
-- 3.1 ventas por forma de pago en ventana de sesión
CREATE OR REPLACE VIEW selempos.selempos_vw_session_sales AS
WITH base AS (
  SELECT
    s.id AS session_id,
    t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC AS amount,
    pm.code AS payment_code
  FROM selempos.selempos_drawer_session s
  JOIN transactions t
    ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
   AND t.(SELECT selempos_col('selempos.tx_time_col')) < COALESCE(s.closed_at, now())
   AND t.terminal_id = s.terminal_id
   AND t.user_id     = s.cashier_user_id
  JOIN selempos.selempos_payment_map pm
    ON (t.(SELECT selempos_col('selempos.tx_pay_col'))  = pm.match_expr
     OR  t.(SELECT selempos_col('selempos.tx_type_col')) = pm.match_expr)
)
SELECT session_id, payment_code, SUM(amount) AS amount
FROM base
GROUP BY session_id, payment_code;
-- 3.2 descuentos (ajusta si tus descuentos están en otras tablas)
-- Si tus descuentos viven en ticket_discount/ticket_item_discount con timestamp y user/terminal:
CREATE OR REPLACE VIEW selempos.selempos_vw_session_discounts AS
SELECT s.id AS session_id, COALESCE(SUM(d.amount),0) AS discounts
FROM selempos.selempos_drawer_session s
LEFT JOIN ticket_discount d
  ON d.created_at >= s.opened_at
 AND d.created_at <  COALESCE(s.closed_at, now())
 AND d.terminal_id = s.terminal_id
 AND d.user_id     = s.cashier_user_id
GROUP BY s.id;
-- 3.3 anulaciones/devoluciones (VOID/REFUND) sobre ticket
CREATE OR REPLACE VIEW selempos.selempos_vw_session_voids AS
SELECT s.id AS session_id,
       COALESCE(SUM(CASE WHEN tk.status IN ('VOID','REFUND') THEN tk.total ELSE 0 END),0) AS void_total
FROM selempos.selempos_drawer_session s
LEFT JOIN ticket tk
  ON tk.(SELECT selempos_col('selempos.ticket_closed_col')) >= s.opened_at
 AND tk.(SELECT selempos_col('selempos.ticket_closed_col')) <  COALESCE(s.closed_at, now())
 AND tk.terminal_id = s.terminal_id
 AND tk.owner_id    = s.cashier_user_id
GROUP BY s.id;
-- 3.4 retiros/egresos (payouts/expenses) en ventana
CREATE OR REPLACE VIEW selempos.selempos_vw_session_payouts AS
SELECT s.id AS session_id, COALESCE(SUM(t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC),0) AS payouts
FROM selempos.selempos_drawer_session s
JOIN transactions t
  ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
 AND t.(SELECT selempos_col('selempos.tx_time_col')) <  COALESCE(s.closed_at, now())
 AND t.terminal_id = s.terminal_id
 AND t.user_id     = s.cashier_user_id
WHERE t.(SELECT selempos_col('selempos.tx_type_col')) IN ('PAYOUT','EXPENSE')
GROUP BY s.id;
-- 3.5 devoluciones EN EFECTIVO (si aplica)
CREATE OR REPLACE VIEW selempos.selempos_vw_session_cash_refunds AS
SELECT s.id AS session_id,
       COALESCE(SUM(t.(SELECT selempos_col('selempos.tx_amount_col'))::TEXT::NUMERIC),0) AS cash_refunds
FROM selempos.selempos_drawer_session s
JOIN transactions t
  ON t.(SELECT selempos_col('selempos.tx_time_col')) >= s.opened_at
 AND t.(SELECT selempos_col('selempos.tx_time_col')) <  COALESCE(s.closed_at, now())
 AND t.terminal_id = s.terminal_id
 AND t.user_id     = s.cashier_user_id
WHERE (t.(SELECT selempos_col('selempos.tx_type_col')) IN ('REFUND','RETURN') OR t.status='REFUND')
  AND (t.(SELECT selempos_col('selempos.tx_pay_col')) = 'CASH' OR t.(SELECT selempos_col('selempos.tx_type_col')) = 'CASH')
GROUP BY s.id;
-- 3.6 balance sintetizado con esperado en caja
CREATE OR REPLACE VIEW selempos.selempos_vw_session_balance AS
SELECT
  s.id AS session_id,
  s.terminal_id,
  s.cashier_user_id,
  s.opened_at,
  s.closed_at,
  s.status,
  s.opening_float,
  COALESCE(SUM(CASE WHEN sales.payment_code='CASH' THEN sales.amount END),0) AS sys_cash,
  COALESCE(SUM(CASE WHEN sales.payment_code IN ('DEBIT','CREDIT','TRANSFER') THEN sales.amount END),0) AS sys_non_cash,
  COALESCE(vd.discounts,0)  AS sys_discounts,
  COALESCE(vv.void_total,0) AS sys_voids,
  COALESCE(vp.payouts,0)    AS sys_payouts,
  COALESCE(vcr.cash_refunds,0) AS sys_cash_refunds,
  ( s.opening_float
    + COALESCE(SUM(CASE WHEN sales.payment_code='CASH' THEN sales.amount END),0)
    - COALESCE(vp.payouts,0)
    - COALESCE(vcr.cash_refunds,0)
  ) AS sys_expected_cash
FROM selempos.selempos_drawer_session s
LEFT JOIN selempos.selempos_vw_session_sales       sales ON sales.session_id = s.id
LEFT JOIN selempos.selempos_vw_session_discounts   vd    ON vd.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_voids       vv    ON vv.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_payouts     vp    ON vp.session_id    = s.id
LEFT JOIN selempos.selempos_vw_session_cash_refunds vcr  ON vcr.session_id   = s.id
GROUP BY s.id, s.terminal_id, s.cashier_user_id, s.opened_at, s.closed_at, s.status,
         s.opening_float, vd.discounts, vv.void_total, vp.payouts, vcr.cash_refunds;
-- ===========================================
-- 4) TRIGGERS DE SINCRONIZACIÓN CON ASIGNACIÓN DE CAJÓN
--    Al asignar: crea sesión y toma snapshot de terminal.current_balance
--    Al liberar: cierra ventana y avanza estado
-- ===========================================
CREATE OR REPLACE FUNCTION selempos.selempos_fn_on_drawer_assigned_ins()
RETURNS TRIGGER LANGUAGE plpgsql AS
$$
DECLARE
  v_opening NUMERIC(12,2) := 0;
v_exists  BIGINT;
v_assigned_col TEXT := current_setting('selempos.dah_assigned_col', true);
v_bal_col      TEXT := current_setting('selempos.terminal_balance_col', true);
v_assigned_ts  TIMESTAMPTZ;
v_sql TEXT;
BEGIN
  -- obtener assigned_time (columna parametrizada)
  v_sql := format('SELECT ($1).%I::timestamptz', v_assigned_col);
EXECUTE v_sql USING NEW INTO v_assigned_ts;
-- snapshot del fondo en terminal.current_balance (columna parametrizada)
  v_sql := format('SELECT COALESCE(%I,0)::numeric FROM terminal WHERE id = $1', v_bal_col);
EXECUTE v_sql INTO v_opening USING NEW.terminal_id;
-- evitar duplicados por reintentos
  SELECT s.id INTO v_exists
  FROM selempos.selempos_drawer_session s
  WHERE s.terminal_id      = NEW.terminal_id
    AND s.cashier_user_id  = NEW.user_id
    AND s.opened_at        = COALESCE(v_assigned_ts, now());
IF v_exists IS NULL THEN
    INSERT INTO selempos.selempos_drawer_session(
      terminal_id, cashier_user_id, drawer_assigned_history_id,
      opened_at, status, opening_float, created_by
    )
    VALUES (
      NEW.terminal_id, NEW.user_id, NEW.id,
      COALESCE(v_assigned_ts, now()), 'ACTIVE', v_opening, NEW.user_id
    );
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_selempos_drawer_assigned_ins ON drawer_assigned_history;
-- Cierre de sesión al liberar cajón
CREATE OR REPLACE FUNCTION selempos.selempos_fn_on_drawer_assigned_upd()
RETURNS TRIGGER LANGUAGE plpgsql AS
$$
DECLARE
  v_released_col TEXT := current_setting('selempos.dah_released_col', true);
v_released_ts  TIMESTAMPTZ;
v_sql TEXT;
BEGIN
  IF NEW IS DISTINCT FROM OLD THEN
    v_sql := format('SELECT ($1).%I::timestamptz', v_released_col);
EXECUTE v_sql USING NEW INTO v_released_ts;
IF v_released_ts IS NOT NULL THEN
      UPDATE selempos.selempos_drawer_session s
      SET closed_at = v_released_ts,
          status = CASE WHEN s.status='ACTIVE' THEN 'READY_FOR_CUT' ELSE s.status END
      WHERE s.drawer_assigned_history_id = NEW.id
        AND s.closed_at IS NULL;
END IF;
END IF;
RETURN NEW;
END;
$$;
DROP TRIGGER IF EXISTS trg_selempos_drawer_assigned_upd ON drawer_assigned_history;
-- ===========================================
-- 5) COMPROBACIONES RÁPIDAS
-- ===========================================
-- ¿Sesiones activas?
-- SELECT * FROM selempos.selempos_drawer_session ORDER BY id DESC LIMIT 20;
-- ¿Balance por sesión?
-- SELECT * FROM selempos.selempos_vw_session_balance ORDER BY session_id DESC LIMIT 20;
-- ===========================================
-- FIN
-- ===========================================
-- END Triger_corte_final.sql

-- BEGIN triger_KDS.sql
-- Canal: kds_event
-- Requiere PostgreSQL >= 9.4 (usas 9.5, OK)

-- 1) Función de notificación
CREATE OR REPLACE FUNCTION public.kds_notify()
RETURNS trigger AS
$$
DECLARE
  v_ticket_id INT;
v_pg_id     INT;
v_item_id   INT;
v_status    TEXT;
v_total     INT;
v_ready     INT;
v_done      INT;
v_type      TEXT;
BEGIN
  /*
    Esta función se dispara desde:
    - kitchen_ticket_item (insert/update status)
    - ticket_item        (insert/update status)
  */

  IF TG_TABLE_NAME = 'kitchen_ticket_item' THEN
    -- Cambios en cocina
    v_item_id := COALESCE(NEW.ticket_item_id, NEW.id);
SELECT ti.ticket_id, ti.pg_id
      INTO v_ticket_id, v_pg_id
    FROM ticket_item ti
    WHERE ti.id = v_item_id;
v_status := UPPER(COALESCE(NEW.status,''));
v_type   := CASE WHEN TG_OP = 'INSERT' THEN 'item_upsert' ELSE 'item_status' END;
PERFORM pg_notify(
      'kds_event',
      json_build_object(
        'type',      v_type,
        'ticket_id', v_ticket_id,
        'pg',        v_pg_id,
        'item_id',   v_item_id,
        'status',    v_status,
        'ts',        now()
      )::text
    );
ELSIF TG_TABLE_NAME = 'ticket_item' THEN
    -- Nuevos ítems o actualizaciones de estado en ticket_item
    v_item_id   := NEW.id;
v_ticket_id := NEW.ticket_id;
v_pg_id     := NEW.pg_id;
v_status    := UPPER(COALESCE(NEW.status,''));
IF TG_OP = 'INSERT' THEN
      v_type := 'item_insert';
ELSE
      v_type := 'item_status';
END IF;
PERFORM pg_notify(
      'kds_event',
      json_build_object(
        'type',      v_type,
        'ticket_id', v_ticket_id,
        'pg',        v_pg_id,
        'item_id',   v_item_id,
        'status',    v_status,
        'ts',        now()
      )::text
    );
END IF;
-- Si tenemos contexto de ticket y área (pg), verificamos agregados
  IF v_ticket_id IS NOT NULL AND v_pg_id IS NOT NULL THEN
    SELECT
      COUNT(*) AS total,
      COUNT(*) FILTER (
        WHERE UPPER(COALESCE(kti.status, ti.status, '')) IN ('READY','DONE')
      ) AS ready,
      COUNT(*) FILTER (
        WHERE UPPER(COALESCE(kti.status, ti.status, '')) = 'DONE'
      ) AS done
    INTO v_total, v_ready, v_done
    FROM ticket_item ti
    LEFT JOIN kitchen_ticket_item kti ON kti.ticket_item_id = ti.id
    WHERE ti.ticket_id = v_ticket_id
      AND ti.pg_id     = v_pg_id;
-- Todos listos (READY o DONE)
    IF v_total > 0 AND v_total = v_ready THEN
      PERFORM pg_notify(
        'kds_event',
        json_build_object(
          'type',      'ticket_all_ready',
          'ticket_id', v_ticket_id,
          'pg',        v_pg_id,
          'ts',        now()
        )::text
      );
END IF;
-- Todos terminados (DONE) -> usado por voz-events.php
    IF v_total > 0 AND v_total = v_done THEN
      PERFORM pg_notify(
        'kds_event',
        json_build_object(
          'type',      'ticket_all_done',
          'ticket_id', v_ticket_id,
          'pg',        v_pg_id,
          'ts',        now()
        )::text
      );
END IF;
END IF;
RETURN NEW;
END;
$$ LANGUAGE plpgsql;
-- 2) Triggers (se rehacen por si existen)

-- kitchen_ticket_item: insert + update de status
DROP TRIGGER IF EXISTS trg_kds_notify_kti ON public.kitchen_ticket_item;
-- ticket_item: insert (aparecer al instante en KDS) + update de status (por si Floreant escribe ahí)
DROP TRIGGER IF EXISTS trg_kds_notify_ti ON public.ticket_item;
-- END triger_KDS.sql

-- PG95 compatibility triggers for subtotal
DO $$ BEGIN
IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema='public' AND table_name='pc_precorte_cash_count') THEN
  EXECUTE $ OR REPLACE FUNCTION public.pc_precorte_cash_count_biu() RETURNS trigger AS $$ BEGIN NEW.subtotal := NEW.denom * NEW.qty; RETURN NEW; END; $$ LANGUAGE plpgsql;$$;
  EXECUTE $ $$ BEGIN BEGIN CREATE TRIGGER pc_precorte_cash_count_biu BEFORE INSERT OR UPDATE ON public.pc_precorte_cash_count FOR EACH ROW EXECUTE FUNCTION public.pc_precorte_cash_count_biu(); EXCEPTION WHEN duplicate_object THEN NULL; END; END $$;$$;
END IF;
IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema='selempos' AND table_name='selempos_precorte_cash') THEN
  EXECUTE $ OR REPLACE FUNCTION selempos.selempos_precorte_cash_biu() RETURNS trigger AS $$ BEGIN NEW.subtotal := NEW.denom * NEW.qty; RETURN NEW; END; $$ LANGUAGE plpgsql;$$;
  EXECUTE $ $$ BEGIN BEGIN CREATE TRIGGER selempos_precorte_cash_biu BEFORE INSERT OR UPDATE ON selempos.selempos_precorte_cash FOR EACH ROW EXECUTE FUNCTION selempos.selempos_precorte_cash_biu(); EXCEPTION WHEN duplicate_object THEN NULL; END; END $$;$$;
END IF;
END $$;
